(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[   4120197,      93856]
NotebookOptionsPosition[   4066987,      92263]
NotebookOutlinePosition[   4067444,      92281]
CellTagsIndexPosition[   4067401,      92278]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
The code in this file was used to derive and/or confirm the results reported \
in the article \"Asexual but not clonal: evolutionary processes in \
populations with automictic reproduction\[CloseCurlyDoubleQuote].

Author: Jan Engelst\[ADoubleDot]dter, The University of Queensland, School of \
Biological Sciences, Brisbane, QLD 4072, Australia
j.engelstaedter@uq.edu.au\
\>", "Text",
 CellChangeTimes->{{3.685623880818202*^9, 3.68562390491096*^9}, {
  3.685624015975348*^9, 3.685624071000071*^9}, {3.68562412888622*^9, 
  3.6856241867194433`*^9}}],

Cell[CellGroupData[{

Cell["Definitions", "Title",
 CellChangeTimes->{{3.597370144173921*^9, 3.597370154337553*^9}, 
   3.6121527986301203`*^9, {3.6856243732128897`*^9, 3.685624374918971*^9}}],

Cell["\<\
It is best to run this entire section before running any cells in the Results \
section.\
\>", "Text",
 CellChangeTimes->{{3.6856876060978928`*^9, 3.685687646014093*^9}}],

Cell[CellGroupData[{

Cell["Helper functions & variables", "Section",
 CellChangeTimes->{{3.597374777562331*^9, 3.597374819611144*^9}, 
   3.6121527986305027`*^9}],

Cell[CellGroupData[{

Cell["Labels of genotypes", "Subsection",
 CellChangeTimes->{{3.612301976254903*^9, 3.612301984781206*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"diploidGenotypes", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<aabb\>\"", ",", "\"\<aaBb\>\"", ",", "\"\<aaBB\>\"", ",", 
     "\"\<Aabb\>\"", ",", "\"\<AaBb\>\"", ",", "\"\<AabB\>\"", ",", 
     "\"\<AaBB\>\"", ",", "\"\<AAbb\>\"", ",", "\"\<AABb\>\"", ",", 
     "\"\<AABB\>\""}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.605544668125897*^9, 3.605544689882086*^9}, {
   3.6055448032562227`*^9, 3.605544817275309*^9}, {3.611735504587307*^9, 
   3.611735516408038*^9}, {3.611735589964367*^9, 3.6117355945530777`*^9}, {
   3.611735666494883*^9, 3.6117357478123293`*^9}, {3.611735786549735*^9, 
   3.61173582658031*^9}, {3.61173590107304*^9, 3.6117359092794*^9}, {
   3.611736130928623*^9, 3.611736146929604*^9}, 3.612152798631246*^9, {
   3.612298836517004*^9, 3.6122988374762697`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"metaphaseGenotypes", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<aaaabbbb\>\"", ",", "\"\<aaaaBBBB\>\"", ",", "\"\<AAAAbbbb\>\"", 
     ",", "\"\<AAAABBBB\>\"", ",", "\"\<aaaaBBbb\>\"", ",", 
     "\"\<aaaaBbBb\>\"", ",", "\"\<AAAABBbb\>\"", ",", "\"\<AAAABbBb\>\"", 
     ",", "\"\<AAaabbbb\>\"", ",", "\"\<AaAabbbb\>\"", ",", 
     "\"\<AAaaBBBB\>\"", ",", "\"\<AaAaBBBB\>\"", ",", "\"\<AAaaBBbb\>\"", 
     ",", "\"\<AAaabbBB\>\"", ",", "\"\<AAaaBbBb\>\"", ",", 
     "\"\<AaAaBBbb\>\"", ",", "\"\<AaAaBbBb\>\"", ",", "\"\<AaAaBbbB\>\"", 
     ",", "\"\<AaAabBbB\>\""}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{3.612152798634252*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"gameteGenotypes", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<ab\>\"", ",", "\"\<aB\>\"", ",", "\"\<Ab\>\"", ",", "\"\<AB\>\""}], 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.61174065142953*^9, 3.6117406703998213`*^9}, 
   3.612152798646085*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Styles", "Subsection",
 CellChangeTimes->{{3.612301990990406*^9, 3.612301999337118*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"genotypeColours", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RGBColor", "[", 
      RowBox[{
       RowBox[{"0.5", "*", 
        RowBox[{"StringCount", "[", 
         RowBox[{
          RowBox[{
          "diploidGenotypes", "\[LeftDoubleBracket]", "i", 
           "\[RightDoubleBracket]"}], ",", "\"\<A\>\""}], "]"}]}], ",", "0", 
       ",", 
       RowBox[{"0.5", "*", 
        RowBox[{"StringCount", "[", 
         RowBox[{
          RowBox[{
          "diploidGenotypes", "\[LeftDoubleBracket]", "i", 
           "\[RightDoubleBracket]"}], ",", "\"\<B\>\""}], "]"}]}]}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "10"}], "}"}]}], "]"}]}], ";"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Converting mean crossover numbers to recombination rates and back\
\>", "Subsection",
 CellChangeTimes->{{3.612302002550441*^9, 3.6123020223203506`*^9}, {
  3.612515521482594*^9, 3.612515529291259*^9}, {3.612559972928191*^9, 
  3.61255997553295*^9}, {3.659411495159864*^9, 3.6594114985721188`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"convertMToC", "[", "nmean_", "]"}], ":=", 
   FractionBox[
    RowBox[{"1", "-", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", "nmean"}], "]"}]}], "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"convertCToM", "[", "r_", "]"}], ":=", 
   RowBox[{"-", 
    RowBox[{"Log", "[", 
     RowBox[{"1", "-", 
      RowBox[{"2", "r"}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.612298899509169*^9, 3.61229893878967*^9}, {
  3.612299185105534*^9, 3.612299189071931*^9}, {3.6123016264898453`*^9, 
  3.6123017424625273`*^9}, {3.612558441679421*^9, 3.612558445008497*^9}, {
  3.612558496246895*^9, 3.6125585005901423`*^9}, {3.659400035339898*^9, 
  3.6594000635450487`*^9}, {3.659400718385539*^9, 3.6594007232128572`*^9}, {
  3.659411531218484*^9, 3.659411558615844*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Defining the model", "Section",
 CellChangeTimes->{{3.597374783852131*^9, 3.5973747943171043`*^9}, 
   3.612152798648328*^9}],

Cell[CellGroupData[{

Cell["Step 1: Mutation", "Subsection",
 CellChangeTimes->{{3.597374708864253*^9, 3.597374727905816*^9}, {
   3.605326220250722*^9, 3.60532622032421*^9}, {3.605351818568017*^9, 
   3.605351818639028*^9}, 3.612152798648616*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MutationStep", "[", 
    RowBox[{"p_", ",", "muA_", ",", "muB_"}], "]"}], ":=", 
   RowBox[{"p", ".", 
    RowBox[{"(", GridBox[{
       {
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "muA"}], ")"}], "^", "2"}], "0", "0", 
        RowBox[{"2", "muA", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muA"}], ")"}]}], "0", "0", "0", 
        RowBox[{"muA", "^", "2"}], "0", "0"},
       {"0", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "muA"}], ")"}], "^", "2"}], "0", "0", 
        RowBox[{"muA", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muA"}], ")"}]}], 
        RowBox[{"muA", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muA"}], ")"}]}], "0", "0", 
        RowBox[{"muA", "^", "2"}], "0"},
       {"0", "0", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "muA"}], ")"}], "^", "2"}], "0", "0", "0", 
        RowBox[{"2", "muA", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muA"}], ")"}]}], "0", "0", 
        RowBox[{"muA", "^", "2"}]},
       {
        RowBox[{"muA", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muA"}], ")"}]}], "0", "0", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "muA"}], ")"}], "^", "2"}], "+", 
         RowBox[{"muA", "^", "2"}]}], "0", "0", "0", 
        RowBox[{"muA", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muA"}], ")"}]}], "0", "0"},
       {"0", 
        RowBox[{"muA", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muA"}], ")"}]}], "0", "0", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "muA"}], ")"}], "^", "2"}], 
        RowBox[{"muA", "^", "2"}], "0", "0", 
        RowBox[{"muA", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muA"}], ")"}]}], "0"},
       {"0", 
        RowBox[{"muA", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muA"}], ")"}]}], "0", "0", 
        RowBox[{"muA", "^", "2"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "muA"}], ")"}], "^", "2"}], "0", "0", 
        RowBox[{"muA", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muA"}], ")"}]}], "0"},
       {"0", "0", 
        RowBox[{"muA", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muA"}], ")"}]}], "0", "0", "0", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "muA"}], ")"}], "^", "2"}], "+", 
         RowBox[{"muA", "^", "2"}]}], "0", "0", 
        RowBox[{"muA", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muA"}], ")"}]}]},
       {
        RowBox[{"muA", "^", "2"}], "0", "0", 
        RowBox[{"2", "muA", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muA"}], ")"}]}], "0", "0", "0", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "muA"}], ")"}], "^", "2"}], "0", "0"},
       {"0", 
        RowBox[{"muA", "^", "2"}], "0", "0", 
        RowBox[{"muA", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muA"}], ")"}]}], 
        RowBox[{"muA", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muA"}], ")"}]}], "0", "0", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "muA"}], ")"}], "^", "2"}], "0"},
       {"0", "0", 
        RowBox[{"muA", "^", "2"}], "0", "0", "0", 
        RowBox[{"2", "muA", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muA"}], ")"}]}], "0", "0", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "muA"}], ")"}], "^", "2"}]}
      }], ")"}], ".", 
    RowBox[{"(", GridBox[{
       {
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "muB"}], ")"}], "^", "2"}], 
        RowBox[{"2", "muB", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muB"}], ")"}]}], 
        RowBox[{"muB", "^", "2"}], "0", "0", "0", "0", "0", "0", "0"},
       {
        RowBox[{"muB", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muB"}], ")"}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "muB"}], ")"}], "^", "2"}], "+", 
         RowBox[{"muB", "^", "2"}]}], 
        RowBox[{"muB", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muB"}], ")"}]}], "0", "0", "0", "0", "0", "0", 
        "0"},
       {
        RowBox[{"muB", "^", "2"}], 
        RowBox[{"2", "muB", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muB"}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "muB"}], ")"}], "^", "2"}], "0", "0", "0", "0", 
        "0", "0", "0"},
       {"0", "0", "0", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "muB"}], ")"}], "^", "2"}], 
        RowBox[{"muB", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muB"}], ")"}]}], 
        RowBox[{"muB", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muB"}], ")"}]}], 
        RowBox[{"muB", "^", "2"}], "0", "0", "0"},
       {"0", "0", "0", 
        RowBox[{"muB", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muB"}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "muB"}], ")"}], "^", "2"}], 
        RowBox[{"muB", "^", "2"}], 
        RowBox[{"muB", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muB"}], ")"}]}], "0", "0", "0"},
       {"0", "0", "0", 
        RowBox[{"muB", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muB"}], ")"}]}], 
        RowBox[{"muB", "^", "2"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "muB"}], ")"}], "^", "2"}], 
        RowBox[{"muB", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muB"}], ")"}]}], "0", "0", "0"},
       {"0", "0", "0", 
        RowBox[{"muB", "^", "2"}], 
        RowBox[{"muB", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muB"}], ")"}]}], 
        RowBox[{"muB", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muB"}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "muB"}], ")"}], "^", "2"}], "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "muB"}], ")"}], "^", "2"}], 
        RowBox[{"2", "muB", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muB"}], ")"}]}], 
        RowBox[{"muB", "^", "2"}]},
       {"0", "0", "0", "0", "0", "0", "0", 
        RowBox[{"muB", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muB"}], ")"}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "muB"}], ")"}], "^", "2"}], "+", 
         RowBox[{"muB", "^", "2"}]}], 
        RowBox[{"muB", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muB"}], ")"}]}]},
       {"0", "0", "0", "0", "0", "0", "0", 
        RowBox[{"muB", "^", "2"}], 
        RowBox[{"2", "muB", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muB"}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "muB"}], ")"}], "^", "2"}]}
      }], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.597374831861114*^9, 3.597374845931498*^9}, {
   3.597374878322105*^9, 3.5973748794246197`*^9}, {3.597374935721381*^9, 
   3.5973749458314943`*^9}, {3.597374996606694*^9, 3.59737500565091*^9}, {
   3.5973750498523197`*^9, 3.597375146478945*^9}, {3.59737520192564*^9, 
   3.597375241700665*^9}, {3.597375285140848*^9, 3.5973752858896303`*^9}, {
   3.597375328207903*^9, 3.597375341175023*^9}, {3.5973753993457813`*^9, 
   3.597375444301066*^9}, {3.59737552477229*^9, 3.597375553732005*^9}, {
   3.597375589964923*^9, 3.5973756036578407`*^9}, {3.59737564056136*^9, 
   3.5973757469233503`*^9}, {3.597375865225553*^9, 3.5973758775394087`*^9}, {
   3.597375917199128*^9, 3.5973759621664124`*^9}, {3.5973760260521708`*^9, 
   3.597376050977241*^9}, {3.597376103863598*^9, 3.597376109284156*^9}, {
   3.597378970085388*^9, 3.597379065947466*^9}, {3.59738753623954*^9, 
   3.5973876041042213`*^9}, {3.59771709982157*^9, 3.597717102525588*^9}, 
   3.6121527987310457`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Step 2: Recombination", "Subsection",
 CellChangeTimes->{{3.5972761312229843`*^9, 3.597276152324161*^9}, 
   3.597292228097137*^9, {3.5972922606965933`*^9, 3.597292262599761*^9}, {
   3.597292313380753*^9, 3.597292316814769*^9}, {3.597717598006237*^9, 
   3.5977176033648043`*^9}, {3.605337381504455*^9, 3.60533738312844*^9}, {
   3.60535182162228*^9, 3.605351827421872*^9}, 3.612152798732933*^9}],

Cell["Helper function:", "Text",
 CellChangeTimes->{{3.6592157908978558`*^9, 3.659215796207662*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "n_", "]"}], ":=", 
   RowBox[{
    FractionBox["1", "3"], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", 
         FractionBox["1", "2"]}], ")"}], "n"]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.597206053685231*^9, 3.597206159783449*^9}, {
   3.5972062340669127`*^9, 3.597206297410627*^9}, 3.597206475936799*^9, {
   3.597266705740488*^9, 3.5972671252895117`*^9}, {3.59726715552553*^9, 
   3.5972671723982477`*^9}, {3.59726722510456*^9, 3.597267233641754*^9}, {
   3.597267307293777*^9, 3.597267313554364*^9}, {3.597267372359395*^9, 
   3.5972674032662888`*^9}, {3.5972674351208057`*^9, 
   3.5972675038399754`*^9}, {3.597268321405767*^9, 3.597268323453751*^9}, {
   3.597275438935054*^9, 3.59727546479843*^9}, {3.597276482629818*^9, 
   3.597276484622335*^9}, 3.597292255832032*^9, 3.597292369185205*^9, 
   3.6118110690258017`*^9, 3.61215279873315*^9, {3.65921577931859*^9, 
   3.6592157863522673`*^9}}],

Cell[TextData[{
 "The following function returns the proportions of recombinant genotypes \
following ",
 StyleBox["n",
  FontSlant->"Italic"],
 " crossovers between centromere and locus ",
 StyleBox["A",
  FontWeight->"Bold"],
 " and ",
 StyleBox["m",
  FontSlant->"Italic"],
 " crossovers between loci ",
 StyleBox["A",
  FontWeight->"Bold"],
 " and ",
 StyleBox["B",
  FontWeight->"Bold"],
 " in Prophase I. The recombinants are expressed using placeholders A1, A2, \
B1 and B2 that can stand for any of the respective alleles."
}], "Text",
 CellChangeTimes->{{3.597205090676815*^9, 3.597205180738257*^9}, {
   3.597267616032036*^9, 3.597267658255143*^9}, {3.597302694213387*^9, 
   3.5973027407609167`*^9}, {3.605336193905094*^9, 3.6053362529760323`*^9}, 
   3.6121527987350187`*^9, {3.659215839023785*^9, 3.659215889302647*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"pHs", "=", 
    RowBox[{"{", 
     RowBox[{
     "\"\<A1A1A2A2B1B1B2B2\>\"", ",", "\"\<A1A1A2A2B2B2B1B1\>\"", ",", 
      "\"\<A1A1A2A2B1B2B1B2\>\"", ",", "\"\<A1A2A1A2B1B1B2B2\>\"", ",", 
      "\"\<A1A2A1A2B1B2B1B2\>\"", ",", "\"\<A1A2A1A2B1B2B2B1\>\"", ",", 
      "\"\<A1A2A1A2B2B1B2B1\>\""}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PHRecMatrix", "[", 
    RowBox[{"n_", ",", "m_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"m", ">", "0"}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "2"], "-", 
             RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"f", "[", "n", "]"}]}]}], ")"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "2"], "-", 
             RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"f", "[", "n", "]"}]}]}], ")"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"f", "[", "n", "]"}]}]}], ")"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"f", "[", "m", "]"}]}]}], ")"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"f", "[", "m", "]"}]}]}], ")"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}]},
         {
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "2"], "-", 
             RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"f", "[", "n", "]"}]}]}], ")"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "2"], "-", 
             RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"f", "[", "n", "]"}]}]}], ")"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"f", "[", "n", "]"}]}]}], ")"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"f", "[", "m", "]"}]}]}], ")"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"f", "[", "m", "]"}]}]}], ")"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}]},
         {
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"f", "[", "n", "]"}]}]}], ")"}]}], 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"f", "[", "n", "]"}]}]}], ")"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"f", "[", "n", "]"}]}]}], ")"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}], 
          RowBox[{
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}], 
          RowBox[{
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}]},
         {
          FractionBox[
           RowBox[{
            RowBox[{"f", "[", "m", "]"}], " ", 
            RowBox[{"f", "[", "n", "]"}]}], "2"], 
          FractionBox[
           RowBox[{
            RowBox[{"f", "[", "m", "]"}], " ", 
            RowBox[{"f", "[", "n", "]"}]}], "2"], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}], 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"f", "[", "n", "]"}]}], ")"}]}], "+", 
             RowBox[{
              FractionBox["1", 
               SuperscriptBox["2", "n"]], 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"3", " ", 
                 RowBox[{"f", "[", "m", "]"}]}]}], ")"}]}]}], ")"}]}], 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "n", "]"}]}], ")"}]}], 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"f", "[", "n", "]"}]}], ")"}]}], "-", 
             RowBox[{
              FractionBox["1", 
               SuperscriptBox["2", "n"]], 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"3", " ", 
                 RowBox[{"f", "[", "m", "]"}]}]}], ")"}]}]}], ")"}]}], 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "n", "]"}]}], ")"}]}]},
         {
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "2"], "-", 
             RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "2"], "-", 
             RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}], 
          RowBox[{
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "n", "]"}]}], ")"}]}], 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"f", "[", "m", "]"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "n", "]"}]}], ")"}]}], 
          RowBox[{
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "n", "]"}]}], ")"}]}], 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"f", "[", "m", "]"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "n", "]"}]}], ")"}]}]},
         {
          FractionBox[
           RowBox[{
            RowBox[{"f", "[", "m", "]"}], " ", 
            RowBox[{"f", "[", "n", "]"}]}], "2"], 
          FractionBox[
           RowBox[{
            RowBox[{"f", "[", "m", "]"}], " ", 
            RowBox[{"f", "[", "n", "]"}]}], "2"], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}], 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"f", "[", "n", "]"}]}], ")"}]}], "-", 
             RowBox[{
              FractionBox["1", 
               SuperscriptBox["2", "n"]], 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"3", " ", 
                 RowBox[{"f", "[", "m", "]"}]}]}], ")"}]}]}], ")"}]}], 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "n", "]"}]}], ")"}]}], 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"f", "[", "n", "]"}]}], ")"}]}], "+", 
             RowBox[{
              FractionBox["1", 
               SuperscriptBox["2", "n"]], 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"3", " ", 
                 RowBox[{"f", "[", "m", "]"}]}]}], ")"}]}]}], ")"}]}], 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "n", "]"}]}], ")"}]}]},
         {
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "2"], "-", 
             RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "2"], "-", 
             RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}], 
          RowBox[{
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "n", "]"}]}], ")"}]}], 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"f", "[", "m", "]"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "n", "]"}]}], ")"}]}], 
          RowBox[{
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "n", "]"}]}], ")"}]}], 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"f", "[", "m", "]"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"f", "[", "n", "]"}]}], ")"}]}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{"1", "-", 
           RowBox[{"2", 
            RowBox[{"f", "[", "n", "]"}]}]}], "0", "0", "0", 
          RowBox[{"2", 
           RowBox[{"f", "[", "n", "]"}]}], "0", "0"},
         {"0", 
          RowBox[{"1", "-", 
           RowBox[{"2", 
            RowBox[{"f", "[", "n", "]"}]}]}], "0", "0", "0", "0", 
          RowBox[{"2", 
           RowBox[{"f", "[", "n", "]"}]}]},
         {"0", "0", 
          RowBox[{"1", "-", 
           RowBox[{"2", 
            RowBox[{"f", "[", "n", "]"}]}]}], 
          RowBox[{"f", "[", "n", "]"}], "0", 
          RowBox[{
           RowBox[{"f", "[", "n", "]"}], " "}], "0"},
         {"0", "0", 
          RowBox[{"f", "[", "n", "]"}], 
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"f", "[", "n", "]"}]}], ")"}]}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox["1", "2"], ")"}], 
            RowBox[{"n", "+", "1"}]]}], "0", 
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"f", "[", "n", "]"}]}], ")"}]}], "-", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox["1", "2"], ")"}], 
            RowBox[{"n", "+", "1"}]]}], "0"},
         {
          RowBox[{"f", "[", "n", "]"}], "0", "0", "0", 
          RowBox[{"1", "-", 
           RowBox[{"f", "[", "n", "]"}], " "}], "0", "0"},
         {"0", "0", 
          RowBox[{"f", "[", "n", "]"}], 
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"f", "[", "n", "]"}]}], ")"}]}], "-", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox["1", "2"], ")"}], 
            RowBox[{"n", "+", "1"}]]}], "0", 
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"f", "[", "n", "]"}]}], ")"}]}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox["1", "2"], ")"}], 
            RowBox[{"n", "+", "1"}]]}], "0"},
         {"0", 
          RowBox[{
           RowBox[{"f", "[", "n", "]"}], " "}], "0", "0", "0", "0", 
          RowBox[{"1", "-", 
           RowBox[{"f", "[", "n", "]"}]}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.5972048246483917`*^9, 3.597204887468203*^9}, {
   3.597204973214735*^9, 3.59720498285902*^9}, {3.5972050533327723`*^9, 
   3.5972050875858917`*^9}, 3.597205184626466*^9, 3.597205220650771*^9, {
   3.597205251232114*^9, 3.597205266094939*^9}, {3.597205563304222*^9, 
   3.5972056149501543`*^9}, {3.597208740019548*^9, 3.597208803692576*^9}, {
   3.597208836215065*^9, 3.597208836613545*^9}, {3.597266561631421*^9, 
   3.597266689178833*^9}, {3.605336165408351*^9, 3.6053361796322803`*^9}, {
   3.605336279946025*^9, 3.605336387136107*^9}, {3.605336419757189*^9, 
   3.6053364264805117`*^9}, {3.6053364724650784`*^9, 3.605336560558525*^9}, 
   3.605337177780745*^9, {3.605338437763392*^9, 3.605338443131246*^9}, {
   3.6053394711649437`*^9, 3.605339478886177*^9}, {3.605339673005178*^9, 
   3.605339678480685*^9}, {3.605339713263669*^9, 3.605339713906254*^9}, {
   3.605339815813376*^9, 3.605339825837709*^9}, {3.6053398560228977`*^9, 
   3.605339862758082*^9}, {3.605339893257277*^9, 3.605339893425997*^9}, {
   3.6120390113681107`*^9, 3.612039038730608*^9}, {3.612039075837446*^9, 
   3.612039204336649*^9}, {3.612039389052083*^9, 3.612039394833948*^9}, 
   3.6121527987368097`*^9, {3.6125091566572313`*^9, 3.6125091574108353`*^9}, 
   3.612509227554336*^9, {3.612509262871543*^9, 3.612509386277721*^9}, 
   3.612515355351028*^9, {3.612515998916953*^9, 3.612516080389831*^9}, {
   3.612516119020515*^9, 3.612516188240857*^9}, 3.612516248304471*^9, {
   3.612517347428164*^9, 3.612517351590603*^9}, {3.65921565390768*^9, 
   3.659215676711856*^9}, 3.6592158271833887`*^9, {3.659216075486877*^9, 
   3.659216092950821*^9}, {3.659216131544694*^9, 3.659216151840171*^9}, {
   3.6592165557005053`*^9, 3.65921657766288*^9}, {3.659216636765905*^9, 
   3.659216660676141*^9}, {3.65922699331985*^9, 3.659227069936804*^9}, 
   3.659227816105062*^9, {3.659231142587484*^9, 3.6592311443161716`*^9}, 
   3.659231201652817*^9, {3.659231361088327*^9, 3.659231363158288*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PHRecombinantFractions", "[", 
    RowBox[{"n_", ",", "m_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"PHRecMatrix", "[", 
     RowBox[{"n", ",", "m"}], "]"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.659231941393805*^9, 3.659231970903681*^9}}],

Cell["\<\
The function below gives the proportion of recombinants under the assumption \
that the numbers of crossover events follow two independent Poisson \
distributions with means nmean and mmean, respectively.\
\>", "Text",
 CellChangeTimes->{{3.605350708131383*^9, 3.60535071400287*^9}, {
   3.605465824002696*^9, 3.605465827224737*^9}, 3.6121527987399607`*^9, {
   3.659231339900038*^9, 3.6592313441880293`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PHRecombinantFractionsPoisson", "[", 
    RowBox[{"nmean_", ",", "mmean_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "18"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"mmean", "/", "2"}]]}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "18"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"mmean", "/", "2"}]]}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"mmean", "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["2", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["2", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"mmean", "/", "2"}]]}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["2", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"mmean", "/", "2"}]]}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"mmean", "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}]}], "}"}]}], 
  ";"}]], "Input"],

Cell["\<\
Converting some genotype labels to equivalent ones that are used:\
\>", "Text",
 CellChangeTimes->{{3.659231378289071*^9, 3.659231395250243*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
   "StandardizeMetaphaseGenotypeString", "[", "genotypeString_", "]"}], ":=", 
   
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sString", "=", "genotypeString"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"genotypeString", "==", "\"\<aaaabbBB\>\""}], ",", 
        RowBox[{"sString", "=", "\"\<aaaaBBbb\>\""}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"genotypeString", "==", "\"\<aaaabBbB\>\""}], ",", 
        RowBox[{"sString", "=", "\"\<aaaaBbBb\>\""}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"genotypeString", "==", "\"\<aaaabBBb\>\""}], ",", 
        RowBox[{"sString", "=", "\"\<aaaaBBbb\>\""}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"genotypeString", "==", "\"\<aaaaBbbB\>\""}], ",", 
        RowBox[{"sString", "=", "\"\<aaaaBbBb\>\""}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"genotypeString", "==", "\"\<AAAAbbBB\>\""}], ",", 
        RowBox[{"sString", "=", "\"\<AAAABBbb\>\""}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"genotypeString", "==", "\"\<AAAAbBbB\>\""}], ",", 
        RowBox[{"sString", "=", "\"\<AAAABbBb\>\""}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"genotypeString", "==", "\"\<AAAAbBBb\>\""}], ",", 
        RowBox[{"sString", "=", "\"\<AAAABBbb\>\""}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"genotypeString", "==", "\"\<AAAABbbB\>\""}], ",", 
        RowBox[{"sString", "=", "\"\<AAAABbBb\>\""}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"genotypeString", "==", "\"\<AAaabBbB\>\""}], ",", 
        RowBox[{"sString", "=", "\"\<AAaaBbBb\>\""}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"genotypeString", "==", "\"\<AaAabbBB\>\""}], ",", 
        RowBox[{"sString", "=", "\"\<AaAaBBbb\>\""}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"genotypeString", "==", "\"\<AaAabBBb\>\""}], ",", 
        RowBox[{"sString", "=", "\"\<AaAaBbbB\>\""}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "sString", "]"}], ";"}]}], "\[IndentingNewLine]",
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5972706179405813`*^9, 3.597270726141674*^9}, {
   3.5972707675941*^9, 3.5972707937867727`*^9}, {3.597270984360043*^9, 
   3.5972710023217287`*^9}, {3.59727106453578*^9, 3.597271065714281*^9}, {
   3.5972755073435097`*^9, 3.597275510683796*^9}, {3.597275570595174*^9, 
   3.597275573431243*^9}, {3.597275763898932*^9, 3.5972757862020273`*^9}, {
   3.597275856179058*^9, 3.5972758708826437`*^9}, {3.597275919680738*^9, 
   3.597275925862356*^9}, {3.5972759568358*^9, 3.597275999650731*^9}, 
   3.612152798746108*^9}],

Cell[TextData[{
 "The following function calculates a matrix ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["R", "ij"], TraditionalForm]]],
 " giving the proportion of recombinant genotype j arising from diploid \
genotype i, either assuming a Poisson distribution or with actual numbers of \
crossovers. "
}], "Text",
 CellChangeTimes->{{3.597206488293004*^9, 3.597206500042953*^9}, {
   3.597206597741034*^9, 3.597206606890925*^9}, {3.597267676248629*^9, 
   3.597267676733653*^9}, {3.597268395843237*^9, 3.597268468564808*^9}, {
   3.597362988792788*^9, 3.5973630740739927`*^9}, {3.6053508488113537`*^9, 
   3.6053508859547157`*^9}, {3.611813528249679*^9, 3.6118135305053062`*^9}, 
   3.612152798748069*^9, {3.659231304082148*^9, 3.6592313210506487`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getRecombinantMatrix", "[", 
     RowBox[{"n_", ",", "m_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "Rmatrix", ",", "i", ",", "j", ",", "recfracs", ",", 
        "genotypeString"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Rmatrix", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"Length", "[", "diploidGenotypes", "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Length", "[", "metaphaseGenotypes", "]"}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"recfracs", "=", 
        RowBox[{"PHRecombinantFractions", "[", 
         RowBox[{"n", ",", "m"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "diploidGenotypes", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "\[LessEqual]", 
             RowBox[{"Length", "[", "recfracs", "]"}]}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"genotypeString", "=", 
              RowBox[{"StringReplace", "[", 
               RowBox[{
                RowBox[{
                "pHs", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}],
                 ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\"\<A1\>\"", "\[Rule]", 
                   RowBox[{"StringTake", "[", 
                    RowBox[{
                    RowBox[{
                    "diploidGenotypes", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", "1", "}"}]}], "]"}]}], ",", 
                  RowBox[{"\"\<A2\>\"", "\[Rule]", 
                   RowBox[{"StringTake", "[", 
                    RowBox[{
                    RowBox[{
                    "diploidGenotypes", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", "2", "}"}]}], "]"}]}], ",", 
                  RowBox[{"\"\<B1\>\"", "\[Rule]", 
                   RowBox[{"StringTake", "[", 
                    RowBox[{
                    RowBox[{
                    "diploidGenotypes", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", "3", "}"}]}], "]"}]}], ",", 
                  RowBox[{"\"\<B2\>\"", "\[Rule]", 
                   RowBox[{"StringTake", "[", 
                    RowBox[{
                    RowBox[{
                    "diploidGenotypes", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", "4", "}"}]}], "]"}]}]}], "}"}]}], "]"}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"genotypeString", "=", 
              RowBox[{
              "StandardizeMetaphaseGenotypeString", "[", "genotypeString", 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
               RowBox[{"i", ",", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"Position", "[", 
                   RowBox[{"metaphaseGenotypes", ",", "genotypeString"}], 
                   "]"}], "]"}], "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], "+=", 
              RowBox[{
              "recfracs", "\[LeftDoubleBracket]", "j", 
               "\[RightDoubleBracket]"}]}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "Rmatrix", "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getRecombinantMatrixPoisson", "[", 
    RowBox[{"nmean_", ",", "mmean_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "Rmatrix", ",", "i", ",", "j", ",", "recfracs", ",", "genotypeString"}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Rmatrix", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"Length", "[", "diploidGenotypes", "]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Length", "[", "metaphaseGenotypes", "]"}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"recfracs", "=", 
       RowBox[{"PHRecombinantFractionsPoisson", "[", 
        RowBox[{"nmean", ",", "mmean"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "diploidGenotypes", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "\[LessEqual]", 
            RowBox[{"Length", "[", "recfracs", "]"}]}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"genotypeString", "=", 
             RowBox[{"StringReplace", "[", 
              RowBox[{
               RowBox[{
               "pHs", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\"\<A1\>\"", "\[Rule]", 
                  RowBox[{"StringTake", "[", 
                   RowBox[{
                    RowBox[{
                    "diploidGenotypes", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", "1", "}"}]}], "]"}]}], ",", 
                 RowBox[{"\"\<A2\>\"", "\[Rule]", 
                  RowBox[{"StringTake", "[", 
                   RowBox[{
                    RowBox[{
                    "diploidGenotypes", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", "2", "}"}]}], "]"}]}], ",", 
                 RowBox[{"\"\<B1\>\"", "\[Rule]", 
                  RowBox[{"StringTake", "[", 
                   RowBox[{
                    RowBox[{
                    "diploidGenotypes", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", "3", "}"}]}], "]"}]}], ",", 
                 RowBox[{"\"\<B2\>\"", "\[Rule]", 
                  RowBox[{"StringTake", "[", 
                   RowBox[{
                    RowBox[{
                    "diploidGenotypes", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", "4", "}"}]}], "]"}]}]}], "}"}]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"genotypeString", "=", 
             RowBox[{
             "StandardizeMetaphaseGenotypeString", "[", "genotypeString", 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
              RowBox[{"i", ",", 
               RowBox[{
                RowBox[{"Flatten", "[", 
                 RowBox[{"Position", "[", 
                  RowBox[{"metaphaseGenotypes", ",", "genotypeString"}], 
                  "]"}], "]"}], "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], "+=", 
             
             RowBox[{
             "recfracs", "\[LeftDoubleBracket]", "j", 
              "\[RightDoubleBracket]"}]}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "Rmatrix", "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.59720522687119*^9, 3.5972052337914*^9}, {
   3.597205310042666*^9, 3.5972053148249683`*^9}, {3.597205430372978*^9, 
   3.5972054372840633`*^9}, {3.597205621458787*^9, 3.597205625287236*^9}, {
   3.597268498930606*^9, 3.597268525635129*^9}, {3.597268560642681*^9, 
   3.597268687799255*^9}, {3.597268766131604*^9, 3.5972689584633093`*^9}, {
   3.597269006916595*^9, 3.597269054784614*^9}, {3.597269245867661*^9, 
   3.597269263263316*^9}, {3.5972696830489273`*^9, 3.597269715496016*^9}, {
   3.597269770415929*^9, 3.597269837249818*^9}, {3.597269896103855*^9, 
   3.5972699842211437`*^9}, {3.597270110589422*^9, 3.597270152472728*^9}, {
   3.597270320861458*^9, 3.5972703250525007`*^9}, {3.597270389760898*^9, 
   3.597270393303131*^9}, {3.5972704257025633`*^9, 3.597270438272138*^9}, {
   3.597270540365597*^9, 3.597270603292535*^9}, {3.5972708446666737`*^9, 
   3.597270892964882*^9}, {3.597270933166531*^9, 3.597270934522108*^9}, {
   3.597274533601451*^9, 3.5972745466986513`*^9}, {3.597274622737503*^9, 
   3.597274633628633*^9}, {3.5972750615112667`*^9, 3.597275064357869*^9}, {
   3.597275345883924*^9, 3.597275347177812*^9}, {3.5972755235750628`*^9, 
   3.597275523652711*^9}, {3.597275589229097*^9, 3.5972755893073597`*^9}, {
   3.597275687538452*^9, 3.597275688570806*^9}, {3.597276055888435*^9, 
   3.597276071886471*^9}, 3.597276210531909*^9, {3.597362941220745*^9, 
   3.5973629846064672`*^9}, {3.605350834196628*^9, 3.6053508438479347`*^9}, {
   3.605350924665826*^9, 3.605350938863646*^9}, {3.605469172024948*^9, 
   3.605469178726672*^9}, {3.605471314888571*^9, 3.605471315202256*^9}, {
   3.612152724848596*^9, 3.612152728281877*^9}, 3.612152798748941*^9, 
   3.6125154565287724`*^9, {3.659231226381441*^9, 3.6592312822316933`*^9}, {
   3.6592319964373407`*^9, 3.659231998191285*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Step 3: Automixis", "Subsection",
 CellChangeTimes->{{3.605326235353318*^9, 3.605326259820022*^9}, {
   3.605351832006734*^9, 3.605351832094002*^9}, 3.612152798750883*^9}],

Cell["\<\
The following function calculates a matrix giving the frequency of diploid \
genotype j that arises from genotype i following recombination and automixis \
for a given mode of automixis. It assumes a Poisson distribution of \
crossovers between centromer and locus A (nmean) and between A and B (mmean).\
\
\>", "Text",
 CellChangeTimes->{{3.5972923762131777`*^9, 3.597292433019244*^9}, {
   3.59729252100696*^9, 3.5972925653071632`*^9}, {3.597312805794827*^9, 
   3.5973128315799637`*^9}, {3.597312985285328*^9, 3.5973130250816727`*^9}, {
   3.611738171717599*^9, 3.611738176764039*^9}, {3.6117384232978697`*^9, 
   3.611738426570096*^9}, 3.612152798751123*^9, {3.6592321756657867`*^9, 
   3.659232202082101*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getAutomixisMatrixPoisson", "[", 
    RowBox[{"nmean_", ",", "mmean_", ",", "mode_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Rmatrix", ",", "Amatrix"}], "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"Rmatrix", "=", 
       RowBox[{"getRecombinantMatrixPoisson", "[", 
        RowBox[{"nmean", ",", "mmean"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"Amatrix", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"Length", "[", "diploidGenotypes", "]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Length", "[", "diploidGenotypes", "]"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"mode", "\[Equal]", "\"\<CentralFusion\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Amatrix", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{
           RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "+", 
           RowBox[{
            RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "6"}], "\[RightDoubleBracket]"}], "/", "4"}],
            "+", 
           RowBox[{
            RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "10"}], "\[RightDoubleBracket]"}], "/", 
            "4"}], "+", 
           RowBox[{
            RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "17"}], "\[RightDoubleBracket]"}], "/", 
            "4"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Amatrix", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{
           RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "5"}], "\[RightDoubleBracket]"}], "+", 
           RowBox[{
            RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "6"}], "\[RightDoubleBracket]"}], "/", "2"}],
            "+", 
           RowBox[{
            RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "16"}], "\[RightDoubleBracket]"}], "/", 
            "4"}], "+", 
           RowBox[{
            RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "18"}], "\[RightDoubleBracket]"}], "/", 
            "4"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Amatrix", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{
           RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "+", 
           RowBox[{
            RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "6"}], "\[RightDoubleBracket]"}], "/", "4"}],
            "+", 
           RowBox[{
            RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "12"}], "\[RightDoubleBracket]"}], "/", 
            "4"}], "+", 
           RowBox[{
            RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "19"}], "\[RightDoubleBracket]"}], "/", 
            "4"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Amatrix", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "4"}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{
           RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "9"}], "\[RightDoubleBracket]"}], "+", 
           RowBox[{
            RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "10"}], "\[RightDoubleBracket]"}], "/", 
            "2"}], "+", 
           RowBox[{
            RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "15"}], "\[RightDoubleBracket]"}], "/", 
            "4"}], "+", 
           RowBox[{
            RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "18"}], "\[RightDoubleBracket]"}], "/", 
            "4"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Amatrix", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "5"}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{
           RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "13"}], "\[RightDoubleBracket]"}], "+", 
           RowBox[{
            RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "15"}], "\[RightDoubleBracket]"}], "/", 
            "4"}], "+", 
           RowBox[{
            RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "16"}], "\[RightDoubleBracket]"}], "/", 
            "4"}], "+", 
           RowBox[{
            RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "17"}], "\[RightDoubleBracket]"}], "/", 
            "2"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Amatrix", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "6"}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{
           RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "14"}], "\[RightDoubleBracket]"}], "+", 
           RowBox[{
            RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "15"}], "\[RightDoubleBracket]"}], "/", 
            "4"}], "+", 
           RowBox[{
            RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "16"}], "\[RightDoubleBracket]"}], "/", 
            "4"}], "+", 
           RowBox[{
            RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "19"}], "\[RightDoubleBracket]"}], "/", 
            "2"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Amatrix", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "7"}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{
           RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "11"}], "\[RightDoubleBracket]"}], "+", 
           RowBox[{
            RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "12"}], "\[RightDoubleBracket]"}], "/", 
            "2"}], "+", 
           RowBox[{
            RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "15"}], "\[RightDoubleBracket]"}], "/", 
            "4"}], "+", 
           RowBox[{
            RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "18"}], "\[RightDoubleBracket]"}], "/", 
            "4"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Amatrix", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "8"}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{
           RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}], "+", 
           RowBox[{
            RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "8"}], "\[RightDoubleBracket]"}], "/", "4"}],
            "+", 
           RowBox[{
            RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "10"}], "\[RightDoubleBracket]"}], "/", 
            "4"}], "+", 
           RowBox[{
            RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "19"}], "\[RightDoubleBracket]"}], "/", 
            "4"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Amatrix", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "9"}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{
           RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "7"}], "\[RightDoubleBracket]"}], "+", 
           RowBox[{
            RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "8"}], "\[RightDoubleBracket]"}], "/", "2"}],
            "+", 
           RowBox[{
            RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "16"}], "\[RightDoubleBracket]"}], "/", 
            "4"}], "+", 
           RowBox[{
            RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "18"}], "\[RightDoubleBracket]"}], "/", 
            "4"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Amatrix", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "10"}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{
           RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "4"}], "\[RightDoubleBracket]"}], "+", 
           RowBox[{
            RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "8"}], "\[RightDoubleBracket]"}], "/", "4"}],
            "+", 
           RowBox[{
            RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "12"}], "\[RightDoubleBracket]"}], "/", 
            "4"}], "+", 
           RowBox[{
            RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "17"}], "\[RightDoubleBracket]"}], "/", 
            "4"}]}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"mode", "\[Equal]", "\"\<TerminalFusion\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Amatrix", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{"Rmatrix", ".", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", 
             RowBox[{"1", "/", "2"}], ",", "0", ",", "0", ",", "0", ",", 
             RowBox[{"1", "/", "2"}], ",", "0", ",", "0", ",", "0", ",", 
             RowBox[{"1", "/", "2"}], ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Amatrix", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{"Rmatrix", ".", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", 
             RowBox[{"1", "/", "2"}], ",", "0", ",", "0", ",", "0", ",", 
             "0"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Amatrix", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{"Rmatrix", ".", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", 
             RowBox[{"1", "/", "2"}], ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", 
             RowBox[{"1", "/", "2"}], ",", "0", ",", "0", ",", 
             RowBox[{"1", "/", "2"}], ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Amatrix", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "4"}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{"Rmatrix", ".", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", 
             RowBox[{"1", "/", "2"}], ",", "0", ",", "0", ",", "0"}], 
            "}"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Amatrix", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "5"}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{"Rmatrix", ".", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "1", ",", 
             RowBox[{"1", "/", "2"}], ",", "0"}], "}"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Amatrix", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "6"}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{"Rmatrix", ".", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", 
             RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Amatrix", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "7"}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{"Rmatrix", ".", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", 
             "0", ",", "0", ",", 
             RowBox[{"1", "/", "2"}], ",", "0", ",", "0", ",", "0"}], 
            "}"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Amatrix", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "8"}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{"Rmatrix", ".", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
             RowBox[{"1", "/", "2"}], ",", "0", ",", 
             RowBox[{"1", "/", "2"}], ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", 
             RowBox[{"1", "/", "2"}], ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Amatrix", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "9"}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{"Rmatrix", ".", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", 
             RowBox[{"1", "/", "2"}], ",", "0", ",", "0", ",", "0", ",", 
             "0"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Amatrix", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "10"}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{"Rmatrix", ".", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
             RowBox[{"1", "/", "2"}], ",", "0", ",", "0", ",", "0", ",", 
             RowBox[{"1", "/", "2"}], ",", "0", ",", 
             RowBox[{"1", "/", "2"}], ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0"}], "}"}]}]}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"mode", "==", "\"\<RandomFusion\>\""}], ","}], 
         "\[IndentingNewLine]", "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"mode", "\[Equal]", "\"\<GameteDuplication\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Amatrix", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{"Rmatrix", ".", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", 
             RowBox[{"1", "/", "2"}], ",", 
             RowBox[{"1", "/", "2"}], ",", "0", ",", "0", ",", 
             RowBox[{"1", "/", "2"}], ",", 
             RowBox[{"1", "/", "2"}], ",", "0", ",", "0", ",", 
             RowBox[{"1", "/", "2"}], ",", "0", ",", 
             RowBox[{"1", "/", "4"}], ",", 
             RowBox[{"1", "/", "4"}], ",", 
             RowBox[{"1", "/", "2"}], ",", 
             RowBox[{"1", "/", "4"}], ",", "0"}], "}"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Amatrix", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "=", "0"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Amatrix", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{"Rmatrix", ".", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", 
             RowBox[{"1", "/", "2"}], ",", 
             RowBox[{"1", "/", "2"}], ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", 
             RowBox[{"1", "/", "2"}], ",", 
             RowBox[{"1", "/", "2"}], ",", "0", ",", 
             RowBox[{"1", "/", "2"}], ",", 
             RowBox[{"1", "/", "4"}], ",", 
             RowBox[{"1", "/", "4"}], ",", "0", ",", 
             RowBox[{"1", "/", "4"}], ",", 
             RowBox[{"1", "/", "2"}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Amatrix", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "4"}], "\[RightDoubleBracket]"}], "=", "0"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Amatrix", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "5"}], "\[RightDoubleBracket]"}], "=", "0"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Amatrix", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "6"}], "\[RightDoubleBracket]"}], "=", "0"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Amatrix", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "7"}], "\[RightDoubleBracket]"}], "=", "0"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Amatrix", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "8"}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{"Rmatrix", ".", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
             RowBox[{"1", "/", "2"}], ",", 
             RowBox[{"1", "/", "2"}], ",", 
             RowBox[{"1", "/", "2"}], ",", 
             RowBox[{"1", "/", "2"}], ",", "0", ",", "0", ",", "0", ",", 
             RowBox[{"1", "/", "2"}], ",", 
             RowBox[{"1", "/", "4"}], ",", 
             RowBox[{"1", "/", "4"}], ",", "0", ",", 
             RowBox[{"1", "/", "4"}], ",", 
             RowBox[{"1", "/", "2"}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Amatrix", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "9"}], "\[RightDoubleBracket]"}], "=", "0"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Amatrix", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "10"}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{"Rmatrix", ".", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
             RowBox[{"1", "/", "2"}], ",", 
             RowBox[{"1", "/", "2"}], ",", "0", ",", "0", ",", 
             RowBox[{"1", "/", "2"}], ",", 
             RowBox[{"1", "/", "2"}], ",", 
             RowBox[{"1", "/", "2"}], ",", "0", ",", 
             RowBox[{"1", "/", "4"}], ",", 
             RowBox[{"1", "/", "4"}], ",", 
             RowBox[{"1", "/", "2"}], ",", 
             RowBox[{"1", "/", "4"}], ",", "0"}], "}"}]}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "Amatrix", "]"}], ";"}]}], "\[IndentingNewLine]",
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.597292663483596*^9, 3.597292772302732*^9}, {
   3.597292897427559*^9, 3.5972929012196302`*^9}, {3.597299764291045*^9, 
   3.597299801985958*^9}, {3.5972999385674067`*^9, 3.59730006347694*^9}, {
   3.597300102832882*^9, 3.597300131727128*^9}, {3.597300241066307*^9, 
   3.59730024681496*^9}, {3.5973003250536737`*^9, 3.597300330155352*^9}, {
   3.597300449507854*^9, 3.5973004830553913`*^9}, {3.597302244882999*^9, 
   3.5973022504175177`*^9}, {3.597310178280643*^9, 3.5973102139986973`*^9}, {
   3.59731024598335*^9, 3.5973103065356283`*^9}, {3.597310432731621*^9, 
   3.5973107216731663`*^9}, {3.597363055294072*^9, 3.597363057358059*^9}, {
   3.59736756023414*^9, 3.597367567618162*^9}, {3.605350972717228*^9, 
   3.605351001037077*^9}, {3.6117381831368113`*^9, 3.611738196232953*^9}, {
   3.611738417895772*^9, 3.611738418622851*^9}, {3.612152737278203*^9, 
   3.612152752452024*^9}, 3.612152798752543*^9, {3.6125154762223177`*^9, 
   3.6125154846917343`*^9}, {3.65923215537654*^9, 3.659232169042409*^9}, {
   3.65923220565384*^9, 3.6592322107641983`*^9}, {3.6592330944825697`*^9, 
   3.659233095719833*^9}, {3.659233522724947*^9, 3.659233655987261*^9}, 
   3.6592336882755127`*^9, {3.659233729572476*^9, 3.659233917005558*^9}, {
   3.659234004817947*^9, 3.659234008464106*^9}, {3.659303524658197*^9, 
   3.659303538049917*^9}, {3.659303569502369*^9, 3.659303654448063*^9}, {
   3.659303698039075*^9, 3.659303700310481*^9}, {3.659303911431634*^9, 
   3.659304128151594*^9}, {3.65930505106489*^9, 3.65930510721192*^9}, {
   3.659305275839747*^9, 3.659305539946013*^9}, {3.65930560201193*^9, 
   3.659305658295764*^9}, {3.6593057065822287`*^9, 3.659305881319202*^9}}],

Cell["\<\
The following function calculates the tensor giving the frequencies of \
genotypes produced by a mother with genotype i and a father with genotype j \
under the assumption of sexual reproduction. It assumes a Poisson \
distribution of crossovers between centromer and locus A (nmean) and between \
A and B (mmean).\
\>", "Text",
 CellChangeTimes->{{3.611739055728952*^9, 3.611739092803146*^9}, {
   3.611739150361457*^9, 3.611739154206873*^9}, {3.611739268474103*^9, 
   3.611739287663835*^9}, {3.611740113956913*^9, 3.6117401449155903`*^9}, 
   3.612152798752817*^9, {3.659232230662376*^9, 3.65923223124461*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getSexTensor", "[", 
   RowBox[{"nmean_", ",", "mmean_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Rmatrix", ",", "Stensor", ",", "pnext", ",", "gameteFreqs", ",", 
      "gamete", ",", "offspring"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Rmatrix", "=", 
      RowBox[{"getRecombinantMatrixPoisson", "[", 
       RowBox[{"nmean", ",", "mmean"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"gameteFreqs", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"Length", "[", "diploidGenotypes", "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Length", "[", "gameteGenotypes", "]"}], "}"}]}], "]"}]}], 
     ";", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "proportion", " ", "of", " ", "gametes", " ", "produced", " ", "by", 
       " ", "a", " ", "certain", " ", "genotype"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"gamete", "=", 
         RowBox[{"StringJoin", "[", 
          RowBox[{"StringTake", "[", 
           RowBox[{
            RowBox[{
            "metaphaseGenotypes", "\[LeftDoubleBracket]", "j", 
             "\[RightDoubleBracket]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "k", "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"k", "+", "4"}], "}"}]}], "}"}]}], "]"}], "]"}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"gameteFreqs", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"gameteGenotypes", ",", "gamete"}], "]"}], 
            "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], 
          "\[RightDoubleBracket]"}], "+=", 
         RowBox[{
          RowBox[{"Rmatrix", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], "/", "4"}]}], 
        ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "diploidGenotypes", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"Length", "[", "metaphaseGenotypes", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "4"}], "}"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"TableForm", "[", 
         RowBox[{"gameteFreqs", ",", 
          RowBox[{"TableHeadings", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"diploidGenotypes", ",", "gameteGenotypes"}], "}"}]}]}], 
         "]"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Stensor", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"Length", "[", "diploidGenotypes", "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Length", "[", "diploidGenotypes", "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Length", "[", "diploidGenotypes", "]"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"offspring", "=", 
         RowBox[{"StringJoin", "[", 
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{
             RowBox[{
             "gameteGenotypes", "\[LeftDoubleBracket]", "jm", 
              "\[RightDoubleBracket]"}], ",", 
             RowBox[{"{", "1", "}"}]}], "]"}], ",", 
           RowBox[{"StringTake", "[", 
            RowBox[{
             RowBox[{
             "gameteGenotypes", "\[LeftDoubleBracket]", "jp", 
              "\[RightDoubleBracket]"}], ",", 
             RowBox[{"{", "1", "}"}]}], "]"}], ",", 
           RowBox[{"StringTake", "[", 
            RowBox[{
             RowBox[{
             "gameteGenotypes", "\[LeftDoubleBracket]", "jm", 
              "\[RightDoubleBracket]"}], ",", 
             RowBox[{"{", "2", "}"}]}], "]"}], ",", 
           RowBox[{"StringTake", "[", 
            RowBox[{
             RowBox[{
             "gameteGenotypes", "\[LeftDoubleBracket]", "jp", 
              "\[RightDoubleBracket]"}], ",", 
             RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"offspring", "\[Equal]", "\"\<aabB\>\""}], ",", 
          RowBox[{"offspring", "=", "\"\<aaBb\>\""}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"offspring", "\[Equal]", "\"\<AAbB\>\""}], ",", 
          RowBox[{"offspring", "=", "\"\<AABb\>\""}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"offspring", "\[Equal]", "\"\<aAbb\>\""}], ",", 
          RowBox[{"offspring", "=", "\"\<Aabb\>\""}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"offspring", "\[Equal]", "\"\<aABB\>\""}], ",", 
          RowBox[{"offspring", "=", "\"\<AaBB\>\""}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"offspring", "\[Equal]", "\"\<aAbB\>\""}], ",", 
          RowBox[{"offspring", "=", "\"\<AaBb\>\""}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"offspring", "\[Equal]", "\"\<aABb\>\""}], ",", 
          RowBox[{"offspring", "=", "\"\<AabB\>\""}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Stensor", "\[LeftDoubleBracket]", 
          RowBox[{"im", ",", "ip", ",", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"diploidGenotypes", ",", "offspring"}], "]"}], 
            "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], 
          "\[RightDoubleBracket]"}], "+=", 
         RowBox[{
          RowBox[{"gameteFreqs", "\[LeftDoubleBracket]", 
           RowBox[{"im", ",", "jm"}], "\[RightDoubleBracket]"}], "*", 
          RowBox[{"gameteFreqs", "\[LeftDoubleBracket]", 
           RowBox[{"ip", ",", "jp"}], "\[RightDoubleBracket]"}]}]}], ";"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"im", ",", 
         RowBox[{"Length", "[", "diploidGenotypes", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"ip", ",", 
         RowBox[{"Length", "[", "diploidGenotypes", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"jm", ",", 
         RowBox[{"Length", "[", "gameteGenotypes", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"jp", ",", 
         RowBox[{"Length", "[", "gameteGenotypes", "]"}]}], "}"}]}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "Stensor", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6117393780423613`*^9, 3.611739453549219*^9}, {
   3.611739642153386*^9, 3.611739729529303*^9}, {3.611740057218639*^9, 
   3.6117401010553503`*^9}, {3.611740759101858*^9, 3.611740867379983*^9}, {
   3.611740935661721*^9, 3.611740993691679*^9}, {3.611810659394268*^9, 
   3.6118108074611883`*^9}, {3.6118108520701637`*^9, 3.611810854727811*^9}, {
   3.611810904502008*^9, 3.61181092518578*^9}, {3.6118109744961863`*^9, 
   3.611811046099868*^9}, {3.611811110262891*^9, 3.611811132155274*^9}, {
   3.611811163755836*^9, 3.6118112146306477`*^9}, {3.6118112573263283`*^9, 
   3.611811257412654*^9}, {3.611811679355947*^9, 3.611811718088621*^9}, 
   3.6118117670352383`*^9, {3.6118118495781517`*^9, 3.611811859887786*^9}, {
   3.611811942690051*^9, 3.611811971744836*^9}, {3.6118120392511663`*^9, 
   3.611812131271791*^9}, {3.6118121713014*^9, 3.611812369037034*^9}, {
   3.611812401152648*^9, 3.611812425917048*^9}, {3.611812482770344*^9, 
   3.611812497913628*^9}, {3.611812850450828*^9, 3.611812899885425*^9}, {
   3.611812988889757*^9, 3.611812995778018*^9}, {3.611813040763987*^9, 
   3.611813056682893*^9}, {3.611813120084568*^9, 3.611813144032137*^9}, {
   3.612152545019804*^9, 3.6121525572770157`*^9}, {3.61215276001547*^9, 
   3.612152763430995*^9}, 3.612152798754105*^9, {3.612222002335217*^9, 
   3.612222003378005*^9}, {3.6123488684158773`*^9, 3.612348872083239*^9}, {
   3.612348947847224*^9, 3.612349006871983*^9}, {3.612515492484263*^9, 
   3.61251549811649*^9}, {3.612559928220778*^9, 3.612559931129899*^9}, {
   3.6592322361851673`*^9, 3.659232252874127*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Step 4: Natural Selection", "Subsection",
 CellChangeTimes->{{3.597369011270543*^9, 3.597369059542631*^9}, {
   3.605326224899741*^9, 3.605326225252634*^9}, 3.612152798931682*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SelectionStep", "[", 
    RowBox[{"p_", ",", "sA_", ",", "hA_", ",", "sB_", ",", "hB_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "pnext", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pnext", "=", 
       RowBox[{"p", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"1", "+", 
           RowBox[{"hB", " ", "sB"}]}], ",", 
          RowBox[{"1", "+", "sB"}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"hA", " ", "sA"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"hA", " ", "sA"}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"hB", " ", "sB"}]}], ")"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"hA", " ", "sA"}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"hB", " ", "sB"}]}], ")"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"hA", " ", "sA"}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "+", "sB"}], ")"}]}], ",", 
          RowBox[{"(", 
           RowBox[{"1", "+", "sA"}], ")"}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "sA"}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"hB", " ", "sB"}]}], ")"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "sA"}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "+", "sB"}], ")"}]}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pnext", "=", 
       RowBox[{"pnext", "/", 
        RowBox[{"Total", "[", "pnext", "]"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"Return", "[", "pnext", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.597369181764039*^9, 3.597369252568283*^9}, {
   3.5973693172443333`*^9, 3.597369461981175*^9}, {3.597369703802424*^9, 
   3.5973697127699003`*^9}, 3.6121527989324923`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SelectionStepCompetition", "[", 
    RowBox[{"p_", ",", "q_", ",", "sA_", ",", "hA_", ",", "sB_", ",", "hB_"}],
     "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pnext", ",", "qnext"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pnext", "=", 
       RowBox[{"p", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"1", "+", 
           RowBox[{"hB", " ", "sB"}]}], ",", 
          RowBox[{"1", "+", "sB"}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"hA", " ", "sA"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"hA", " ", "sA"}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"hB", " ", "sB"}]}], ")"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"hA", " ", "sA"}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"hB", " ", "sB"}]}], ")"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"hA", " ", "sA"}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "+", "sB"}], ")"}]}], ",", 
          RowBox[{"(", 
           RowBox[{"1", "+", "sA"}], ")"}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "sA"}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"hB", " ", "sB"}]}], ")"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "sA"}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "+", "sB"}], ")"}]}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"qnext", "=", 
       RowBox[{"q", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"1", "+", 
           RowBox[{"hB", " ", "sB"}]}], ",", 
          RowBox[{"1", "+", "sB"}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"hA", " ", "sA"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"hA", " ", "sA"}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"hB", " ", "sB"}]}], ")"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"hA", " ", "sA"}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"hB", " ", "sB"}]}], ")"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"hA", " ", "sA"}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "+", "sB"}], ")"}]}], ",", 
          RowBox[{"(", 
           RowBox[{"1", "+", "sA"}], ")"}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "sA"}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"hB", " ", "sB"}]}], ")"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "sA"}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "+", "sB"}], ")"}]}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pnext", ",", "qnext"}], "}"}], "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"pnext", ",", "qnext"}], "}"}], "/", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"pnext", ",", "qnext"}], "}"}], ",", "2"}], "]"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"pnext", ",", "qnext"}], "}"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.682427863539227*^9, 3.682427933094533*^9}, {
  3.682427966522735*^9, 3.6824279697436447`*^9}, {3.6824293809803267`*^9, 
  3.682429385779173*^9}, {3.6824800399593887`*^9, 3.682480051224765*^9}, {
  3.682480151243075*^9, 3.682480151685246*^9}, {3.682480234251446*^9, 
  3.6824802556419086`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Overall recursion equations", "Subsection",
 CellChangeTimes->{{3.5972924463510437`*^9, 3.597292468774962*^9}, {
   3.597292568812662*^9, 3.5972925761565247`*^9}, {3.597292639952731*^9, 
   3.597292642292636*^9}, {3.59729279438345*^9, 3.597292795926712*^9}, {
   3.597312756077876*^9, 3.59731277813186*^9}, {3.597313055043427*^9, 
   3.597313073287698*^9}, 3.597313118238635*^9, {3.597369061598514*^9, 
   3.5973690651643057`*^9}, {3.6117386462595873`*^9, 3.611738648525612*^9}, {
   3.611738699368606*^9, 3.611738701911231*^9}, 3.612152798933556*^9}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Recursion", "[", 
     RowBox[{
     "p_", ",", "AutomixisMatrix_", ",", "muA_", ",", "muB_", ",", "sA_", ",",
       "hA_", ",", "sB_", ",", "hB_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "pnext", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pnext", "=", 
        RowBox[{"SelectionStep", "[", 
         RowBox[{"p", ",", "sA", ",", "hA", ",", "sB", ",", "hB"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"pnext", "=", 
        RowBox[{"MutationStep", "[", 
         RowBox[{"pnext", ",", "muA", ",", "muB"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"pnext", "=", 
        RowBox[{"pnext", ".", "AutomixisMatrix"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "pnext", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.597313126868946*^9, 3.597313184262394*^9}, {
   3.5973133277130213`*^9, 3.59731335637512*^9}, {3.5973138628835773`*^9, 
   3.5973138762107286`*^9}, {3.597363286135552*^9, 3.597363303307425*^9}, {
   3.5973675412524853`*^9, 3.597367547739831*^9}, 3.597367597450705*^9, {
   3.597367802066133*^9, 3.597367807575776*^9}, {3.597368121221884*^9, 
   3.5973681249227858`*^9}, {3.5973692579924593`*^9, 3.597369291758704*^9}, {
   3.5973694671104794`*^9, 3.597369467794283*^9}, {3.597379083052411*^9, 
   3.59737911705114*^9}, {3.6033496458107567`*^9, 3.603349649620989*^9}, {
   3.605455366644306*^9, 3.605455366746647*^9}, {3.605455767954233*^9, 
   3.6054557870753317`*^9}, 3.6121527989416037`*^9, {3.670112263668682*^9, 
   3.670112267835697*^9}, {3.670645235811859*^9, 3.670645275134066*^9}, {
   3.670646099182156*^9, 3.670646115272382*^9}, {3.670646238683408*^9, 
   3.670646239339254*^9}, {3.670647828469887*^9, 3.67064782948472*^9}, {
   3.670648468321342*^9, 3.670648479073236*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RecursionSexual", "[", 
    RowBox[{
    "p_", ",", "SexTensor_", ",", "muA_", ",", "muB_", ",", "sA_", ",", "hA_",
      ",", "sB_", ",", "hB_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "pnext", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pnext", "=", 
       RowBox[{"SelectionStep", "[", 
        RowBox[{"p", ",", "sA", ",", "hA", ",", "sB", ",", "hB"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"pnext", "=", 
       RowBox[{"MutationStep", "[", 
        RowBox[{"pnext", ",", "muA", ",", "muB"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pnext", "=", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"pnext", ".", "SexTensor"}], "]"}], ".", "pnext"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "pnext", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.611738728389419*^9, 3.611738735314431*^9}, {
   3.6117389152569933`*^9, 3.611738934312303*^9}, {3.6117392484614697`*^9, 
   3.611739256484563*^9}, 3.6121527989429197`*^9, {3.612214760131014*^9, 
   3.61221477989424*^9}, {3.612218697767343*^9, 3.6122187025502996`*^9}, {
   3.67011227152335*^9, 3.670112274970975*^9}, {3.670647839908742*^9, 
   3.670647843188733*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"RecursionFiniteN", "[", 
     RowBox[{
     "p_", ",", "AutomixisMatrix_", ",", "muA_", ",", "muB_", ",", "sA_", ",",
       "hA_", ",", "sB_", ",", "hB_", ",", "NN_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "pnext", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pnext", "=", 
        RowBox[{"SelectionStep", "[", 
         RowBox[{"p", ",", "sA", ",", "hA", ",", "sB", ",", "hB"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"pnext", "=", 
        RowBox[{"MutationStep", "[", 
         RowBox[{"pnext", ",", "muA", ",", "muB"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"pnext", "=", 
        RowBox[{"pnext", ".", "AutomixisMatrix"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"pnext", "=", 
        RowBox[{
         RowBox[{"RandomVariate", "[", 
          RowBox[{"MultinomialDistribution", "[", 
           RowBox[{"NN", ",", "pnext"}], "]"}], "]"}], "/", "NN"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "pnext", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.597313126868946*^9, 3.597313184262394*^9}, {
   3.5973133277130213`*^9, 3.59731335637512*^9}, {3.5973138628835773`*^9, 
   3.5973138762107286`*^9}, {3.597363286135552*^9, 3.597363303307425*^9}, {
   3.5973675412524853`*^9, 3.597367547739831*^9}, 3.597367597450705*^9, {
   3.597367802066133*^9, 3.597367807575776*^9}, {3.597368121221884*^9, 
   3.5973681249227858`*^9}, {3.5973692579924593`*^9, 3.597369291758704*^9}, {
   3.5973694671104794`*^9, 3.597369467794283*^9}, {3.597379083052411*^9, 
   3.59737911705114*^9}, {3.6033496458107567`*^9, 3.603349649620989*^9}, {
   3.605455366644306*^9, 3.605455366746647*^9}, {3.605455767954233*^9, 
   3.6054557870753317`*^9}, {3.6117338654011507`*^9, 
   3.6117338683533287`*^9}, {3.61173395403167*^9, 3.6117339809918137`*^9}, {
   3.611734077906283*^9, 3.611734142452819*^9}, {3.611735035547653*^9, 
   3.6117350947506123`*^9}, {3.611735307816412*^9, 3.6117353079756413`*^9}, 
   3.612152798970343*^9, {3.670112281332924*^9, 3.6701122844031*^9}, {
   3.670647847198205*^9, 3.670647849910142*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RecursionSexualFiniteN", "[", 
    RowBox[{
    "p_", ",", "SexTensor_", ",", "muA_", ",", "muB_", ",", "sA_", ",", "hA_",
      ",", "sB_", ",", "hB_", ",", "NN_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "pnext", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pnext", "=", 
       RowBox[{"SelectionStep", "[", 
        RowBox[{"p", ",", "sA", ",", "hA", ",", "sB", ",", "hB"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"pnext", "=", 
       RowBox[{"MutationStep", "[", 
        RowBox[{"pnext", ",", "muA", ",", "muB"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pnext", "=", 
       RowBox[{"pnext", "=", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"pnext", ".", "SexTensor"}], "]"}], ".", "pnext"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"pnext", "=", 
       RowBox[{
        RowBox[{"RandomVariate", "[", 
         RowBox[{"MultinomialDistribution", "[", 
          RowBox[{"NN", ",", "pnext"}], "]"}], "]"}], "/", "NN"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "pnext", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.611738949583931*^9, 3.611738969105853*^9}, 
   3.612152798981605*^9, {3.612214846215415*^9, 3.612214855139263*^9}, 
   3.612218708880632*^9, {3.6701122894447412`*^9, 3.670112292417878*^9}, {
   3.670647856829071*^9, 3.6706478598141212`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Simulating and analysing the results", "Section",
 CellChangeTimes->{{3.6117386661383133`*^9, 3.6117386780775623`*^9}, 
   3.612152798982675*^9, {3.612224768572625*^9, 3.612224776195738*^9}}],

Cell[CellGroupData[{

Cell["Simulation routines", "Subsection",
 CellChangeTimes->{{3.612224780997974*^9, 3.612224792855576*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Simulate", "[", 
    RowBox[{
    "p0_", ",", "gens_", ",", "meannCA_", ",", "meannAB_", ",", 
     "AutomixisMode_", ",", "muA_", ",", "muB_", ",", "sA_", ",", "hA_", ",", 
     "sB_", ",", "hB_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ps", ",", "AutomixisMatrix", ",", "SexTensor", ",", "t"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ps", "=", 
       RowBox[{"{", "p0", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"AutomixisMode", "\[NotEqual]", "\"\<Sex\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AutomixisMatrix", "=", 
          RowBox[{"N", "[", 
           RowBox[{"getAutomixisMatrixPoisson", "[", 
            RowBox[{"meannCA", ",", "meannAB", ",", "AutomixisMode"}], "]"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"t", "=", "1"}], ",", 
           RowBox[{"t", "\[LessEqual]", "gens"}], ",", 
           RowBox[{"t", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ps", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"ps", ",", 
               RowBox[{"Recursion", "[", 
                RowBox[{
                 RowBox[{
                 "ps", "\[LeftDoubleBracket]", "t", "\[RightDoubleBracket]"}],
                  ",", "AutomixisMatrix", ",", "muA", ",", "muB", ",", "sA", 
                 ",", "hA", ",", "sB", ",", "hB"}], "]"}]}], "]"}]}], ";"}]}],
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"AutomixisMode", "\[Equal]", "\"\<Sex\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"SexTensor", "=", 
          RowBox[{"N", "[", 
           RowBox[{"getSexTensor", "[", 
            RowBox[{"meannCA", ",", "meannAB"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"t", "=", "1"}], ",", 
           RowBox[{"t", "\[LessEqual]", "gens"}], ",", 
           RowBox[{"t", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ps", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"ps", ",", 
               RowBox[{"RecursionSexual", "[", 
                RowBox[{
                 RowBox[{
                 "ps", "\[LeftDoubleBracket]", "t", "\[RightDoubleBracket]"}],
                  ",", "SexTensor", ",", "muA", ",", "muB", ",", "sA", ",", 
                 "hA", ",", "sB", ",", "hB"}], "]"}]}], "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "ps", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.597367490889332*^9, 3.597367532380535*^9}, {
   3.597367577787035*^9, 3.597367729577723*^9}, {3.597367765695009*^9, 
   3.597367768659741*^9}, {3.5973678156673193`*^9, 3.5973678864925528`*^9}, {
   3.597368507160491*^9, 3.597368517727912*^9}, {3.597368586370265*^9, 
   3.597368588016955*^9}, {3.5973694776185303`*^9, 3.597369497760585*^9}, 
   3.597379133383503*^9, {3.597379226588132*^9, 3.5973792298029337`*^9}, {
   3.6054151577920647`*^9, 3.605415188674139*^9}, 3.612152799003108*^9, {
   3.612224929499877*^9, 3.612225093379157*^9}, {3.612559410829063*^9, 
   3.6125594206747637`*^9}, {3.67028364422232*^9, 3.670283645117571*^9}, {
   3.670646051095284*^9, 3.6706460682873497`*^9}, {3.6706461213936*^9, 
   3.6706461236373653`*^9}, {3.6706484885854*^9, 3.6706484887569923`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SimulateFiniteN", "[", 
    RowBox[{
    "p0_", ",", "gens_", ",", "meannCA_", ",", "meannAB_", ",", 
     "AutomixisMode_", ",", "muA_", ",", "muB_", ",", "sA_", ",", "hA_", ",", 
     "sB_", ",", "hB_", ",", "NN_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ps", ",", "AutomixisMatrix", ",", "SexTensor", ",", "t"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ps", "=", 
       RowBox[{"{", "p0", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"AutomixisMode", "\[NotEqual]", "\"\<Sex\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AutomixisMatrix", "=", 
          RowBox[{"N", "[", 
           RowBox[{"getAutomixisMatrixPoisson", "[", 
            RowBox[{"meannCA", ",", "meannAB", ",", "AutomixisMode"}], "]"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"t", "=", "1"}], ",", 
           RowBox[{"t", "\[LessEqual]", "gens"}], ",", 
           RowBox[{"t", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ps", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"ps", ",", 
               RowBox[{"RecursionFiniteN", "[", 
                RowBox[{
                 RowBox[{
                 "ps", "\[LeftDoubleBracket]", "t", "\[RightDoubleBracket]"}],
                  ",", "AutomixisMatrix", ",", "muA", ",", "muB", ",", "sA", 
                 ",", "hA", ",", "sB", ",", "hB", ",", "NN"}], "]"}]}], 
              "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"AutomixisMode", "\[Equal]", "\"\<Sex\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"SexTensor", "=", 
          RowBox[{"N", "[", 
           RowBox[{"getSexTensor", "[", 
            RowBox[{"meannCA", ",", "meannAB"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"t", "=", "1"}], ",", 
           RowBox[{"t", "\[LessEqual]", "gens"}], ",", 
           RowBox[{"t", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ps", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"ps", ",", 
               RowBox[{"RecursionSexualFiniteN", "[", 
                RowBox[{
                 RowBox[{
                 "ps", "\[LeftDoubleBracket]", "t", "\[RightDoubleBracket]"}],
                  ",", "SexTensor", ",", "muA", ",", "muB", ",", "sA", ",", 
                 "hA", ",", "sB", ",", "hB", ",", "NN"}], "]"}]}], "]"}]}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "ps", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.612226085205061*^9, 3.6122261078129377`*^9}, {
  3.612559424191008*^9, 3.61255943542581*^9}, {3.670283648941991*^9, 
  3.6702836498776903`*^9}}],

Cell["\<\
The following function simulates competition between two subpopulation \
evolving with different reproduction modes and/or crossover rates:\
\>", "Text",
 CellChangeTimes->{{3.682428859706181*^9, 3.682428894315783*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SimulateCompetition", "[", 
    RowBox[{
    "p0_", ",", "q0_", ",", "gens_", ",", "meannCA1_", ",", "meannAB1_", ",", 
     "meannCA2_", ",", "meannAB2_", ",", "AutomixisMode1_", ",", 
     "AutomixisMode2_", ",", "muA_", ",", "muB_", ",", "sA_", ",", "hA_", ",",
      "sB_", ",", "hB_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ps", ",", "qs", ",", "pnext", ",", "qnext", ",", "ptot", ",", "qtot", 
       ",", "AutomixisMatrix1", ",", "AutomixisMatrix2", ",", "SexTensor1", 
       ",", "SexTensor2", ",", "t"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ps", "=", 
       RowBox[{"{", "p0", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"qs", "=", 
       RowBox[{"{", "q0", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"AutomixisMode1", "\[NotEqual]", "\"\<Sex\>\""}], ",", 
        RowBox[{"AutomixisMatrix1", "=", 
         RowBox[{"N", "[", 
          RowBox[{"getAutomixisMatrixPoisson", "[", 
           RowBox[{"meannCA1", ",", "meannAB1", ",", "AutomixisMode1"}], 
           "]"}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"AutomixisMode2", "\[NotEqual]", "\"\<Sex\>\""}], ",", 
        RowBox[{"AutomixisMatrix2", "=", 
         RowBox[{"N", "[", 
          RowBox[{"getAutomixisMatrixPoisson", "[", 
           RowBox[{"meannCA2", ",", "meannAB2", ",", "AutomixisMode2"}], 
           "]"}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"AutomixisMode1", "\[Equal]", "\"\<Sex\>\""}], ",", 
        RowBox[{"SexTensor1", "=", 
         RowBox[{"N", "[", 
          RowBox[{"getSexTensor", "[", 
           RowBox[{"meannCA1", ",", "meannAB1"}], "]"}], "]"}]}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"AutomixisMode2", "\[Equal]", "\"\<Sex\>\""}], ",", 
        RowBox[{"SexTensor2", "=", 
         RowBox[{"N", "[", 
          RowBox[{"getSexTensor", "[", 
           RowBox[{"meannCA2", ",", "meannAB2"}], "]"}], "]"}]}]}], "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"t", "=", "1"}], ",", 
        RowBox[{"t", "\[LessEqual]", "gens"}], ",", 
        RowBox[{"t", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"pnext", ",", "qnext"}], "}"}], "=", 
          RowBox[{"SelectionStepCompetition", "[", 
           RowBox[{
            RowBox[{
            "ps", "\[LeftDoubleBracket]", "t", "\[RightDoubleBracket]"}], ",", 
            RowBox[{
            "qs", "\[LeftDoubleBracket]", "t", "\[RightDoubleBracket]"}], ",",
             "sA", ",", "hA", ",", "sB", ",", "hB"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ptot", "=", 
          RowBox[{"Total", "[", "pnext", "]"}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"qtot", "=", 
          RowBox[{"Total", "[", "qnext", "]"}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"pnext", "=", 
          RowBox[{"pnext", "/", "ptot"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"qnext", "=", 
          RowBox[{"qnext", "/", "qtot"}]}], ";", " ", 
         RowBox[{"(*", " ", 
          RowBox[{
          "temporarily", " ", "removing", " ", "differences", " ", "due", " ",
            "to", " ", "selection"}], " ", "*)"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"pnext", "=", 
          RowBox[{"MutationStep", "[", 
           RowBox[{"pnext", ",", "muA", ",", "muB"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"qnext", "=", 
          RowBox[{"MutationStep", "[", 
           RowBox[{"qnext", ",", "muA", ",", "muB"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"AutomixisMode1", "\[Equal]", "\"\<Sex\>\""}], ",", 
           RowBox[{"pnext", "=", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"pnext", ".", "SexTensor1"}], "]"}], ".", "pnext"}]}], 
           ",", 
           RowBox[{"pnext", "=", 
            RowBox[{"pnext", ".", "AutomixisMatrix1"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"AutomixisMode2", "\[Equal]", "\"\<Sex\>\""}], ",", 
           RowBox[{"qnext", "=", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"qnext", ".", "SexTensor2"}], "]"}], ".", "qnext"}]}], 
           ",", 
           RowBox[{"qnext", "=", 
            RowBox[{"qnext", ".", "AutomixisMatrix2"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"pnext", "=", 
          RowBox[{"pnext", "*", "ptot"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"qnext", "=", 
          RowBox[{"qnext", "*", "qtot"}]}], ";", " ", 
         RowBox[{"(*", " ", 
          RowBox[{"re", "-", 
           RowBox[{
           "applying", " ", "differences", " ", "due", " ", "to", " ", 
            "selection"}]}], " ", "*)"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"ps", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"ps", ",", "pnext"}], "]"}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"qs", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"qs", ",", "qnext"}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"ps", ",", "qs"}], "}"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.682427466823534*^9, 3.682427618396783*^9}, {
   3.6824277858511477`*^9, 3.682427791202098*^9}, 3.6824280199121723`*^9, {
   3.6824280691478243`*^9, 3.6824281215901203`*^9}, {3.682428155264777*^9, 
   3.6824282663801823`*^9}, {3.682428297206903*^9, 3.6824283056364803`*^9}, {
   3.682428347693749*^9, 3.682428794376257*^9}, 3.682428857041926*^9, {
   3.682429299349669*^9, 3.682429308470503*^9}, {3.6824294048719387`*^9, 
   3.682429406357852*^9}, {3.6824794898748713`*^9, 3.682479532927247*^9}, {
   3.68247992591599*^9, 3.6824799331709223`*^9}, {3.6824803015454597`*^9, 
   3.682480303814189*^9}, {3.682480424174653*^9, 3.682480430739661*^9}}],

Cell["Trying to avoid kernel crashes:", "Text",
 CellChangeTimes->{{3.595835870753789*^9, 3.595835891971057*^9}, {
  3.607114143216391*^9, 3.60711414798313*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearMemory", ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{
      RowBox[{"Unprotect", "[", 
       RowBox[{"In", ",", "Out"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Clear", "[", 
       RowBox[{"In", ",", "Out"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Protect", "[", 
       RowBox[{"In", ",", "Out"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"ClearSystemCache", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.607114131962352*^9, 3.607114131966138*^9}, 
   3.612817503753914*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Some simple population statistics", "Subsection",
 CellChangeTimes->{{3.612224803538183*^9, 3.61222481585609*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"LD", "[", "p_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", 
          RowBox[{
          "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "+", 
         
         RowBox[{"p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         "+", 
         RowBox[{"p", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
         "+", 
         RowBox[{
         "p", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], 
         "+", 
         RowBox[{"p", "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}], 
         "+", 
         RowBox[{"p", "\[LeftDoubleBracket]", "9", "\[RightDoubleBracket]"}], 
         "+", 
         RowBox[{"2", 
          RowBox[{
          "p", "\[LeftDoubleBracket]", "10", "\[RightDoubleBracket]"}]}]}], 
        ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         "+", 
         RowBox[{"2", 
          RowBox[{
          "p", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], "+", 
         
         RowBox[{"p", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], 
         "+", 
         RowBox[{
         "p", "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
         "+", 
         RowBox[{"p", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], 
         "+", 
         RowBox[{"2", 
          RowBox[{
          "p", "\[LeftDoubleBracket]", "8", "\[RightDoubleBracket]"}]}], "+", 
         
         RowBox[{
         "p", "\[LeftDoubleBracket]", "9", "\[RightDoubleBracket]"}]}], 
        ")"}]}]}], ")"}], "/", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"freqA", "[", "p_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"p", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
       "+", 
       RowBox[{"p", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], 
       "+", 
       RowBox[{"p", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], 
       "+", 
       RowBox[{"p", "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}]}], 
      ")"}], "/", "2"}], "+", 
    RowBox[{"p", "\[LeftDoubleBracket]", "8", "\[RightDoubleBracket]"}], "+", 
    
    RowBox[{"p", "\[LeftDoubleBracket]", "9", "\[RightDoubleBracket]"}], "+", 
    
    RowBox[{"p", "\[LeftDoubleBracket]", "10", "\[RightDoubleBracket]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"freqB", "[", "p_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       "+", 
       RowBox[{"p", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], 
       "+", 
       RowBox[{"p", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], 
       "+", 
       RowBox[{"p", "\[LeftDoubleBracket]", "9", "\[RightDoubleBracket]"}]}], 
      ")"}], "/", "2"}], "+", 
    RowBox[{"p", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "+", 
    
    RowBox[{"p", "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}], "+", 
    
    RowBox[{"p", "\[LeftDoubleBracket]", "10", "\[RightDoubleBracket]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HWDA", "[", "p_", "]"}], ":=", 
    RowBox[{
     RowBox[{"2", 
      RowBox[{"freqA", "[", "p", "]"}], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"freqA", "[", "p", "]"}]}], ")"}]}], "-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"p", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
       "+", 
       RowBox[{"p", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], 
       "+", 
       RowBox[{"p", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], 
       "+", 
       RowBox[{"p", "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}]}], 
      ")"}]}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"deviation", " ", "from", " ", "Hardy"}], "-", 
    RowBox[{
    "Weinberg", " ", "equilibrium", " ", "at", " ", "locus", " ", "A"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HWDB", "[", "p_", "]"}], ":=", 
    RowBox[{
     RowBox[{"2", 
      RowBox[{"freqB", "[", "p", "]"}], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"freqB", "[", "p", "]"}]}], ")"}]}], "-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       "+", 
       RowBox[{"p", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], 
       "+", 
       RowBox[{"p", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], 
       "+", 
       RowBox[{"p", "\[LeftDoubleBracket]", "9", "\[RightDoubleBracket]"}]}], 
      ")"}]}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"deviation", " ", "from", " ", "Hardy"}], "-", 
    RowBox[{
    "Weinberg", " ", "equilibrium", " ", "at", " ", "locus", " ", "B"}]}], 
   " ", "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6122232112267523`*^9, 3.612223348160117*^9}, {
  3.612223459275567*^9, 3.6122235305960703`*^9}, {3.612223703143697*^9, 
  3.612223769705387*^9}, {3.6122238391629333`*^9, 3.612224026892276*^9}, {
  3.612224058537402*^9, 3.612224132532127*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getMeanFitness", "[", 
    RowBox[{"p_", ",", "sA_", ",", "hA_", ",", "sB_", ",", "hB_"}], "]"}], ":=", 
   RowBox[{"p", ".", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"1", "+", 
       RowBox[{"hB", " ", "sB"}]}], ",", 
      RowBox[{"1", "+", "sB"}], ",", 
      RowBox[{"1", "+", 
       RowBox[{"hA", " ", "sA"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"hA", " ", "sA"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"hB", " ", "sB"}]}], ")"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"hA", " ", "sA"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"hB", " ", "sB"}]}], ")"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"hA", " ", "sA"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "+", "sB"}], ")"}]}], ",", 
      RowBox[{"(", 
       RowBox[{"1", "+", "sA"}], ")"}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "sA"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"hB", " ", "sB"}]}], ")"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "sA"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "+", "sB"}], ")"}]}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6123417050135117`*^9, 3.6123417524104433`*^9}, {
  3.612343431241303*^9, 3.612343439308874*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Functions for simulating neutral evolution", "Subsection",
 CellChangeTimes->{{3.642831595596641*^9, 3.642831604328415*^9}, {
  3.668971959284451*^9, 3.66897196688341*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sampleStates", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<AA AA\>\"", ",", "\"\<AA AB\>\"", ",", "\"\<AA BC\>\"", ",", 
     "\"\<AA BB\>\"", ",", "\"\<AB AB\>\"", ",", "\"\<AB AC\>\"", ",", 
     "\"\<AB CD\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SingleGeneration", "[", 
    RowBox[{"pop_", ",", "\[Gamma]_", ",", "\[Mu]_", ",", "NN_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "newpop"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newpop", "=", "pop"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "mutation", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "NN"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"RandomReal", "[", "]"}], "<", "\[Mu]"}], ",", 
           RowBox[{
            RowBox[{"newpop", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
            RowBox[{"RandomInteger", "[", 
             RowBox[{"{", 
              RowBox[{"1", ",", "maxAlleles"}], "}"}], "]"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"RandomReal", "[", "]"}], "<", "\[Mu]"}], ",", 
           RowBox[{
            RowBox[{"newpop", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], "=", 
            RowBox[{"RandomInteger", "[", 
             RowBox[{"{", 
              RowBox[{"1", ",", "maxAlleles"}], "}"}], "]"}]}]}], "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "automixis", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "NN"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"newpop", "\[LeftDoubleBracket]", 
              RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], 
             "\[NotEqual]", 
             RowBox[{"newpop", "\[LeftDoubleBracket]", 
              RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}]}], " ", "&&",
             " ", 
            RowBox[{
             RowBox[{"RandomReal", "[", "]"}], "<", "\[Gamma]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"RandomInteger", "[", "]"}], "\[Equal]", "0"}], ",", 
             RowBox[{
              RowBox[{"newpop", "\[LeftDoubleBracket]", 
               RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
              RowBox[{"newpop", "\[LeftDoubleBracket]", 
               RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}]}], ",", 
             RowBox[{
              RowBox[{"newpop", "\[LeftDoubleBracket]", 
               RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], "=", 
              RowBox[{"newpop", "\[LeftDoubleBracket]", 
               RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}]}]}], 
            "]"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "drift", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"newpop", "=", 
       RowBox[{"RandomChoice", "[", 
        RowBox[{"newpop", ",", "NN"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "newpop", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SimulatePop", "[", 
    RowBox[{
    "inipop_", ",", "\[Gamma]_", ",", "\[Mu]_", ",", "NN_", ",", "tmax_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pops", ",", "t"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pops", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"tmax", "+", "1"}], "}"}], ",", 
         RowBox[{"{", "NN", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pops", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
        "=", "inipop"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"t", "=", "1"}], ",", 
        RowBox[{"t", "\[LessEqual]", "tmax"}], ",", 
        RowBox[{"t", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"pops", "\[LeftDoubleBracket]", 
           RowBox[{"t", "+", "1"}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{"SingleGeneration", "[", 
           RowBox[{
            RowBox[{
            "pops", "\[LeftDoubleBracket]", "t", "\[RightDoubleBracket]"}], 
            ",", "\[Gamma]", ",", "\[Mu]", ",", "NN"}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "pops", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CalculatePs", "[", "pop_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "j", ",", "ps", ",", "NN"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"NN", "=", 
       RowBox[{"Length", "[", "pop", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ps", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", "7", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "NN"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "<", "i"}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Switch", "[", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"Union", "[", 
                RowBox[{
                 RowBox[{
                 "pop", "\[LeftDoubleBracket]", "i", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "pop", "\[LeftDoubleBracket]", "j", 
                  "\[RightDoubleBracket]"}]}], "]"}], "]"}], ",", 
              "\[IndentingNewLine]", "1", ",", 
              RowBox[{
               RowBox[{
               "ps", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "+=",
                "1"}], ",", "\[IndentingNewLine]", "2", ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"pop", "\[LeftDoubleBracket]", 
                   RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], "==", 
                  RowBox[{"pop", "\[LeftDoubleBracket]", 
                   RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}]}], "||", 
                 RowBox[{
                  RowBox[{"pop", "\[LeftDoubleBracket]", 
                   RowBox[{"j", ",", "1"}], "\[RightDoubleBracket]"}], "==", 
                  RowBox[{"pop", "\[LeftDoubleBracket]", 
                   RowBox[{"j", ",", "2"}], "\[RightDoubleBracket]"}]}]}], 
                ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"pop", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], "==", 
                    
                    RowBox[{"pop", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}]}], "&&", 
                   RowBox[{
                    RowBox[{"pop", "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", "1"}], "\[RightDoubleBracket]"}], "==", 
                    
                    RowBox[{"pop", "\[LeftDoubleBracket]", 
                    RowBox[{"j", ",", "2"}], "\[RightDoubleBracket]"}]}]}], 
                  ",", 
                  RowBox[{
                   RowBox[{
                   "ps", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}], "+=", "1"}], ",", 
                  RowBox[{
                   RowBox[{
                   "ps", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+=", "1"}]}], "]"}], ",", 
                RowBox[{
                 RowBox[{
                 "ps", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}],
                  "+=", "1"}]}], "]"}], ",", "\[IndentingNewLine]", "3", ",", 
              
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"pop", "\[LeftDoubleBracket]", 
                   RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], "==", 
                  RowBox[{"pop", "\[LeftDoubleBracket]", 
                   RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}]}], "||", 
                 RowBox[{
                  RowBox[{"pop", "\[LeftDoubleBracket]", 
                   RowBox[{"j", ",", "1"}], "\[RightDoubleBracket]"}], "==", 
                  RowBox[{"pop", "\[LeftDoubleBracket]", 
                   RowBox[{"j", ",", "2"}], "\[RightDoubleBracket]"}]}]}], 
                ",", 
                RowBox[{
                 RowBox[{
                 "ps", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}],
                  "+=", "1"}], ",", 
                RowBox[{
                 RowBox[{
                 "ps", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}],
                  "+=", "1"}]}], "]"}], ",", "\[IndentingNewLine]", "4", ",", 
              
              RowBox[{
               RowBox[{
               "ps", "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}], "+=",
                "1"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"ps", "=", 
       RowBox[{"2", 
        RowBox[{"ps", "/", 
         RowBox[{"(", 
          RowBox[{"NN", "*", 
           RowBox[{"(", 
            RowBox[{"NN", "-", "1"}], ")"}]}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "ps", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CalculateHetI", "[", "pop_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "HI", ",", "NN"}], "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"NN", "=", 
       RowBox[{"Length", "[", "pop", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"HI", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "NN"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"pop", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], "!=", 
           RowBox[{"pop", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}]}], ",", 
          RowBox[{"HI", "+=", "1"}]}], "]"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"HI", "=", 
       RowBox[{"HI", "/", "NN"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "HI", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CalculateHetT", "[", "pop_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i1", ",", "i2", ",", "j1", ",", "j2", ",", "HT", ",", "NN"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"NN", "=", 
       RowBox[{"Length", "[", "pop", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"HT", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"i1", "\[NotEqual]", "i2"}], " ", "||", " ", 
           RowBox[{"j1", "\[NotEqual]", "j2"}]}], ",", "\[IndentingNewLine]", 
          
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"pop", "\[LeftDoubleBracket]", 
              RowBox[{"i1", ",", "j1"}], "\[RightDoubleBracket]"}], "!=", 
             RowBox[{"pop", "\[LeftDoubleBracket]", 
              RowBox[{"i2", ",", "j2"}], "\[RightDoubleBracket]"}]}], ",", 
            RowBox[{"HT", "+=", "1"}]}], "]"}]}], "\[IndentingNewLine]", 
         "]"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i1", ",", "NN"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i2", ",", "NN"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j2", ",", "2"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"HT", "=", 
       RowBox[{"HT", "/", 
        RowBox[{"(", 
         RowBox[{"2", "NN", "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "NN"}], "-", "1"}], ")"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "HT", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.642810735120697*^9, 3.642810934022811*^9}, {
   3.642811016058487*^9, 3.642811284760603*^9}, {3.642811348454237*^9, 
   3.642811470258176*^9}, 3.642811502126898*^9, {3.642811723855858*^9, 
   3.642811746701581*^9}, {3.642811852891205*^9, 3.642811861531372*^9}, {
   3.642812015159465*^9, 3.642812029815688*^9}, {3.6428120632692966`*^9, 
   3.6428121091054363`*^9}, {3.642812150768721*^9, 3.642812182588151*^9}, {
   3.642812218468978*^9, 3.6428124624030037`*^9}, 3.6428125455646353`*^9, {
   3.6428133476671543`*^9, 3.6428135133341503`*^9}, {3.642813566845808*^9, 
   3.64281367892878*^9}, {3.642813722415415*^9, 3.642813929072485*^9}, {
   3.642818566122857*^9, 3.642818568553412*^9}, {3.642818624682641*^9, 
   3.642818702578196*^9}, {3.642819029672357*^9, 3.642819043277442*^9}, {
   3.642819105995455*^9, 3.642819225836113*^9}, {3.642819266689827*^9, 
   3.642819412189316*^9}, 3.6428194463770723`*^9, {3.642819477688259*^9, 
   3.642819502810206*^9}, {3.642819538670116*^9, 3.642819617317885*^9}, {
   3.642819795478032*^9, 3.6428197998918858`*^9}, {3.6428200747625237`*^9, 
   3.642820074872892*^9}, {3.6428203009755907`*^9, 3.642820355482092*^9}, {
   3.642833023474484*^9, 3.6428331392994213`*^9}, {3.643427487746385*^9, 
   3.643427488780047*^9}, {3.6568980534639807`*^9, 3.6568981372390223`*^9}, {
   3.656898252772626*^9, 3.656898396161887*^9}, {3.656898433164176*^9, 
   3.6568985635274763`*^9}, {3.656898677747436*^9, 3.6568986892097473`*^9}, {
   3.656898894433749*^9, 3.6568989576820307`*^9}, {3.656899044620611*^9, 
   3.656899044816003*^9}, {3.656899077959611*^9, 3.656899079140725*^9}, {
   3.656899674501711*^9, 3.6568996758125963`*^9}, {3.6568999250637712`*^9, 
   3.656899949878289*^9}, {3.6569792001615*^9, 3.656979203933486*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EstimatePs", "[", 
    RowBox[{"pop_", ",", "samplesize_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"NN", ",", "i", ",", "j", ",", "ps"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"NN", "=", 
       RowBox[{"Length", "[", "pop", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ps", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", "7", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", "j"}], "}"}], "=", 
          RowBox[{"RandomChoice", "[", 
           RowBox[{
            RowBox[{"Range", "[", "NN", "]"}], ",", "2"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Switch", "[", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"Union", "[", 
             RowBox[{
              RowBox[{
              "pop", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "pop", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]}],
              "]"}], "]"}], ",", "\[IndentingNewLine]", "1", ",", 
           RowBox[{
            RowBox[{
            "ps", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "+=",
             "1"}], ",", "\[IndentingNewLine]", "2", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"pop", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], "==", 
               RowBox[{"pop", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}]}], "||", 
              RowBox[{
               RowBox[{"pop", "\[LeftDoubleBracket]", 
                RowBox[{"j", ",", "1"}], "\[RightDoubleBracket]"}], "==", 
               RowBox[{"pop", "\[LeftDoubleBracket]", 
                RowBox[{"j", ",", "2"}], "\[RightDoubleBracket]"}]}]}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"pop", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], "==", 
                 RowBox[{"pop", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}]}], "&&", 
                
                RowBox[{
                 RowBox[{"pop", "\[LeftDoubleBracket]", 
                  RowBox[{"j", ",", "1"}], "\[RightDoubleBracket]"}], "==", 
                 RowBox[{"pop", "\[LeftDoubleBracket]", 
                  RowBox[{"j", ",", "2"}], "\[RightDoubleBracket]"}]}]}], ",", 
               RowBox[{
                RowBox[{
                "ps", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
                "+=", "1"}], ",", 
               RowBox[{
                RowBox[{
                "ps", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                "+=", "1"}]}], "]"}], ",", 
             RowBox[{
              RowBox[{
              "ps", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], "+=",
               "1"}]}], "]"}], ",", "\[IndentingNewLine]", "3", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"pop", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], "==", 
               RowBox[{"pop", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}]}], "||", 
              RowBox[{
               RowBox[{"pop", "\[LeftDoubleBracket]", 
                RowBox[{"j", ",", "1"}], "\[RightDoubleBracket]"}], "==", 
               RowBox[{"pop", "\[LeftDoubleBracket]", 
                RowBox[{"j", ",", "2"}], "\[RightDoubleBracket]"}]}]}], ",", 
             RowBox[{
              RowBox[{
              "ps", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "+=",
               "1"}], ",", 
             RowBox[{
              RowBox[{
              "ps", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], "+=",
               "1"}]}], "]"}], ",", "\[IndentingNewLine]", "4", ",", 
           RowBox[{
            RowBox[{
            "ps", "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}], "+=",
             "1"}]}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", "samplesize", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"ps", "/", "samplesize"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.656979552066732*^9, 3.656979569034116*^9}, {
  3.656979609893578*^9, 3.656979717024271*^9}, {3.65698110726236*^9, 
  3.6569811626473618`*^9}, {3.65698122436656*^9, 3.656981232199141*^9}, {
  3.656981340094018*^9, 3.656981345805431*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Statistics describing neutral genetic variation", "Subsection",
 CellChangeTimes->{{3.66897201566612*^9, 3.668972033213291*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Heterozygosity", "[", "ps_", "]"}], ":=", 
     SqrtBox[
      RowBox[{
       RowBox[{"ps", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], 
       "+", 
       RowBox[{"ps", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], 
       "+", 
       RowBox[{
       "ps", "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}]}]]}], 
    ";"}], "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "old", " ", "definition", " ", "for", " ", "the", " ", "probability", " ",
      "that", " ", "a", " ", "sampled", " ", "individual", " ", "is", " ", 
     "heterozygous"}], ",", " ", 
    RowBox[{
    "seems", " ", "problematic", " ", "for", " ", "unknown", " ", 
     "reasons"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"HetI", "[", "ps_", "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ps", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
          "+", 
         RowBox[{
         "ps", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
        ")"}], "/", "2"}], "+", 
      RowBox[{"ps", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], 
      "+", 
      RowBox[{"ps", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], 
      "+", 
      RowBox[{
      "ps", "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}]}]}], ";"}],
    " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "the", " ", "probability", " ", "that", " ", "a", " ", "sampled", " ", 
     "individual", " ", "is", " ", "heterozygous"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"HetG", "[", "ps_", "]"}], ":=", 
     RowBox[{"1", "-", 
      RowBox[{"ps", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "-", 
      RowBox[{
      "ps", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}]}]}], ";"}],
    " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "the", " ", "probability", " ", "that", " ", "two", " ", "sampled", " ", 
     "genotypes", " ", "are", " ", "different"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"HetTold", "[", 
      RowBox[{"ps_", ",", "NN_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{
         RowBox[{"2", "NN"}], "-", "1"}]], 
       RowBox[{"ps", ".", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"1", "/", "2"}], ",", "0", ",", "1", ",", "1", ",", "1"}], 
         "}"}]}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox["1", 
          RowBox[{
           RowBox[{"2", "NN"}], "-", "1"}]]}], ")"}], 
       RowBox[{"ps", ".", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"1", "/", "2"}], ",", "1", ",", "1", ",", 
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"3", "/", "4"}], ",", "1"}], "}"}]}]}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"HetT", "[", 
      RowBox[{"ps_", ",", "NN_"}], "]"}], ":=", 
     RowBox[{"ps", ".", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"1", "/", "2"}], ",", "1", ",", "1", ",", 
        RowBox[{"1", "/", "2"}], ",", 
        RowBox[{"3", "/", "4"}], ",", "1"}], "}"}]}]}], ";"}], "  ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "the", " ", "probability", " ", "that", " ", "two", " ", "sampled", " ", 
     "alleles", " ", "drawn", " ", "from", " ", "the", " ", "total", " ", 
     "population", " ", "are", " ", "different", " ", 
     RowBox[{"(", 
      RowBox[{"=", " ", 
       RowBox[{
       "expected", " ", "heterozygosity", " ", "in", " ", "sexual", " ", 
        "population"}]}], ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FIT", "[", 
      RowBox[{"ps_", ",", "NN_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"HetT", "[", 
         RowBox[{"ps", ",", "NN"}], "]"}], "-", 
        RowBox[{"HetI", "[", "ps", "]"}]}], ")"}], "/", 
      RowBox[{"HetT", "[", 
       RowBox[{"ps", ",", "NN"}], "]"}]}]}], ";"}], "  ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "heterozygosity", " ", "relative", " ", "to", " ", "expected", " ", 
     "heterozygosity", " ", "in", " ", "total", " ", "population", " ", "if", 
     " ", "it", " ", "were", " ", "sexual"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"HetD", "[", 
      RowBox[{"ps_", ",", "NN_"}], "]"}], ":=", 
     RowBox[{"ps", ".", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"1", "/", "2"}], ",", "1", ",", "1", ",", 
        RowBox[{"1", "/", "2"}], ",", 
        RowBox[{"3", "/", "4"}], ",", "1"}], "}"}]}]}], ";"}], "  ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "probability", " ", "that", " ", "two", " ", "alleles", " ", "sampled", 
     " ", "in", " ", "different", " ", "individuals", " ", "are", " ", 
     "different"}], "*)"}]}]}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Plotting routines", "Subsection",
 CellChangeTimes->{{3.6706283728020277`*^9, 3.670628387771303*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotDynamics", "[", "ps_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "genotypeColours", ",", "genotypeStyles", ",", "genotypeLabels"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"genotypeColours", "=", 
       RowBox[{"RGBColor", "/@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.3", ",", "0.3", ",", "0.3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.7", ",", "0.2", ",", "0.2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0.1", ",", "0.1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.2", ",", "0.2", ",", "0.7"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.6", ",", "0.1", ",", "0.6"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.6", ",", "0.1", ",", "0.6"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0.1", ",", "0.6"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.1", ",", "0.1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.6", ",", "0.1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "1"}], "}"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"genotypeStyles", "=", 
       RowBox[{"Directive", "/@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Thick", ",", 
            RowBox[{
            "genotypeColours", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "10"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
       "genotypeStyles", "\[LeftDoubleBracket]", "6", 
        "\[RightDoubleBracket]"}], "=", 
       RowBox[{"Directive", "[", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Thick", ",", 
          RowBox[{
          "genotypeColours", "\[LeftDoubleBracket]", "6", 
           "\[RightDoubleBracket]"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"genotypeLabels", "=", 
       RowBox[{"Row", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "diploidGenotypes", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}], "<>", "\"\< \>\""}], ",", 
            RowBox[{
            "genotypeColours", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}], ",", "16"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "diploidGenotypes", "]"}]}], "}"}]}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", "ps", "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.02"}], ",", "1.02"}], "}"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "genotypeStyles"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "600"}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", "20"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Frequencies\>\"", ",", "\"\<\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Generations\>\"", ",", "genotypeLabels"}], "}"}]}], 
          "}"}]}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.605544473661175*^9, 3.605544495658053*^9}, {
  3.6055468476495867`*^9, 3.6055469006462584`*^9}, {3.6055469538124447`*^9, 
  3.6055470350662622`*^9}, {3.60554821729974*^9, 3.60554821846595*^9}, {
  3.670284073556943*^9, 3.670284084988771*^9}, {3.6702841403902683`*^9, 
  3.670284307204574*^9}, {3.670284351270846*^9, 3.670284387860499*^9}, {
  3.670284620597252*^9, 3.6702846638603287`*^9}}]
}, Closed]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Results", "Title",
 CellChangeTimes->{{3.5973745032608128`*^9, 3.5973745152810373`*^9}}],

Cell[CellGroupData[{

Cell["Deriving and testing recombination & automixis routines", "Section",
 CellChangeTimes->{{3.6592271513333397`*^9, 3.65922717189017*^9}, {
  3.659227830246305*^9, 3.659227838238605*^9}}],

Cell[CellGroupData[{

Cell["\<\
Deriving matrices for recombination with fixed number of crossovers\
\>", "Subsection",
 CellChangeTimes->{{3.65922717623431*^9, 3.6592271950392303`*^9}, {
  3.659227701807645*^9, 3.65922770775834*^9}}],

Cell["Genotype configurations:", "Text",
 CellChangeTimes->{{3.6592277227943296`*^9, 3.659227728342499*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pHs", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<A1A1A2A2B1B1B2B2\>\"", ",", "\"\<A1A1A2A2B2B2B1B1\>\"", ",", 
     "\"\<A1A1A2A2B1B2B1B2\>\"", ",", "\"\<A1A2A1A2B1B1B2B2\>\"", ",", 
     "\"\<A1A2A1A2B1B2B1B2\>\"", ",", "\"\<A1A2A1A2B1B2B2B1\>\"", ",", 
     "\"\<A1A2A1A2B2B1B2B1\>\""}], "}"}]}], ";"}]], "Input"],

Cell["Matrices for single crossover:", "Text",
 CellChangeTimes->{{3.659227732139544*^9, 3.659227745656003*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"matrixRecCA", "=", 
   RowBox[{"(", GridBox[{
      {"0", "0", "0", "0", "1", "0", "0"},
      {"0", "0", "0", "0", "0", "0", "1"},
      {"0", "0", "0", 
       RowBox[{"1", "/", "2"}], "0", 
       RowBox[{"1", "/", "2"}], "0"},
      {"0", "0", 
       RowBox[{"1", "/", "2"}], 
       RowBox[{"1", "/", "2"}], "0", "0", "0"},
      {
       RowBox[{"1", "/", "2"}], "0", "0", "0", 
       RowBox[{"1", "/", "2"}], "0", "0"},
      {"0", "0", 
       RowBox[{"1", "/", "2"}], "0", "0", 
       RowBox[{"1", "/", "2"}], "0"},
      {"0", 
       RowBox[{"1", "/", "2"}], "0", "0", "0", "0", 
       RowBox[{"1", "/", "2"}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matrixRecAB", "=", 
   RowBox[{"(", GridBox[{
      {"0", "0", "1", "0", "0", "0", "0"},
      {"0", "0", "1", "0", "0", "0", "0"},
      {
       RowBox[{"1", "/", "4"}], 
       RowBox[{"1", "/", "4"}], 
       RowBox[{"1", "/", "2"}], "0", "0", "0", "0"},
      {"0", "0", "0", "0", 
       RowBox[{"1", "/", "4"}], 
       RowBox[{"1", "/", "2"}], 
       RowBox[{"1", "/", "4"}]},
      {"0", "0", "0", 
       RowBox[{"1", "/", "2"}], "0", 
       RowBox[{"1", "/", "2"}], "0"},
      {"0", "0", "0", 
       RowBox[{"1", "/", "2"}], 
       RowBox[{"1", "/", "4"}], "0", 
       RowBox[{"1", "/", "4"}]},
      {"0", "0", "0", 
       RowBox[{"1", "/", "2"}], "0", 
       RowBox[{"1", "/", "2"}], "0"}
     }], ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.659145024224169*^9, 3.659145159957366*^9}, {
  3.6591452118125973`*^9, 3.659145329860663*^9}}],

Cell["Matrix multiplication is communitive:", "Text",
 CellChangeTimes->{{3.6592272882233877`*^9, 3.659227301032641*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"matrixRecAB", ".", "matrixRecCA"}], "\[Equal]", 
   RowBox[{"matrixRecCA", ".", "matrixRecAB"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6591453441844797`*^9, 3.659145361958902*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.659145362760544*^9, 3.65922738729976*^9}]
}, Open  ]],

Cell["Limits with high recombination rates:", "Text",
 CellChangeTimes->{{3.6592273047961063`*^9, 3.6592273131696787`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"MatrixPower", "[", 
     RowBox[{"matrixRecCA", ",", "n"}], "]"}], ",", 
    RowBox[{"n", "\[Rule]", "Infinity"}]}], "]"}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"MatrixPower", "[", 
     RowBox[{"matrixRecAB", ",", "n"}], "]"}], ",", 
    RowBox[{"n", "\[Rule]", "Infinity"}]}], "]"}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"MatrixPower", "[", 
     RowBox[{
      RowBox[{"matrixRecAB", ".", "matrixRecCA"}], ",", "n"}], "]"}], ",", 
    RowBox[{"n", "\[Rule]", "Infinity"}]}], "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.659145397972417*^9, 3.659145467260373*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "3"], "0", "0", "0", 
      FractionBox["2", "3"], "0", "0"},
     {"0", 
      FractionBox["1", "3"], "0", "0", "0", "0", 
      FractionBox["2", "3"]},
     {"0", "0", 
      FractionBox["1", "3"], 
      FractionBox["1", "3"], "0", 
      FractionBox["1", "3"], "0"},
     {"0", "0", 
      FractionBox["1", "3"], 
      FractionBox["1", "3"], "0", 
      FractionBox["1", "3"], "0"},
     {
      FractionBox["1", "3"], "0", "0", "0", 
      FractionBox["2", "3"], "0", "0"},
     {"0", "0", 
      FractionBox["1", "3"], 
      FractionBox["1", "3"], "0", 
      FractionBox["1", "3"], "0"},
     {"0", 
      FractionBox["1", "3"], "0", "0", "0", "0", 
      FractionBox["2", "3"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.659145417594048*^9, 3.6591454239321823`*^9}, {
   3.659145455765258*^9, 3.6591454682822933`*^9}, 3.659227389621374*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "6"], 
      FractionBox["1", "6"], 
      FractionBox["2", "3"], "0", "0", "0", "0"},
     {
      FractionBox["1", "6"], 
      FractionBox["1", "6"], 
      FractionBox["2", "3"], "0", "0", "0", "0"},
     {
      FractionBox["1", "6"], 
      FractionBox["1", "6"], 
      FractionBox["2", "3"], "0", "0", "0", "0"},
     {"0", "0", "0", 
      FractionBox["1", "3"], 
      FractionBox["1", "6"], 
      FractionBox["1", "3"], 
      FractionBox["1", "6"]},
     {"0", "0", "0", 
      FractionBox["1", "3"], 
      FractionBox["1", "6"], 
      FractionBox["1", "3"], 
      FractionBox["1", "6"]},
     {"0", "0", "0", 
      FractionBox["1", "3"], 
      FractionBox["1", "6"], 
      FractionBox["1", "3"], 
      FractionBox["1", "6"]},
     {"0", "0", "0", 
      FractionBox["1", "3"], 
      FractionBox["1", "6"], 
      FractionBox["1", "3"], 
      FractionBox["1", "6"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.659145417594048*^9, 3.6591454239321823`*^9}, {
   3.659145455765258*^9, 3.6591454682822933`*^9}, 3.659227390389949*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "18"], 
      FractionBox["1", "18"], 
      FractionBox["2", "9"], 
      FractionBox["2", "9"], 
      FractionBox["1", "9"], 
      FractionBox["2", "9"], 
      FractionBox["1", "9"]},
     {
      FractionBox["1", "18"], 
      FractionBox["1", "18"], 
      FractionBox["2", "9"], 
      FractionBox["2", "9"], 
      FractionBox["1", "9"], 
      FractionBox["2", "9"], 
      FractionBox["1", "9"]},
     {
      FractionBox["1", "18"], 
      FractionBox["1", "18"], 
      FractionBox["2", "9"], 
      FractionBox["2", "9"], 
      FractionBox["1", "9"], 
      FractionBox["2", "9"], 
      FractionBox["1", "9"]},
     {
      FractionBox["1", "18"], 
      FractionBox["1", "18"], 
      FractionBox["2", "9"], 
      FractionBox["2", "9"], 
      FractionBox["1", "9"], 
      FractionBox["2", "9"], 
      FractionBox["1", "9"]},
     {
      FractionBox["1", "18"], 
      FractionBox["1", "18"], 
      FractionBox["2", "9"], 
      FractionBox["2", "9"], 
      FractionBox["1", "9"], 
      FractionBox["2", "9"], 
      FractionBox["1", "9"]},
     {
      FractionBox["1", "18"], 
      FractionBox["1", "18"], 
      FractionBox["2", "9"], 
      FractionBox["2", "9"], 
      FractionBox["1", "9"], 
      FractionBox["2", "9"], 
      FractionBox["1", "9"]},
     {
      FractionBox["1", "18"], 
      FractionBox["1", "18"], 
      FractionBox["2", "9"], 
      FractionBox["2", "9"], 
      FractionBox["1", "9"], 
      FractionBox["2", "9"], 
      FractionBox["1", "9"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.659145417594048*^9, 3.6591454239321823`*^9}, {
   3.659145455765258*^9, 3.6591454682822933`*^9}, 3.6592273919939203`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{"MatrixPower", "[", 
     RowBox[{"matrixRecCA", ",", "n"}], "]"}], "]"}], "//", 
   "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.659170341200899*^9, 3.6591703516807137`*^9}, {
  3.659170395096328*^9, 3.659170415278742*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "3"], " ", 
       SuperscriptBox["2", 
        RowBox[{"-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "n"]}], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], "0", "0", "0", 
      RowBox[{
       FractionBox["2", "3"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "+", "n"}]], " ", 
          SuperscriptBox["2", 
           RowBox[{"-", "n"}]]}]}], ")"}]}], "0", "0"},
     {"0", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       SuperscriptBox["2", 
        RowBox[{"-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "n"]}], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], "0", "0", "0", "0", 
      RowBox[{
       FractionBox["2", "3"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "+", "n"}]], " ", 
          SuperscriptBox["2", 
           RowBox[{"-", "n"}]]}]}], ")"}]}]},
     {"0", "0", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       SuperscriptBox["2", 
        RowBox[{"-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "n"]}], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "3"], "-", 
       RowBox[{
        FractionBox["1", "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", 
           FractionBox["1", "2"]}], ")"}], "n"]}]}], "0", 
      RowBox[{
       FractionBox["1", "3"], "-", 
       RowBox[{
        FractionBox["1", "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", 
           FractionBox["1", "2"]}], ")"}], "n"]}]}], "0"},
     {"0", "0", 
      RowBox[{
       FractionBox["1", "3"], "-", 
       RowBox[{
        FractionBox["1", "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", 
           FractionBox["1", "2"]}], ")"}], "n"]}]}], 
      RowBox[{
       FractionBox["1", "3"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "n"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "n"}]]}], ")"}]}], "0", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "n"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "n"}]]}], ")"}]}], "0"},
     {
      RowBox[{
       FractionBox["1", "3"], "-", 
       RowBox[{
        FractionBox["1", "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", 
           FractionBox["1", "2"]}], ")"}], "n"]}]}], "0", "0", "0", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", 
            FractionBox["1", "2"]}], ")"}], "n"]}], ")"}]}], "0", "0"},
     {"0", "0", 
      RowBox[{
       FractionBox["1", "3"], "-", 
       RowBox[{
        FractionBox["1", "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", 
           FractionBox["1", "2"]}], ")"}], "n"]}]}], 
      RowBox[{
       FractionBox["1", "3"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "n"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "n"}]]}], ")"}]}], "0", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "n"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "n"}]]}], ")"}]}], "0"},
     {"0", 
      RowBox[{
       FractionBox["1", "3"], "-", 
       RowBox[{
        FractionBox["1", "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", 
           FractionBox["1", "2"]}], ")"}], "n"]}]}], "0", "0", "0", "0", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", 
            FractionBox["1", "2"]}], ")"}], "n"]}], ")"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6591703455610332`*^9, 3.65917035279573*^9}, 
   3.6592273981966476`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "n", "]"}], "=", 
   RowBox[{
    FractionBox["1", "3"], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", 
         FractionBox["1", "2"]}], ")"}], "n"]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"MatrixPower", "[", 
    RowBox[{"matrixRecCA", ",", "n"}], "]"}], "==", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"1", "-", 
         RowBox[{"2", 
          RowBox[{"f", "[", "n", "]"}]}]}], "0", "0", "0", 
        RowBox[{"2", 
         RowBox[{"f", "[", "n", "]"}]}], "0", "0"},
       {"0", 
        RowBox[{"1", "-", 
         RowBox[{"2", 
          RowBox[{"f", "[", "n", "]"}]}]}], "0", "0", "0", "0", 
        RowBox[{"2", 
         RowBox[{"f", "[", "n", "]"}], " "}]},
       {"0", "0", 
        RowBox[{"1", "-", 
         RowBox[{"2", 
          RowBox[{"f", "[", "n", "]"}]}]}], 
        RowBox[{"f", "[", "n", "]"}], "0", 
        RowBox[{
         RowBox[{"f", "[", "n", "]"}], " "}], "0"},
       {"0", "0", 
        RowBox[{
         RowBox[{"f", "[", "n", "]"}], " "}], 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"f", "[", "n", "]"}]}], ")"}]}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["1", "2"], ")"}], 
          RowBox[{"n", "+", "1"}]]}], "0", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"f", "[", "n", "]"}]}], ")"}]}], "-", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["1", "2"], ")"}], 
          RowBox[{"n", "+", "1"}]]}], "0"},
       {
        RowBox[{"f", "[", "n", "]"}], "0", "0", "0", 
        RowBox[{"1", "-", 
         RowBox[{"f", "[", "n", "]"}], " "}], "0", "0"},
       {"0", "0", 
        RowBox[{
         RowBox[{"f", "[", "n", "]"}], " "}], 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"f", "[", "n", "]"}]}], ")"}]}], "-", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["1", "2"], ")"}], 
          RowBox[{"n", "+", "1"}]]}], "0", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"f", "[", "n", "]"}]}], ")"}]}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["1", "2"], ")"}], 
          RowBox[{"n", "+", "1"}]]}], "0"},
       {"0", 
        RowBox[{
         RowBox[{"f", "[", "n", "]"}], " "}], "0", "0", "0", "0", 
        RowBox[{"1", "-", 
         RowBox[{"f", "[", "n", "]"}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6591704289674587`*^9, 3.659170754097933*^9}, {
   3.659170788146517*^9, 3.659170876232602*^9}, {3.659171043007379*^9, 
   3.6591710563554573`*^9}, {3.659171106720377*^9, 3.659171172235211*^9}, {
   3.6591712875150747`*^9, 3.6591714105057917`*^9}, {3.659171495848104*^9, 
   3.659171615030945*^9}, {3.659171660145555*^9, 3.659171665790638*^9}, {
   3.6591717200553427`*^9, 3.659171804794149*^9}, {3.659171842758741*^9, 
   3.659171891764576*^9}, {3.6591721872080812`*^9, 3.659172207630022*^9}, {
   3.65917228819236*^9, 3.6591722956527367`*^9}, {3.6591723301424503`*^9, 
   3.659172387470614*^9}, {3.65917271395717*^9, 3.659172806266184*^9}, {
   3.659176248022843*^9, 3.6591762528993807`*^9}, {3.659227343682096*^9, 
   3.659227373885556*^9}, 3.659227659318532*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.659170499541976*^9, 3.659170580641444*^9}, {
   3.65917062277052*^9, 3.6591706738620234`*^9}, {3.659170729598987*^9, 
   3.659170755078745*^9}, {3.659170791616947*^9, 3.6591708525779743`*^9}, 
   3.65917105749435*^9, 3.659171113244226*^9, {3.659171156159666*^9, 
   3.65917117474352*^9}, 3.659171292616153*^9, 3.659171350880847*^9, 
   3.659171381939868*^9, 3.65917141209696*^9, 3.659171463255352*^9, {
   3.6591715166594267`*^9, 3.659171537360661*^9}, {3.659171583854312*^9, 
   3.6591716156253157`*^9}, {3.659171660592059*^9, 3.659171669601295*^9}, {
   3.6591717299135113`*^9, 3.6591718058835907`*^9}, {3.659171853495648*^9, 
   3.659171892595209*^9}, {3.659172195160391*^9, 3.6591722085642853`*^9}, 
   3.65917233677349*^9, {3.6591723798384733`*^9, 3.65917238821423*^9}, {
   3.659172729655898*^9, 3.659172739575429*^9}, {3.659172791217327*^9, 
   3.65917280702995*^9}, 3.6592274002258387`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"MatrixPower", "[", 
     RowBox[{"matrixRecAB", ",", "m"}], "]"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{
      RowBox[{"m", " ", "\[Element]", " ", "Integers"}], " ", "&&", " ", 
      RowBox[{"m", ">", "0"}]}]}]}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.659172424435746*^9, 3.659172495155253*^9}, 
   3.6591725648627863`*^9, {3.65917313405935*^9, 3.6591731653214417`*^9}, {
   3.659227405497282*^9, 3.659227409110688*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "6"], "+", 
       RowBox[{
        FractionBox["1", "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", 
           FractionBox["1", "2"]}], ")"}], "m"]}]}], 
      RowBox[{
       FractionBox["1", "6"], "+", 
       RowBox[{
        FractionBox["1", "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", 
           FractionBox["1", "2"]}], ")"}], "m"]}]}], 
      RowBox[{
       FractionBox["2", "3"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "+", "m"}]], " ", 
          SuperscriptBox["2", 
           RowBox[{"-", "m"}]]}]}], ")"}]}], "0", "0", "0", "0"},
     {
      RowBox[{
       FractionBox["1", "6"], "+", 
       RowBox[{
        FractionBox["1", "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", 
           FractionBox["1", "2"]}], ")"}], "m"]}]}], 
      RowBox[{
       FractionBox["1", "6"], "+", 
       RowBox[{
        FractionBox["1", "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", 
           FractionBox["1", "2"]}], ")"}], "m"]}]}], 
      RowBox[{
       FractionBox["2", "3"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "+", "m"}]], " ", 
          SuperscriptBox["2", 
           RowBox[{"-", "m"}]]}]}], ")"}]}], "0", "0", "0", "0"},
     {
      RowBox[{
       FractionBox["1", "6"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "+", "m"}]], " ", 
          SuperscriptBox["2", 
           RowBox[{"-", "m"}]]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "6"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "+", "m"}]], " ", 
          SuperscriptBox["2", 
           RowBox[{"-", "m"}]]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "3"], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", 
            FractionBox["1", "2"]}], ")"}], "m"]}], ")"}]}], "0", "0", "0", 
      "0"},
     {"0", "0", "0", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"], " ", 
          SuperscriptBox["2", 
           RowBox[{"1", "-", "m"}]]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "6"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "+", "m"}]], " ", 
          SuperscriptBox["2", 
           RowBox[{"-", "m"}]]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "3"], "-", 
       RowBox[{
        FractionBox["1", "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", 
           FractionBox["1", "2"]}], ")"}], "m"]}]}], 
      RowBox[{
       FractionBox["1", "6"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "+", "m"}]], " ", 
          SuperscriptBox["2", 
           RowBox[{"-", "m"}]]}]}], ")"}]}]},
     {"0", "0", "0", 
      RowBox[{
       FractionBox["1", "3"], "-", 
       RowBox[{
        FractionBox["1", "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", 
           FractionBox["1", "2"]}], ")"}], "m"]}]}], 
      RowBox[{
       FractionBox["1", "6"], "+", 
       RowBox[{
        FractionBox["1", "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", 
           FractionBox["1", "2"]}], ")"}], "m"]}]}], 
      RowBox[{
       FractionBox["1", "3"], "-", 
       RowBox[{
        FractionBox["1", "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", 
           FractionBox["1", "2"]}], ")"}], "m"]}]}], 
      RowBox[{
       FractionBox["1", "6"], "+", 
       RowBox[{
        FractionBox["1", "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", 
           FractionBox["1", "2"]}], ")"}], "m"]}]}]},
     {"0", "0", "0", 
      RowBox[{
       FractionBox["1", "3"], "-", 
       RowBox[{
        FractionBox["1", "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", 
           FractionBox["1", "2"]}], ")"}], "m"]}]}], 
      RowBox[{
       FractionBox["1", "6"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "+", "m"}]], " ", 
          SuperscriptBox["2", 
           RowBox[{"-", "m"}]]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "3"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"], " ", 
          SuperscriptBox["2", 
           RowBox[{"1", "-", "m"}]]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "6"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "+", "m"}]], " ", 
          SuperscriptBox["2", 
           RowBox[{"-", "m"}]]}]}], ")"}]}]},
     {"0", "0", "0", 
      RowBox[{
       FractionBox["1", "3"], "-", 
       RowBox[{
        FractionBox["1", "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", 
           FractionBox["1", "2"]}], ")"}], "m"]}]}], 
      RowBox[{
       FractionBox["1", "6"], "+", 
       RowBox[{
        FractionBox["1", "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", 
           FractionBox["1", "2"]}], ")"}], "m"]}]}], 
      RowBox[{
       FractionBox["1", "3"], "-", 
       RowBox[{
        FractionBox["1", "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", 
           FractionBox["1", "2"]}], ")"}], "m"]}]}], 
      RowBox[{
       FractionBox["1", "6"], "+", 
       RowBox[{
        FractionBox["1", "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", 
           FractionBox["1", "2"]}], ")"}], "m"]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.659172427237692*^9, 3.659172434568823*^9}, {
   3.6591724750279922`*^9, 3.6591724962076674`*^9}, 3.659172565721099*^9, 
   3.659173145420032*^9, 3.659227411955121*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"MatrixPower", "[", 
     RowBox[{"matrixRecAB", ",", "m"}], "]"}], "==", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{
          FractionBox["1", "2"], "-", 
          RowBox[{"f", "[", "m", "]"}]}], 
         RowBox[{
          FractionBox["1", "2"], "-", 
          RowBox[{"f", "[", "m", "]"}]}], 
         RowBox[{"2", 
          RowBox[{"f", "[", "m", "]"}]}], "0", "0", "0", "0"},
        {
         RowBox[{
          FractionBox["1", "2"], "-", 
          RowBox[{"f", "[", "m", "]"}]}], 
         RowBox[{
          FractionBox["1", "2"], "-", 
          RowBox[{"f", "[", "m", "]"}]}], 
         RowBox[{"2", 
          RowBox[{"f", "[", "m", "]"}]}], "0", "0", "0", "0"},
        {
         RowBox[{" ", 
          RowBox[{
           RowBox[{"f", "[", "m", "]"}], "/", "2"}]}], 
         RowBox[{
          RowBox[{"f", "[", "m", "]"}], "/", "2"}], 
         RowBox[{"1", "-", 
          RowBox[{"f", "[", "m", "]"}]}], "0", "0", "0", "0"},
        {"0", "0", "0", 
         RowBox[{"1", "-", 
          RowBox[{"2", 
           RowBox[{"f", "[", "m", "]"}]}]}], 
         RowBox[{
          RowBox[{"f", "[", "m", "]"}], "/", "2"}], 
         RowBox[{"f", "[", "m", "]"}], 
         RowBox[{
          RowBox[{"f", "[", "m", "]"}], "/", "2"}]},
        {"0", "0", "0", 
         RowBox[{"f", "[", "m", "]"}], 
         RowBox[{
          FractionBox["1", "2"], "-", 
          RowBox[{"f", "[", "m", "]"}]}], 
         RowBox[{"f", "[", "m", "]"}], 
         RowBox[{
          FractionBox["1", "2"], "-", 
          RowBox[{"f", "[", "m", "]"}]}]},
        {"0", "0", "0", 
         RowBox[{"f", "[", "m", "]"}], 
         RowBox[{
          RowBox[{"f", "[", "m", "]"}], "/", "2"}], 
         RowBox[{"1", "-", 
          RowBox[{"2", 
           RowBox[{"f", "[", "m", "]"}]}]}], 
         RowBox[{
          RowBox[{"f", "[", "m", "]"}], "/", "2"}]},
        {"0", "0", "0", 
         RowBox[{"f", "[", "m", "]"}], 
         RowBox[{
          FractionBox["1", "2"], "-", 
          RowBox[{"f", "[", "m", "]"}]}], 
         RowBox[{"f", "[", "m", "]"}], 
         RowBox[{
          FractionBox["1", "2"], "-", 
          RowBox[{"f", "[", "m", "]"}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{"m", " ", "\[Element]", " ", "Integers"}], " ", "&&", " ", 
     RowBox[{"m", ">", "0"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.659172583861969*^9, 3.659172653405879*^9}, {
   3.659172683703755*^9, 3.659172707152577*^9}, {3.659172823359079*^9, 
   3.659172914012273*^9}, {3.659172972486113*^9, 3.659173047264477*^9}, 
   3.659173080099338*^9, {3.6592274195298023`*^9, 3.659227446820342*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.65917259307996*^9, 3.659172641642376*^9}, {
   3.6591726952419367`*^9, 3.6591727079462223`*^9}, {3.6591728388019114`*^9, 
   3.659172914928443*^9}, {3.6591729853190536`*^9, 3.659173050561664*^9}, 
   3.659173081873667*^9, 3.659227451165085*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"MatrixPower", "[", 
      RowBox[{"matrixRecCA", ",", "n"}], "]"}], ".", 
     RowBox[{"MatrixPower", "[", 
      RowBox[{"matrixRecAB", ",", "m"}], "]"}]}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{
      RowBox[{"m", " ", "\[Element]", " ", "Integers"}], " ", "&&", " ", 
      RowBox[{"m", ">", "0"}]}]}]}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.659174079190093*^9, 3.659174101972456*^9}, {
  3.6592274573880653`*^9, 3.659227464381929*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "n"]}], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "n"]}], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{"1", "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "m"}]], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "n"]}], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{"1", "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "m"}]], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "n"}]], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "m"}], "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "n"}]], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{"1", "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "m"}]], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "n"}]], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "m"}], "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "n"}]], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "n"]}], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "n"]}], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{"1", "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "m"}]], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "n"]}], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{"1", "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "m"}]], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "n"}]], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "m"}], "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "n"}]], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{"1", "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "m"}]], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "n"}]], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "m"}], "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "n"}]], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "m"}]], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "n"]}], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "m"}]], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "n"]}], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "m"}], "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "m"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "m"}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "n"]}], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "m"}], "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "m"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "m"}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "n"}]], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", 
            FractionBox["1", "2"]}], ")"}], "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", 
            FractionBox["1", "2"]}], ")"}], "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "m"}], "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "m"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "m"}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "n"}]], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", 
            FractionBox["1", "2"]}], ")"}], "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", 
            FractionBox["1", "2"]}], ")"}], "n"]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "m"}]], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "n"}]], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "m"}]], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "n"}]], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "m"}], "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "m"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "m"}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "n"}]], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"9", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"m", "+", "n"}]], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "n"], " ", 
          SuperscriptBox["2", 
           RowBox[{"1", "+", "m"}]]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"], " ", 
          SuperscriptBox["2", 
           RowBox[{"1", "+", "n"}]]}], "+", 
         SuperscriptBox["2", 
          RowBox[{"2", "+", "m", "+", "n"}]]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "m"}]], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "n"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "n"}]]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "9"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"m", "+", "n"}]], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "n"], " ", 
          SuperscriptBox["2", 
           RowBox[{"1", "+", "m"}]]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"], " ", 
          SuperscriptBox["2", 
           RowBox[{"1", "+", "n"}]]}], "+", 
         SuperscriptBox["2", 
          RowBox[{"2", "+", "m", "+", "n"}]]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "m"}]], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "n"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "n"}]]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "n"}]], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "n"}]], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{"1", "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "m"}]], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "n"}]], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "m"}], "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "m"}]], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "n"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "n"}]]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "n"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "n"}]]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "m"}], "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "m"}]], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "n"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "n"}]]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "n"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "n"}]]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "m"}]], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "n"}]], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "m"}]], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "n"}]], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "m"}], "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "m"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "m"}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "n"}]], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "9"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"m", "+", "n"}]], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "n"], " ", 
          SuperscriptBox["2", 
           RowBox[{"1", "+", "m"}]]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"], " ", 
          SuperscriptBox["2", 
           RowBox[{"1", "+", "n"}]]}], "+", 
         SuperscriptBox["2", 
          RowBox[{"2", "+", "m", "+", "n"}]]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "m"}]], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "n"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "n"}]]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"9", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"m", "+", "n"}]], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "n"], " ", 
          SuperscriptBox["2", 
           RowBox[{"1", "+", "m"}]]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"], " ", 
          SuperscriptBox["2", 
           RowBox[{"1", "+", "n"}]]}], "+", 
         SuperscriptBox["2", 
          RowBox[{"2", "+", "m", "+", "n"}]]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "m"}]], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "n"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "n"}]]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "n"}]], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "n"}]], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{"1", "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "m"}]], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "n"}]], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "m"}], "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "m"}]], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "n"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "n"}]]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "n"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "n"}]]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "m"}], "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "m"}]], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "n"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "n"}]]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "n"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "n"}]]}], ")"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.659174106406419*^9, 3.659227469189587*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{"1", "-", 
          RowBox[{"2", 
           RowBox[{"f", "[", "n", "]"}]}]}], "0", "0", "0", 
         RowBox[{"2", 
          RowBox[{"f", "[", "n", "]"}]}], "0", "0"},
        {"0", 
         RowBox[{"1", "-", 
          RowBox[{"2", 
           RowBox[{"f", "[", "n", "]"}]}]}], "0", "0", "0", "0", 
         RowBox[{"2", 
          RowBox[{"f", "[", "n", "]"}], " "}]},
        {"0", "0", 
         RowBox[{"1", "-", 
          RowBox[{"2", 
           RowBox[{"f", "[", "n", "]"}]}]}], 
         RowBox[{"f", "[", "n", "]"}], "0", 
         RowBox[{
          RowBox[{"f", "[", "n", "]"}], " "}], "0"},
        {"0", "0", 
         RowBox[{"f", "[", "n", "]"}], 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "n", "]"}]}], ")"}]}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["1", "2"], ")"}], 
           RowBox[{"n", "+", "1"}]]}], "0", 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "n", "]"}]}], ")"}]}], "-", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["1", "2"], ")"}], 
           RowBox[{"n", "+", "1"}]]}], "0"},
        {
         RowBox[{"f", "[", "n", "]"}], "0", "0", "0", 
         RowBox[{"1", "-", 
          RowBox[{"f", "[", "n", "]"}], " "}], "0", "0"},
        {"0", "0", 
         RowBox[{
          RowBox[{"f", "[", "n", "]"}], " "}], 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "n", "]"}]}], ")"}]}], "-", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["1", "2"], ")"}], 
           RowBox[{"n", "+", "1"}]]}], "0", 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "n", "]"}]}], ")"}]}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["1", "2"], ")"}], 
           RowBox[{"n", "+", "1"}]]}], "0"},
        {"0", 
         RowBox[{
          RowBox[{"f", "[", "n", "]"}], " "}], "0", "0", "0", "0", 
         RowBox[{"1", "-", 
          RowBox[{"f", "[", "n", "]"}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ".", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{
          FractionBox["1", "2"], "-", 
          RowBox[{"f", "[", "m", "]"}]}], 
         RowBox[{
          FractionBox["1", "2"], "-", 
          RowBox[{"f", "[", "m", "]"}]}], 
         RowBox[{"2", 
          RowBox[{"f", "[", "m", "]"}]}], "0", "0", "0", "0"},
        {
         RowBox[{
          FractionBox["1", "2"], "-", 
          RowBox[{"f", "[", "m", "]"}]}], 
         RowBox[{
          FractionBox["1", "2"], "-", 
          RowBox[{"f", "[", "m", "]"}]}], 
         RowBox[{"2", 
          RowBox[{"f", "[", "m", "]"}]}], "0", "0", "0", "0"},
        {
         RowBox[{" ", 
          RowBox[{
           RowBox[{"f", "[", "m", "]"}], "/", "2"}]}], 
         RowBox[{
          RowBox[{"f", "[", "m", "]"}], "/", "2"}], 
         RowBox[{"1", "-", 
          RowBox[{"f", "[", "m", "]"}]}], "0", "0", "0", "0"},
        {"0", "0", "0", 
         RowBox[{"1", "-", 
          RowBox[{"2", 
           RowBox[{"f", "[", "m", "]"}]}]}], 
         RowBox[{
          RowBox[{"f", "[", "m", "]"}], "/", "2"}], 
         RowBox[{"f", "[", "m", "]"}], 
         RowBox[{
          RowBox[{"f", "[", "m", "]"}], "/", "2"}]},
        {"0", "0", "0", 
         RowBox[{"f", "[", "m", "]"}], 
         RowBox[{
          FractionBox["1", "2"], "-", 
          RowBox[{"f", "[", "m", "]"}]}], 
         RowBox[{"f", "[", "m", "]"}], 
         RowBox[{
          FractionBox["1", "2"], "-", 
          RowBox[{"f", "[", "m", "]"}]}]},
        {"0", "0", "0", 
         RowBox[{"f", "[", "m", "]"}], 
         RowBox[{
          RowBox[{"f", "[", "m", "]"}], "/", "2"}], 
         RowBox[{"1", "-", 
          RowBox[{"2", 
           RowBox[{"f", "[", "m", "]"}]}]}], 
         RowBox[{
          RowBox[{"f", "[", "m", "]"}], "/", "2"}]},
        {"0", "0", "0", 
         RowBox[{"f", "[", "m", "]"}], 
         RowBox[{
          FractionBox["1", "2"], "-", 
          RowBox[{"f", "[", "m", "]"}]}], 
         RowBox[{"f", "[", "m", "]"}], 
         RowBox[{
          FractionBox["1", "2"], "-", 
          RowBox[{"f", "[", "m", "]"}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.659174249933612*^9, 3.659174413085568*^9}, {
  3.659174673364354*^9, 3.659174741797261*^9}, {3.659227495179714*^9, 
  3.659227521844178*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "n"]}], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "n"]}], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{"1", "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "m"}]], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "n"]}], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["2", "9"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "+", "m"}]], " ", 
          SuperscriptBox["2", 
           RowBox[{"-", "m"}]]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "+", "n"}]], " ", 
          SuperscriptBox["2", 
           RowBox[{"-", "n"}]]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "m"}], "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "n"}]], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["2", "9"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "+", "m"}]], " ", 
          SuperscriptBox["2", 
           RowBox[{"-", "m"}]]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "+", "n"}]], " ", 
          SuperscriptBox["2", 
           RowBox[{"-", "n"}]]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "m"}], "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "n"}]], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "n"]}], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "n"]}], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{"1", "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "m"}]], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "n"]}], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["2", "9"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "+", "m"}]], " ", 
          SuperscriptBox["2", 
           RowBox[{"-", "m"}]]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "+", "n"}]], " ", 
          SuperscriptBox["2", 
           RowBox[{"-", "n"}]]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "m"}], "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "n"}]], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["2", "9"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "+", "m"}]], " ", 
          SuperscriptBox["2", 
           RowBox[{"-", "m"}]]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "+", "n"}]], " ", 
          SuperscriptBox["2", 
           RowBox[{"-", "n"}]]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "m"}], "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "n"}]], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "m"}]], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "n"]}], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "m"}]], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "n"]}], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "m"}], "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "m"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "m"}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "n"]}], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "m"}], "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "m"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "m"}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "n"}]], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", 
            FractionBox["1", "2"]}], ")"}], "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", 
            FractionBox["1", "2"]}], ")"}], "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "m"}], "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "m"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "m"}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "n"}]], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", 
            FractionBox["1", "2"]}], ")"}], "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", 
            FractionBox["1", "2"]}], ")"}], "n"]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "18"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "+", "m"}]], " ", 
          SuperscriptBox["2", 
           RowBox[{"-", "m"}]]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "+", "n"}]], " ", 
          SuperscriptBox["2", 
           RowBox[{"-", "n"}]]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "18"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "+", "m"}]], " ", 
          SuperscriptBox["2", 
           RowBox[{"-", "m"}]]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "+", "n"}]], " ", 
          SuperscriptBox["2", 
           RowBox[{"-", "n"}]]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "m"}], "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "m"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "m"}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "n"}]], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"9", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"m", "+", "n"}]], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "n"], " ", 
          SuperscriptBox["2", 
           RowBox[{"1", "+", "m"}]]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"], " ", 
          SuperscriptBox["2", 
           RowBox[{"1", "+", "n"}]]}], "+", 
         SuperscriptBox["2", 
          RowBox[{"2", "+", "m", "+", "n"}]]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "m"}]], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "n"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "n"}]]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "9"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"m", "+", "n"}]], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "n"], " ", 
          SuperscriptBox["2", 
           RowBox[{"1", "+", "m"}]]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"], " ", 
          SuperscriptBox["2", 
           RowBox[{"1", "+", "n"}]]}], "+", 
         SuperscriptBox["2", 
          RowBox[{"2", "+", "m", "+", "n"}]]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "m"}]], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "n"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "n"}]]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "n"}]], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "n"}]], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["2", "9"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "+", "m"}]], " ", 
          SuperscriptBox["2", 
           RowBox[{"-", "m"}]]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "+", "n"}]], " ", 
          SuperscriptBox["2", 
           RowBox[{"-", "n"}]]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "m"}], "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "m"}]], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "n"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "n"}]]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "n"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "n"}]]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "m"}], "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "m"}]], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "n"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "n"}]]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "n"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "n"}]]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "18"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "+", "m"}]], " ", 
          SuperscriptBox["2", 
           RowBox[{"-", "m"}]]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "+", "n"}]], " ", 
          SuperscriptBox["2", 
           RowBox[{"-", "n"}]]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "18"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "+", "m"}]], " ", 
          SuperscriptBox["2", 
           RowBox[{"-", "m"}]]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "+", "n"}]], " ", 
          SuperscriptBox["2", 
           RowBox[{"-", "n"}]]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "m"}], "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "m"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "m"}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "n"}]], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "9"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"m", "+", "n"}]], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "n"], " ", 
          SuperscriptBox["2", 
           RowBox[{"1", "+", "m"}]]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"], " ", 
          SuperscriptBox["2", 
           RowBox[{"1", "+", "n"}]]}], "+", 
         SuperscriptBox["2", 
          RowBox[{"2", "+", "m", "+", "n"}]]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "m"}]], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "n"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "n"}]]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"9", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"m", "+", "n"}]], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "n"], " ", 
          SuperscriptBox["2", 
           RowBox[{"1", "+", "m"}]]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"], " ", 
          SuperscriptBox["2", 
           RowBox[{"1", "+", "n"}]]}], "+", 
         SuperscriptBox["2", 
          RowBox[{"2", "+", "m", "+", "n"}]]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "m"}]], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "n"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "n"}]]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "n"}]], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "n"}]], "+", 
         SuperscriptBox["2", "n"]}], ")"}]}], 
      RowBox[{
       FractionBox["2", "9"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "+", "m"}]], " ", 
          SuperscriptBox["2", 
           RowBox[{"-", "m"}]]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"1", "+", "n"}]], " ", 
          SuperscriptBox["2", 
           RowBox[{"-", "n"}]]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "m"}], "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "m"}]], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "n"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "n"}]]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "n"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "n"}]]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "m"}], "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "+", "m"}]], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "n"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "n"}]]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox["2", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "m", "-", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "m"]}], "+", 
         SuperscriptBox["2", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "n"], "+", 
         SuperscriptBox["2", 
          RowBox[{"1", "+", "n"}]]}], ")"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6591744018906393`*^9, 3.65917441410365*^9}, 
   3.659174747083046*^9, 3.659227528642487*^9, 3.659227675771819*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{"1", "-", 
          RowBox[{"2", 
           RowBox[{"f", "[", "n", "]"}]}]}], "0", "0", "0", 
         RowBox[{"2", 
          RowBox[{"f", "[", "n", "]"}]}], "0", "0"},
        {"0", 
         RowBox[{"1", "-", 
          RowBox[{"2", 
           RowBox[{"f", "[", "n", "]"}]}]}], "0", "0", "0", "0", 
         RowBox[{"2", 
          RowBox[{"f", "[", "n", "]"}], " "}]},
        {"0", "0", 
         RowBox[{"1", "-", 
          RowBox[{"2", 
           RowBox[{"f", "[", "n", "]"}]}]}], 
         RowBox[{"f", "[", "n", "]"}], "0", 
         RowBox[{
          RowBox[{"f", "[", "n", "]"}], " "}], "0"},
        {"0", "0", 
         RowBox[{"f", "[", "n", "]"}], 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "n", "]"}]}], ")"}]}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["1", "2"], ")"}], 
           RowBox[{"n", "+", "1"}]]}], "0", 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "n", "]"}]}], ")"}]}], "-", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["1", "2"], ")"}], 
           RowBox[{"n", "+", "1"}]]}], "0"},
        {
         RowBox[{"f", "[", "n", "]"}], "0", "0", "0", 
         RowBox[{"1", "-", 
          RowBox[{"f", "[", "n", "]"}], " "}], "0", "0"},
        {"0", "0", 
         RowBox[{
          RowBox[{"f", "[", "n", "]"}], " "}], 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "n", "]"}]}], ")"}]}], "-", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["1", "2"], ")"}], 
           RowBox[{"n", "+", "1"}]]}], "0", 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "n", "]"}]}], ")"}]}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["1", "2"], ")"}], 
           RowBox[{"n", "+", "1"}]]}], "0"},
        {"0", 
         RowBox[{
          RowBox[{"f", "[", "n", "]"}], " "}], "0", "0", "0", "0", 
         RowBox[{"1", "-", 
          RowBox[{"f", "[", "n", "]"}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], ".", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{
          FractionBox["1", "2"], "-", 
          RowBox[{"f", "[", "m", "]"}]}], 
         RowBox[{
          FractionBox["1", "2"], "-", 
          RowBox[{"f", "[", "m", "]"}]}], 
         RowBox[{"2", 
          RowBox[{"f", "[", "m", "]"}]}], "0", "0", "0", "0"},
        {
         RowBox[{
          FractionBox["1", "2"], "-", 
          RowBox[{"f", "[", "m", "]"}]}], 
         RowBox[{
          FractionBox["1", "2"], "-", 
          RowBox[{"f", "[", "m", "]"}]}], 
         RowBox[{"2", 
          RowBox[{"f", "[", "m", "]"}]}], "0", "0", "0", "0"},
        {
         RowBox[{" ", 
          RowBox[{
           RowBox[{"f", "[", "m", "]"}], "/", "2"}]}], 
         RowBox[{
          RowBox[{"f", "[", "m", "]"}], "/", "2"}], 
         RowBox[{"1", "-", 
          RowBox[{"f", "[", "m", "]"}]}], "0", "0", "0", "0"},
        {"0", "0", "0", 
         RowBox[{"1", "-", 
          RowBox[{"2", 
           RowBox[{"f", "[", "m", "]"}]}]}], 
         RowBox[{
          RowBox[{"f", "[", "m", "]"}], "/", "2"}], 
         RowBox[{"f", "[", "m", "]"}], 
         RowBox[{
          RowBox[{"f", "[", "m", "]"}], "/", "2"}]},
        {"0", "0", "0", 
         RowBox[{"f", "[", "m", "]"}], 
         RowBox[{
          FractionBox["1", "2"], "-", 
          RowBox[{"f", "[", "m", "]"}]}], 
         RowBox[{"f", "[", "m", "]"}], 
         RowBox[{
          FractionBox["1", "2"], "-", 
          RowBox[{"f", "[", "m", "]"}]}]},
        {"0", "0", "0", 
         RowBox[{"f", "[", "m", "]"}], 
         RowBox[{
          RowBox[{"f", "[", "m", "]"}], "/", "2"}], 
         RowBox[{"1", "-", 
          RowBox[{"2", 
           RowBox[{"f", "[", "m", "]"}]}]}], 
         RowBox[{
          RowBox[{"f", "[", "m", "]"}], "/", "2"}]},
        {"0", "0", "0", 
         RowBox[{"f", "[", "m", "]"}], 
         RowBox[{
          FractionBox["1", "2"], "-", 
          RowBox[{"f", "[", "m", "]"}]}], 
         RowBox[{"f", "[", "m", "]"}], 
         RowBox[{
          FractionBox["1", "2"], "-", 
          RowBox[{"f", "[", "m", "]"}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], "==", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", "2"], "-", 
           RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            RowBox[{"f", "[", "n", "]"}]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", "2"], "-", 
           RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            RowBox[{"f", "[", "n", "]"}]}]}], ")"}]}], 
        RowBox[{"2", " ", 
         RowBox[{"f", "[", "m", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            RowBox[{"f", "[", "n", "]"}]}]}], ")"}]}], 
        RowBox[{"2", " ", 
         RowBox[{"f", "[", "m", "]"}], " ", 
         RowBox[{"f", "[", "n", "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            RowBox[{"f", "[", "m", "]"}]}]}], ")"}], " ", 
         RowBox[{"f", "[", "n", "]"}]}], 
        RowBox[{"2", " ", 
         RowBox[{"f", "[", "m", "]"}], " ", 
         RowBox[{"f", "[", "n", "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            RowBox[{"f", "[", "m", "]"}]}]}], ")"}], " ", 
         RowBox[{"f", "[", "n", "]"}]}]},
       {
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", "2"], "-", 
           RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            RowBox[{"f", "[", "n", "]"}]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", "2"], "-", 
           RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            RowBox[{"f", "[", "n", "]"}]}]}], ")"}]}], 
        RowBox[{"2", " ", 
         RowBox[{"f", "[", "m", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            RowBox[{"f", "[", "n", "]"}]}]}], ")"}]}], 
        RowBox[{"2", " ", 
         RowBox[{"f", "[", "m", "]"}], " ", 
         RowBox[{"f", "[", "n", "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            RowBox[{"f", "[", "m", "]"}]}]}], ")"}], " ", 
         RowBox[{"f", "[", "n", "]"}]}], 
        RowBox[{"2", " ", 
         RowBox[{"f", "[", "m", "]"}], " ", 
         RowBox[{"f", "[", "n", "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            RowBox[{"f", "[", "m", "]"}]}]}], ")"}], " ", 
         RowBox[{"f", "[", "n", "]"}]}]},
       {
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"f", "[", "m", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            RowBox[{"f", "[", "n", "]"}]}]}], ")"}]}], 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"f", "[", "m", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            RowBox[{"f", "[", "n", "]"}]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            RowBox[{"f", "[", "n", "]"}]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
         RowBox[{"f", "[", "n", "]"}]}], 
        RowBox[{
         RowBox[{"f", "[", "m", "]"}], " ", 
         RowBox[{"f", "[", "n", "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
         RowBox[{"f", "[", "n", "]"}]}], 
        RowBox[{
         RowBox[{"f", "[", "m", "]"}], " ", 
         RowBox[{"f", "[", "n", "]"}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"f", "[", "m", "]"}], " ", 
          RowBox[{"f", "[", "n", "]"}]}], "2"], 
        FractionBox[
         RowBox[{
          RowBox[{"f", "[", "m", "]"}], " ", 
          RowBox[{"f", "[", "n", "]"}]}], "2"], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
         RowBox[{"f", "[", "n", "]"}]}], 
        RowBox[{
         FractionBox["1", "2"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"f", "[", "n", "]"}]}], ")"}]}], "+", 
           RowBox[{
            FractionBox["1", 
             SuperscriptBox["2", "n"]], 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"3", " ", 
               RowBox[{"f", "[", "m", "]"}]}]}], ")"}]}]}], ")"}]}], 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"f", "[", "m", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"f", "[", "n", "]"}]}], ")"}]}], 
        RowBox[{
         FractionBox["1", "2"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"f", "[", "n", "]"}]}], ")"}]}], "-", 
           RowBox[{
            FractionBox["1", 
             SuperscriptBox["2", "n"]], 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"3", " ", 
               RowBox[{"f", "[", "m", "]"}]}]}], ")"}]}]}], ")"}]}], 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"f", "[", "m", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"f", "[", "n", "]"}]}], ")"}]}]},
       {
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", "2"], "-", 
           RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
         RowBox[{"f", "[", "n", "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", "2"], "-", 
           RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
         RowBox[{"f", "[", "n", "]"}]}], 
        RowBox[{"2", " ", 
         RowBox[{"f", "[", "m", "]"}], " ", 
         RowBox[{"f", "[", "n", "]"}]}], 
        RowBox[{
         RowBox[{"f", "[", "m", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"f", "[", "n", "]"}]}], ")"}]}], 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            RowBox[{"f", "[", "m", "]"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"f", "[", "n", "]"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"f", "[", "m", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"f", "[", "n", "]"}]}], ")"}]}], 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            RowBox[{"f", "[", "m", "]"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"f", "[", "n", "]"}]}], ")"}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"f", "[", "m", "]"}], " ", 
          RowBox[{"f", "[", "n", "]"}]}], "2"], 
        FractionBox[
         RowBox[{
          RowBox[{"f", "[", "m", "]"}], " ", 
          RowBox[{"f", "[", "n", "]"}]}], "2"], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
         RowBox[{"f", "[", "n", "]"}]}], 
        RowBox[{
         FractionBox["1", "2"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"f", "[", "n", "]"}]}], ")"}]}], "-", 
           RowBox[{
            FractionBox["1", 
             SuperscriptBox["2", "n"]], 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"3", " ", 
               RowBox[{"f", "[", "m", "]"}]}]}], ")"}]}]}], ")"}]}], 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"f", "[", "m", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"f", "[", "n", "]"}]}], ")"}]}], 
        RowBox[{
         FractionBox["1", "2"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"f", "[", "n", "]"}]}], ")"}]}], "+", 
           RowBox[{
            FractionBox["1", 
             SuperscriptBox["2", "n"]], 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"3", " ", 
               RowBox[{"f", "[", "m", "]"}]}]}], ")"}]}]}], ")"}]}], 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"f", "[", "m", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"f", "[", "n", "]"}]}], ")"}]}]},
       {
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", "2"], "-", 
           RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
         RowBox[{"f", "[", "n", "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", "2"], "-", 
           RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
         RowBox[{"f", "[", "n", "]"}]}], 
        RowBox[{"2", " ", 
         RowBox[{"f", "[", "m", "]"}], " ", 
         RowBox[{"f", "[", "n", "]"}]}], 
        RowBox[{
         RowBox[{"f", "[", "m", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"f", "[", "n", "]"}]}], ")"}]}], 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", 
            RowBox[{"f", "[", "m", "]"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"f", "[", "n", "]"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"f", "[", "m", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"f", "[", "n", "]"}]}], ")"}]}], 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"f", "[", "m", "]"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"f", "[", "n", "]"}]}], ")"}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "]"}]], "Input",
 CellChangeTimes->{{3.659174781120277*^9, 3.659175031455111*^9}, {
  3.6591750756762877`*^9, 3.6591751675131598`*^9}, {3.659175236989992*^9, 
  3.659175251064603*^9}, {3.659227549263359*^9, 3.659227566473933*^9}, {
  3.659227626085073*^9, 3.6592276392888937`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.659174819132677*^9, 3.6591749842954807`*^9}, {
   3.6591750165068083`*^9, 3.659175032174871*^9}, {3.659175094101841*^9, 
   3.65917516860686*^9}, {3.659175241653916*^9, 3.659175252373117*^9}, 
   3.659227683356576*^9}]
}, Open  ]],

Cell["End result:", "Text",
 CellChangeTimes->{{3.6592279049791813`*^9, 3.659227916272916*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RecMatrix", "[", 
    RowBox[{"n_", ",", "m_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"m", ">", "0"}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "2"], "-", 
             RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"f", "[", "n", "]"}]}]}], ")"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "2"], "-", 
             RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"f", "[", "n", "]"}]}]}], ")"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"f", "[", "n", "]"}]}]}], ")"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"f", "[", "m", "]"}]}]}], ")"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"f", "[", "m", "]"}]}]}], ")"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}]},
         {
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "2"], "-", 
             RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"f", "[", "n", "]"}]}]}], ")"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "2"], "-", 
             RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"f", "[", "n", "]"}]}]}], ")"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"f", "[", "n", "]"}]}]}], ")"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"f", "[", "m", "]"}]}]}], ")"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"f", "[", "m", "]"}]}]}], ")"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}]},
         {
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"f", "[", "n", "]"}]}]}], ")"}]}], 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"f", "[", "n", "]"}]}]}], ")"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"f", "[", "n", "]"}]}]}], ")"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}], 
          RowBox[{
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}], 
          RowBox[{
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}]},
         {
          FractionBox[
           RowBox[{
            RowBox[{"f", "[", "m", "]"}], " ", 
            RowBox[{"f", "[", "n", "]"}]}], "2"], 
          FractionBox[
           RowBox[{
            RowBox[{"f", "[", "m", "]"}], " ", 
            RowBox[{"f", "[", "n", "]"}]}], "2"], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}], 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"f", "[", "n", "]"}]}], ")"}]}], "+", 
             RowBox[{
              FractionBox["1", 
               SuperscriptBox["2", "n"]], 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"3", " ", 
                 RowBox[{"f", "[", "m", "]"}]}]}], ")"}]}]}], ")"}]}], 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "n", "]"}]}], ")"}]}], 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"f", "[", "n", "]"}]}], ")"}]}], "-", 
             RowBox[{
              FractionBox["1", 
               SuperscriptBox["2", "n"]], 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"3", " ", 
                 RowBox[{"f", "[", "m", "]"}]}]}], ")"}]}]}], ")"}]}], 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "n", "]"}]}], ")"}]}]},
         {
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "2"], "-", 
             RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "2"], "-", 
             RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}], 
          RowBox[{
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "n", "]"}]}], ")"}]}], 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"f", "[", "m", "]"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "n", "]"}]}], ")"}]}], 
          RowBox[{
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "n", "]"}]}], ")"}]}], 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"f", "[", "m", "]"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "n", "]"}]}], ")"}]}]},
         {
          FractionBox[
           RowBox[{
            RowBox[{"f", "[", "m", "]"}], " ", 
            RowBox[{"f", "[", "n", "]"}]}], "2"], 
          FractionBox[
           RowBox[{
            RowBox[{"f", "[", "m", "]"}], " ", 
            RowBox[{"f", "[", "n", "]"}]}], "2"], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}], 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"f", "[", "n", "]"}]}], ")"}]}], "-", 
             RowBox[{
              FractionBox["1", 
               SuperscriptBox["2", "n"]], 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"3", " ", 
                 RowBox[{"f", "[", "m", "]"}]}]}], ")"}]}]}], ")"}]}], 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "n", "]"}]}], ")"}]}], 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"f", "[", "n", "]"}]}], ")"}]}], "+", 
             RowBox[{
              FractionBox["1", 
               SuperscriptBox["2", "n"]], 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"3", " ", 
                 RowBox[{"f", "[", "m", "]"}]}]}], ")"}]}]}], ")"}]}], 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "n", "]"}]}], ")"}]}]},
         {
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "2"], "-", 
             RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "2"], "-", 
             RowBox[{"f", "[", "m", "]"}]}], ")"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"f", "[", "n", "]"}]}], 
          RowBox[{
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "n", "]"}]}], ")"}]}], 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              RowBox[{"f", "[", "m", "]"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "n", "]"}]}], ")"}]}], 
          RowBox[{
           RowBox[{"f", "[", "m", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"f", "[", "n", "]"}]}], ")"}]}], 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"f", "[", "m", "]"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"f", "[", "n", "]"}]}], ")"}]}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{"1", "-", 
           RowBox[{"2", 
            RowBox[{"f", "[", "n", "]"}]}]}], "0", "0", "0", 
          RowBox[{"2", 
           RowBox[{"f", "[", "n", "]"}]}], "0", "0"},
         {"0", 
          RowBox[{"1", "-", 
           RowBox[{"2", 
            RowBox[{"f", "[", "n", "]"}]}]}], "0", "0", "0", "0", 
          RowBox[{"2", 
           RowBox[{"f", "[", "n", "]"}]}]},
         {"0", "0", 
          RowBox[{"1", "-", 
           RowBox[{"2", 
            RowBox[{"f", "[", "n", "]"}]}]}], 
          RowBox[{"f", "[", "n", "]"}], "0", 
          RowBox[{
           RowBox[{"f", "[", "n", "]"}], " "}], "0"},
         {"0", "0", 
          RowBox[{"f", "[", "n", "]"}], 
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"f", "[", "n", "]"}]}], ")"}]}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox["1", "2"], ")"}], 
            RowBox[{"n", "+", "1"}]]}], "0", 
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"f", "[", "n", "]"}]}], ")"}]}], "-", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox["1", "2"], ")"}], 
            RowBox[{"n", "+", "1"}]]}], "0"},
         {
          RowBox[{"f", "[", "n", "]"}], "0", "0", "0", 
          RowBox[{"1", "-", 
           RowBox[{"f", "[", "n", "]"}], " "}], "0", "0"},
         {"0", "0", 
          RowBox[{"f", "[", "n", "]"}], 
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"f", "[", "n", "]"}]}], ")"}]}], "-", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox["1", "2"], ")"}], 
            RowBox[{"n", "+", "1"}]]}], "0", 
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"f", "[", "n", "]"}]}], ")"}]}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox["1", "2"], ")"}], 
            RowBox[{"n", "+", "1"}]]}], "0"},
         {"0", 
          RowBox[{
           RowBox[{"f", "[", "n", "]"}], " "}], "0", "0", "0", "0", 
          RowBox[{"1", "-", 
           RowBox[{"f", "[", "n", "]"}]}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PHRecombinantFractions", "[", 
    RowBox[{"n_", ",", "m_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"RecMatrix", "[", 
     RowBox[{"n", ",", "m"}], "]"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RecMatrix", "[", 
    RowBox[{"1", ",", "1"}], "]"}], "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.659227923612239*^9, 3.65922797434336*^9}, {
  3.65922800636343*^9, 3.659228007488817*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "0.`", ",", "0.`", ",", "0.5`", ",", "0.`", ",", "0.5`", ",", 
   "0.`"}], "}"}]], "Output",
 CellChangeTimes->{{3.659227938008506*^9, 3.659227975095057*^9}, 
   3.6592280079957123`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Matrices with Poisson distribution of crossovers", "Subsection",
 CellChangeTimes->{{3.659227846170104*^9, 3.6592278662223577`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"n", "=", "0"}], "\[Infinity]"], 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"m", "=", "0"}], "\[Infinity]"], 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["nmean", "n"], 
       RowBox[{"Exp", "[", 
        RowBox[{"-", "nmean"}], "]"}]}], 
      RowBox[{"n", "!"}]], 
     FractionBox[
      RowBox[{
       SuperscriptBox["mmean", "m"], 
       RowBox[{"Exp", "[", 
        RowBox[{"-", "mmean"}], "]"}]}], 
      RowBox[{"m", "!"}]], 
     RowBox[{"RecMatrix", "[", 
      RowBox[{"n", ",", "m"}], "]"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6592281899237556`*^9, 3.659228192050603*^9}, {
  3.659228403297007*^9, 3.6592284932973967`*^9}, {3.659228671051627*^9, 
  3.659228714117526*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "18"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"mmean", "/", "2"}]]}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "18"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"mmean", "/", "2"}]]}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"mmean", "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["2", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["2", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"mmean", "/", "2"}]]}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["2", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"mmean", "/", "2"}]]}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"mmean", "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "18"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"mmean", "/", "2"}]]}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"mmean", "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "18"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"mmean", "/", "2"}]]}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["2", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["2", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"mmean", "/", "2"}]]}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"mmean", "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["2", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"mmean", "/", "2"}]]}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "18"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "18"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"3", " ", "mmean"}], "/", "2"}]]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"3", " ", "mmean"}], "/", "2"}]]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"3", " ", "mmean"}], "/", "2"}]]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "18"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "18"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"3", " ", "mmean"}], "/", "2"}]]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "18"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], "+", 
        RowBox[{"9", " ", 
         SuperscriptBox["\[ExponentialE]", "nmean"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{"mmean", "+", "nmean"}], ")"}]}], "2"]]}]}], ")"}]}], 
     ",", 
     RowBox[{
      FractionBox["1", "18"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"3", " ", "nmean"}], "/", "2"}]]}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "18"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], "-", 
        RowBox[{"9", " ", 
         SuperscriptBox["\[ExponentialE]", "nmean"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{"mmean", "+", "nmean"}], ")"}]}], "2"]]}]}], ")"}]}], 
     ",", 
     RowBox[{
      FractionBox["1", "18"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"3", " ", "nmean"}], "/", "2"}]]}]}], ")"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "18"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"mmean", "/", "2"}]]}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "18"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"mmean", "/", "2"}]]}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"mmean", "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["2", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"3", " ", "nmean"}], "/", "2"}]]}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "18"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"mmean", "/", "2"}]]}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"3", " ", "nmean"}], "/", "2"}]]}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"3", " ", "nmean"}], "/", "2"}]]}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "18"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"mmean", "/", "2"}]]}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"mmean", "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"3", " ", "nmean"}], "/", "2"}]]}]}], ")"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "18"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "18"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"3", " ", "mmean"}], "/", "2"}]]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "18"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], "-", 
        RowBox[{"9", " ", 
         SuperscriptBox["\[ExponentialE]", "nmean"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{"mmean", "+", "nmean"}], ")"}]}], "2"]]}]}], ")"}]}], 
     ",", 
     RowBox[{
      FractionBox["1", "18"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"3", " ", "nmean"}], "/", "2"}]]}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "18"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], "+", 
        RowBox[{"9", " ", 
         SuperscriptBox["\[ExponentialE]", "nmean"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{"mmean", "+", "nmean"}], ")"}]}], "2"]]}]}], ")"}]}], 
     ",", 
     RowBox[{
      FractionBox["1", "18"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"3", " ", "nmean"}], "/", "2"}]]}]}], ")"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "18"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"mmean", "/", "2"}]]}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"mmean", "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "18"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"mmean", "/", "2"}]]}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["2", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"3", " ", "nmean"}], "/", "2"}]]}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "18"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"mmean", "/", "2"}]]}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"mmean", "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"3", " ", "nmean"}], "/", "2"}]]}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"3", " ", "nmean"}], "/", "2"}]]}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "18"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"mmean", "/", "2"}]]}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"3", " ", "nmean"}], "/", "2"}]]}]}], ")"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6592286974926434`*^9, 3.659229062764839*^9}]
}, Open  ]],

Cell["Extracting the first row and wrting :", "Text",
 CellChangeTimes->{{3.659320013678679*^9, 3.659320025814378*^9}, {
  3.659323922342597*^9, 3.659323923325287*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["g", "n"], "=", 
   RowBox[{
    FractionBox["1", "3"], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        RowBox[{"nmean", "/", "2"}]}]]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    SubscriptBox["g", "m"], "=", 
    RowBox[{
     FractionBox["1", "3"], 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "3"}], " ", 
         RowBox[{"mmean", "/", "2"}]}]]}], ")"}]}]}], 
   ";"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["h", "n"], "=", 
   RowBox[{
    FractionBox["1", "3"], 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"2", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "3"}], " ", 
         RowBox[{"nmean", "/", "2"}]}]]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    SubscriptBox["h", "m"], "=", 
    RowBox[{
     FractionBox["1", "3"], 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "3"}], " ", 
          RowBox[{"mmean", "/", "2"}]}]]}]}], ")"}]}]}], ";"}]}]}], "Input",
 CellChangeTimes->{{3.659320872266098*^9, 3.659320924143434*^9}, 
   3.659320985061043*^9, {3.6593211626404877`*^9, 3.6593211637511578`*^9}, {
   3.659322102272883*^9, 3.659322133959867*^9}, {3.659323333953582*^9, 
   3.659323357880301*^9}}],

Cell["Extracting the first row and writing as a function:", "Text",
 CellChangeTimes->{{3.6593239347984037`*^9, 3.6593239458607264`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PHRecombinantFractionsPoisson", "[", 
    RowBox[{"nmean_", ",", "mmean_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "18"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"mmean", "/", "2"}]]}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "18"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"mmean", "/", "2"}]]}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"mmean", "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["2", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["2", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"mmean", "/", "2"}]]}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["2", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"mmean", "/", "2"}]]}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"mmean", "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6592293107914267`*^9, 3.6592293293272142`*^9}, {
  3.659229398327846*^9, 3.659229401995635*^9}}],

Cell["Expressing in human - friendly form:", "Text",
 CellChangeTimes->{{3.659323950202587*^9, 3.659323959108358*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["g", "n"], "=", 
   RowBox[{
    FractionBox["1", "3"], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        RowBox[{"nmean", "/", "2"}]}]]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    SubscriptBox["g", "m"], "=", 
    RowBox[{
     FractionBox["1", "3"], 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "3"}], " ", 
         RowBox[{"mmean", "/", "2"}]}]]}], ")"}]}]}], 
   ";"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["h", "n"], "=", 
   RowBox[{
    FractionBox["1", "3"], 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"2", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "3"}], " ", 
         RowBox[{"nmean", "/", "2"}]}]]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    SubscriptBox["h", "m"], "=", 
    RowBox[{
     FractionBox["1", "3"], 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "3"}], " ", 
          RowBox[{"mmean", "/", "2"}]}]]}]}], ")"}]}]}], ";"}]}]}], "Input",
 CellChangeTimes->{{3.659320872266098*^9, 3.659320924143434*^9}, 
   3.659320985061043*^9, {3.6593211626404877`*^9, 3.6593211637511578`*^9}, {
   3.659322102272883*^9, 3.659322133959867*^9}, {3.659323333953582*^9, 
   3.659323357880301*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], "  ", 
      SubscriptBox["h", "n"], 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["h", "m"], "+", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", " ", "mmean"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], 
      SubscriptBox["h", "n"], " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["h", "m"], "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", " ", "mmean"}]]}], ")"}]}], " ", ",", 
     RowBox[{"2", 
      SubscriptBox["h", "n"], " ", 
      SubscriptBox["g", "m"]}], ",", 
     RowBox[{"2", " ", 
      SubscriptBox["g", "n"], " ", 
      SubscriptBox["g", "m"]}], ",", " ", 
     RowBox[{
      SubscriptBox["g", "n"], " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["h", "m"], "+", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", " ", "mmean"}]]}], ")"}]}], " ", ",", 
     RowBox[{"2", " ", 
      SubscriptBox["g", "n"], " ", 
      SubscriptBox["g", "m"]}], ",", 
     RowBox[{
      SubscriptBox["g", "n"], " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["h", "m"], "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", " ", "mmean"}]]}], ")"}]}]}], " ", "}"}], "==", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "18"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"mmean", "/", "2"}]]}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "18"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"mmean", "/", "2"}]]}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"mmean", "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["2", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["2", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"mmean", "/", "2"}]]}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["2", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "9"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], " ", 
        RowBox[{"(", 
         RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"mmean", "/", "2"}]]}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"mmean", "/", "2"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6593239965142317`*^9, 3.6593239979590807`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.659324000703376*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{"PHRecombinantFractionsPoisson", "[", 
     RowBox[{"nmean", ",", "mmean"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"nmean", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"mmean", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.659229344514658*^9, 3.659229424783578*^9}}],

Cell["\<\
What is the fraction of recombinant gametes (between A and B) that would \
arise without automixis?\
\>", "Text",
 CellChangeTimes->{{3.659235019150425*^9, 3.6592350419753923`*^9}, {
  3.659235099316708*^9, 3.659235105839486*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RecGametes", "[", "PHrecfracs_", "]"}], ":=", 
   RowBox[{"PHrecfracs", ".", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", 
      RowBox[{"1", "/", "2"}], ",", 
      RowBox[{"1", "/", "2"}], ",", "0", ",", 
      RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{"RecGametes", "[", 
     RowBox[{"PHRecombinantFractionsPoisson", "[", 
      RowBox[{"nmean", ",", "mmean"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"nmean", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"mmean", ",", "0", ",", "10"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.659235051367443*^9, 3.6592351980149107`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"RecGametes", "[", 
   RowBox[{"PHRecombinantFractionsPoisson", "[", 
    RowBox[{"nmean", ",", "mmean"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.659235249581978*^9, 3.6592352557668457`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], "-", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "mmean"}]], "2"]}]], "Output",
 CellChangeTimes->{3.659235256398876*^9}]
}, Open  ]],

Cell["\<\
This result demonstrates that the expected number of crossovers, mmean, \
corresponds to 2m in Haldane\[CloseCurlyQuote]s mapping function.\
\>", "Text",
 CellChangeTimes->{{3.659235347768724*^9, 3.659235389940509*^9}, {
  3.65923549787656*^9, 3.659235512918693*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Testing overall recombination routine", "Subsection",
 CellChangeTimes->{{3.659231549616074*^9, 3.659231569618512*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"TableForm", "[", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{"getRecombinantMatrix", "[", 
       RowBox[{"n", ",", "m"}], "]"}], "]"}], ",", 
     RowBox[{"TableHeadings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"diploidGenotypes", ",", " ", "metaphaseGenotypes"}], 
       "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5972700155303307`*^9, 3.597270044981328*^9}, {
  3.597274653263917*^9, 3.597274653363111*^9}, {3.597274685008656*^9, 
  3.597274687997109*^9}, {3.597274740538233*^9, 3.5972747741499*^9}, {
  3.5972751072162247`*^9, 3.597275107342215*^9}, {3.597276254277603*^9, 
  3.597276268282874*^9}, {3.597277249311865*^9, 3.5972772494685287`*^9}, {
  3.597277357310026*^9, 3.5972773610285254`*^9}, {3.659231618645731*^9, 
  3.659231643355171*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"TableForm", "[", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{"getRecombinantMatrixPoisson", "[", 
       RowBox[{"nmean", ",", "mmean"}], "]"}], "]"}], ",", 
     RowBox[{"TableHeadings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"diploidGenotypes", ",", " ", "metaphaseGenotypes"}], 
       "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"nmean", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"mmean", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5972700155303307`*^9, 3.597270044981328*^9}, {
  3.597274653263917*^9, 3.597274653363111*^9}, {3.597274685008656*^9, 
  3.597274687997109*^9}, {3.597274740538233*^9, 3.5972747741499*^9}, {
  3.5972751072162247`*^9, 3.597275107342215*^9}, {3.597276254277603*^9, 
  3.597276268282874*^9}, {3.597277249311865*^9, 3.5972772494685287`*^9}, {
  3.597277357310026*^9, 3.5972773610285254`*^9}, {3.659231618645731*^9, 
  3.659231643355171*^9}, {3.659231768054438*^9, 3.659231780157145*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Offspring fractions with different modes of automixis - one locus\
\>", "Subsection",
 CellChangeTimes->{{3.6592318156531143`*^9, 3.659231820074871*^9}, {
  3.659306256962964*^9, 3.6593062825957823`*^9}, {3.659400109960919*^9, 
  3.659400138822451*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"TableForm", "[", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"getAutomixisMatrixPoisson", "[", 
        RowBox[{"nmean", ",", "0", ",", "mode"}], "]"}], 
       "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4", ",", "8"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4", ",", "8"}], "}"}]}], 
       "\[RightDoubleBracket]"}], "]"}], ",", 
     RowBox[{"TableHeadings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<aa\>\"", ",", "\"\<Aa\>\"", ",", "\"\<AA\>\""}], "}"}], 
        ",", " ", 
        RowBox[{"{", 
         RowBox[{"\"\<aa\>\"", ",", "\"\<Aa\>\"", ",", "\"\<AA\>\""}], 
         "}"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"mode", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<CentralFusion\>\"", ",", "\"\<TerminalFusion\>\"", ",", 
       "\"\<GameteDuplication\>\""}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"nmean", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6592318631006613`*^9, 3.6592318865922623`*^9}, {
  3.659233107946651*^9, 3.659233112246409*^9}, {3.6593060196836977`*^9, 
  3.659306074630151*^9}, {3.6593064654173717`*^9, 3.659306468943915*^9}, {
  3.659400214179243*^9, 3.659400322280151*^9}}],

Cell["\<\
Formulae for \[Gamma], the fraction of homozygous offspring produced by \
heterozygous mother:\
\>", "Text",
 CellChangeTimes->{{3.659400394743754*^9, 3.659400417590804*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"getAutomixisMatrixPoisson", "[", 
      RowBox[{"nmean", ",", "0", ",", "\"\<CentralFusion\>\""}], "]"}], 
     "\[LeftDoubleBracket]", 
     RowBox[{"4", ",", "i"}], "\[RightDoubleBracket]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "8"}], "}"}]}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.659400367459261*^9, 3.659400392272889*^9}, {
  3.659400445738253*^9, 3.659400479225945*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "3"], "-", 
  RowBox[{
   FractionBox["1", "3"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", "nmean"}], "/", "2"}]]}]}]], "Output",
 CellChangeTimes->{3.659400479975263*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"getAutomixisMatrixPoisson", "[", 
      RowBox[{"nmean", ",", "0", ",", "\"\<TerminalFusion\>\""}], "]"}], 
     "\[LeftDoubleBracket]", 
     RowBox[{"4", ",", "i"}], "\[RightDoubleBracket]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "8"}], "}"}]}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.65940049494494*^9, 3.659400495680834*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "3"], "+", 
  RowBox[{
   FractionBox["2", "3"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", "nmean"}], "/", "2"}]]}]}]], "Output",
 CellChangeTimes->{3.6594004965145597`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"getAutomixisMatrixPoisson", "[", 
      RowBox[{"nmean", ",", "0", ",", "\"\<GameteDuplication\>\""}], "]"}], 
     "\[LeftDoubleBracket]", 
     RowBox[{"4", ",", "i"}], "\[RightDoubleBracket]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "8"}], "}"}]}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.65940049494494*^9, 3.659400495680834*^9}, {
  3.659400688729426*^9, 3.6594006920482473`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.6594004965145597`*^9, 3.6594006927109213`*^9}]
}, Open  ]],

Cell["Same quantities expressed in Morgans:", "Text",
 CellChangeTimes->{{3.6594006663168364`*^9, 3.6594007079113827`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"getAutomixisMatrixPoisson", "[", 
       RowBox[{
        RowBox[{"convertMToCOs", "[", "c", "]"}], ",", "0", ",", 
        "\"\<CentralFusion\>\""}], "]"}], "\[LeftDoubleBracket]", 
      RowBox[{"4", ",", "i"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "8"}], "}"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{"c", "<", 
      RowBox[{"1", "/", "2"}]}], " ", "&&", " ", 
     RowBox[{"c", ">", "0"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.659400367459261*^9, 3.659400392272889*^9}, {
  3.659400445738253*^9, 3.659400479225945*^9}, {3.6594007547845097`*^9, 
  3.659400820401278*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "3"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"2", " ", "c"}]}], ")"}], 
      RowBox[{"3", "/", "2"}]]]}], ")"}], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"2", " ", "c"}]}], ")"}], 
   RowBox[{"3", "/", "2"}]]}]], "Output",
 CellChangeTimes->{
  3.659400479975263*^9, {3.659400774197549*^9, 3.659400821301054*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"getAutomixisMatrixPoisson", "[", 
       RowBox[{
        RowBox[{"convertMToCOs", "[", "c", "]"}], ",", "0", ",", 
        "\"\<CentralFusion\>\""}], "]"}], "\[LeftDoubleBracket]", 
      RowBox[{"4", ",", "i"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "8"}], "}"}]}], "}"}]}], "]"}], "\[Equal]", 
   RowBox[{
    FractionBox["1", "3"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"2", " ", "c"}]}], ")"}], 
       RowBox[{"3", "/", "2"}]]}], ")"}]}]}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.6594009397276583`*^9, 3.659400968570107*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.659400946342906*^9, 3.6594009695323057`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"getAutomixisMatrixPoisson", "[", 
       RowBox[{
        RowBox[{"convertMToCOs", "[", "c", "]"}], ",", "0", ",", 
        "\"\<TerminalFusion\>\""}], "]"}], "\[LeftDoubleBracket]", 
      RowBox[{"4", ",", "i"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "8"}], "}"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{"c", "<", 
      RowBox[{"1", "/", "2"}]}], " ", "&&", " ", 
     RowBox[{"c", ">", "0"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.659400924724976*^9, 3.659400925643117*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "3"], " ", 
  RowBox[{"(", 
   RowBox[{"2", "+", 
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"2", " ", "c"}]}], ")"}], 
      RowBox[{"3", "/", "2"}]]]}], ")"}], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"2", " ", "c"}]}], ")"}], 
   RowBox[{"3", "/", "2"}]]}]], "Output",
 CellChangeTimes->{3.659400926465732*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"getAutomixisMatrixPoisson", "[", 
       RowBox[{
        RowBox[{"convertMToCOs", "[", "c", "]"}], ",", "0", ",", 
        "\"\<TerminalFusion\>\""}], "]"}], "\[LeftDoubleBracket]", 
      RowBox[{"4", ",", "i"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "8"}], "}"}]}], "}"}]}], "]"}], "\[Equal]", 
   RowBox[{
    FractionBox["1", "3"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"2", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "c"}]}], ")"}], 
        RowBox[{"3", "/", "2"}]]}]}], ")"}]}]}], "  ", "]"}]], "Input",
 CellChangeTimes->{{3.6594010085763063`*^9, 3.65940106261832*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.659401009627421*^9, 3.659401063205428*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"getAutomixisMatrixPoisson", "[", 
       RowBox[{
        RowBox[{"convertMToCOs", "[", "c", "]"}], ",", "0", ",", 
        "\"\<GameteDuplication\>\""}], "]"}], "\[LeftDoubleBracket]", 
      RowBox[{"4", ",", "i"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "8"}], "}"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{"c", "<", 
      RowBox[{"1", "/", "2"}]}], " ", "&&", " ", 
     RowBox[{"c", ">", "0"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.659401074044422*^9, 3.659401078150976*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.659401078738359*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Offspring fractions with different modes of automixis - two loci\
\>", "Subsection",
 CellChangeTimes->{{3.6592318156531143`*^9, 3.659231820074871*^9}, {
  3.659306256962964*^9, 3.6593062825957823`*^9}, {3.659400109960919*^9, 
  3.659400125926281*^9}}],

Cell["\<\
Checking if offspring fraction always sum to 1 for all modes of automixis \
considered:\
\>", "Text",
 CellChangeTimes->{{3.659306399948503*^9, 3.659306437023234*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Simplify", "[", 
  RowBox[{"Total", "[", 
   RowBox[{
    RowBox[{"getAutomixisMatrixPoisson", "[", 
     RowBox[{"nmean", ",", "mmean", ",", "\"\<CentralFusion\>\""}], "]"}], 
    ",", 
    RowBox[{"{", "2", "}"}]}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{"Total", "[", 
   RowBox[{
    RowBox[{"getAutomixisMatrixPoisson", "[", 
     RowBox[{"nmean", ",", "mmean", ",", "\"\<TerminalFusion\>\""}], "]"}], 
    ",", 
    RowBox[{"{", "2", "}"}]}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{"Total", "[", 
   RowBox[{
    RowBox[{"getAutomixisMatrixPoisson", "[", 
     RowBox[{"nmean", ",", "mmean", ",", "\"\<GameteDuplication\>\""}], "]"}],
     ",", 
    RowBox[{"{", "2", "}"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.659306323185932*^9, 3.6593064306898603`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.659306382567951*^9, 3.6593063893353148`*^9}, 
   3.659306439532799*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.659306382567951*^9, 3.6593063893353148`*^9}, 
   3.6593064395685472`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.659306382567951*^9, 3.6593063893353148`*^9}, 
   3.659306439600008*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"TableForm", "[", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{"getAutomixisMatrixPoisson", "[", 
       RowBox[{"nmean", ",", "mmean", ",", "mode"}], "]"}], "]"}], ",", 
     RowBox[{"TableHeadings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"diploidGenotypes", ",", " ", "diploidGenotypes"}], "}"}]}]}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"mode", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<CentralFusion\>\"", ",", "\"\<TerminalFusion\>\"", ",", 
       "\"\<GameteDuplication\>\""}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"nmean", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"mmean", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6592318631006613`*^9, 3.6592318865922623`*^9}, {
  3.659233107946651*^9, 3.659233112246409*^9}, {3.6593060196836977`*^9, 
  3.659306074630151*^9}, {3.6593064654173717`*^9, 3.659306468943915*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Specific results for central fusion automixis", "Subsection",
 CellChangeTimes->{{3.659299158966617*^9, 3.659299183987574*^9}, 
   3.6593025217072077`*^9}],

Cell["\<\
Total fractions of double-heterozygotes, single-heterozygotes and \
double-homozygotes produced by double-heterozygous mother:\
\>", "Text",
 CellChangeTimes->{{3.6592341394405403`*^9, 3.6592341461125813`*^9}, {
  3.659237941362063*^9, 3.6592380116298523`*^9}, {3.659295459444996*^9, 
  3.6592954607353897`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Print", "[", "\"\<Offspring homozygous at locus A:\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"getAutomixisMatrixPoisson", "[", 
     RowBox[{"nmean", ",", "mmean", ",", "\"\<CentralFusion\>\""}], "]"}], 
    "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], ".", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1",
      ",", "1", ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Offspring homozygous at locus B:\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"getAutomixisMatrixPoisson", "[", 
      RowBox[{"nmean", ",", "mmean", ",", "\"\<CentralFusion\>\""}], "]"}], 
     "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], ".", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", 
      "1", ",", "0", ",", "1"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Offspring heterozygous at both loci:\>\"", "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"getAutomixisMatrixPoisson", "[", 
     RowBox[{"nmean", ",", "mmean", ",", "\"\<CentralFusion\>\""}], "]"}], 
    "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], ".", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0",
      ",", "0", ",", "0"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Offspring heterozygous only at A:\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"getAutomixisMatrixPoisson", "[", 
     RowBox[{"nmean", ",", "mmean", ",", "\"\<CentralFusion\>\""}], "]"}], 
    "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], ".", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0",
      ",", "0", ",", "0"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Offspring heterozygous only at B:\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"getAutomixisMatrixPoisson", "[", 
     RowBox[{"nmean", ",", "mmean", ",", "\"\<CentralFusion\>\""}], "]"}], 
    "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], ".", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "1", ",", "0"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Offspring homozygous at both loci:\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"getAutomixisMatrixPoisson", "[", 
     RowBox[{"nmean", ",", "mmean", ",", "\"\<CentralFusion\>\""}], "]"}], 
    "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], ".", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1",
      ",", "0", ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.659295556021268*^9, 3.659295786994906*^9}, {
  3.659296398257366*^9, 3.659296493743269*^9}}],

Cell[BoxData["\<\"Offspring homozygous at locus A:\"\>"], "Print",
 CellChangeTimes->{3.659295751124391*^9, 3.659295788860633*^9, 
  3.659296448423785*^9, 3.6592964962304907`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "3"], "-", 
  RowBox[{
   FractionBox["1", "3"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", "nmean"}], "/", "2"}]]}]}]], "Output",
 CellChangeTimes->{3.659295751144595*^9, 3.6592957888860598`*^9, 
  3.659296448434004*^9, 3.659296496251786*^9}],

Cell[BoxData["\<\"Offspring homozygous at locus B:\"\>"], "Print",
 CellChangeTimes->{3.659295751124391*^9, 3.659295788860633*^9, 
  3.659296448423785*^9, 3.659296496267684*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "3"], "-", 
  RowBox[{
   FractionBox["1", "3"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["3", "2"]}], " ", 
     RowBox[{"(", 
      RowBox[{"mmean", "+", "nmean"}], ")"}]}]]}]}]], "Output",
 CellChangeTimes->{3.659295751144595*^9, 3.6592957888860598`*^9, 
  3.659296448434004*^9, 3.659296496275322*^9}],

Cell[BoxData["\<\"Offspring heterozygous at both loci:\"\>"], "Print",
 CellChangeTimes->{3.659295751124391*^9, 3.659295788860633*^9, 
  3.659296448423785*^9, 3.659296496291985*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "9"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["3", "2"]}], " ", 
    RowBox[{"(", 
     RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"3", " ", "mmean"}], "/", "2"}]]}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"3", " ", "nmean"}], "/", "2"}]]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.659295751144595*^9, 3.6592957888860598`*^9, 
  3.659296448434004*^9, 3.659296496299862*^9}],

Cell[BoxData["\<\"Offspring heterozygous only at A:\"\>"], "Print",
 CellChangeTimes->{3.659295751124391*^9, 3.659295788860633*^9, 
  3.659296448423785*^9, 3.659296496312364*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "9"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["3", "2"]}], " ", 
    RowBox[{"(", 
     RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"3", " ", "nmean"}], "/", "2"}]]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.659295751144595*^9, 3.6592957888860598`*^9, 
  3.659296448434004*^9, 3.659296496323558*^9}],

Cell[BoxData["\<\"Offspring heterozygous only at B:\"\>"], "Print",
 CellChangeTimes->{3.659295751124391*^9, 3.659295788860633*^9, 
  3.659296448423785*^9, 3.6592964963379803`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["2", "9"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["3", "2"]}], " ", 
    RowBox[{"(", 
     RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.659295751144595*^9, 3.6592957888860598`*^9, 
  3.659296448434004*^9, 3.659296496348289*^9}],

Cell[BoxData["\<\"Offspring homozygous at both loci:\"\>"], "Print",
 CellChangeTimes->{3.659295751124391*^9, 3.659295788860633*^9, 
  3.659296448423785*^9, 3.659296496362726*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "9"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["3", "2"]}], " ", 
    RowBox[{"(", 
     RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
  RowBox[{"(", 
   RowBox[{"2", "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.659295751144595*^9, 3.6592957888860598`*^9, 
  3.659296448434004*^9, 3.659296496375031*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Gamma]A", "=", 
   RowBox[{
    FractionBox["1", "3"], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], "nmean"}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]B", "=", 
   RowBox[{
    FractionBox["1", "3"], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["3", "2"]}], 
        RowBox[{"(", 
         RowBox[{"nmean", "+", "mmean"}], ")"}]}], "]"}]}], ")"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.659295853857259*^9, 3.659295937544289*^9}, {
   3.659295981457409*^9, 3.659296007310597*^9}, {3.6592960861367493`*^9, 
   3.659296131182021*^9}, {3.65929627465825*^9, 3.6592962973777523`*^9}, {
   3.6592963594350967`*^9, 3.659296377470585*^9}, {3.659296552490959*^9, 
   3.6592965919127617`*^9}, 3.659296686170681*^9, {3.6592967646742363`*^9, 
   3.659296771950523*^9}, {3.659297464849636*^9, 3.6592974818114643`*^9}, {
   3.6593009487763357`*^9, 3.659300950625004*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "9"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "2"]}], " ", 
      RowBox[{"(", 
       RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], "==", 
   RowBox[{"\[Gamma]A", 
    RowBox[{"(", 
     RowBox[{"\[Gamma]B", "+", 
      RowBox[{
       FractionBox["1", "3"], 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["3", "2"]}], " ", "mmean"}]], 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["3", "2"]}], " ", "nmean"}]]}], ")"}]}], ")"}]}]}], 
     " ", ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.659407438246868*^9, 3.659407599181945*^9}, {
  3.659407636215396*^9, 3.659407773111652*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.659407473273416*^9, 3.6594075035157413`*^9}, {
   3.659407533865863*^9, 3.659407562007185*^9}, 3.659407600478348*^9, {
   3.659407642277378*^9, 3.65940770638446*^9}, 3.659407740691173*^9, 
   3.659407774298544*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "9"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "2"]}], " ", 
      RowBox[{"(", 
       RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], "==", 
   RowBox[{
    FractionBox["1", "3"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        RowBox[{"nmean", "/", "2"}]}]]}], ")"}], 
    FractionBox["1", "3"], 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"2", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["3", "2"]}], " ", "mmean"}]]}]}], ")"}]}]}], " ", 
  "]"}]], "Input",
 CellChangeTimes->{{3.659407438246868*^9, 3.659407599181945*^9}, {
  3.659407636215396*^9, 3.659407679046826*^9}, {3.659407819846551*^9, 
  3.65940791946102*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.659407473273416*^9, 3.6594075035157413`*^9}, {
   3.659407533865863*^9, 3.659407562007185*^9}, 3.659407600478348*^9, {
   3.659407642277378*^9, 3.659407680076829*^9}, 3.6594078217491903`*^9, {
   3.659407859576449*^9, 3.659407867404519*^9}, {3.6594079026549*^9, 
   3.659407921072403*^9}}]
}, Open  ]],

Cell["\<\
Plotting this result. The orange surface shows the actual results above \
whereas the blue surface shows expectations based on independence of \
homozygosity acquisition rates at the two loci.\
\>", "Text",
 CellChangeTimes->{{3.65930095595588*^9, 3.659300965754032*^9}, {
  3.659301887999057*^9, 3.6593019276053534`*^9}}],

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Plot3D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           FractionBox["1", "9"], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["3", "2"]}], " ", 
             RowBox[{"(", 
              RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"3", " ", "mmean"}], "/", "2"}]]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"3", " ", "nmean"}], "/", "2"}]]}]}], ")"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              FractionBox["1", "3"], 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"Exp", "[", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox["3", "2"]}], "nmean"}], "]"}]}], ")"}]}]}], 
            ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              FractionBox["1", "3"], 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"Exp", "[", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox["3", "2"]}], 
                  RowBox[{"(", 
                   RowBox[{"nmean", "+", "mmean"}], ")"}]}], "]"}]}], 
               ")"}]}]}], ")"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"nmean", ",", "0", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"mmean", ",", "0", ",", "5"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "/", "3"}], ",", "1"}], "}"}]}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Both heterozygous\>\"", ",", "12"}], "]"}]}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<n\>\"", ",", "\"\<m\>\"", ",", "\"\<frac\>\""}], 
          "}"}]}], ",", 
        RowBox[{"AxesStyle", "\[Rule]", "12"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Plot3D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           FractionBox["1", "9"], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["3", "2"]}], " ", 
             RowBox[{"(", 
              RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"3", " ", "nmean"}], "/", "2"}]]}]}], ")"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              FractionBox["1", "3"], 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"Exp", "[", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox["3", "2"]}], "nmean"}], "]"}]}], ")"}]}]}], 
            ")"}], 
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "3"], 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox["3", "2"]}], 
                 RowBox[{"(", 
                  RowBox[{"nmean", "+", "mmean"}], ")"}]}], "]"}]}], ")"}]}], 
            ")"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"nmean", ",", "0", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"mmean", ",", "0", ",", "10"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"1", "/", "3"}]}], "}"}]}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<A hetero, B homo\>\"", ",", "12"}], "]"}]}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<n\>\"", ",", "\"\<m\>\"", ",", "\"\<frac\>\""}], 
          "}"}]}], ",", 
        RowBox[{"AxesStyle", "\[Rule]", "12"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Plot3D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           FractionBox["2", "9"], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["3", "2"]}], " ", 
             RowBox[{"(", 
              RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "3"], 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox["3", "2"]}], "nmean"}], "]"}]}], ")"}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              FractionBox["1", "3"], 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"Exp", "[", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox["3", "2"]}], 
                  RowBox[{"(", 
                   RowBox[{"nmean", "+", "mmean"}], ")"}]}], "]"}]}], 
               ")"}]}]}], ")"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"nmean", ",", "0", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"mmean", ",", "0", ",", "10"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"1", "/", "3"}]}], "}"}]}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<A homo, B hetero\>\"", ",", "12"}], "]"}]}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<n\>\"", ",", "\"\<m\>\"", ",", "\"\<frac\>\""}], 
          "}"}]}], ",", 
        RowBox[{"AxesStyle", "\[Rule]", "12"}]}], "]"}], ",", 
      RowBox[{"Plot3D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           FractionBox["1", "9"], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["3", "2"]}], " ", 
             RowBox[{"(", 
              RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "3"], 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox["3", "2"]}], "nmean"}], "]"}]}], ")"}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "3"], 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", 
                  FractionBox["3", "2"]}], 
                 RowBox[{"(", 
                  RowBox[{"nmean", "+", "mmean"}], ")"}]}], "]"}]}], ")"}]}], 
            ")"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"nmean", ",", "0", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"mmean", ",", "0", ",", "10"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"1", "/", "3"}]}], "}"}]}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Both homozygous\>\"", ",", "12"}], "]"}]}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<n\>\"", ",", "\"\<m\>\"", ",", "\"\<frac\>\""}], 
          "}"}]}], ",", 
        RowBox[{"AxesStyle", "\[Rule]", "12"}]}], "]"}]}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.659300968186591*^9, 3.65930115084226*^9}, {
  3.659301208618598*^9, 3.659301323867011*^9}, {3.6593013751579323`*^9, 
  3.659301378475636*^9}, {3.65930142294051*^9, 3.659301582067913*^9}, {
  3.659301621942897*^9, 3.6593016305165787`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Specific results for terminal fusion automixis", "Subsection",
 CellChangeTimes->{{3.659299158966617*^9, 3.659299183987574*^9}, 
   3.6593025217072077`*^9, {3.659408705363635*^9, 3.659408706179594*^9}}],

Cell["\<\
Total fractions of double-heterozygotes, single-heterozygotes and \
double-homozygotes produced by double-heterozygous mother:\
\>", "Text",
 CellChangeTimes->{{3.6592341394405403`*^9, 3.6592341461125813`*^9}, {
  3.659237941362063*^9, 3.6592380116298523`*^9}, {3.659295459444996*^9, 
  3.6592954607353897`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Print", "[", "\"\<Offspring homozygous at locus A:\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"getAutomixisMatrixPoisson", "[", 
     RowBox[{"nmean", ",", "mmean", ",", "\"\<TerminalFusion\>\""}], "]"}], 
    "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], ".", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1",
      ",", "1", ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Offspring homozygous at locus B:\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"getAutomixisMatrixPoisson", "[", 
      RowBox[{"nmean", ",", "mmean", ",", "\"\<TerminalFusion\>\""}], "]"}], 
     "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], ".", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", 
      "1", ",", "0", ",", "1"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Offspring heterozygous at both loci:\>\"", "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"getAutomixisMatrixPoisson", "[", 
     RowBox[{"nmean", ",", "mmean", ",", "\"\<TerminalFusion\>\""}], "]"}], 
    "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], ".", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0",
      ",", "0", ",", "0"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Offspring heterozygous only at A:\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"getAutomixisMatrixPoisson", "[", 
     RowBox[{"nmean", ",", "mmean", ",", "\"\<TerminalFusion\>\""}], "]"}], 
    "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], ".", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0",
      ",", "0", ",", "0"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Offspring heterozygous only at B:\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"getAutomixisMatrixPoisson", "[", 
     RowBox[{"nmean", ",", "mmean", ",", "\"\<TerminalFusion\>\""}], "]"}], 
    "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], ".", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "1", ",", "0"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Offspring homozygous at both loci:\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"getAutomixisMatrixPoisson", "[", 
     RowBox[{"nmean", ",", "mmean", ",", "\"\<TerminalFusion\>\""}], "]"}], 
    "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], ".", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1",
      ",", "0", ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.659295556021268*^9, 3.659295786994906*^9}, {
  3.659296398257366*^9, 3.659296493743269*^9}, {3.6594087136598997`*^9, 
  3.659408729012764*^9}}],

Cell[BoxData["\<\"Offspring homozygous at locus A:\"\>"], "Print",
 CellChangeTimes->{3.659295751124391*^9, 3.659295788860633*^9, 
  3.659296448423785*^9, 3.6592964962304907`*^9, 3.659408737174079*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "3"], "+", 
  RowBox[{
   FractionBox["2", "3"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", "nmean"}], "/", "2"}]]}]}]], "Output",
 CellChangeTimes->{3.659295751144595*^9, 3.6592957888860598`*^9, 
  3.659296448434004*^9, 3.659296496251786*^9, 3.659408737195558*^9}],

Cell[BoxData["\<\"Offspring homozygous at locus B:\"\>"], "Print",
 CellChangeTimes->{3.659295751124391*^9, 3.659295788860633*^9, 
  3.659296448423785*^9, 3.6592964962304907`*^9, 3.65940873721*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "3"], "+", 
  RowBox[{
   FractionBox["2", "3"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["3", "2"]}], " ", 
     RowBox[{"(", 
      RowBox[{"mmean", "+", "nmean"}], ")"}]}]]}]}]], "Output",
 CellChangeTimes->{3.659295751144595*^9, 3.6592957888860598`*^9, 
  3.659296448434004*^9, 3.659296496251786*^9, 3.659408737219406*^9}],

Cell[BoxData["\<\"Offspring heterozygous at both loci:\"\>"], "Print",
 CellChangeTimes->{3.659295751124391*^9, 3.659295788860633*^9, 
  3.659296448423785*^9, 3.6592964962304907`*^9, 3.659408737232983*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["2", "9"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["3", "2"]}], " ", 
    RowBox[{"(", 
     RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"3", " ", "mmean"}], "/", "2"}]]}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.659295751144595*^9, 3.6592957888860598`*^9, 
  3.659296448434004*^9, 3.659296496251786*^9, 3.6594087372418013`*^9}],

Cell[BoxData["\<\"Offspring heterozygous only at A:\"\>"], "Print",
 CellChangeTimes->{3.659295751124391*^9, 3.659295788860633*^9, 
  3.659296448423785*^9, 3.6592964962304907`*^9, 3.659408737254122*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["2", "9"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["3", "2"]}], " ", 
    RowBox[{"(", 
     RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.659295751144595*^9, 3.6592957888860598`*^9, 
  3.659296448434004*^9, 3.659296496251786*^9, 3.659408737262796*^9}],

Cell[BoxData["\<\"Offspring heterozygous only at B:\"\>"], "Print",
 CellChangeTimes->{3.659295751124391*^9, 3.659295788860633*^9, 
  3.659296448423785*^9, 3.6592964962304907`*^9, 3.659408737274931*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["2", "9"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["3", "2"]}], " ", 
    RowBox[{"(", 
     RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"2", "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.659295751144595*^9, 3.6592957888860598`*^9, 
  3.659296448434004*^9, 3.659296496251786*^9, 3.659408737283663*^9}],

Cell[BoxData["\<\"Offspring homozygous at both loci:\"\>"], "Print",
 CellChangeTimes->{3.659295751124391*^9, 3.659295788860633*^9, 
  3.659296448423785*^9, 3.6592964962304907`*^9, 3.659408737295203*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "9"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["3", "2"]}], " ", 
    RowBox[{"(", 
     RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
  RowBox[{"(", 
   RowBox[{"2", "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"2", "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.659295751144595*^9, 3.6592957888860598`*^9, 
  3.659296448434004*^9, 3.659296496251786*^9, 3.659408737302989*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Gamma]A", "=", 
   RowBox[{
    FractionBox["1", "3"], 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", "nmean"}], "/", "2"}]]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]B", "=", 
   RowBox[{
    FractionBox["1", "3"], 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["3", "2"]}], " ", 
         RowBox[{"(", 
          RowBox[{"mmean", "+", "nmean"}], ")"}]}]]}]}], ")"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.659295853857259*^9, 3.659295937544289*^9}, {
   3.659295981457409*^9, 3.659296007310597*^9}, {3.6592960861367493`*^9, 
   3.659296131182021*^9}, {3.65929627465825*^9, 3.6592962973777523`*^9}, {
   3.6592963594350967`*^9, 3.659296377470585*^9}, {3.659296552490959*^9, 
   3.6592965919127617`*^9}, 3.659296686170681*^9, {3.6592967646742363`*^9, 
   3.659296771950523*^9}, {3.659297464849636*^9, 3.6592974818114643`*^9}, {
   3.6593009487763357`*^9, 3.659300950625004*^9}, {3.659408748795332*^9, 
   3.6594087576244*^9}, {3.659408883482793*^9, 3.65940890010557*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "9"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "2"]}], " ", 
      RowBox[{"(", 
       RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], "==", 
   RowBox[{
    FractionBox["1", "3"], "  ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"2", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["3", "2"]}], " ", "nmean"}]]}]}], ")"}], 
    FractionBox["1", "3"], 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"2", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["3", "2"]}], " ", "mmean"}]]}]}], ")"}]}]}], "  ", 
  "]"}]], "Input",
 CellChangeTimes->{{3.659407438246868*^9, 3.659407599181945*^9}, {
  3.659407636215396*^9, 3.659407679046826*^9}, {3.659407819846551*^9, 
  3.65940791946102*^9}, {3.659409014661886*^9, 3.659409017374456*^9}, {
  3.65941158818556*^9, 3.659411635346877*^9}, {3.659411684065514*^9, 
  3.659411716794532*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.659407473273416*^9, 3.6594075035157413`*^9}, {
   3.659407533865863*^9, 3.659407562007185*^9}, 3.659407600478348*^9, {
   3.659407642277378*^9, 3.659407680076829*^9}, 3.6594078217491903`*^9, {
   3.659407859576449*^9, 3.659407867404519*^9}, {3.6594079026549*^9, 
   3.659407921072403*^9}, 3.65940902088628*^9, 3.659411581088327*^9, {
   3.659411623393251*^9, 3.659411637636036*^9}, 3.659411718186368*^9}]
}, Open  ]],

Cell["\<\
Plotting this result. The orange surface shows the actual results above \
whereas the blue surface shows expectations based on independence of \
homozygosity acquisition rates at the two loci.\
\>", "Text",
 CellChangeTimes->{{3.65930095595588*^9, 3.659300965754032*^9}, {
  3.659301887999057*^9, 3.6593019276053534`*^9}}],

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Plot3D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           FractionBox["2", "9"], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["3", "2"]}], " ", 
             RowBox[{"(", 
              RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"3", " ", "mmean"}], "/", "2"}]]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              FractionBox["1", "3"], 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "3"}], " ", "nmean"}], "/", "2"}]]}]}], 
               ")"}]}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              FractionBox["1", "3"], 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", 
                    FractionBox["3", "2"]}], " ", 
                   RowBox[{"(", 
                    RowBox[{"mmean", "+", "nmean"}], ")"}]}]]}]}], ")"}]}]}], 
            ")"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"nmean", ",", "0", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"mmean", ",", "0", ",", "5"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "/", "3"}], ",", "1"}], "}"}]}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Both heterozygous\>\"", ",", "12"}], "]"}]}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<n\>\"", ",", "\"\<m\>\"", ",", "\"\<frac\>\""}], 
          "}"}]}], ",", 
        RowBox[{"AxesStyle", "\[Rule]", "12"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Plot3D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           FractionBox["2", "9"], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["3", "2"]}], " ", 
             RowBox[{"(", 
              RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              FractionBox["1", "3"], 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "3"}], " ", "nmean"}], "/", "2"}]]}]}], 
               ")"}]}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "3"], 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox["3", "2"]}], " ", 
                  RowBox[{"(", 
                   RowBox[{"mmean", "+", "nmean"}], ")"}]}]]}]}], ")"}]}], 
            ")"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"nmean", ",", "0", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"mmean", ",", "0", ",", "10"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"1", "/", "3"}]}], "}"}]}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<A hetero, B homo\>\"", ",", "12"}], "]"}]}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<n\>\"", ",", "\"\<m\>\"", ",", "\"\<frac\>\""}], 
          "}"}]}], ",", 
        RowBox[{"AxesStyle", "\[Rule]", "12"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Plot3D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           FractionBox["2", "9"], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["3", "2"]}], " ", 
             RowBox[{"(", 
              RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "3"], 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "3"}], " ", "nmean"}], "/", "2"}]]}]}], 
              ")"}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{
              FractionBox["1", "3"], 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                   RowBox[{"-", 
                    FractionBox["3", "2"]}], " ", 
                   RowBox[{"(", 
                    RowBox[{"mmean", "+", "nmean"}], ")"}]}]]}]}], ")"}]}]}], 
            ")"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"nmean", ",", "0", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"mmean", ",", "0", ",", "10"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"1", "/", "3"}]}], "}"}]}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<A homo, B hetero\>\"", ",", "12"}], "]"}]}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<n\>\"", ",", "\"\<m\>\"", ",", "\"\<frac\>\""}], 
          "}"}]}], ",", 
        RowBox[{"AxesStyle", "\[Rule]", "12"}]}], "]"}], ",", 
      RowBox[{"Plot3D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           FractionBox["1", "9"], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["3", "2"]}], " ", 
             RowBox[{"(", 
              RowBox[{"mmean", "+", "nmean"}], ")"}]}]], " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"3", " ", "mmean"}], "/", "2"}]]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"3", " ", "nmean"}], "/", "2"}]]}], ")"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "3"], 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "3"}], " ", "nmean"}], "/", "2"}]]}]}], 
              ")"}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "3"], 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                  RowBox[{"-", 
                   FractionBox["3", "2"]}], " ", 
                  RowBox[{"(", 
                   RowBox[{"mmean", "+", "nmean"}], ")"}]}]]}]}], ")"}]}], 
            ")"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"nmean", ",", "0", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"mmean", ",", "0", ",", "10"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"1", "/", "3"}]}], "}"}]}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Both homozygous\>\"", ",", "12"}], "]"}]}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<n\>\"", ",", "\"\<m\>\"", ",", "\"\<frac\>\""}], 
          "}"}]}], ",", 
        RowBox[{"AxesStyle", "\[Rule]", "12"}]}], "]"}]}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.659300968186591*^9, 3.65930115084226*^9}, {
  3.659301208618598*^9, 3.659301323867011*^9}, {3.6593013751579323`*^9, 
  3.659301378475636*^9}, {3.65930142294051*^9, 3.659301582067913*^9}, {
  3.659301621942897*^9, 3.6593016305165787`*^9}, {3.659408827431933*^9, 
  3.659408864888479*^9}, {3.6594089097780857`*^9, 3.65940896655167*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Neutral evolution model", "Section",
 CellChangeTimes->{{3.642796921751914*^9, 3.642796936852895*^9}}],

Cell["\<\
Assume that two individuals are sampled from the population. There are then \
seven possible outcomes with associated probabilities (different letters \
represent distinct alleles):
\t1: AA AA
\t2: AA AB
\t3: AA BC
\t4: AA BB
\t5: AB AB
\t6: AB AC
\t7: AB CD\
\>", "Text",
 CellChangeTimes->{{3.642796970675254*^9, 3.642797089393469*^9}}],

Cell[CellGroupData[{

Cell["Transition matrices due to automixis, drift and mutation", "Subsection",
 CellChangeTimes->{{3.642797094246364*^9, 3.642797123988206*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Mautomixis", "=", 
   RowBox[{"(", GridBox[{
      {"1", "0", "0", "0", "0", "0", "0"},
      {
       RowBox[{"\[Gamma]", "/", "2"}], 
       RowBox[{"1", "-", "\[Gamma]"}], "0", 
       RowBox[{"\[Gamma]", "/", "2"}], "0", "0", "0"},
      {"0", "0", 
       RowBox[{"1", "-", "\[Gamma]"}], "\[Gamma]", "0", "0", "0"},
      {"0", "0", "0", "1", "0", "0", "0"},
      {
       RowBox[{
        SuperscriptBox["\[Gamma]", "2"], "/", "2"}], 
       RowBox[{"2", "\[Gamma]", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Gamma]"}], ")"}]}], "0", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "2"], "/", "2"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Gamma]"}], ")"}], "2"], "0", "0"},
      {
       RowBox[{
        SuperscriptBox["\[Gamma]", "2"], "/", "4"}], 
       RowBox[{"\[Gamma]", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Gamma]"}], ")"}]}], 
       RowBox[{"\[Gamma]", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Gamma]"}], ")"}]}], 
       RowBox[{"3", 
        RowBox[{
         SuperscriptBox["\[Gamma]", "2"], "/", "4"}]}], "0", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Gamma]"}], ")"}], "2"], "0"},
      {"0", "0", 
       RowBox[{"2", "\[Gamma]", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Gamma]"}], ")"}]}], 
       SuperscriptBox["\[Gamma]", "2"], "0", "0", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Gamma]"}], ")"}], "2"]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mdrift", "=", 
   RowBox[{"(", GridBox[{
      {"1", "0", "0", "0", "0", "0", "0"},
      {
       FractionBox["1", 
        RowBox[{"2", "NN"}]], 
       RowBox[{"1", "-", 
        FractionBox["1", "NN"]}], "0", "0", 
       FractionBox["1", 
        RowBox[{"2", "NN"}]], "0", "0"},
      {
       FractionBox["1", 
        RowBox[{"2", "NN"}]], "0", 
       RowBox[{"1", "-", 
        FractionBox["1", "NN"]}], "0", 
       FractionBox["1", 
        RowBox[{"2", "NN"}]], "0", "0"},
      {
       FractionBox["1", "NN"], "0", "0", 
       RowBox[{"1", "-", 
        FractionBox["1", "NN"]}], "0", "0", "0"},
      {"0", "0", "0", "0", "1", "0", "0"},
      {"0", "0", "0", "0", 
       FractionBox["1", "NN"], 
       RowBox[{"1", "-", 
        FractionBox["1", "NN"]}], "0"},
      {"0", "0", "0", "0", 
       FractionBox["1", "NN"], "0", 
       RowBox[{"1", "-", 
        FractionBox["1", "NN"]}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mmutation", "=", 
   RowBox[{"(", GridBox[{
      {
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Mu]"}], ")"}], "4"], 
       RowBox[{"4", "\[Mu]", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Mu]"}], ")"}], "3"]}], 
       RowBox[{"2", 
        SuperscriptBox["\[Mu]", "2"], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"]}], "0", "0", 
       RowBox[{"4", 
        SuperscriptBox["\[Mu]", "2"], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"]}], 
       RowBox[{
        RowBox[{"4", 
         SuperscriptBox["\[Mu]", "3"], 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Mu]"}], ")"}]}], "+", 
        SuperscriptBox["\[Mu]", "4"]}]},
      {"0", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Mu]"}], ")"}], "4"], "+", 
        RowBox[{"\[Mu]", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]"}], ")"}], "3"]}]}], 
       RowBox[{
        RowBox[{"\[Mu]", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]"}], ")"}], "3"]}], "+", 
        RowBox[{
         SuperscriptBox["\[Mu]", "2"], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"]}]}], "0", "0", 
       RowBox[{
        RowBox[{"2", "\[Mu]", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]"}], ")"}], "3"]}], "+", 
        RowBox[{"2", 
         SuperscriptBox["\[Mu]", "2"], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"]}]}], 
       RowBox[{
        RowBox[{"3", 
         SuperscriptBox["\[Mu]", "2"], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"]}], "+", 
        RowBox[{"4", 
         SuperscriptBox["\[Mu]", "3"], 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Mu]"}], ")"}]}], "+", 
        SuperscriptBox["\[Mu]", "4"]}]},
      {"0", "0", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Mu]"}], ")"}], "4"], "+", 
        RowBox[{"2", "\[Mu]", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]"}], ")"}], "3"]}], "+", 
        RowBox[{
         SuperscriptBox["\[Mu]", "2"], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"]}]}], "0", "0", "0", 
       RowBox[{
        RowBox[{"2", "\[Mu]", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]"}], ")"}], "3"]}], "+", 
        RowBox[{"5", 
         SuperscriptBox["\[Mu]", "2"], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"]}], "+", 
        RowBox[{"4", 
         SuperscriptBox["\[Mu]", "3"], 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Mu]"}], ")"}]}], "+", 
        SuperscriptBox["\[Mu]", "4"]}]},
      {"0", "0", 
       RowBox[{
        RowBox[{"4", "\[Mu]", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]"}], ")"}], "3"]}], "+", 
        RowBox[{"2", 
         SuperscriptBox["\[Mu]", "2"], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"]}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Mu]"}], ")"}], "4"], "0", "0", 
       RowBox[{
        RowBox[{"4", 
         SuperscriptBox["\[Mu]", "2"], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"]}], "+", 
        RowBox[{"4", 
         SuperscriptBox["\[Mu]", "3"], 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Mu]"}], ")"}]}], "+", 
        SuperscriptBox["\[Mu]", "4"]}]},
      {"0", "0", "0", "0", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Mu]"}], ")"}], "4"], 
       RowBox[{
        RowBox[{"4", "\[Mu]", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]"}], ")"}], "3"]}], "+", 
        RowBox[{"2", 
         SuperscriptBox["\[Mu]", "2"], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"]}]}], 
       RowBox[{
        RowBox[{"4", 
         SuperscriptBox["\[Mu]", "2"], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"]}], "+", 
        RowBox[{"4", 
         SuperscriptBox["\[Mu]", "3"], 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Mu]"}], ")"}]}], "+", 
        SuperscriptBox["\[Mu]", "4"]}]},
      {"0", "0", "0", "0", "0", 
       RowBox[{
        RowBox[{"2", "\[Mu]", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]"}], ")"}], "3"]}], "+", 
        RowBox[{
         SuperscriptBox["\[Mu]", "2"], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"]}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Mu]"}], ")"}], "4"]}], 
       RowBox[{
        RowBox[{"2", "\[Mu]", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]"}], ")"}], "3"]}], "+", 
        RowBox[{"5", 
         SuperscriptBox["\[Mu]", "2"], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"]}], "+", 
        RowBox[{"4", 
         SuperscriptBox["\[Mu]", "3"], 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Mu]"}], ")"}]}], "+", 
        SuperscriptBox["\[Mu]", "4"]}]},
      {"0", "0", "0", "0", "0", "0", "1"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MmutationSimple", "=", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{"1", "-", 
        RowBox[{"4", "\[Mu]"}]}], 
       RowBox[{"4", "\[Mu]"}], "0", "0", "0", "0", "0"},
      {"0", 
       RowBox[{"1", "-", 
        RowBox[{"3", "\[Mu]"}]}], "\[Mu]", "0", "0", 
       RowBox[{"2", "\[Mu]"}], "0"},
      {"0", "0", 
       RowBox[{"1", "-", 
        RowBox[{"2", "\[Mu]"}]}], "0", "0", "0", 
       RowBox[{"2", "\[Mu]"}]},
      {"0", "0", 
       RowBox[{"4", "\[Mu]"}], 
       RowBox[{"1", "-", 
        RowBox[{"4", "\[Mu]"}]}], "0", "0", "0"},
      {"0", "0", "0", "0", 
       RowBox[{"1", "-", 
        RowBox[{"4", "\[Mu]"}]}], 
       RowBox[{"4", "\[Mu]"}], "0"},
      {"0", "0", "0", "0", "0", 
       RowBox[{"1", "-", 
        RowBox[{"2", "\[Mu]"}]}], 
       RowBox[{"2", "\[Mu]"}]},
      {"0", "0", "0", "0", "0", "0", "1"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mtotal", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Mmutation", ".", "Mautomixis", ".", "Mdrift"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.64279713021173*^9, 3.642797193268606*^9}, {
   3.6427972320382137`*^9, 3.642797505530513*^9}, {3.6427975955172043`*^9, 
   3.642797751898121*^9}, {3.642797930180307*^9, 3.642797971897543*^9}, {
   3.6427980884510107`*^9, 3.642798090993888*^9}, {3.6427981748449497`*^9, 
   3.6427981923483057`*^9}, {3.6427982773544283`*^9, 
   3.6427983353159523`*^9}, {3.642798401810176*^9, 3.642798540305851*^9}, {
   3.6427985847227716`*^9, 3.6427986474445753`*^9}, 3.642798785266824*^9, {
   3.642805868009177*^9, 3.642805893598937*^9}, 3.642805965370017*^9, {
   3.643398989122751*^9, 3.643398989376952*^9}, {3.643405949475225*^9, 
   3.6434059718660088`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "Mtotal", "]"}]], "Input",
 CellChangeTimes->{{3.642808073765616*^9, 3.642808078493681*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        RowBox[{"NN", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}],
            ")"}], "2"]}], "+", 
        RowBox[{"\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{"\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "5"}], "-", 
              RowBox[{
               SuperscriptBox["\[Gamma]", "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], 
              "+", 
              RowBox[{"\[Gamma]", " ", 
               RowBox[{"(", 
                RowBox[{"5", "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "3"}], "+", "\[Mu]"}], ")"}], " ", 
                  "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], "NN"], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", "\[Mu]", 
         " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
          ")"}]}], "NN"]}], 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
        SuperscriptBox["\[Mu]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             SuperscriptBox["\[Mu]", "2"]}], ")"}]}]}], ")"}]}], "NN"], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
         "\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{"\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{"4", "-", 
              RowBox[{"3", " ", "\[Gamma]"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
               "\[Mu]"}]}], ")"}]}]}], ")"}]}], "NN"]}], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], "NN"], 
      FractionBox[
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
        SuperscriptBox["\[Mu]", "2"]}], "NN"], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
         SuperscriptBox["\[Mu]", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", 
           RowBox[{"3", " ", "\[Mu]"}]}], ")"}]}], "NN"]}]},
     {
      FractionBox[
       RowBox[{"1", "+", 
        RowBox[{"NN", " ", "\[Gamma]", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
          ")"}]}], "+", 
        RowBox[{"\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "\[Mu]", "+", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{"5", "-", 
              RowBox[{"\[Gamma]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
             ")"}]}]}], ")"}]}]}], 
       RowBox[{"2", " ", "NN"}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", "\[Gamma]"}]}], ")"}], " ", "\[Mu]"}]}], 
          ")"}]}], "NN"]}], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
          RowBox[{"2", " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
            ")"}]}]}], ")"}]}], "NN"], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Mu]", "-", 
           RowBox[{"3", " ", "\[Gamma]", " ", "\[Mu]"}], "+", 
           SuperscriptBox["\[Mu]", "2"], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}], 
        RowBox[{"2", " ", "NN"}]]}], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}]}], 
       RowBox[{"2", " ", "NN"}]], 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", "\[Mu]"}], 
       "NN"], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
         SuperscriptBox["\[Mu]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "NN"]}]},
     {
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], "+", 
        RowBox[{"\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
          ")"}]}]}], 
       RowBox[{"2", " ", "NN"}]], "0", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Gamma]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}]}], "NN"], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
          ")"}]}], "NN"]}], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}]}], 
       RowBox[{"2", " ", "NN"}]], "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], "NN"]}]},
     {
      FractionBox[
       RowBox[{"1", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], "NN"],
       "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
          ")"}]}], "NN"]}], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
          ")"}], "2"]}], "NN"], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], "NN"], 
      "0", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
        SuperscriptBox["\[Mu]", "2"]}], "NN"]},
     {
      FractionBox[
       RowBox[{"\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}]}], ")"}]}], 
       RowBox[{"2", " ", "NN"}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "NN"]}], 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
        
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], "NN"], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         SuperscriptBox["\[Gamma]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
          ")"}]}], 
        RowBox[{"2", " ", "NN"}]]}], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"NN", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "4"]}], "-", 
          RowBox[{"\[Gamma]", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "4"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
            ")"}]}]}], ")"}]}], "NN"], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", "\[Mu]"}], 
        "NN"]}], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
        SuperscriptBox["\[Mu]", "2"]}], "NN"]},
     {
      FractionBox[
       RowBox[{"\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{"4", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}]}], ")"}]}], 
       RowBox[{"4", " ", "NN"}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "NN"]}], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
        
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}]}], "NN"], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         SuperscriptBox["\[Gamma]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", "\[Mu]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Mu]"}], ")"}]}], 
        RowBox[{"4", " ", "NN"}]]}], 
      FractionBox[
       RowBox[{"1", "-", "\[Gamma]"}], "NN"], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "NN"], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], "NN"]}]},
     {
      FractionBox["\[Gamma]", "NN"], "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]"}], 
        "NN"]}], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox["\[Gamma]", "2"]}], "NN"], 
      FractionBox[
       RowBox[{"1", "-", "\[Gamma]"}], "NN"], "0", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], "NN"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.642808079405232*^9, 3.6428784450773287`*^9, 
  3.643399027485306*^9, 3.6434060065800047`*^9, 3.646207434602283*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"MtotalSimple", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"MmutationSimple", ".", "Mautomixis", ".", "Mdrift"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.643358607781747*^9, 3.6433586370759563`*^9}, {
  3.6434059781797867`*^9, 3.643405986016445*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "MtotalSimple", "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"1", "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          FractionBox["1", "NN"], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
      
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], 
        "NN"]}], "0", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
        "\[Mu]"}], "NN"], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], 
        "NN"]}], "0", "0"},
     {
      FractionBox[
       RowBox[{"1", "+", 
        RowBox[{"NN", " ", "\[Gamma]"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"5", "+", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", "\[Gamma]"}], ")"}]}], "-", 
              "\[Gamma]"}], ")"}], " ", "\[Gamma]"}]}], ")"}], " ", 
         "\[Mu]"}]}], 
       RowBox[{"2", " ", "NN"}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"2", " ", "\[Gamma]"}]}], ")"}], " ", "\[Mu]"}]}], 
          ")"}]}], "NN"]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Gamma]"}]}], ")"}], " ", "\[Mu]"}], "NN"]}], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"3", " ", "\[Gamma]"}]}], ")"}], " ", "\[Mu]"}]}], 
         ")"}]}], 
       RowBox[{"2", " ", "NN"}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], 
        RowBox[{"2", " ", "NN"}]]}], 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", "\[Mu]"}],
        "NN"], "0"},
     {
      FractionBox[
       RowBox[{"1", "+", "\[Gamma]", "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
       RowBox[{"2", " ", "NN"}]], "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"4", " ", "\[Gamma]"}]}], ")"}], " ", "\[Mu]"}]}], 
          ")"}]}], "NN"]}], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}]}], "NN"], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], 
        RowBox[{"2", " ", "NN"}]]}], "0", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", "\[Mu]"}],
        "NN"]},
     {
      FractionBox[
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
       "NN"], "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], 
        "NN"]}], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}]}], "NN"], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], 
        "NN"]}], "0", "0"},
     {
      FractionBox[
       RowBox[{"\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN", "+", 
             RowBox[{"2", " ", "\[Mu]"}], "-", 
             RowBox[{"2", " ", "NN", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], 
       RowBox[{"2", " ", "NN"}]], 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
        
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "NN"], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ",
          "\[Mu]"}], "NN"]}], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox["\[Gamma]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], 
       RowBox[{"2", " ", "NN"}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"NN", "+", "\[Gamma]", "-", 
           RowBox[{"NN", " ", "\[Gamma]"}], "+", 
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
          ")"}]}], "NN"]}], 
      FractionBox[
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", "\[Mu]"}],
        "NN"], "0"},
     {
      FractionBox[
       RowBox[{"\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{"4", "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN", "+", 
             RowBox[{"2", " ", "\[Mu]"}], "-", 
             RowBox[{"2", " ", "NN", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], 
       RowBox[{"4", " ", "NN"}]], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
        
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "NN"], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "NN"]}], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox["\[Gamma]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", 
          RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], 
       RowBox[{"4", " ", "NN"}]], 
      FractionBox[
       RowBox[{"1", "-", "\[Gamma]"}], "NN"], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "NN"]}], 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", "\[Mu]"}],
        "NN"]},
     {
      FractionBox["\[Gamma]", "NN"], "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]"}], 
        "NN"]}], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox["\[Gamma]", "2"]}], "NN"], 
      FractionBox[
       RowBox[{"1", "-", "\[Gamma]"}], "NN"], "0", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], "NN"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.643399028020747*^9, 3.643406007186185*^9, 
  3.6462074351758547`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"MtotalSimple", "==", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox[
         RowBox[{"NN", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], "NN"}], "+", "1", "+", 
             RowBox[{"\[Gamma]", " ", "NN"}]}], ")"}], " ", "\[Mu]"}]}], 
         "NN"], 
        FractionBox[
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], "NN"], "0", 
        
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", "\[Gamma]", " ", "\[Mu]"}], 
         "NN"], 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], "NN"], "0", 
        "0"},
       {
        FractionBox[
         RowBox[{"1", "+", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"5", "+", 
                RowBox[{"NN", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "3"}], "+", "\[Gamma]"}], ")"}]}], "-", 
                "\[Gamma]"}], ")"}], " ", "\[Gamma]"}]}], ")"}], " ", 
           "\[Mu]"}]}], 
         RowBox[{"2", " ", "NN"}]], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3"}], "+", 
               RowBox[{"2", " ", "\[Gamma]"}]}], ")"}], " ", "\[Mu]"}]}], 
           ")"}]}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Gamma]"}]}], ")"}], " ", "\[Mu]"}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"3", " ", "\[Gamma]"}]}], ")"}], " ", "\[Mu]"}]}], 
           ")"}]}], 
         RowBox[{"2", " ", "NN"}]], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], 
         RowBox[{"2", " ", "NN"}]], 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "NN"}], ")"}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Gamma]"}], ")"}], "2"], " ", "\[Mu]"}], 
         "NN"], "0"},
       {
        FractionBox[
         RowBox[{"1", "+", "\[Gamma]", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         RowBox[{"2", " ", "NN"}]], "0", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", 
                RowBox[{"4", " ", "\[Gamma]"}]}], ")"}], " ", "\[Mu]"}]}], 
            ")"}]}], "NN"]}], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}],
            ")"}]}], "NN"], 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], 
          RowBox[{"2", " ", "NN"}]]}], "0", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
          "\[Mu]"}], "NN"]},
       {
        FractionBox[
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         "NN"], "0", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], 
          "NN"]}], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"4", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}],
            ")"}]}], "NN"], 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], 
          "NN"]}], "0", "0"},
       {
        FractionBox[
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            RowBox[{"\[Gamma]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN", "+", 
               RowBox[{"2", " ", "\[Mu]"}], "-", 
               RowBox[{"2", " ", "NN", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], 
         RowBox[{"2", " ", "NN"}]], 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", 
          " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "NN"], 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", 
           " ", "\[Mu]"}], "NN"]}], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
          SuperscriptBox["\[Gamma]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], 
         RowBox[{"2", " ", "NN"}]], 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"NN", "+", "\[Gamma]", "-", 
             RowBox[{"NN", " ", "\[Gamma]"}], "+", 
             RowBox[{"4", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
              "\[Mu]"}]}], ")"}]}], "NN"]}], 
        FractionBox[
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
          "\[Mu]"}], "NN"], "0"},
       {
        FractionBox[
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{"4", "+", 
            RowBox[{"\[Gamma]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN", "+", 
               RowBox[{"2", " ", "\[Mu]"}], "-", 
               RowBox[{"2", " ", "NN", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], 
         RowBox[{"4", " ", "NN"}]], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", 
          " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "NN"], 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", 
           " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "NN"]}], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
          SuperscriptBox["\[Gamma]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"3", "+", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], 
         RowBox[{"4", " ", "NN"}]], 
        FractionBox[
         RowBox[{"1", "-", "\[Gamma]"}], "NN"], 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "NN"]}], 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
          "\[Mu]"}], "NN"]},
       {
        FractionBox["\[Gamma]", "NN"], "0", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]"}], 
          "NN"]}], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
          SuperscriptBox["\[Gamma]", "2"]}], "NN"], 
        FractionBox[
         RowBox[{"1", "-", "\[Gamma]"}], "NN"], "0", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], "NN"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "]"}]], "Input",
 CellChangeTimes->{{3.64620857431325*^9, 3.64620859398949*^9}, {
  3.6462086246553783`*^9, 3.646208748886567*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"MtotalSimple", "==", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox[
         RowBox[{"NN", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], "NN"}], "+", "1", "+", 
             RowBox[{"\[Gamma]", " ", "NN"}]}], ")"}], " ", "\[Mu]"}]}], 
         "NN"], 
        FractionBox[
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], "NN"], "0", 
        
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", "\[Gamma]", " ", "\[Mu]"}], 
         "NN"], 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], "NN"], "0", 
        "0"},
       {
        FractionBox[
         RowBox[{"1", "+", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"5", "+", 
                RowBox[{"NN", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "3"}], "+", "\[Gamma]"}], ")"}]}], "-", 
                "\[Gamma]"}], ")"}], " ", "\[Gamma]"}]}], ")"}], " ", 
           "\[Mu]"}]}], 
         RowBox[{"2", " ", "NN"}]], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3"}], "+", 
               RowBox[{"2", " ", "\[Gamma]"}]}], ")"}], " ", "\[Mu]"}]}], 
           ")"}]}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Gamma]"}]}], ")"}], " ", "\[Mu]"}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", "\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"3", " ", "\[Gamma]"}]}], ")"}], " ", "\[Mu]"}]}], 
           ")"}]}], 
         RowBox[{"2", " ", "NN"}]], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], 
         RowBox[{"2", " ", "NN"}]], 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Gamma]"}], ")"}], "2"], " ", "\[Mu]"}], 
         "NN"], "0"},
       {
        FractionBox[
         RowBox[{"1", "+", "\[Gamma]", "-", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         RowBox[{"2", " ", "NN"}]], "0", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", 
               RowBox[{"4", " ", "\[Gamma]"}]}], ")"}], " ", "\[Mu]"}]}], 
           ")"}]}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", "\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}],
            ")"}]}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], 
         RowBox[{"2", " ", "NN"}]], "0", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
          "\[Mu]"}], "NN"]},
       {
        FractionBox[
         RowBox[{"1", "-", 
          RowBox[{"2", 
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], "NN"], 
        "0", 
        FractionBox[
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"4", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}],
            ")"}]}], "NN"], 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], "NN"], "0", 
        "0"},
       {
        FractionBox[
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            RowBox[{"\[Gamma]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN", "+", 
               RowBox[{"2", " ", "\[Mu]"}], "-", 
               RowBox[{"2", " ", "NN", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], 
         RowBox[{"2", " ", "NN"}]], 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "NN"], 
        FractionBox[
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
          "\[Mu]"}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          SuperscriptBox["\[Gamma]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], 
         RowBox[{"2", " ", "NN"}]], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"NN", "+", "\[Gamma]", "-", 
            RowBox[{"NN", " ", "\[Gamma]"}], "-", 
            RowBox[{"4", " ", 
             RowBox[{"(", 
              RowBox[{"NN", "-", "1"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
           ")"}]}], "NN"], 
        FractionBox[
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
          "\[Mu]"}], "NN"], "0"},
       {
        FractionBox[
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{"4", "+", 
            RowBox[{"\[Gamma]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN", "+", 
               RowBox[{"2", " ", "\[Mu]"}], "-", 
               RowBox[{"2", " ", "NN", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], 
         RowBox[{"4", " ", "NN"}]], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          SuperscriptBox["\[Gamma]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"3", "+", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], 
         RowBox[{"4", " ", "NN"}]], 
        FractionBox[
         RowBox[{"1", "-", "\[Gamma]"}], "NN"], 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"NN", "-", "1"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "NN"]}], 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
          "\[Mu]"}], "NN"]},
       {
        FractionBox["\[Gamma]", "NN"], "0", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Gamma]"}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          SuperscriptBox["\[Gamma]", "2"]}], "NN"], 
        FractionBox[
         RowBox[{"1", "-", "\[Gamma]"}], "NN"], "0", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], "NN"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "]"}]], "Input",
 CellChangeTimes->{{3.64620857431325*^9, 3.64620859398949*^9}, {
  3.6462086246553783`*^9, 3.646208748886567*^9}, {3.646208892196039*^9, 
  3.646209148877121*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.646208878136265*^9, 3.646209034790118*^9, 
  3.646209065395473*^9, 3.646209149836459*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"MtotalSimple", "==", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox[
         RowBox[{"NN", "-", 
          RowBox[{"2", "\[Mu]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "NN"}], "-", "1", "-", 
             RowBox[{"\[Gamma]", " ", "NN"}]}], ")"}], " "}]}], "NN"], 
        FractionBox[
         RowBox[{"4", " ", "\[Mu]", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " "}], "NN"], "0", 
        FractionBox[
         RowBox[{"2", " ", "\[Mu]", " ", "\[Gamma]", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}]}], "NN"], 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], "NN"], "0", 
        "0"},
       {
        FractionBox[
         RowBox[{"1", "+", 
          RowBox[{"NN", " ", "\[Gamma]"}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"5", "\[Gamma]"}], "-", 
               RowBox[{"NN", " ", "\[Gamma]", 
                RowBox[{"(", 
                 RowBox[{"3", "-", "\[Gamma]"}], ")"}]}], "-", 
               SuperscriptBox["\[Gamma]", "2"]}], ")"}]}], ")"}], " ", 
           "\[Mu]"}]}], 
         RowBox[{"2", " ", "NN"}]], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"\[Mu]", 
             RowBox[{"(", 
              RowBox[{"3", "-", 
               RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Gamma]"}]}], ")"}], " ", "\[Mu]"}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", "\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"3", " ", "\[Gamma]"}]}], ")"}], " ", "\[Mu]"}]}], 
           ")"}]}], 
         RowBox[{"2", " ", "NN"}]], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], 
         RowBox[{"2", " ", "NN"}]], 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Gamma]"}], ")"}], "2"], " ", "\[Mu]"}], 
         "NN"], "0"},
       {
        FractionBox[
         RowBox[{"1", "+", "\[Gamma]", "-", 
          RowBox[{"2", "\[Mu]", 
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Gamma]"}], ")"}]}]}], 
         RowBox[{"2", " ", "NN"}]], "0", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"\[Mu]", 
             RowBox[{"(", 
              RowBox[{"2", "-", 
               RowBox[{"4", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", "\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
           ")"}]}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], 
         RowBox[{"2", " ", "NN"}]], "0", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Gamma]"}], ")"}], "2"], " ", "\[Mu]"}], 
         "NN"]},
       {
        FractionBox[
         RowBox[{"1", "-", 
          RowBox[{"2", "\[Mu]", 
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Gamma]"}], ")"}]}]}], "NN"], "0", 
        FractionBox[
         RowBox[{"4", "\[Mu]", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " "}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"4", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
           ")"}]}], "NN"], 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], "NN"], "0", 
        "0"},
       {
        FractionBox[
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            RowBox[{"\[Gamma]", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "\[Mu]"}]}], ")"}], 
             RowBox[{"(", 
              RowBox[{"NN", "-", "1"}], ")"}]}]}], ")"}]}], 
         RowBox[{"2", " ", "NN"}]], 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "NN"], 
        FractionBox[
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
          "\[Mu]"}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          SuperscriptBox["\[Gamma]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], 
         RowBox[{"2", " ", "NN"}]], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"NN", "+", "\[Gamma]", "-", 
            RowBox[{"NN", " ", "\[Gamma]"}], "-", 
            RowBox[{"4", " ", 
             RowBox[{"(", 
              RowBox[{"NN", "-", "1"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
           ")"}]}], "NN"], 
        FractionBox[
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Gamma]"}], ")"}], "2"], " ", "\[Mu]"}], 
         "NN"], "0"},
       {
        FractionBox[
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{"4", "-", 
            RowBox[{"\[Gamma]", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "NN", "-", 
               RowBox[{"2", " ", "\[Mu]"}], "+", 
               RowBox[{"2", " ", "NN", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], 
         RowBox[{"4", " ", "NN"}]], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          SuperscriptBox["\[Gamma]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"3", "+", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], 
         RowBox[{"4", " ", "NN"}]], 
        FractionBox[
         RowBox[{"1", "-", "\[Gamma]"}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Gamma]"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "NN"], 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Gamma]"}], ")"}], "2"], " ", "\[Mu]"}], 
         "NN"]},
       {
        FractionBox["\[Gamma]", "NN"], "0", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Gamma]"}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          SuperscriptBox["\[Gamma]", "2"]}], "NN"], 
        FractionBox[
         RowBox[{"1", "-", "\[Gamma]"}], "NN"], "0", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Gamma]"}], ")"}], "2"]}], "NN"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "]"}]], "Input",
 CellChangeTimes->{{3.64620857431325*^9, 3.64620859398949*^9}, {
  3.6462086246553783`*^9, 3.646208748886567*^9}, {3.646208892196039*^9, 
  3.6462093006863747`*^9}, {3.646209354456016*^9, 3.64620936922759*^9}, {
  3.64620947245809*^9, 3.646209708794532*^9}, {3.646209760222858*^9, 
  3.64620978222502*^9}, {3.6462098597384033`*^9, 3.646209901187278*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.646208878136265*^9, 3.646209034790118*^9, 3.646209065395473*^9, 
   3.646209149836459*^9, {3.646209202885169*^9, 3.6462093016752357`*^9}, 
   3.646209373308175*^9, {3.6462094859832993`*^9, 3.646209542783235*^9}, {
   3.646209579383422*^9, 3.646209591401816*^9}, {3.646209625869125*^9, 
   3.6462096427375927`*^9}, {3.646209673333767*^9, 3.646209712022169*^9}, {
   3.6462097728666363`*^9, 3.646209782858305*^9}, {3.64620986756131*^9, 
   3.6462099020602837`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"MtotalSimple", "==", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox[
         RowBox[{"NN", "-", 
          RowBox[{"2", "\[Mu]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"NN", 
              RowBox[{"(", 
               RowBox[{"1", "-", "\[Gamma]"}], ")"}]}], "+", 
             RowBox[{"(", 
              RowBox[{"NN", "-", "1"}], ")"}]}], ")"}], " "}]}], "NN"], 
        FractionBox[
         RowBox[{"4", " ", "\[Mu]", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " "}], "NN"], "0", 
        FractionBox[
         RowBox[{"2", " ", "\[Mu]", " ", "\[Gamma]", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}]}], "NN"], 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], "NN"], "0", 
        "0"},
       {
        FractionBox[
         RowBox[{"1", "+", 
          RowBox[{"NN", " ", "\[Gamma]"}], "-", " ", 
          RowBox[{"\[Mu]", 
           RowBox[{"(", 
            RowBox[{"2", "-", 
             RowBox[{"5", "\[Gamma]"}], "+", 
             RowBox[{"NN", " ", "\[Gamma]", 
              RowBox[{"(", 
               RowBox[{"3", "-", "\[Gamma]"}], ")"}]}], "+", 
             SuperscriptBox["\[Gamma]", "2"]}], ")"}]}]}], 
         RowBox[{"2", " ", "NN"}]], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"\[Mu]", 
             RowBox[{"(", 
              RowBox[{"3", "-", 
               RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}], "NN"], 
        FractionBox[
         RowBox[{"\[Mu]", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Gamma]"}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], "  "}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", "\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"3", " ", "\[Gamma]"}]}], ")"}], " ", "\[Mu]"}]}], 
           ")"}]}], 
         RowBox[{"2", " ", "NN"}]], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], 
         RowBox[{"2", " ", "NN"}]], 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Gamma]"}], ")"}], "2"], " ", "\[Mu]"}], 
         "NN"], "0"},
       {
        FractionBox[
         RowBox[{"1", "+", "\[Gamma]", "-", 
          RowBox[{"2", "\[Mu]", 
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Gamma]"}], ")"}]}]}], 
         RowBox[{"2", " ", "NN"}]], "0", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", "\[Mu]", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", "\[Gamma]"}]}], ")"}]}]}], ")"}]}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", "\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
           ")"}]}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], 
         RowBox[{"2", " ", "NN"}]], "0", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Gamma]"}], ")"}], "2"], " ", "\[Mu]"}], 
         "NN"]},
       {
        FractionBox[
         RowBox[{"1", "-", 
          RowBox[{"2", "\[Mu]", 
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Gamma]"}], ")"}]}]}], "NN"], "0", 
        FractionBox[
         RowBox[{"4", "\[Mu]", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " "}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"4", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
           ")"}]}], "NN"], 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], "NN"], "0", 
        "0"},
       {
        FractionBox[
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            RowBox[{"\[Gamma]", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "\[Mu]"}]}], ")"}], 
             RowBox[{"(", 
              RowBox[{"NN", "-", "1"}], ")"}]}]}], ")"}]}], 
         RowBox[{"2", " ", "NN"}]], 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "NN"], 
        FractionBox[
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
          "\[Mu]"}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          SuperscriptBox["\[Gamma]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], 
         RowBox[{"2", " ", "NN"}]], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Gamma]", "+", 
               RowBox[{"4", "\[Mu]", 
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[Gamma]"}], ")"}]}]}], ")"}], 
             RowBox[{"(", 
              RowBox[{"NN", "-", "1"}], ")"}]}]}], ")"}]}], "NN"], 
        FractionBox[
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Gamma]"}], ")"}], "2"], " ", "\[Mu]"}], 
         "NN"], "0"},
       {
        FractionBox[
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{"4", "+", 
            RowBox[{"\[Gamma]", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "\[Mu]"}]}], ")"}], 
             RowBox[{"(", 
              RowBox[{"NN", "-", "1"}], ")"}]}]}], ")"}]}], 
         RowBox[{"4", " ", "NN"}]], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          SuperscriptBox["\[Gamma]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"3", "+", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], 
         RowBox[{"4", " ", "NN"}]], 
        FractionBox[
         RowBox[{"1", "-", "\[Gamma]"}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Gamma]"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "NN"], 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Gamma]"}], ")"}], "2"], " ", "\[Mu]"}], 
         "NN"]},
       {
        FractionBox["\[Gamma]", "NN"], "0", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Gamma]"}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          SuperscriptBox["\[Gamma]", "2"]}], "NN"], 
        FractionBox[
         RowBox[{"1", "-", "\[Gamma]"}], "NN"], "0", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Gamma]"}], ")"}], "2"]}], "NN"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "]"}]], "Input",
 CellChangeTimes->{{3.64620857431325*^9, 3.64620859398949*^9}, {
   3.6462086246553783`*^9, 3.646208748886567*^9}, {3.646208892196039*^9, 
   3.6462093006863747`*^9}, {3.646209354456016*^9, 3.64620936922759*^9}, {
   3.64620947245809*^9, 3.646209708794532*^9}, {3.646209760222858*^9, 
   3.64620978222502*^9}, {3.6462098597384033`*^9, 3.646209901187278*^9}, {
   3.64620993242122*^9, 3.6462099363687687`*^9}, {3.6462099910167093`*^9, 
   3.646210066038925*^9}, 3.646210096250657*^9, {3.646210131193285*^9, 
   3.646210155263582*^9}, {3.646210225029869*^9, 3.646210242986987*^9}, {
   3.646210744002716*^9, 3.646210766316184*^9}}],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"MtotalSimple", "==", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox[
         RowBox[{"NN", "-", 
          RowBox[{"2", "\[Mu]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"NN", 
              RowBox[{"(", 
               RowBox[{"1", "-", "\[Gamma]"}], ")"}]}], "+", 
             RowBox[{"(", 
              RowBox[{"NN", "-", "1"}], ")"}]}], ")"}], " "}]}], "NN"], 
        FractionBox[
         RowBox[{"4", " ", "\[Mu]", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " "}], "NN"], "0", 
        FractionBox[
         RowBox[{"2", " ", "\[Mu]", " ", "\[Gamma]", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}]}], "NN"], 
        FractionBox[
         RowBox[{"2", "\[Mu]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " "}], "NN"], "0", "0"},
       {
        FractionBox[
         RowBox[{"1", "+", 
          RowBox[{"NN", " ", "\[Gamma]"}], "-", " ", 
          RowBox[{"\[Mu]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", 
              RowBox[{"(", 
               RowBox[{"1", "-", "\[Gamma]"}], ")"}]}], "+", 
             RowBox[{"\[Gamma]", 
              RowBox[{"(", 
               RowBox[{"3", "-", " ", "\[Gamma]"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"NN", "-", "1"}], ")"}]}]}], ")"}]}]}], 
         RowBox[{"2", " ", "NN"}]], 
        FractionBox[
         RowBox[{" ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[Mu]", 
              RowBox[{"(", 
               RowBox[{"3", "-", 
                RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"NN", "-", "1"}], ")"}]}]}], "NN"], 
        FractionBox[
         RowBox[{"\[Mu]", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Gamma]"}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], "  "}], "NN"], 
        FractionBox[
         RowBox[{" ", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[Mu]", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"3", " ", "\[Gamma]"}]}], ")"}]}]}], " ", ")"}], 
           RowBox[{"(", 
            RowBox[{"NN", "-", "1"}], ")"}]}]}], 
         RowBox[{"2", " ", "NN"}]], 
        FractionBox[
         RowBox[{" ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Gamma]"}], ")"}]}]}], 
         RowBox[{"2", " ", "NN"}]], 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Gamma]"}], ")"}], "2"], " ", "\[Mu]"}], 
         "NN"], "0"},
       {
        FractionBox[
         RowBox[{"1", "+", "\[Gamma]", "-", 
          RowBox[{"2", "\[Mu]", 
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Gamma]"}], ")"}]}]}], 
         RowBox[{"2", " ", "NN"}]], "0", 
        FractionBox[
         RowBox[{" ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", "\[Mu]", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"2", "\[Gamma]"}]}], ")"}]}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"NN", "-", "1"}], ")"}]}]}], "NN"], 
        FractionBox[
         RowBox[{" ", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", "\[Mu]", 
              RowBox[{"(", 
               RowBox[{"1", "-", "\[Gamma]"}], ")"}]}]}], " ", ")"}], 
           RowBox[{"(", 
            RowBox[{"NN", "-", "1"}], ")"}]}]}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}]}], 
         RowBox[{"2", " ", "NN"}]], "0", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Gamma]"}], ")"}], "2"], " ", "\[Mu]"}], 
         "NN"]},
       {
        FractionBox[
         RowBox[{"1", "-", 
          RowBox[{"2", "\[Mu]", 
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Gamma]"}], ")"}]}]}], "NN"], "0", 
        FractionBox[
         RowBox[{"4", "\[Mu]", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " "}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"4", "\[Mu]", 
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Gamma]"}], ")"}]}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}]}], "NN"], 
        FractionBox[
         RowBox[{"2", " ", "\[Mu]", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " "}], "NN"], "0", "0"},
       {
        FractionBox[
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            RowBox[{"\[Gamma]", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "\[Mu]"}]}], ")"}], 
             RowBox[{"(", 
              RowBox[{"NN", "-", "1"}], ")"}]}]}], ")"}]}], 
         RowBox[{"2", " ", "NN"}]], 
        FractionBox[
         RowBox[{"2", " ", "\[Gamma]", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}]}], "NN"], 
        FractionBox[
         RowBox[{"4", " ", "\[Mu]", " ", "\[Gamma]", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " "}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
          SuperscriptBox["\[Gamma]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}]}], 
         RowBox[{"2", " ", "NN"}]], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Gamma]", "+", 
               RowBox[{"4", "\[Mu]", 
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[Gamma]"}], ")"}]}]}], ")"}], 
             RowBox[{"(", 
              RowBox[{"NN", "-", "1"}], ")"}]}]}], ")"}]}], "NN"], 
        FractionBox[
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Gamma]"}], ")"}], "2"], " ", "\[Mu]"}], 
         "NN"], "0"},
       {
        FractionBox[
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{"4", "+", 
            RowBox[{"\[Gamma]", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "\[Mu]"}]}], ")"}], 
             RowBox[{"(", 
              RowBox[{"NN", "-", "1"}], ")"}]}]}], ")"}]}], 
         RowBox[{"4", " ", "NN"}]], 
        FractionBox[
         RowBox[{"\[Gamma]", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}]}], "NN"], 
        FractionBox[
         RowBox[{" ", 
          RowBox[{"\[Gamma]", 
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Gamma]"}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"NN", "-", "1"}], ")"}]}]}], "NN"], 
        FractionBox[
         RowBox[{"  ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}], 
           SuperscriptBox["\[Gamma]", "2"], 
           RowBox[{"(", 
            RowBox[{"NN", "-", "1"}], ")"}]}]}], 
         RowBox[{"4", " ", "NN"}]], 
        FractionBox[
         RowBox[{"1", "-", "\[Gamma]"}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Gamma]"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "NN"], 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Gamma]"}], ")"}], "2"], " ", "\[Mu]"}], 
         "NN"]},
       {
        FractionBox["\[Gamma]", "NN"], "0", 
        FractionBox[
         RowBox[{"2", " ", "\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}]}], "NN"], 
        FractionBox[
         RowBox[{" ", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "2"], 
           RowBox[{"(", 
            RowBox[{"NN", "-", "1"}], ")"}]}]}], "NN"], 
        FractionBox[
         RowBox[{"1", "-", "\[Gamma]"}], "NN"], "0", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Gamma]"}], ")"}], "2"]}], "NN"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "]"}]], "Input",
 CellChangeTimes->{{3.64620857431325*^9, 3.64620859398949*^9}, {
   3.6462086246553783`*^9, 3.646208748886567*^9}, {3.646208892196039*^9, 
   3.6462093006863747`*^9}, {3.646209354456016*^9, 3.64620936922759*^9}, {
   3.64620947245809*^9, 3.646209708794532*^9}, {3.646209760222858*^9, 
   3.64620978222502*^9}, {3.6462098597384033`*^9, 3.646209901187278*^9}, {
   3.64620993242122*^9, 3.6462099363687687`*^9}, {3.6462099910167093`*^9, 
   3.646210066038925*^9}, 3.646210096250657*^9, {3.646210131193285*^9, 
   3.646210155263582*^9}, {3.646210225029869*^9, 3.646210242986987*^9}, {
   3.646210744002716*^9, 3.646210766316184*^9}, {3.646210925090829*^9, 
   3.6462110620467453`*^9}, {3.646211106029416*^9, 3.6462111555834017`*^9}, {
   3.6462112028371267`*^9, 3.646211238611594*^9}, 3.646211548223679*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   OverscriptBox["N", "~"], "=", 
   RowBox[{"NN", "-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox["\[Gamma]", "~"], "=", 
   RowBox[{"1", "-", "\[Gamma]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{"MtotalSimple", "==", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox[
         RowBox[{"NN", "-", 
          RowBox[{"2", "\[Mu]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"NN", 
              OverscriptBox["\[Gamma]", "~"]}], "+", 
             OverscriptBox["N", "~"]}], ")"}], " "}]}], "NN"], 
        FractionBox[
         RowBox[{"4", " ", "\[Mu]", 
          OverscriptBox["\[Gamma]", "~"], 
          OverscriptBox["N", "~"], " "}], "NN"], "0", 
        FractionBox[
         RowBox[{"2", " ", "\[Mu]", " ", "\[Gamma]", 
          OverscriptBox["N", "~"]}], "NN"], 
        FractionBox[
         RowBox[{"2", "\[Mu]", " ", 
          OverscriptBox["\[Gamma]", "~"], " "}], "NN"], "0", "0"},
       {
        FractionBox[
         RowBox[{"1", "+", 
          RowBox[{"NN", " ", "\[Gamma]"}], "-", " ", 
          RowBox[{"\[Mu]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", 
              OverscriptBox["\[Gamma]", "~"]}], "+", 
             RowBox[{"\[Gamma]", 
              RowBox[{"(", 
               RowBox[{"3", "-", " ", "\[Gamma]"}], ")"}], 
              OverscriptBox["N", "~"]}]}], ")"}]}]}], 
         RowBox[{"2", " ", "NN"}]], 
        FractionBox[
         RowBox[{" ", 
          RowBox[{
           OverscriptBox["\[Gamma]", "~"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[Mu]", 
              RowBox[{"(", 
               RowBox[{"3", "-", 
                RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}], 
           OverscriptBox["N", "~"]}]}], "NN"], 
        FractionBox[
         RowBox[{"\[Mu]", 
          OverscriptBox["\[Gamma]", "~"], 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Gamma]"}]}], ")"}], 
          OverscriptBox["N", "~"], "  "}], "NN"], 
        FractionBox[
         RowBox[{" ", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[Mu]", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"3", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}], 
           OverscriptBox["N", "~"]}]}], 
         RowBox[{"2", " ", "NN"}]], 
        FractionBox[
         RowBox[{" ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}], 
           OverscriptBox["\[Gamma]", "~"]}]}], 
         RowBox[{"2", " ", "NN"}]], 
        FractionBox[
         RowBox[{"2", "\[Mu]", 
          SuperscriptBox[
           OverscriptBox["\[Gamma]", "~"], "2"], "  ", 
          OverscriptBox["N", "~"]}], "NN"], "0"},
       {
        FractionBox[
         RowBox[{"1", "+", "\[Gamma]", "-", 
          RowBox[{"2", "\[Mu]", 
           OverscriptBox["\[Gamma]", "~"]}]}], 
         RowBox[{"2", " ", "NN"}]], "0", 
        FractionBox[
         RowBox[{
          OverscriptBox["\[Gamma]", "~"], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", "\[Mu]", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", "\[Gamma]"}]}], ")"}]}]}], ")"}], 
          OverscriptBox["N", "~"]}], "NN"], 
        FractionBox[
         RowBox[{" ", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", "\[Mu]", 
              OverscriptBox["\[Gamma]", "~"]}]}], " ", ")"}], 
           OverscriptBox["N", "~"]}]}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}], 
          OverscriptBox["\[Gamma]", "~"]}], 
         RowBox[{"2", " ", "NN"}]], "0", 
        FractionBox[
         RowBox[{"2", " ", "\[Mu]", " ", 
          SuperscriptBox[
           OverscriptBox["\[Gamma]", "~"], "2"], 
          OverscriptBox["N", "~"]}], "NN"]},
       {
        FractionBox[
         RowBox[{"1", "-", 
          RowBox[{"2", "\[Mu]", 
           OverscriptBox["\[Gamma]", "~"]}]}], "NN"], "0", 
        FractionBox[
         RowBox[{"4", "\[Mu]", 
          OverscriptBox["\[Gamma]", "~"], 
          OverscriptBox["N", "~"], " "}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"4", "\[Mu]", 
             OverscriptBox["\[Gamma]", "~"]}]}], ")"}], 
          OverscriptBox["N", "~"]}], "NN"], 
        FractionBox[
         RowBox[{"2", " ", "\[Mu]", 
          OverscriptBox["\[Gamma]", "~"]}], "NN"], "0", "0"},
       {
        FractionBox[
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            RowBox[{"\[Gamma]", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "\[Mu]"}]}], ")"}], 
             OverscriptBox["N", "~"]}]}], ")"}]}], 
         RowBox[{"2", " ", "NN"}]], 
        FractionBox[
         RowBox[{"2", " ", "\[Gamma]", 
          OverscriptBox["\[Gamma]", "~"], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}], 
          OverscriptBox["N", "~"]}], "NN"], 
        FractionBox[
         RowBox[{"4", " ", "\[Mu]", " ", "\[Gamma]", 
          OverscriptBox["\[Gamma]", "~"], 
          OverscriptBox["N", "~"]}], "NN"], 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
          SuperscriptBox["\[Gamma]", "2"], " ", 
          OverscriptBox["N", "~"]}], 
         RowBox[{"2", " ", "NN"}]], 
        FractionBox[
         RowBox[{
          OverscriptBox["\[Gamma]", "~"], 
          RowBox[{"(", 
           RowBox[{"NN", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Gamma]", "+", 
               RowBox[{"4", "\[Mu]", 
                OverscriptBox["\[Gamma]", "~"]}]}], ")"}], " ", 
             OverscriptBox["N", "~"]}]}], ")"}]}], "NN"], 
        FractionBox[
         RowBox[{"4", " ", "\[Mu]", " ", 
          SuperscriptBox[
           OverscriptBox["\[Gamma]", "~"], "2"], " ", 
          OverscriptBox["N", "~"]}], "NN"], "0"},
       {
        FractionBox[
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{"4", "+", 
            RowBox[{"\[Gamma]", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "\[Mu]"}]}], ")"}], 
             OverscriptBox["N", "~"]}]}], ")"}]}], 
         RowBox[{"4", " ", "NN"}]], 
        FractionBox[
         RowBox[{"\[Gamma]", 
          OverscriptBox["\[Gamma]", "~"], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}], 
          OverscriptBox["N", "~"]}], "NN"], 
        FractionBox[
         RowBox[{" ", 
          RowBox[{"\[Gamma]", 
           OverscriptBox["\[Gamma]", "~"], 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}], 
           OverscriptBox["N", "~"]}]}], "NN"], 
        FractionBox[
         RowBox[{"  ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}], 
           SuperscriptBox["\[Gamma]", "2"], 
           OverscriptBox["N", "~"]}]}], 
         RowBox[{"4", " ", "NN"}]], 
        FractionBox[
         OverscriptBox["\[Gamma]", "~"], "NN"], 
        FractionBox[
         RowBox[{" ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}], 
           SuperscriptBox[
            OverscriptBox["\[Gamma]", "~"], "2"], "  ", 
           OverscriptBox["N", "~"]}]}], "NN"], 
        FractionBox[
         RowBox[{"2", "\[Mu]", " ", 
          SuperscriptBox[
           OverscriptBox["\[Gamma]", "~"], "2"], " ", 
          OverscriptBox["N", "~"]}], "NN"]},
       {
        FractionBox["\[Gamma]", "NN"], "0", 
        FractionBox[
         RowBox[{"2", " ", "\[Gamma]", " ", 
          OverscriptBox["\[Gamma]", "~"], " ", 
          OverscriptBox["N", "~"]}], "NN"], 
        FractionBox[
         RowBox[{" ", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "2"], 
           OverscriptBox["N", "~"]}]}], "NN"], 
        FractionBox[
         OverscriptBox["\[Gamma]", "~"], "NN"], "0", 
        FractionBox[
         RowBox[{" ", 
          RowBox[{
           SuperscriptBox[
            OverscriptBox["\[Gamma]", "~"], "2"], 
           OverscriptBox["N", "~"]}]}], "NN"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "]"}]}], "Input",
 CellChangeTimes->{{3.64620857431325*^9, 3.64620859398949*^9}, {
   3.6462086246553783`*^9, 3.646208748886567*^9}, {3.646208892196039*^9, 
   3.6462093006863747`*^9}, {3.646209354456016*^9, 3.64620936922759*^9}, {
   3.64620947245809*^9, 3.646209708794532*^9}, {3.646209760222858*^9, 
   3.64620978222502*^9}, {3.6462098597384033`*^9, 3.646209901187278*^9}, {
   3.64620993242122*^9, 3.6462099363687687`*^9}, {3.6462099910167093`*^9, 
   3.646210066038925*^9}, 3.646210096250657*^9, {3.646210131193285*^9, 
   3.646210155263582*^9}, {3.646210225029869*^9, 3.646210242986987*^9}, {
   3.646210744002716*^9, 3.646210766316184*^9}, {3.646210925090829*^9, 
   3.6462110620467453`*^9}, {3.646211106029416*^9, 3.6462111555834017`*^9}, {
   3.6462112028371267`*^9, 3.646211238611594*^9}, {3.646211548223679*^9, 
   3.646211784243029*^9}, {3.646211818994076*^9, 3.6462118885450153`*^9}, {
   3.646211918755226*^9, 3.646212141625101*^9}, 3.646212188549555*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.646208878136265*^9, 3.646209034790118*^9, 3.646209065395473*^9, 
   3.646209149836459*^9, {3.646209202885169*^9, 3.6462093016752357`*^9}, 
   3.646209373308175*^9, {3.6462094859832993`*^9, 3.646209542783235*^9}, {
   3.646209579383422*^9, 3.646209591401816*^9}, {3.646209625869125*^9, 
   3.6462096427375927`*^9}, {3.646209673333767*^9, 3.646209712022169*^9}, {
   3.6462097728666363`*^9, 3.646209782858305*^9}, {3.64620986756131*^9, 
   3.6462099020602837`*^9}, 3.646209937078062*^9, {3.646209996354084*^9, 
   3.646210007878139*^9}, {3.6462100561144037`*^9, 3.646210067406435*^9}, {
   3.6462101365907173`*^9, 3.646210157004314*^9}, {3.646210235233448*^9, 
   3.646210243624332*^9}, {3.646210747775765*^9, 3.64621076904867*^9}, 
   3.646210944883629*^9, 3.646211039160941*^9, 3.6462111248974953`*^9, 
   3.6462111608979387`*^9, 3.646211245117635*^9, {3.6462115816399717`*^9, 
   3.646211602002356*^9}, 3.646211719592483*^9, {3.6462117606342983`*^9, 
   3.646211789182732*^9}, 3.646211911027424*^9, 3.64621194493174*^9, 
   3.646212111087973*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"1", "+", 
    RowBox[{"NN", " ", "\[Gamma]"}], "-", " ", 
    RowBox[{"\[Mu]", 
     RowBox[{"(", 
      RowBox[{"2", "-", 
       RowBox[{"5", "\[Gamma]"}], "+", 
       RowBox[{"NN", " ", "\[Gamma]", 
        RowBox[{"(", 
         RowBox[{"3", "-", "\[Gamma]"}], ")"}]}], "+", 
       SuperscriptBox["\[Gamma]", "2"]}], ")"}]}]}], "\[IndentingNewLine]", 
   "                  ", "==", 
   RowBox[{"1", "+", 
    RowBox[{"NN", " ", "\[Gamma]"}], "-", " ", 
    RowBox[{"\[Mu]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Gamma]"}], ")"}]}], "+", 
       RowBox[{"\[Gamma]", 
        RowBox[{"(", 
         RowBox[{"3", "-", " ", "\[Gamma]"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"NN", "-", "1"}], ")"}]}]}], ")"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.646210301626685*^9, 3.646210303621167*^9}, {
  3.646210443633279*^9, 3.6462104755173397`*^9}, {3.64621080119709*^9, 
  3.646210805406878*^9}, {3.6462108665364017`*^9, 3.646210867214875*^9}, {
  3.646211263083713*^9, 3.646211470176516*^9}, {3.646211518750502*^9, 
  3.6462115219473467`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.646210448614403*^9, 3.646210476290057*^9}, 
   3.646210805729836*^9, 3.6462108678709383`*^9, {3.6462113060834913`*^9, 
   3.646211395925597*^9}, {3.646211438588296*^9, 3.6462114712228537`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Studying the three matrices individually", "Subsection",
 CellChangeTimes->{{3.6428082003330927`*^9, 3.642808223348339*^9}}],

Cell[CellGroupData[{

Cell["Automixis", "Subsubsection",
 CellChangeTimes->{{3.6428082259459667`*^9, 3.64280823765567*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"JD", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"JordanDecomposition", "[", "Mautomixis", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"JD", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.64280825725935*^9, 3.642808313321652*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "0", "0"},
     {"0", "1", "0", "0", "0", "0", "0"},
     {"0", "0", 
      RowBox[{"1", "-", "\[Gamma]"}], "0", "0", "0", "0"},
     {"0", "0", "0", 
      RowBox[{"1", "-", "\[Gamma]"}], "0", "0", "0"},
     {"0", "0", "0", "0", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], "0", "0"},
     {"0", "0", "0", "0", "0", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], "0"},
     {"0", "0", "0", "0", "0", "0", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.642808288092703*^9, 3.642808314196362*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"JD", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ".", 
    RowBox[{"JD", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ".", 
    RowBox[{"Inverse", "[", 
     RowBox[{"JD", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "]"}]}], "\[Equal]", "Mautomixis"}], "]"}]], "Input",
 CellChangeTimes->{{3.6428083240462923`*^9, 3.642808364732922*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.642808355562819*^9, 3.6428083652982063`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"diagLimit", "=", 
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"MatrixPower", "[", 
      RowBox[{
       RowBox[{"JD", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       ",", "n"}], "]"}], ",", 
     RowBox[{"n", "\[Rule]", "\[Infinity]"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{
       RowBox[{"\[Gamma]", ">", "0"}], "&&", 
       RowBox[{"\[Gamma]", "\[LessEqual]", "1"}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"diagLimit", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.642808403471208*^9, 3.642808436300777*^9}, {
  3.642808562316951*^9, 3.642808631666656*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "0", "0"},
     {"0", "1", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.6428084370941753`*^9, {3.642808591893135*^9, 3.642808598330353*^9}, 
   3.642808632357583*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"JD", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ".",
     "diagLimit", ".", 
    RowBox[{"Inverse", "[", 
     RowBox[{"JD", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "]"}]}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.6428086505592613`*^9, 3.6428086572742357`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "0", "0"},
     {
      FractionBox["1", "2"], "0", "0", 
      FractionBox["1", "2"], "0", "0", "0"},
     {"0", "0", "0", "1", "0", "0", "0"},
     {"0", "0", "0", "1", "0", "0", "0"},
     {
      FractionBox["1", "2"], "0", "0", 
      FractionBox["1", "2"], "0", "0", "0"},
     {
      FractionBox["1", "4"], "0", "0", 
      FractionBox["3", "4"], "0", "0", "0"},
     {"0", "0", "0", "1", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.642808657767303*^9}]
}, Open  ]],

Cell["\<\
\[Rule] Automixis leads to complete homozygosity at both sampled genotypes in \
equilibrium, with a certain distribution of AA AA and AA BB configurations \
that depends on the starting conditions.\
\>", "Text",
 CellChangeTimes->{{3.642808838296721*^9, 3.642808905420126*^9}, {
  3.642809978830467*^9, 3.64280999198953*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Drift", "Subsubsection",
 CellChangeTimes->{{3.6428082259459667`*^9, 3.64280823765567*^9}, {
  3.642809709686627*^9, 3.642809710325718*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"JD", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"JordanDecomposition", "[", "Mdrift", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"JD", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.64280825725935*^9, 3.642808313321652*^9}, {
  3.642809715080055*^9, 3.642809715758713*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "NN"}], "NN"], "0", "0", "0", "0", "0", 
      "0"},
     {"0", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "NN"}], "NN"], "0", "0", "0", "0", "0"},
     {"0", "0", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "NN"}], "NN"], "0", "0", "0", "0"},
     {"0", "0", "0", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "NN"}], "NN"], "0", "0", "0"},
     {"0", "0", "0", "0", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "NN"}], "NN"], "0", "0"},
     {"0", "0", "0", "0", "0", "1", "0"},
     {"0", "0", "0", "0", "0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.642808288092703*^9, 3.642808314196362*^9}, 
   3.6428097172096767`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"JD", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ".", 
    RowBox[{"JD", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ".", 
    RowBox[{"Inverse", "[", 
     RowBox[{"JD", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "]"}]}], "\[Equal]", "Mdrift"}], "]"}]], "Input",
 CellChangeTimes->{{3.6428083240462923`*^9, 3.642808364732922*^9}, {
  3.642809722000041*^9, 3.642809724685769*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.642808355562819*^9, 3.6428083652982063`*^9}, 
   3.642809725306484*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"diagLimit", "=", 
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"MatrixPower", "[", 
      RowBox[{
       RowBox[{"JD", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       ",", "n"}], "]"}], ",", 
     RowBox[{"n", "\[Rule]", "\[Infinity]"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"NN", "\[GreaterEqual]", "1"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"diagLimit", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.642808403471208*^9, 3.642808436300777*^9}, {
  3.642808562316951*^9, 3.642808631666656*^9}, {3.642809733661265*^9, 
  3.6428097409808064`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "1", "0"},
     {"0", "0", "0", "0", "0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.6428084370941753`*^9, {3.642808591893135*^9, 3.642808598330353*^9}, 
   3.642808632357583*^9, 3.642809744063386*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"JD", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ".",
     "diagLimit", ".", 
    RowBox[{"Inverse", "[", 
     RowBox[{"JD", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "]"}]}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.6428086505592613`*^9, 3.6428086572742357`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "0", "0"},
     {
      FractionBox["1", "2"], "0", "0", "0", 
      FractionBox["1", "2"], "0", "0"},
     {
      FractionBox["1", "2"], "0", "0", "0", 
      FractionBox["1", "2"], "0", "0"},
     {"1", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "1", "0", "0"},
     {"0", "0", "0", "0", "1", "0", "0"},
     {"0", "0", "0", "0", "1", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.642808657767303*^9, 3.642809856743992*^9}]
}, Open  ]],

Cell["\<\
\[Rule] Drift leads to complete identity of the two sampled genotypes in \
equilibrium, with a certain distribution of AA AA and AB AB configurations \
that is equal to the initial frequencies of homozygotes vs. heterozygotes.\
\>", "Text",
 CellChangeTimes->{{3.642808838296721*^9, 3.642808905420126*^9}, {
  3.642809898177492*^9, 3.642809960631784*^9}, {3.642810010608365*^9, 
  3.642810015835723*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Mutation", "Subsubsection",
 CellChangeTimes->{{3.6428082259459667`*^9, 3.64280823765567*^9}, {
  3.642809709686627*^9, 3.642809710325718*^9}, {3.6428100262433558`*^9, 
  3.642810027424307*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"JD", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"JordanDecomposition", "[", "Mmutation", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"JD", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.64280825725935*^9, 3.642808313321652*^9}, {
  3.642809715080055*^9, 3.642809715758713*^9}, {3.642810035371088*^9, 
  3.642810037769183*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "0", "0"},
     {"0", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "4"], "0", "0", "0", "0", 
      "0"},
     {"0", "0", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "4"], "0", "0", "0", 
      "0"},
     {"0", "0", "0", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "4"], "0", "0", "0"},
     {"0", "0", "0", "0", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], "0", "0"},
     {"0", "0", "0", "0", "0", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], "0"},
     {"0", "0", "0", "0", "0", "0", 
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "3"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.642808288092703*^9, 3.642808314196362*^9}, 
   3.6428097172096767`*^9, 3.642810038581381*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"JD", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ".", 
    RowBox[{"JD", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ".", 
    RowBox[{"Inverse", "[", 
     RowBox[{"JD", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "]"}]}], "\[Equal]", "Mmutation"}], "]"}]], "Input",
 CellChangeTimes->{{3.6428083240462923`*^9, 3.642808364732922*^9}, {
  3.642809722000041*^9, 3.642809724685769*^9}, {3.642810054680273*^9, 
  3.642810059086792*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.642808355562819*^9, 3.6428083652982063`*^9}, 
   3.642809725306484*^9, 3.6428100606470633`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"diagLimit", "=", 
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"MatrixPower", "[", 
      RowBox[{
       RowBox[{"JD", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       ",", "n"}], "]"}], ",", 
     RowBox[{"n", "\[Rule]", "\[Infinity]"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{
       RowBox[{"\[Mu]", ">", "0"}], " ", "&&", " ", 
       RowBox[{"\[Mu]", "<", "1"}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"diagLimit", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.642808403471208*^9, 3.642808436300777*^9}, {
  3.642808562316951*^9, 3.642808631666656*^9}, {3.642809733661265*^9, 
  3.6428097409808064`*^9}, {3.642810064888651*^9, 3.6428100947026243`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.6428084370941753`*^9, {3.642808591893135*^9, 3.642808598330353*^9}, 
   3.642808632357583*^9, 3.642809744063386*^9, {3.6428100762259493`*^9, 
   3.642810096964946*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"JD", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ".",
     "diagLimit", ".", 
    RowBox[{"Inverse", "[", 
     RowBox[{"JD", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "]"}]}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.6428086505592613`*^9, 3.6428086572742357`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "1"},
     {"0", "0", "0", "0", "0", "0", "1"},
     {"0", "0", "0", "0", "0", "0", "1"},
     {"0", "0", "0", "0", "0", "0", "1"},
     {"0", "0", "0", "0", "0", "0", "1"},
     {"0", "0", "0", "0", "0", "0", "1"},
     {"0", "0", "0", "0", "0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.642808657767303*^9, 3.642809856743992*^9, 
  3.642810104381084*^9}]
}, Open  ]],

Cell["\<\
\[Rule] Mutation leads to complete heterozygosity of and difference between \
the two sampled genotypes in equilibrium (only AB CD configuration), \
independent of the starting condition.\
\>", "Text",
 CellChangeTimes->{{3.642808838296721*^9, 3.642808905420126*^9}, {
   3.642809898177492*^9, 3.642809960631784*^9}, {3.642810010608365*^9, 
   3.642810015835723*^9}, {3.642810112057639*^9, 3.642810168847328*^9}, 
   3.645865330646914*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Trying to find the equilibrium of the full Markov chain model\
\>", "Subsection",
 CellChangeTimes->{{3.6428059907610826`*^9, 3.642806029382543*^9}, {
  3.642838821782215*^9, 3.642838830153256*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"NN", ",", "\[Mu]", ",", "\[Gamma]"}], "]"}]], "Input",
 CellChangeTimes->{{3.642888202305197*^9, 3.642888208764908*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"eigenvalues", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Eigenvalues", "[", "Mtotal", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", "eigenvalues"}], "Input",
 CellChangeTimes->{{3.642806070093677*^9, 3.6428060761703787`*^9}, {
  3.642810239308092*^9, 3.642810263648464*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "NN"], ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "3"]}], "NN"], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "4"]}], "NN"], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "4"]}], "NN"], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "4"]}], "NN"]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6428102594293756`*^9, 3.6428102708966513`*^9}, 
   3.642878473023532*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"JD", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"JordanDecomposition", "[", "Mtotal", "]"}], ",", 
     RowBox[{"TimeConstraint", "\[Rule]", "7200"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.642801298897091*^9, 3.642801302423815*^9}, {
   3.642810276367918*^9, 3.642810353859261*^9}, {3.6428105321288853`*^9, 
   3.6428105389273987`*^9}, {3.642878484481986*^9, 3.6428784857637663`*^9}, 
   3.6428881198920183`*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.642801646094551*^9, 3.64281052682302*^9, 
  3.642880730929386*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ES", "=", 
   RowBox[{"Eigensystem", "[", "Mtotal", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.642902743202917*^9, 3.642902747625661*^9}}],

Cell[BoxData["ES"], "Input",
 CellChangeTimes->{{3.642903397675293*^9, 3.642903397869433*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ES", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"ES", ",", 
    RowBox[{"TimeConstraint", "\[Rule]", 
     RowBox[{"3600", "*", "16"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.642888147865506*^9, 3.642888184126727*^9}, {
  3.6429023611929493`*^9, 3.642902377936675*^9}, {3.6429027535833597`*^9, 
  3.642902753777104*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Simplify", "::", "time"}], "MessageName"], ":", 
  " ", "\<\"Time spent on a transformation exceeded \
\[NoBreak]\\!\\(57600.`\\)\[NoBreak] seconds, and the transformation was \
aborted. Increasing the value of TimeConstraint option may improve the result \
of simplification. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\
\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Simplify/time\\\", ButtonNote -> \
\\\"Simplify::time\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.643095330791045*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Simplify", "::", "time"}], "MessageName"], ":", 
  " ", "\<\"Time spent on a transformation exceeded \
\[NoBreak]\\!\\(57600.`\\)\[NoBreak] seconds, and the transformation was \
aborted. Increasing the value of TimeConstraint option may improve the result \
of simplification. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\
\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Simplify/time\\\", ButtonNote -> \
\\\"Simplify::time\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.643153054364596*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "NN"], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "3"]}], "NN"], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "4"]}], "NN"], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "4"]}], "NN"], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "4"]}], "NN"]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"NN", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]], ",", 
       FractionBox[
        RowBox[{"1", "-", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "NN"}], ")"}], " ", 
          SuperscriptBox["\[Mu]", "2"]}]}], 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}]], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "3"}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", "NN"}], ")"}], " ", 
          SuperscriptBox["\[Mu]", "2"]}], "+", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
            RowBox[{"NN", " ", 
             RowBox[{"(", 
              RowBox[{"4", "-", 
               RowBox[{"6", " ", "\[Mu]"}], "+", 
               RowBox[{"3", " ", 
                SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Gamma]"}]}], ")"}], 
         " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}]], ",", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
         RowBox[{"NN", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], "+", 
            RowBox[{"\[Gamma]", " ", 
             RowBox[{"(", 
              RowBox[{"2", "-", 
               RowBox[{"2", " ", "\[Mu]"}], "+", 
               SuperscriptBox["\[Mu]", "2"]}], ")"}]}]}], ")"}]}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Gamma]"}]}], ")"}], 
         " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}]], ",", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "NN"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], "+", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
            RowBox[{"NN", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
            RowBox[{
             SuperscriptBox["NN", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
           ")"}]}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Gamma]"}]}], ")"}], 
         " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}]], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "NN"}], ")"}], " ", "\[Mu]"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "NN"}], ")"}], " ", 
          SuperscriptBox["\[Mu]", "2"]}], "+", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
            RowBox[{"3", " ", "NN", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
            RowBox[{
             SuperscriptBox["NN", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
           ")"}]}]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Gamma]"}]}], ")"}], 
         " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}]], ",", "1"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], 
        RowBox[{"\[Gamma]", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}]], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Gamma]", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
        RowBox[{"2", " ", "\[Gamma]", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}]], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Gamma]", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
        RowBox[{"2", " ", "\[Gamma]", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}]], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], 
        RowBox[{"\[Gamma]", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}]], ",", "1", ",",
        "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"NN", " ", 
         SuperscriptBox["\[Mu]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "-", 
           RowBox[{"6", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "3"]}], "+", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", "NN", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
              RowBox[{"4", " ", "\[Mu]"}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}], 
        RowBox[{"\[Gamma]", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "3"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"3", " ", "\[Mu]"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Mu]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["\[Gamma]", "2"]}], ")"}]}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "4"]}], "-", 
            RowBox[{"NN", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}], " ", 
                "\[Mu]"}], "+", 
               RowBox[{"\[Gamma]", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "-", 
                  RowBox[{"4", " ", "\[Mu]"}], "+", 
                  SuperscriptBox["\[Mu]", "2"]}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["NN", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["\[Gamma]", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "4"]}], "+", 
               RowBox[{"\[Gamma]", " ", "\[Mu]", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "-", 
                  RowBox[{"3", " ", "\[Mu]"}], "+", 
                  SuperscriptBox["\[Mu]", "2"]}], ")"}]}], "-", 
               RowBox[{
                SuperscriptBox["\[Mu]", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{"3", "-", 
                  RowBox[{"3", " ", "\[Mu]"}], "+", 
                  SuperscriptBox["\[Mu]", "2"]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", " ", "\[Gamma]", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "3"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
             SuperscriptBox["\[Mu]", "2"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"3", " ", "\[Mu]"}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}], ")"}]}],
        ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "NN"}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "2"]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}], "-", 
          RowBox[{"2", " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "-", 
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "2"]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", " ", "\[Gamma]", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
             SuperscriptBox["\[Mu]", "2"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"3", " ", "\[Mu]"}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}], ")"}]}],
        ",", 
       FractionBox[
        RowBox[{"\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "-", 
           RowBox[{"6", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "3"]}], "+", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "3"]}], "+", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", 
                 RowBox[{"7", " ", "\[Mu]"}], "-", 
                 RowBox[{"6", " ", 
                  SuperscriptBox["\[Mu]", "2"]}], "+", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}], 
        RowBox[{"\[Gamma]", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"3", " ", "\[Mu]"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]], ",", 
       FractionBox[
        RowBox[{"\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"NN", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "3"]}], "+", 
           RowBox[{
            SuperscriptBox["NN", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Gamma]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "3"]}], "-", 
              RowBox[{"\[Mu]", " ", 
               RowBox[{"(", 
                RowBox[{"3", "-", 
                 RowBox[{"3", " ", "\[Mu]"}], "+", 
                 SuperscriptBox["\[Mu]", "2"]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"3", " ", "\[Mu]"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"12", "-", 
             RowBox[{"7", " ", "NN"}], "-", 
             RowBox[{"3", " ", 
              SuperscriptBox["NN", "2"]}]}], ")"}], " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "10"}], "+", 
             RowBox[{"7", " ", "NN"}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["NN", "2"]}]}], ")"}], " ", 
           SuperscriptBox["\[Mu]", "3"]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", 
             RowBox[{"2", " ", "NN"}], "+", 
             SuperscriptBox["NN", "2"]}], ")"}], " ", 
           SuperscriptBox["\[Mu]", "4"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"3", "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}]}]}], 
         ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
             SuperscriptBox["\[Mu]", "2"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"3", " ", "\[Mu]"}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}], ")"}]}],
        ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"NN", " ", 
          SuperscriptBox["\[Mu]", "3"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"NN", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "4"}], "+", 
               RowBox[{"3", " ", "\[Mu]"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", 
               RowBox[{"\[Gamma]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", "\[Mu]"}], "-", 
               SuperscriptBox["\[Mu]", "2"]}], ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "\[Mu]"}], "+", 
               RowBox[{"\[Gamma]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "4"}], "+", 
                  RowBox[{"3", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
             SuperscriptBox["\[Gamma]", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
            RowBox[{"\[Gamma]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "-", 
               RowBox[{"NN", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "-", 
                  RowBox[{"2", " ", "\[Mu]"}], "+", 
                  SuperscriptBox["\[Mu]", "2"]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}]]}], ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[Mu]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["NN", "2"], " ", "\[Gamma]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", 
               RowBox[{"\[Gamma]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", "\[Mu]"}], "-", 
               SuperscriptBox["\[Mu]", "2"]}], ")"}]}], "+", 
            RowBox[{"NN", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "-", 
               RowBox[{"2", " ", "\[Gamma]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], 
               "+", 
               SuperscriptBox["\[Mu]", "2"]}], ")"}]}]}], ")"}]}], 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
             SuperscriptBox["\[Gamma]", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
            RowBox[{"\[Gamma]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "-", 
               RowBox[{"NN", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "-", 
                  RowBox[{"2", " ", "\[Mu]"}], "+", 
                  SuperscriptBox["\[Mu]", "2"]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}]]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Mu]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", 
               RowBox[{"3", " ", "\[Mu]"}]}], ")"}]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["NN", "2"], " ", "\[Gamma]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", 
               RowBox[{"\[Gamma]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", "\[Mu]"}], "-", 
               SuperscriptBox["\[Mu]", "2"]}], ")"}]}], "+", 
            RowBox[{"NN", " ", 
             RowBox[{"(", 
              RowBox[{"4", "-", 
               RowBox[{"8", " ", 
                SuperscriptBox["\[Gamma]", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "3"]}], "-", 
               RowBox[{"10", " ", "\[Mu]"}], "+", 
               RowBox[{"12", " ", 
                SuperscriptBox["\[Mu]", "2"]}], "-", 
               RowBox[{"5", " ", 
                SuperscriptBox["\[Mu]", "3"]}], "+", 
               RowBox[{"2", " ", "\[Gamma]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "8"}], "+", 
                  RowBox[{"20", " ", "\[Mu]"}], "-", 
                  RowBox[{"20", " ", 
                   SuperscriptBox["\[Mu]", "2"]}], "+", 
                  RowBox[{"7", " ", 
                   SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
             SuperscriptBox["\[Gamma]", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
            RowBox[{"\[Gamma]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "-", 
               RowBox[{"NN", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "-", 
                  RowBox[{"2", " ", "\[Mu]"}], "+", 
                  SuperscriptBox["\[Mu]", "2"]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Mu]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "4"]}], "+", 
            RowBox[{
             SuperscriptBox["NN", "2"], " ", "\[Gamma]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", 
               RowBox[{"\[Gamma]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
               RowBox[{"2", " ", "\[Mu]"}], "-", 
               SuperscriptBox["\[Mu]", "2"]}], ")"}]}], "-", 
            RowBox[{"NN", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "-", 
               RowBox[{"2", " ", "\[Gamma]", " ", 
                RowBox[{"(", 
                 RowBox[{"8", "-", 
                  RowBox[{"12", " ", "\[Mu]"}], "+", 
                  RowBox[{"5", " ", 
                   SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "+", 
               RowBox[{
                SuperscriptBox["\[Gamma]", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{"8", "-", 
                  RowBox[{"12", " ", "\[Mu]"}], "+", 
                  RowBox[{"5", " ", 
                   SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
          SuperscriptBox["\[Gamma]", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
             SuperscriptBox["\[Gamma]", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
            RowBox[{"\[Gamma]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "-", 
               RowBox[{"NN", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "-", 
                  RowBox[{"2", " ", "\[Mu]"}], "+", 
                  SuperscriptBox["\[Mu]", "2"]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}], ")"}]}], ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", "NN", " ", 
         SuperscriptBox["\[Mu]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[Gamma]", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
           SuperscriptBox["\[Mu]", "2"], "+", 
           RowBox[{"2", " ", "NN", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"\[Gamma]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", "\[Mu]"}], "-", 
              SuperscriptBox["\[Mu]", "2"]}], ")"}]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "-", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"2", " ", "\[Mu]"}], "+", 
                 SuperscriptBox["\[Mu]", "2"]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]], ",", 
       FractionBox[
        RowBox[{"\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], "+", 
           
           RowBox[{"2", " ", 
            SuperscriptBox["NN", "2"], " ", "\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"\[Gamma]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", "\[Mu]"}], "-", 
              SuperscriptBox["\[Mu]", "2"]}], ")"}]}], "-", 
           RowBox[{"NN", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", 
              RowBox[{"2", " ", "\[Gamma]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}], "-", 
              RowBox[{"2", " ", "\[Mu]"}], "+", 
              RowBox[{
               SuperscriptBox["\[Gamma]", "2"], " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"3", " ", "\[Mu]"}], "+", 
                 SuperscriptBox["\[Mu]", "2"]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "-", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"2", " ", "\[Mu]"}], "+", 
                 SuperscriptBox["\[Mu]", "2"]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]], ",", 
       FractionBox[
        RowBox[{"\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"3", " ", "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"3", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "-", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"2", " ", "\[Mu]"}], "+", 
                 SuperscriptBox["\[Mu]", "2"]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]], ",", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["\[Mu]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
           RowBox[{"NN", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Gamma]", "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
              RowBox[{"\[Gamma]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "8"}], "+", 
                 RowBox[{"12", " ", "\[Mu]"}], "-", 
                 RowBox[{"5", " ", 
                  SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         SuperscriptBox["\[Gamma]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "-", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"2", " ", "\[Mu]"}], "+", 
                 SuperscriptBox["\[Mu]", "2"]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]], ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"NN", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "-", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"2", " ", "\[Mu]"}], "+", 
                 SuperscriptBox["\[Mu]", "2"]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]], ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
             SuperscriptBox["\[Gamma]", "2"]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
             SuperscriptBox["\[Gamma]", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
            RowBox[{"\[Gamma]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "-", 
               RowBox[{"NN", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "-", 
                  RowBox[{"2", " ", "\[Mu]"}], "+", 
                  SuperscriptBox["\[Mu]", "2"]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}]]}], ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
             SuperscriptBox["\[Gamma]", "2"]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
             SuperscriptBox["\[Gamma]", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
            RowBox[{"\[Gamma]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "-", 
               RowBox[{"NN", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "-", 
                  RowBox[{"2", " ", "\[Mu]"}], "+", 
                  SuperscriptBox["\[Mu]", "2"]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}]]}], ",", 
       FractionBox[
        RowBox[{"NN", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "-", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"2", " ", "\[Mu]"}], "+", 
                 SuperscriptBox["\[Mu]", "2"]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]], ",", "1", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.642896206180628*^9, 3.6431533767194347`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eigenvectors", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"Eigenvectors", "[", "Mtotal", "]"}], ",", 
    RowBox[{"TimeConstraint", "\[Rule]", "7200"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.642896211877434*^9, 3.642896230193673*^9}, 
   3.642901532489087*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.642899970862938*^9, 3.6429023243498774`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Trying to find the equilibrium of the Markov chain model with the simplified \
mutation matrix\
\>", "Subsection",
 CellChangeTimes->{{3.6428059907610826`*^9, 3.642806029382543*^9}, {
  3.642838821782215*^9, 3.642838830153256*^9}, {3.6433589652994957`*^9, 
  3.643358973258782*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"eigenvalues", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Eigenvalues", "[", "MtotalSimple", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", "eigenvalues"}], "Input",
 CellChangeTimes->{{3.642806070093677*^9, 3.6428060761703787`*^9}, {
  3.642810239308092*^9, 3.642810263648464*^9}, {3.643358980147442*^9, 
  3.643358981538657*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "NN"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "NN"], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"3", " ", "\[Mu]"}]}], ")"}]}]}], ",", 
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", "NN"], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}]}]}], ",", 
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", "NN"], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}]}]}], ",", 
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", "NN"], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6428102594293756`*^9, 3.6428102708966513`*^9}, 
   3.6433589850619783`*^9, 3.643399079271167*^9, 3.643406112712142*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"JD", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"JordanDecomposition", "[", "MtotalSimple", "]"}], ",", 
     RowBox[{"TimeConstraint", "\[Rule]", "900"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.642801298897091*^9, 3.642801302423815*^9}, {
  3.642810276367918*^9, 3.642810353859261*^9}, {3.6428105321288853`*^9, 
  3.6428105389273987`*^9}, {3.643358991905691*^9, 3.643358992602191*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"AM", "=", 
   RowBox[{"JD", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DM", "=", 
   RowBox[{"JD", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AMinv", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Inverse", "[", "AM", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.643359043888342*^9, 3.6433590439725313`*^9}, {
  3.643359163397025*^9, 3.643359163603283*^9}, {3.643359219087503*^9, 
  3.643359292773158*^9}, {3.643359327064971*^9, 3.6433593272870407`*^9}, {
  3.643359499100854*^9, 3.643359500932439*^9}, {3.64339907125994*^9, 
  3.643399075226533*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"AM", ".", "DM", ".", "AMinv"}], " ", "\[Equal]", " ", 
   "MtotalSimple"}], "]"}]], "Input",
 CellChangeTimes->{{3.6433593142985477`*^9, 3.643359344294622*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.643360772726585*^9, 3.643399353540422*^9, 
  3.643408247621848*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"MatrixForm", "[", "AM", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "DM", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "AMinv", "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.643399377233802*^9, 3.643399398304329*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], 
       "\[Gamma]"], 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
        SuperscriptBox["\[Mu]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"3", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], 
       RowBox[{"\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "7"}], "+", 
             RowBox[{"3", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"12", "-", 
             RowBox[{"8", " ", "NN"}]}], ")"}], " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"7", " ", "\[Mu]"}], "+", 
             RowBox[{"12", " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
        SuperscriptBox["\[Mu]", "3"], " ", 
        RowBox[{"(", 
         RowBox[{"5", "-", 
          RowBox[{"14", " ", "\[Mu]"}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"8", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], 
       RowBox[{"\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"7", " ", "\[Mu]"}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"4", " ", "\[Mu]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{"2", "-", 
                RowBox[{"6", " ", "\[Mu]"}]}], ")"}]}], "+", 
             RowBox[{"8", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
         SuperscriptBox["\[Mu]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"6", " ", "\[Mu]"}], "+", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], 
        RowBox[{"\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"7", " ", "\[Mu]"}], "+", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"4", " ", "\[Mu]"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"6", " ", "\[Mu]"}]}], ")"}]}], "+", 
              RowBox[{"8", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]]}], 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", "\[Mu]"}], 
       RowBox[{"\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"4", " ", "\[Mu]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{"2", "-", 
                RowBox[{"6", " ", "\[Mu]"}]}], ")"}]}], "+", 
             RowBox[{"8", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]]},
     {"1", 
      RowBox[{
       FractionBox["1", "2"], "+", "\[Mu]", "-", 
       RowBox[{"NN", " ", "\[Mu]"}]}], 
      RowBox[{
       FractionBox["1", "2"], "+", "\[Mu]", "-", 
       FractionBox["\[Mu]", "\[Gamma]"]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "-", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["NN", "2"]}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "-", 
              RowBox[{"11", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"3", " ", "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"21", " ", "\[Mu]"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["NN", "2"], " ", "\[Mu]"}], "-", 
              RowBox[{"36", " ", 
               SuperscriptBox["\[Mu]", "2"]}], "+", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"21", " ", "\[Mu]"}], "+", 
                 RowBox[{"36", " ", 
                  SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}], 
        RowBox[{"2", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "7"}], "+", 
              RowBox[{"3", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"12", "-", 
              RowBox[{"8", " ", "NN"}]}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"7", " ", "\[Mu]"}], "+", 
              RowBox[{"12", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]]}], 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
        SuperscriptBox["\[Mu]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "-", 
          RowBox[{"16", " ", "\[Mu]"}], "+", 
          RowBox[{"28", " ", 
           SuperscriptBox["\[Mu]", "2"]}], "-", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"7", "-", 
             RowBox[{"26", " ", "\[Mu]"}], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "7"}], "+", 
                RowBox[{"22", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{"2", " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4"}], "+", 
             RowBox[{"27", " ", "\[Mu]"}], "-", 
             RowBox[{"50", " ", 
              SuperscriptBox["\[Mu]", "2"]}], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{"3", "-", 
                RowBox[{"18", " ", "\[Mu]"}], "+", 
                RowBox[{"28", " ", 
                 SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}], 
       RowBox[{"\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"7", " ", "\[Mu]"}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"4", " ", "\[Mu]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{"2", "-", 
                RowBox[{"6", " ", "\[Mu]"}]}], ")"}]}], "+", 
             RowBox[{"8", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "3"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "-", 
           RowBox[{"12", " ", "\[Mu]"}], "+", 
           RowBox[{"20", " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "5"}], "+", 
              RowBox[{"4", " ", "NN", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"3", " ", "\[Mu]"}]}], ")"}], "2"]}], "+", 
              RowBox[{"34", " ", "\[Mu]"}], "-", 
              RowBox[{"60", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{"7", " ", "\[Mu]"}], "+", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", 
                 RowBox[{"6", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
        RowBox[{"\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"7", " ", "\[Mu]"}], "+", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"4", " ", "\[Mu]"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"6", " ", "\[Mu]"}]}], ")"}]}], "+", 
              RowBox[{"8", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]"}], "+", 
           
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"4", " ", "\[Mu]"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"6", " ", "\[Mu]"}]}], ")"}]}], "+", 
              RowBox[{"8", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]]}]},
     {"1", 
      FractionBox[
       RowBox[{"3", "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
        RowBox[{"\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Mu]"}], "-", 
           RowBox[{"2", " ", "NN", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", "\[Mu]"}], ")"}]}]}], ")"}]}]}], 
       RowBox[{"2", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"4", " ", "NN"}]}], ")"}], " ", "\[Gamma]"}]}]], 
      RowBox[{
       FractionBox["1", "2"], "+", "\[Mu]", "-", 
       FractionBox["\[Mu]", "\[Gamma]"]}], 
      FractionBox[
       RowBox[{
        RowBox[{"2", " ", "\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], 
          ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         SuperscriptBox["\[Gamma]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"5", " ", "\[Mu]"}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{"24", " ", 
            SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}], "+", 
        RowBox[{"\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
           RowBox[{"12", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "-", 
           RowBox[{"36", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}]}], 
       RowBox[{"2", " ", "\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "7"}], "+", 
             RowBox[{"3", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"12", "-", 
             RowBox[{"8", " ", "NN"}]}], ")"}], " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"7", " ", "\[Mu]"}], "+", 
             RowBox[{"12", " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "-", 
          RowBox[{"13", " ", "\[Mu]"}], "+", 
          RowBox[{"14", " ", 
           SuperscriptBox["\[Mu]", "2"]}], "-", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"4", "-", 
             RowBox[{"13", " ", "\[Mu]"}], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "4"}], "+", 
                RowBox[{"11", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "5"}], "+", 
             RowBox[{"34", " ", "\[Mu]"}], "-", 
             RowBox[{"50", " ", 
              SuperscriptBox["\[Mu]", "2"]}], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{"4", "-", 
                RowBox[{"22", " ", "\[Mu]"}], "+", 
                RowBox[{"28", " ", 
                 SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}], 
       RowBox[{"\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"7", " ", "\[Mu]"}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"4", " ", "\[Mu]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{"2", "-", 
                RowBox[{"6", " ", "\[Mu]"}]}], ")"}]}], "+", 
             RowBox[{"8", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
         SuperscriptBox["\[Mu]", "2"]}], 
        RowBox[{"\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"7", " ", "\[Mu]"}], "+", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"4", " ", "\[Mu]"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"6", " ", "\[Mu]"}]}], ")"}]}], "+", 
              RowBox[{"8", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]"}], "+", 
           
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"4", " ", "\[Mu]"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"6", " ", "\[Mu]"}]}], ")"}]}], "+", 
              RowBox[{"8", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]]}]},
     {"1", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]", "-", 
          RowBox[{"\[Gamma]", " ", "\[Mu]"}], "+", 
          RowBox[{"NN", " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]", "-", "\[Mu]", "+", 
             RowBox[{"\[Gamma]", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Gamma]"}]}]], 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], 
       "\[Gamma]"], 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], 
            ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"7", " ", "\[Mu]"}], "+", 
             RowBox[{"12", " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}], 
       RowBox[{"\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "7"}], "+", 
             RowBox[{"3", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"12", "-", 
             RowBox[{"8", " ", "NN"}]}], ")"}], " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"7", " ", "\[Mu]"}], "+", 
             RowBox[{"12", " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"8", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
        SuperscriptBox["\[Mu]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"4", " ", "\[Mu]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"6", " ", "\[Mu]"}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{"2", "-", 
             RowBox[{"13", " ", "\[Mu]"}], "+", 
             RowBox[{"14", " ", 
              SuperscriptBox["\[Mu]", "2"]}], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", 
                RowBox[{"11", " ", "\[Mu]"}], "-", 
                RowBox[{"14", " ", 
                 SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}], 
       RowBox[{
        SuperscriptBox["\[Gamma]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"7", " ", "\[Mu]"}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"4", " ", "\[Mu]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{"2", "-", 
                RowBox[{"6", " ", "\[Mu]"}]}], ")"}]}], "+", 
             RowBox[{"8", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"8", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
        SuperscriptBox["\[Mu]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}]}], 
       RowBox[{
        SuperscriptBox["\[Gamma]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"7", " ", "\[Mu]"}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"4", " ", "\[Mu]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{"2", "-", 
                RowBox[{"6", " ", "\[Mu]"}]}], ")"}]}], "+", 
             RowBox[{"8", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", "\[Mu]"}], 
       RowBox[{"\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"4", " ", "\[Mu]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{"2", "-", 
                RowBox[{"6", " ", "\[Mu]"}]}], ")"}]}], "+", 
             RowBox[{"8", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]]},
     {"1", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[Mu]"}], "+", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", "NN", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Gamma]"}]}]]}], "1", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"3", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"6", " ", "\[Mu]"}], "+", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "7"}], "+", 
            RowBox[{"3", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"12", "-", 
            RowBox[{"8", " ", "NN"}]}], ")"}], " ", 
          SuperscriptBox["\[Mu]", "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"7", " ", "\[Mu]"}], "+", 
            RowBox[{"12", " ", 
             SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}]]}], "0", "0", "1"},
     {"1", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
        RowBox[{"\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["NN", "2"], " ", "\[Mu]"}], "+", 
           RowBox[{"NN", " ", 
            RowBox[{"(", 
             RowBox[{"3", "+", 
              RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{"4", " ", "NN"}]}], ")"}], " ", "\[Gamma]"}]}]], "1", 
      FractionBox[
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"3", "+", 
           RowBox[{"4", " ", "NN"}], "-", 
           RowBox[{"3", " ", 
            SuperscriptBox["NN", "2"]}]}], ")"}], " ", 
         SuperscriptBox["\[Mu]", "2"]}], "+", 
        RowBox[{"6", " ", 
         RowBox[{"(", 
          RowBox[{"3", "-", 
           RowBox[{"4", " ", "NN"}], "+", 
           SuperscriptBox["NN", "2"]}], ")"}], " ", 
         SuperscriptBox["\[Mu]", "3"]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"3", " ", "\[Mu]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"3", "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "7"}], "+", 
             RowBox[{"3", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"12", "-", 
             RowBox[{"8", " ", "NN"}]}], ")"}], " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"7", " ", "\[Mu]"}], "+", 
             RowBox[{"12", " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]], "0", "1",
       "0"},
     {"1", "1", "1", "1", "1", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6433993989036827`*^9, 3.643408247721786*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "0", "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "NN"]}], "0", "0", "0", 
      "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "0", "0", "0", "0"},
     {"0", "0", "0", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"3", " ", "\[Mu]"}]}], ")"}]}], "NN"], "0", "0", "0"},
     {"0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "NN"]}], "0", "0"},
     {"0", "0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "NN"]}], "0"},
     {"0", "0", "0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "NN"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6433993989036827`*^9, 3.6434082477343807`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"5", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Gamma]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"6", " ", "\[Mu]"}], "-", 
             RowBox[{"11", " ", 
              SuperscriptBox["\[Mu]", "2"]}], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", 
             RowBox[{"16", " ", "\[Mu]"}], "-", 
             RowBox[{"23", " ", 
              SuperscriptBox["\[Mu]", "2"]}], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["\[Mu]", "3"]}], "+", 
             RowBox[{
              SuperscriptBox["NN", "2"], " ", "\[Mu]", " ", 
              RowBox[{"(", 
               RowBox[{"8", "-", 
                RowBox[{"25", " ", "\[Mu]"}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "-", 
             RowBox[{"3", " ", "NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"8", " ", "\[Mu]"}], "-", 
                RowBox[{"16", " ", 
                 SuperscriptBox["\[Mu]", "2"]}], "+", 
                RowBox[{"4", " ", 
                 SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"3", "-", 
             RowBox[{"17", " ", "\[Mu]"}], "+", 
             RowBox[{"28", " ", 
              SuperscriptBox["\[Mu]", "2"]}], "-", 
             RowBox[{"12", " ", 
              SuperscriptBox["\[Mu]", "3"]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["NN", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"7", " ", "\[Mu]"}], "-", 
                RowBox[{"15", " ", 
                 SuperscriptBox["\[Mu]", "2"]}], "+", 
                RowBox[{"6", " ", 
                 SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "5"}], "+", 
                RowBox[{"31", " ", "\[Mu]"}], "-", 
                RowBox[{"58", " ", 
                 SuperscriptBox["\[Mu]", "2"]}], "+", 
                RowBox[{"24", " ", 
                 SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[Mu]"}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          RowBox[{"7", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "-", 
          RowBox[{"12", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Gamma]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"7", " ", "\[Mu]"}], "+", 
             RowBox[{"12", " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"21", "-", 
                RowBox[{"10", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
             RowBox[{"36", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"3", "-", 
             RowBox[{"9", " ", "\[Mu]"}], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", 
                RowBox[{"9", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
        "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"8", "-", 
             RowBox[{"6", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
          RowBox[{"8", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"3", " ", "\[Mu]"}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "-", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"3", "-", 
             RowBox[{"5", " ", "\[Mu]"}], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", 
                RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
       
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[Mu]"}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          RowBox[{"7", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "-", 
          RowBox[{"12", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Gamma]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"7", " ", "\[Mu]"}], "+", 
             RowBox[{"12", " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"21", "-", 
                RowBox[{"10", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
             RowBox[{"36", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"3", "-", 
             RowBox[{"9", " ", "\[Mu]"}], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", 
                RowBox[{"9", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
         SuperscriptBox["\[Mu]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["NN", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "\[Gamma]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "3"}], " ", "\[Mu]"}], "+", 
              RowBox[{"\[Gamma]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"3", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{"NN", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", 
              RowBox[{
               SuperscriptBox["\[Gamma]", "2"], " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}], "-", 
              RowBox[{"8", " ", "\[Mu]"}], "+", 
              RowBox[{"\[Gamma]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "5"}], "+", 
                 RowBox[{"13", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}],
          " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[Mu]"}], "+", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           RowBox[{"7", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "-", 
           RowBox[{"12", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
            SuperscriptBox["\[Gamma]", "3"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"7", " ", "\[Mu]"}], "+", 
              RowBox[{"12", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"21", "-", 
                 RowBox[{"10", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
              RowBox[{"36", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"3", "-", 
              RowBox[{"9", " ", "\[Mu]"}], "+", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", 
                 RowBox[{"9", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         SuperscriptBox["\[Gamma]", "2"], " ", "\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"5", " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "-", 
           RowBox[{"NN", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "+", 
              RowBox[{"15", " ", "\[Mu]"}], "-", 
              RowBox[{"18", " ", 
               SuperscriptBox["\[Mu]", "2"]}], "+", 
              RowBox[{"3", " ", "\[Gamma]", " ", 
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"5", " ", "\[Mu]"}], "+", 
                 RowBox[{"6", " ", 
                  SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["NN", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"6", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], 
              "+", 
              RowBox[{"\[Gamma]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", 
                 RowBox[{"11", " ", "\[Mu]"}], "-", 
                 RowBox[{"12", " ", 
                  SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "+", 
              RowBox[{
               SuperscriptBox["\[Gamma]", "2"], " ", 
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"5", " ", "\[Mu]"}], "+", 
                 RowBox[{"6", " ", 
                  SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}],
          " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[Mu]"}], "+", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           RowBox[{"7", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "-", 
           RowBox[{"12", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
            SuperscriptBox["\[Gamma]", "3"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"7", " ", "\[Mu]"}], "+", 
              RowBox[{"12", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"21", "-", 
                 RowBox[{"10", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
              RowBox[{"36", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"3", "-", 
              RowBox[{"9", " ", "\[Mu]"}], "+", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", 
                 RowBox[{"9", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]]}], 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[Mu]"}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "3"], " ", 
        SuperscriptBox["\[Mu]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "-", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[Mu]"}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          RowBox[{"7", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "-", 
          RowBox[{"12", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Gamma]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"7", " ", "\[Mu]"}], "+", 
             RowBox[{"12", " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"21", "-", 
                RowBox[{"10", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
             RowBox[{"36", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"3", "-", 
             RowBox[{"9", " ", "\[Mu]"}], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", 
                RowBox[{"9", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"16", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "3"], " ", 
        SuperscriptBox["\[Mu]", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{"2", "-", 
             RowBox[{"3", " ", "\[Mu]"}], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"3", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
       
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[Mu]"}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          RowBox[{"7", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "-", 
          RowBox[{"12", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Gamma]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"7", " ", "\[Mu]"}], "+", 
             RowBox[{"12", " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"21", "-", 
                RowBox[{"10", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
             RowBox[{"36", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"3", "-", 
             RowBox[{"9", " ", "\[Mu]"}], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", 
                RowBox[{"9", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Gamma]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Gamma]"}]}], ")"}], 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"5", " ", "\[Mu]"}], "+", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"3", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"NN", " ", "\[Gamma]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}],
          " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{"2", " ", "\[Gamma]", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"7", " ", "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"15", " ", "\[Mu]"}], "-", 
              RowBox[{"28", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "3"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"7", " ", "\[Mu]"}], "+", 
              RowBox[{"12", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Gamma]"}]}], ")"}], 
         " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"3", " ", "\[Gamma]"}], "+", 
           SuperscriptBox["\[Gamma]", "2"]}], ")"}], " ", "\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"NN", " ", "\[Gamma]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}],
          " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{"2", " ", "\[Gamma]", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"7", " ", "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"15", " ", "\[Mu]"}], "-", 
              RowBox[{"28", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "3"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"7", " ", "\[Mu]"}], "+", 
              RowBox[{"12", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]]}], 
      FractionBox[
       RowBox[{"2", " ", "\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Gamma]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"3", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"]}], ")"}], " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"NN", " ", "\[Gamma]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{"2", " ", "\[Gamma]", " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"7", " ", "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"15", " ", "\[Mu]"}], "-", 
             RowBox[{"28", " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"7", " ", "\[Mu]"}], "+", 
             RowBox[{"12", " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[Gamma]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Gamma]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"5", " ", "\[Mu]"}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"3", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"NN", " ", "\[Gamma]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{"2", " ", "\[Gamma]", " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"7", " ", "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"15", " ", "\[Mu]"}], "-", 
             RowBox[{"28", " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"7", " ", "\[Mu]"}], "+", 
             RowBox[{"12", " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]], "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Gamma]"}]}], ")"}], 
         " ", 
         SuperscriptBox["\[Mu]", "2"]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"NN", " ", "\[Gamma]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}],
          " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{"2", " ", "\[Gamma]", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"7", " ", "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"15", " ", "\[Mu]"}], "-", 
              RowBox[{"28", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "3"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"7", " ", "\[Mu]"}], "+", 
              RowBox[{"12", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]]}], 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Gamma]"}]}], ")"}], 
        " ", 
        SuperscriptBox["\[Mu]", "2"]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"NN", " ", "\[Gamma]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{"2", " ", "\[Gamma]", " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"7", " ", "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"15", " ", "\[Mu]"}], "-", 
             RowBox[{"28", " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"7", " ", "\[Mu]"}], "+", 
             RowBox[{"12", " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "-", 
           RowBox[{"2", " ", "\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{"6", " ", "\[Mu]"}], "+", 
              RowBox[{
               SuperscriptBox["NN", "2"], " ", "\[Mu]"}], "+", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"3", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"3", " ", "\[Mu]"}], "+", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", 
                 RowBox[{"7", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"NN", " ", "\[Gamma]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}],
          " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[Mu]"}], "+", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]]}], 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Gamma]", "-", 
          RowBox[{"2", " ", "\[Mu]"}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Mu]"}], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"3", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
       
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"NN", " ", "\[Gamma]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[Mu]"}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
        "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["NN", "2"], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{"2", "-", 
                RowBox[{"6", " ", "\[Mu]"}]}], ")"}]}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["NN", "2"], " ", "\[Mu]"}], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"6", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
       
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"NN", " ", "\[Gamma]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[Mu]"}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox["\[Gamma]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", "NN", " ", "\[Mu]"}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{"2", "-", 
                RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}], "+", 
             RowBox[{"3", " ", "\[Mu]"}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["NN", "2"], " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"NN", " ", "\[Gamma]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[Mu]"}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"\[Gamma]", "-", 
        RowBox[{"2", " ", "\[Gamma]", " ", "\[Mu]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[Mu]"}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
        "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], "+", 
          RowBox[{"NN", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Mu]"}], "+", 
             RowBox[{"\[Gamma]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"3", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
       
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"NN", " ", "\[Gamma]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[Mu]"}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "\[Gamma]", "+", 
           RowBox[{"NN", " ", "\[Gamma]"}]}], ")"}], " ", 
         SuperscriptBox["\[Mu]", "2"]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"NN", " ", "\[Gamma]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}],
          " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[Mu]"}], "+", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]]}]},
     {
      FractionBox[
       RowBox[{
        SuperscriptBox["\[Gamma]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"3", " ", "\[Mu]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "7"}], "+", 
             RowBox[{"3", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"12", "-", 
             RowBox[{"8", " ", "NN"}]}], ")"}], " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"7", " ", "\[Mu]"}], "+", 
             RowBox[{"12", " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"3", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{"2", "-", 
             RowBox[{"7", " ", "\[Mu]"}]}], ")"}], " ", "\[Mu]"}], "+", 
          SuperscriptBox["\[Mu]", "2"], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"7", " ", "\[Mu]"}], "+", 
             RowBox[{"12", " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{"\[Mu]", "+", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "7"}], "+", 
              RowBox[{"3", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"12", "-", 
              RowBox[{"8", " ", "NN"}]}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"7", " ", "\[Mu]"}], "+", 
              RowBox[{"12", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}],
          " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"3", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{"7", " ", "\[Mu]"}]}], ")"}], " ", "\[Mu]"}], "+", 
           SuperscriptBox["\[Mu]", "2"], "+", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"7", " ", "\[Mu]"}], "+", 
              RowBox[{"12", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]]}], 
      FractionBox[
       RowBox[{"2", " ", "\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "7"}], "+", 
             RowBox[{"3", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"12", "-", 
             RowBox[{"8", " ", "NN"}]}], ")"}], " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"7", " ", "\[Mu]"}], "+", 
             RowBox[{"12", " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"3", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{"2", "-", 
             RowBox[{"7", " ", "\[Mu]"}]}], ")"}], " ", "\[Mu]"}], "+", 
          SuperscriptBox["\[Mu]", "2"], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"7", " ", "\[Mu]"}], "+", 
             RowBox[{"12", " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Gamma]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"3", " ", "\[Mu]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "7"}], "+", 
              RowBox[{"3", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"12", "-", 
              RowBox[{"8", " ", "NN"}]}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"7", " ", "\[Mu]"}], "+", 
              RowBox[{"12", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}],
          " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"3", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{"7", " ", "\[Mu]"}]}], ")"}], " ", "\[Mu]"}], "+", 
           SuperscriptBox["\[Mu]", "2"], "+", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"7", " ", "\[Mu]"}], "+", 
              RowBox[{"12", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]]}], "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ",
          "\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "7"}], "+", 
              RowBox[{"3", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"12", "-", 
              RowBox[{"8", " ", "NN"}]}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"7", " ", "\[Mu]"}], "+", 
              RowBox[{"12", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}],
          " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"3", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{"7", " ", "\[Mu]"}]}], ")"}], " ", "\[Mu]"}], "+", 
           SuperscriptBox["\[Mu]", "2"], "+", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"7", " ", "\[Mu]"}], "+", 
              RowBox[{"12", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]]}], 
      FractionBox[
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
        "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "7"}], "+", 
             RowBox[{"3", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"12", "-", 
             RowBox[{"8", " ", "NN"}]}], ")"}], " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"7", " ", "\[Mu]"}], "+", 
             RowBox[{"12", " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"3", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{"2", "-", 
             RowBox[{"7", " ", "\[Mu]"}]}], ")"}], " ", "\[Mu]"}], "+", 
          SuperscriptBox["\[Mu]", "2"], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"7", " ", "\[Mu]"}], "+", 
             RowBox[{"12", " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]]},
     {
      FractionBox[
       RowBox[{"\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "4"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "-", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4"}], "+", 
             RowBox[{"39", " ", "\[Mu]"}], "-", 
             RowBox[{"118", " ", 
              SuperscriptBox["\[Mu]", "2"]}], "+", 
             RowBox[{"104", " ", 
              SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"19", "-", 
                RowBox[{"4", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "23"}], "+", 
                RowBox[{"5", " ", "NN"}]}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "2"]}], "+", 
             RowBox[{"4", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", 
                RowBox[{"5", " ", "NN"}]}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "5"}], "+", 
             RowBox[{"28", " ", "\[Mu]"}], "-", 
             RowBox[{"24", " ", 
              SuperscriptBox["\[Mu]", "2"]}], "+", 
             RowBox[{"4", " ", "NN", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"6", " ", "\[Mu]"}], "+", 
                RowBox[{"5", " ", 
                 SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Gamma]", "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{"4", " ", "\[Gamma]", " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"17", " ", "\[Mu]"}], "-", 
             RowBox[{"36", " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Gamma]", "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"8", "-", 
             RowBox[{"6", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "-", 
          RowBox[{"8", " ", 
           RowBox[{"(", 
            RowBox[{"2", "-", 
             RowBox[{"3", " ", "NN"}], "+", 
             SuperscriptBox["NN", "2"]}], ")"}], " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"4", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
          "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"3", "-", 
             RowBox[{"12", " ", "\[Mu]"}], "+", 
             RowBox[{"2", " ", "NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "4"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "-", 
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "+", 
              RowBox[{"39", " ", "\[Mu]"}], "-", 
              RowBox[{"118", " ", 
               SuperscriptBox["\[Mu]", "2"]}], "+", 
              RowBox[{"104", " ", 
               SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}], "+", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"19", "-", 
                 RowBox[{"4", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "23"}], "+", 
                 RowBox[{"5", " ", "NN"}]}], ")"}], " ", 
               SuperscriptBox["\[Mu]", "2"]}], "+", 
              RowBox[{"4", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", 
                 RowBox[{"5", " ", "NN"}]}], ")"}], " ", 
               SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "5"}], "+", 
              RowBox[{"28", " ", "\[Mu]"}], "-", 
              RowBox[{"24", " ", 
               SuperscriptBox["\[Mu]", "2"]}], "+", 
              RowBox[{"4", " ", "NN", " ", 
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"6", " ", "\[Mu]"}], "+", 
                 RowBox[{"5", " ", 
                  SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[Gamma]", "3"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{"4", " ", "\[Gamma]", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"17", " ", "\[Mu]"}], "-", 
              RowBox[{"36", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
            SuperscriptBox["\[Gamma]", "3"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"8", "-", 
              RowBox[{"6", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "-", 
           RowBox[{"8", " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{"3", " ", "NN"}], "+", 
              SuperscriptBox["NN", "2"]}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"3", "+", 
              RowBox[{"4", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Mu]"}]}], ")"}]}],
            "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"3", "-", 
              RowBox[{"12", " ", "\[Mu]"}], "+", 
              RowBox[{"2", " ", "NN", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]]}], 
      FractionBox[
       RowBox[{"2", " ", "\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Gamma]", "5"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "3"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Mu]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN", "+", 
             RowBox[{"4", " ", "\[Mu]"}], "-", 
             RowBox[{"4", " ", "NN", " ", "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"23", "-", 
                RowBox[{"8", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "82"}], "+", 
                RowBox[{"50", " ", "NN"}], "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox["NN", "2"]}]}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "2"]}], "+", 
             RowBox[{"4", " ", 
              RowBox[{"(", 
               RowBox[{"22", "-", 
                RowBox[{"18", " ", "NN"}], "+", 
                RowBox[{"3", " ", 
                 SuperscriptBox["NN", "2"]}]}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "4"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{"5", "-", 
             RowBox[{"19", " ", "\[Mu]"}], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "4"}], "+", 
                RowBox[{"15", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"7", "-", 
             RowBox[{"53", " ", "\[Mu]"}], "+", 
             RowBox[{"94", " ", 
              SuperscriptBox["\[Mu]", "2"]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["NN", "2"], " ", "\[Mu]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "4"}], "+", 
                RowBox[{"13", " ", "\[Mu]"}]}], ")"}]}], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"57", " ", "\[Mu]"}], "-", 
                RowBox[{"116", " ", 
                 SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "9"}], "+", 
             RowBox[{"69", " ", "\[Mu]"}], "-", 
             RowBox[{"130", " ", 
              SuperscriptBox["\[Mu]", "2"]}], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{"4", "-", 
                RowBox[{"34", " ", "\[Mu]"}], "+", 
                RowBox[{"70", " ", 
                 SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Gamma]", "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{"4", " ", "\[Gamma]", " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"17", " ", "\[Mu]"}], "-", 
             RowBox[{"36", " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Gamma]", "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"8", "-", 
             RowBox[{"6", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "-", 
          RowBox[{"8", " ", 
           RowBox[{"(", 
            RowBox[{"2", "-", 
             RowBox[{"3", " ", "NN"}], "+", 
             SuperscriptBox["NN", "2"]}], ")"}], " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"4", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
          "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"3", "-", 
             RowBox[{"12", " ", "\[Mu]"}], "+", 
             RowBox[{"2", " ", "NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Gamma]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "-", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "9"}], "+", 
              RowBox[{"4", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"59", "-", 
              RowBox[{"45", " ", "NN"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["NN", "2"]}]}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{"42", "-", 
              RowBox[{"41", " ", "NN"}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["NN", "2"]}]}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "3"]}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
            SuperscriptBox["\[Gamma]", "4"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "3"]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "3"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{"9", "-", 
              RowBox[{"36", " ", "\[Mu]"}], "+", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "8"}], "+", 
                 RowBox[{"30", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], "-", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"9", "-", 
              RowBox[{"78", " ", "\[Mu]"}], "+", 
              RowBox[{"164", " ", 
               SuperscriptBox["\[Mu]", "2"]}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["NN", "2"], " ", "\[Mu]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "+", 
                 RowBox[{"13", " ", "\[Mu]"}]}], ")"}]}], "+", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "8"}], "+", 
                 RowBox[{"90", " ", "\[Mu]"}], "-", 
                 RowBox[{"212", " ", 
                  SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "14"}], "+", 
              RowBox[{"115", " ", "\[Mu]"}], "-", 
              RowBox[{"234", " ", 
               SuperscriptBox["\[Mu]", "2"]}], "+", 
              RowBox[{"4", " ", "NN", " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"17", " ", "\[Mu]"}], "+", 
                 RowBox[{"35", " ", 
                  SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[Gamma]", "3"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{"4", " ", "\[Gamma]", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"17", " ", "\[Mu]"}], "-", 
              RowBox[{"36", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
            SuperscriptBox["\[Gamma]", "3"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"8", "-", 
              RowBox[{"6", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "-", 
           RowBox[{"8", " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{"3", " ", "NN"}], "+", 
              SuperscriptBox["NN", "2"]}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"3", "+", 
              RowBox[{"4", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Mu]"}]}], ")"}]}],
            "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"3", "-", 
              RowBox[{"12", " ", "\[Mu]"}], "+", 
              RowBox[{"2", " ", "NN", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]]}], 
      FractionBox[
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         SuperscriptBox["\[Gamma]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}]}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
         SuperscriptBox["\[Gamma]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"8", "-", 
           RowBox[{"6", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "-", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"3", " ", "NN"}], "+", 
           SuperscriptBox["NN", "2"]}], ")"}], " ", 
         SuperscriptBox["\[Mu]", "2"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", 
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
        "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         SuperscriptBox["\[Gamma]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"3", "-", 
           RowBox[{"12", " ", "\[Mu]"}], "+", 
           RowBox[{"2", " ", "NN", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "4"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "+", 
           RowBox[{"\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], 
             ")"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "3"], " ", 
            RowBox[{"(", 
             RowBox[{"4", "-", 
              RowBox[{"33", " ", "\[Mu]"}], "+", 
              RowBox[{"68", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "+", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "19"}], "+", 
                 RowBox[{"8", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"44", "-", 
                 RowBox[{"30", " ", "NN"}]}], ")"}], " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"5", "-", 
              RowBox[{"23", " ", "\[Mu]"}], "+", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "+", 
                 RowBox[{"21", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[Gamma]", "3"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{"4", " ", "\[Gamma]", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"17", " ", "\[Mu]"}], "-", 
              RowBox[{"36", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
            SuperscriptBox["\[Gamma]", "3"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"8", "-", 
              RowBox[{"6", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "-", 
           RowBox[{"8", " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{"3", " ", "NN"}], "+", 
              SuperscriptBox["NN", "2"]}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"3", "+", 
              RowBox[{"4", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Mu]"}]}], ")"}]}],
            "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"3", "-", 
              RowBox[{"12", " ", "\[Mu]"}], "+", 
              RowBox[{"2", " ", "NN", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]]}], 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"]}], " ", 
         SuperscriptBox["\[Gamma]", "6"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "3"]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Mu]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], 
          ")"}]}], "+", 
        RowBox[{"2", " ", "\[Gamma]", " ", "\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "13"}], "+", 
              RowBox[{"9", " ", "NN"}]}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
        "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"9", " ", "\[Mu]"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "42"}], "+", 
              RowBox[{"40", " ", "NN"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["NN", "2"]}]}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "-", 
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "46"}], "+", 
              RowBox[{"39", " ", "NN"}], "+", 
              RowBox[{"3", " ", 
               SuperscriptBox["NN", "2"]}]}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         SuperscriptBox["\[Gamma]", "5"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{"5", "-", 
           RowBox[{"17", " ", "\[Mu]"}], "+", 
           RowBox[{"NN", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "+", 
              RowBox[{"15", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            SuperscriptBox["NN", "2"], " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "+", 
              RowBox[{"13", " ", "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{"NN", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"41", " ", "\[Mu]"}], "-", 
              RowBox[{"40", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "+", 
           RowBox[{"7", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"5", " ", "\[Mu]"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         SuperscriptBox["\[Gamma]", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "9"}], "+", 
           RowBox[{"59", " ", "\[Mu]"}], "-", 
           RowBox[{"88", " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{"NN", " ", 
            RowBox[{"(", 
             RowBox[{"4", "-", 
              RowBox[{"34", " ", "\[Mu]"}], "+", 
              RowBox[{"70", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Gamma]", "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{"4", " ", "\[Gamma]", " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"17", " ", "\[Mu]"}], "-", 
             RowBox[{"36", " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Gamma]", "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"8", "-", 
             RowBox[{"6", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "-", 
          RowBox[{"8", " ", 
           RowBox[{"(", 
            RowBox[{"2", "-", 
             RowBox[{"3", " ", "NN"}], "+", 
             SuperscriptBox["NN", "2"]}], ")"}], " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"4", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
          "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"3", "-", 
             RowBox[{"12", " ", "\[Mu]"}], "+", 
             RowBox[{"2", " ", "NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]]},
     {
      FractionBox[
       RowBox[{"\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "8"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Gamma]", "5"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "3"]}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"11", "+", 
                RowBox[{"4", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"21", "-", 
                RowBox[{"47", " ", "NN"}], "+", 
                RowBox[{"8", " ", 
                 SuperscriptBox["NN", "2"]}]}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "2"]}], "-", 
             RowBox[{"4", " ", 
              RowBox[{"(", 
               RowBox[{"68", "-", 
                RowBox[{"97", " ", "NN"}], "+", 
                RowBox[{"22", " ", 
                 SuperscriptBox["NN", "2"]}]}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "3"]}], "+", 
             RowBox[{"112", " ", 
              RowBox[{"(", 
               RowBox[{"2", "-", 
                RowBox[{"3", " ", "NN"}], "+", 
                SuperscriptBox["NN", "2"]}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "4"]}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "4"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"3", "-", 
             RowBox[{"19", " ", "\[Mu]"}], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "4"}], "+", 
                RowBox[{"17", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"41", " ", "\[Mu]"}], "-", 
             RowBox[{"218", " ", 
              SuperscriptBox["\[Mu]", "2"]}], "+", 
             RowBox[{"264", " ", 
              SuperscriptBox["\[Mu]", "3"]}], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{"5", "-", 
                RowBox[{"91", " ", "\[Mu]"}], "+", 
                RowBox[{"404", " ", 
                 SuperscriptBox["\[Mu]", "2"]}], "-", 
                RowBox[{"468", " ", 
                 SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["NN", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", 
                RowBox[{"25", " ", "\[Mu]"}], "-", 
                RowBox[{"93", " ", 
                 SuperscriptBox["\[Mu]", "2"]}], "+", 
                RowBox[{"102", " ", 
                 SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}]}], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"11", " ", "\[Mu]"}], "-", 
             RowBox[{"158", " ", 
              SuperscriptBox["\[Mu]", "2"]}], "+", 
             RowBox[{"200", " ", 
              SuperscriptBox["\[Mu]", "3"]}], "+", 
             RowBox[{"16", " ", 
              SuperscriptBox["NN", "2"], " ", "\[Mu]", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"6", " ", "\[Mu]"}], "+", 
                RowBox[{"8", " ", 
                 SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "-", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", 
                RowBox[{"31", " ", "\[Mu]"}], "-", 
                RowBox[{"258", " ", 
                 SuperscriptBox["\[Mu]", "2"]}], "+", 
                RowBox[{"328", " ", 
                 SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}], 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Gamma]", "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{"4", " ", "\[Gamma]", " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"17", " ", "\[Mu]"}], "-", 
             RowBox[{"36", " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Gamma]", "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"8", "-", 
             RowBox[{"6", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "-", 
          RowBox[{"8", " ", 
           RowBox[{"(", 
            RowBox[{"2", "-", 
             RowBox[{"3", " ", "NN"}], "+", 
             SuperscriptBox["NN", "2"]}], ")"}], " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"4", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
          "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"3", "-", 
             RowBox[{"12", " ", "\[Mu]"}], "+", 
             RowBox[{"2", " ", "NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "8"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
            SuperscriptBox["\[Gamma]", "5"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "3"]}], "+", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"11", "+", 
                 RowBox[{"4", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"21", "-", 
                 RowBox[{"47", " ", "NN"}], "+", 
                 RowBox[{"8", " ", 
                  SuperscriptBox["NN", "2"]}]}], ")"}], " ", 
               SuperscriptBox["\[Mu]", "2"]}], "-", 
              RowBox[{"4", " ", 
               RowBox[{"(", 
                RowBox[{"68", "-", 
                 RowBox[{"97", " ", "NN"}], "+", 
                 RowBox[{"22", " ", 
                  SuperscriptBox["NN", "2"]}]}], ")"}], " ", 
               SuperscriptBox["\[Mu]", "3"]}], "+", 
              RowBox[{"112", " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"3", " ", "NN"}], "+", 
                 SuperscriptBox["NN", "2"]}], ")"}], " ", 
               SuperscriptBox["\[Mu]", "4"]}]}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "4"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"3", "-", 
              RowBox[{"19", " ", "\[Mu]"}], "+", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "+", 
                 RowBox[{"17", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"41", " ", "\[Mu]"}], "-", 
              RowBox[{"218", " ", 
               SuperscriptBox["\[Mu]", "2"]}], "+", 
              RowBox[{"264", " ", 
               SuperscriptBox["\[Mu]", "3"]}], "+", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{"5", "-", 
                 RowBox[{"91", " ", "\[Mu]"}], "+", 
                 RowBox[{"404", " ", 
                  SuperscriptBox["\[Mu]", "2"]}], "-", 
                 RowBox[{"468", " ", 
                  SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["NN", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", 
                 RowBox[{"25", " ", "\[Mu]"}], "-", 
                 RowBox[{"93", " ", 
                  SuperscriptBox["\[Mu]", "2"]}], "+", 
                 RowBox[{"102", " ", 
                  SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}]}], ")"}]}], "-", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"3", "+", 
              RowBox[{"11", " ", "\[Mu]"}], "-", 
              RowBox[{"158", " ", 
               SuperscriptBox["\[Mu]", "2"]}], "+", 
              RowBox[{"200", " ", 
               SuperscriptBox["\[Mu]", "3"]}], "+", 
              RowBox[{"16", " ", 
               SuperscriptBox["NN", "2"], " ", "\[Mu]", " ", 
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"6", " ", "\[Mu]"}], "+", 
                 RowBox[{"8", " ", 
                  SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "-", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", 
                 RowBox[{"31", " ", "\[Mu]"}], "-", 
                 RowBox[{"258", " ", 
                  SuperscriptBox["\[Mu]", "2"]}], "+", 
                 RowBox[{"328", " ", 
                  SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[Gamma]", "3"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{"4", " ", "\[Gamma]", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"17", " ", "\[Mu]"}], "-", 
              RowBox[{"36", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
            SuperscriptBox["\[Gamma]", "3"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"8", "-", 
              RowBox[{"6", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "-", 
           RowBox[{"8", " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{"3", " ", "NN"}], "+", 
              SuperscriptBox["NN", "2"]}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"3", "+", 
              RowBox[{"4", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Mu]"}]}], ")"}]}],
            "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"3", "-", 
              RowBox[{"12", " ", "\[Mu]"}], "+", 
              RowBox[{"2", " ", "NN", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]]}], 
      FractionBox[
       RowBox[{"\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Gamma]", "5"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "3"]}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"19", "-", 
                RowBox[{"4", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "15"}], "-", 
                RowBox[{"7", " ", "NN"}], "+", 
                RowBox[{"4", " ", 
                 SuperscriptBox["NN", "2"]}]}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "2"]}], "-", 
             RowBox[{"4", " ", 
              RowBox[{"(", 
               RowBox[{"28", "-", 
                RowBox[{"51", " ", "NN"}], "+", 
                RowBox[{"16", " ", 
                 SuperscriptBox["NN", "2"]}]}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "3"]}], "+", 
             RowBox[{"112", " ", 
              RowBox[{"(", 
               RowBox[{"2", "-", 
                RowBox[{"3", " ", "NN"}], "+", 
                SuperscriptBox["NN", "2"]}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "4"]}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "4"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{"5", "-", 
             RowBox[{"9", " ", "\[Mu]"}], "-", 
             RowBox[{"38", " ", 
              SuperscriptBox["\[Mu]", "2"]}], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "4"}], "+", 
                RowBox[{"5", " ", "\[Mu]"}], "+", 
                RowBox[{"34", " ", 
                 SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"7", "-", 
             RowBox[{"39", " ", "\[Mu]"}], "-", 
             RowBox[{"18", " ", 
              SuperscriptBox["\[Mu]", "2"]}], "+", 
             RowBox[{"200", " ", 
              SuperscriptBox["\[Mu]", "3"]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["NN", "2"], " ", 
              SuperscriptBox["\[Mu]", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "11"}], "+", 
                RowBox[{"32", " ", "\[Mu]"}]}], ")"}]}], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"35", " ", "\[Mu]"}], "+", 
                RowBox[{"66", " ", 
                 SuperscriptBox["\[Mu]", "2"]}], "-", 
                RowBox[{"328", " ", 
                 SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"9", "-", 
             RowBox[{"51", " ", "\[Mu]"}], "-", 
             RowBox[{"10", " ", 
              SuperscriptBox["\[Mu]", "2"]}], "+", 
             RowBox[{"264", " ", 
              SuperscriptBox["\[Mu]", "3"]}], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "13"}], "+", 
                RowBox[{"69", " ", "\[Mu]"}], "+", 
                RowBox[{"56", " ", 
                 SuperscriptBox["\[Mu]", "2"]}], "-", 
                RowBox[{"468", " ", 
                 SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["NN", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"2", "-", 
                RowBox[{"9", " ", "\[Mu]"}], "-", 
                RowBox[{"23", " ", 
                 SuperscriptBox["\[Mu]", "2"]}], "+", 
                RowBox[{"102", " ", 
                 SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Gamma]", "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{"4", " ", "\[Gamma]", " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"17", " ", "\[Mu]"}], "-", 
             RowBox[{"36", " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Gamma]", "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"8", "-", 
             RowBox[{"6", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "-", 
          RowBox[{"8", " ", 
           RowBox[{"(", 
            RowBox[{"2", "-", 
             RowBox[{"3", " ", "NN"}], "+", 
             SuperscriptBox["NN", "2"]}], ")"}], " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"4", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
          "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"3", "-", 
             RowBox[{"12", " ", "\[Mu]"}], "+", 
             RowBox[{"2", " ", "NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Gamma]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "-", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "9"}], "+", 
              RowBox[{"4", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "17"}], "+", 
              RowBox[{"11", " ", "NN"}]}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"48", "+", 
              RowBox[{"20", " ", "NN"}], "-", 
              RowBox[{"40", " ", 
               SuperscriptBox["NN", "2"]}]}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "3"]}], "+", 
           RowBox[{"112", " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{"3", " ", "NN"}], "+", 
              SuperscriptBox["NN", "2"]}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "4"]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
            SuperscriptBox["\[Gamma]", "4"], " ", 
            RowBox[{"(", 
             RowBox[{"3", "+", 
              RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "3"]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "3"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{"13", "-", 
              RowBox[{"43", " ", "\[Mu]"}], "-", 
              RowBox[{"38", " ", 
               SuperscriptBox["\[Mu]", "2"]}], "+", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "12"}], "+", 
                 RowBox[{"35", " ", "\[Mu]"}], "+", 
                 RowBox[{"34", " ", 
                  SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}], "-", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"11", "-", 
              RowBox[{"89", " ", "\[Mu]"}], "+", 
              RowBox[{"122", " ", 
               SuperscriptBox["\[Mu]", "2"]}], "+", 
              RowBox[{"200", " ", 
               SuperscriptBox["\[Mu]", "3"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["NN", "2"], " ", "\[Mu]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "\[Mu]", "+", 
                 RowBox[{"16", " ", 
                  SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "-", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{"10", "-", 
                 RowBox[{"101", " ", "\[Mu]"}], "+", 
                 RowBox[{"126", " ", 
                  SuperscriptBox["\[Mu]", "2"]}], "+", 
                 RowBox[{"328", " ", 
                  SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"19", "-", 
              RowBox[{"143", " ", "\[Mu]"}], "+", 
              RowBox[{"198", " ", 
               SuperscriptBox["\[Mu]", "2"]}], "+", 
              RowBox[{"264", " ", 
               SuperscriptBox["\[Mu]", "3"]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["NN", "2"], " ", 
               RowBox[{"(", 
                RowBox[{"6", "-", 
                 RowBox[{"43", " ", "\[Mu]"}], "+", 
                 RowBox[{"47", " ", 
                  SuperscriptBox["\[Mu]", "2"]}], "+", 
                 RowBox[{"102", " ", 
                  SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}], "-", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{"31", "-", 
                 RowBox[{"229", " ", "\[Mu]"}], "+", 
                 RowBox[{"292", " ", 
                  SuperscriptBox["\[Mu]", "2"]}], "+", 
                 RowBox[{"468", " ", 
                  SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}], 
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[Gamma]", "3"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{"4", " ", "\[Gamma]", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"17", " ", "\[Mu]"}], "-", 
              RowBox[{"36", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
            SuperscriptBox["\[Gamma]", "3"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"8", "-", 
              RowBox[{"6", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "-", 
           RowBox[{"8", " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{"3", " ", "NN"}], "+", 
              SuperscriptBox["NN", "2"]}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"3", "+", 
              RowBox[{"4", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Mu]"}]}], ")"}]}],
            "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"3", "-", 
              RowBox[{"12", " ", "\[Mu]"}], "+", 
              RowBox[{"2", " ", "NN", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]]}], 
      FractionBox[
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         SuperscriptBox["\[Gamma]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}]}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
         SuperscriptBox["\[Gamma]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"8", "-", 
           RowBox[{"6", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "-", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"3", " ", "NN"}], "+", 
           SuperscriptBox["NN", "2"]}], ")"}], " ", 
         SuperscriptBox["\[Mu]", "2"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", 
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
        "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         SuperscriptBox["\[Gamma]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"3", "-", 
           RowBox[{"12", " ", "\[Mu]"}], "+", 
           RowBox[{"2", " ", "NN", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
         SuperscriptBox["\[Gamma]", "6"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "3"]}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["\[Mu]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], 
          ")"}]}], "-", 
        RowBox[{"8", " ", "\[Gamma]", " ", "\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"4", " ", "NN"}]}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
        "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "55"}], "+", 
              RowBox[{"28", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"191", "-", 
              RowBox[{"147", " ", "NN"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["NN", "2"]}]}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "832"}], "+", 
              RowBox[{"804", " ", "NN"}], "-", 
              RowBox[{"88", " ", 
               SuperscriptBox["NN", "2"]}]}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "3"]}], "+", 
           RowBox[{"112", " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{"3", " ", "NN"}], "+", 
              SuperscriptBox["NN", "2"]}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "4"]}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         SuperscriptBox["\[Gamma]", "5"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "5"}], "+", 
           RowBox[{"33", " ", "\[Mu]"}], "-", 
           RowBox[{"38", " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{"NN", " ", 
            RowBox[{"(", 
             RowBox[{"4", "-", 
              RowBox[{"25", " ", "\[Mu]"}], "+", 
              RowBox[{"34", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}], "-", 
        RowBox[{
         SuperscriptBox["\[Gamma]", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "7"}], "+", 
           RowBox[{"103", " ", "\[Mu]"}], "-", 
           RowBox[{"366", " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{"200", " ", 
            SuperscriptBox["\[Mu]", "3"]}], "+", 
           RowBox[{"16", " ", 
            SuperscriptBox["NN", "2"], " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"6", " ", "\[Mu]"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "+", 
           RowBox[{"NN", " ", 
            RowBox[{"(", 
             RowBox[{"6", "-", 
              RowBox[{"111", " ", "\[Mu]"}], "+", 
              RowBox[{"450", " ", 
               SuperscriptBox["\[Mu]", "2"]}], "-", 
              RowBox[{"328", " ", 
               SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "9"}], "+", 
           RowBox[{"107", " ", "\[Mu]"}], "-", 
           RowBox[{"354", " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{"264", " ", 
            SuperscriptBox["\[Mu]", "3"]}], "+", 
           RowBox[{"NN", " ", 
            RowBox[{"(", 
             RowBox[{"13", "-", 
              RowBox[{"157", " ", "\[Mu]"}], "+", 
              RowBox[{"540", " ", 
               SuperscriptBox["\[Mu]", "2"]}], "-", 
              RowBox[{"468", " ", 
               SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["NN", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"25", " ", "\[Mu]"}], "-", 
              RowBox[{"93", " ", 
               SuperscriptBox["\[Mu]", "2"]}], "+", 
              RowBox[{"102", " ", 
               SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}]}], ")"}]}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Gamma]", "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{"4", " ", "\[Gamma]", " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"17", " ", "\[Mu]"}], "-", 
             RowBox[{"36", " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Gamma]", "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"8", "-", 
             RowBox[{"6", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "-", 
          RowBox[{"8", " ", 
           RowBox[{"(", 
            RowBox[{"2", "-", 
             RowBox[{"3", " ", "NN"}], "+", 
             SuperscriptBox["NN", "2"]}], ")"}], " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"4", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
          "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"3", "-", 
             RowBox[{"12", " ", "\[Mu]"}], "+", 
             RowBox[{"2", " ", "NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
            SuperscriptBox["\[Gamma]", "5"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "3"]}], "+", 
           RowBox[{"\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], 
             ")"}]}], "+", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"20", "-", 
                 RowBox[{"9", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "48"}], "+", 
                 RowBox[{"34", " ", "NN"}]}], ")"}], " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "4"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{"5", "-", 
              RowBox[{"15", " ", "\[Mu]"}], "+", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "+", 
                 RowBox[{"13", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], "-", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"7", "-", 
              RowBox[{"40", " ", "\[Mu]"}], "+", 
              RowBox[{"28", " ", 
               SuperscriptBox["\[Mu]", "2"]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["NN", "2"], " ", "\[Mu]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"7", " ", "\[Mu]"}]}], ")"}]}], "+", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "6"}], "+", 
                 RowBox[{"44", " ", "\[Mu]"}], "-", 
                 RowBox[{"42", " ", 
                  SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "9"}], "+", 
              RowBox[{"56", " ", "\[Mu]"}], "-", 
              RowBox[{"72", " ", 
               SuperscriptBox["\[Mu]", "2"]}], "+", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{"4", "-", 
                 RowBox[{"29", " ", "\[Mu]"}], "+", 
                 RowBox[{"50", " ", 
                  SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[Gamma]", "3"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{"4", " ", "\[Gamma]", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"17", " ", "\[Mu]"}], "-", 
              RowBox[{"36", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
            SuperscriptBox["\[Gamma]", "3"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"8", "-", 
              RowBox[{"6", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "-", 
           RowBox[{"8", " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{"3", " ", "NN"}], "+", 
              SuperscriptBox["NN", "2"]}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"3", "+", 
              RowBox[{"4", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Mu]"}]}], ")"}]}],
            "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"3", "-", 
              RowBox[{"12", " ", "\[Mu]"}], "+", 
              RowBox[{"2", " ", "NN", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]]}]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "5"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "3"]}], "+", 
          RowBox[{"8", " ", "\[Gamma]", " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "11"}], "+", 
                RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"35", "-", 
                RowBox[{"11", " ", "NN"}]}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "2"]}], "+", 
             RowBox[{"14", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "NN"}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "39"}], "+", 
                RowBox[{"16", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"182", "-", 
                RowBox[{"96", " ", "NN"}]}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "2"]}], "+", 
             RowBox[{"8", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "25"}], "+", 
                RowBox[{"16", " ", "NN"}]}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "4"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"4", "-", 
             RowBox[{"19", " ", "\[Mu]"}], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "4"}], "+", 
                RowBox[{"17", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"5", "-", 
             RowBox[{"64", " ", "\[Mu]"}], "+", 
             RowBox[{"244", " ", 
              SuperscriptBox["\[Mu]", "2"]}], "-", 
             RowBox[{"264", " ", 
              SuperscriptBox["\[Mu]", "3"]}], "+", 
             RowBox[{"2", " ", "NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", 
                RowBox[{"25", " ", "\[Mu]"}], "-", 
                RowBox[{"93", " ", 
                 SuperscriptBox["\[Mu]", "2"]}], "+", 
                RowBox[{"102", " ", 
                 SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Gamma]", "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{"4", " ", "\[Gamma]", " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"17", " ", "\[Mu]"}], "-", 
             RowBox[{"36", " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Gamma]", "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"8", "-", 
             RowBox[{"6", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "-", 
          RowBox[{"8", " ", 
           RowBox[{"(", 
            RowBox[{"2", "-", 
             RowBox[{"3", " ", "NN"}], "+", 
             SuperscriptBox["NN", "2"]}], ")"}], " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"4", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
          "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"3", "-", 
             RowBox[{"12", " ", "\[Mu]"}], "+", 
             RowBox[{"2", " ", "NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "5"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "3"]}], "+", 
           RowBox[{"8", " ", "\[Gamma]", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "11"}], "+", 
                 RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"35", "-", 
                 RowBox[{"11", " ", "NN"}]}], ")"}], " ", 
               SuperscriptBox["\[Mu]", "2"]}], "+", 
              RowBox[{"14", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "NN"}], ")"}], " ", 
               SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}], "-", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "39"}], "+", 
                 RowBox[{"16", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"182", "-", 
                 RowBox[{"96", " ", "NN"}]}], ")"}], " ", 
               SuperscriptBox["\[Mu]", "2"]}], "+", 
              RowBox[{"8", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "25"}], "+", 
                 RowBox[{"16", " ", "NN"}]}], ")"}], " ", 
               SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}], "-", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "4"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"4", "-", 
              RowBox[{"19", " ", "\[Mu]"}], "+", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "+", 
                 RowBox[{"17", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"5", "-", 
              RowBox[{"64", " ", "\[Mu]"}], "+", 
              RowBox[{"244", " ", 
               SuperscriptBox["\[Mu]", "2"]}], "-", 
              RowBox[{"264", " ", 
               SuperscriptBox["\[Mu]", "3"]}], "+", 
              RowBox[{"2", " ", "NN", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", 
                 RowBox[{"25", " ", "\[Mu]"}], "-", 
                 RowBox[{"93", " ", 
                  SuperscriptBox["\[Mu]", "2"]}], "+", 
                 RowBox[{"102", " ", 
                  SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[Gamma]", "3"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{"4", " ", "\[Gamma]", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"17", " ", "\[Mu]"}], "-", 
              RowBox[{"36", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
            SuperscriptBox["\[Gamma]", "3"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"8", "-", 
              RowBox[{"6", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "-", 
           RowBox[{"8", " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{"3", " ", "NN"}], "+", 
              SuperscriptBox["NN", "2"]}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"3", "+", 
              RowBox[{"4", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Mu]"}]}], ")"}]}],
            "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"3", "-", 
              RowBox[{"12", " ", "\[Mu]"}], "+", 
              RowBox[{"2", " ", "NN", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]]}], 
      FractionBox[
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
        "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "4"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "+", "\[Mu]", "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "17"}], "+", 
                RowBox[{"6", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "-", 
             RowBox[{"14", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "NN"}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"4", "-", 
             RowBox[{"15", " ", "\[Mu]"}], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "4"}], "+", 
                RowBox[{"13", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "5"}], "+", 
             RowBox[{"39", " ", "\[Mu]"}], "-", 
             RowBox[{"72", " ", 
              SuperscriptBox["\[Mu]", "2"]}], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{"4", "-", 
                RowBox[{"29", " ", "\[Mu]"}], "+", 
                RowBox[{"50", " ", 
                 SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Gamma]", "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{"4", " ", "\[Gamma]", " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"17", " ", "\[Mu]"}], "-", 
             RowBox[{"36", " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Gamma]", "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"8", "-", 
             RowBox[{"6", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "-", 
          RowBox[{"8", " ", 
           RowBox[{"(", 
            RowBox[{"2", "-", 
             RowBox[{"3", " ", "NN"}], "+", 
             SuperscriptBox["NN", "2"]}], ")"}], " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"4", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
          "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"3", "-", 
             RowBox[{"12", " ", "\[Mu]"}], "+", 
             RowBox[{"2", " ", "NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         SuperscriptBox["\[Gamma]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "4"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "3"]}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["\[Mu]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "NN", "+", 
              RowBox[{"15", " ", "\[Mu]"}], "-", 
              RowBox[{"8", " ", "NN", " ", "\[Mu]"}], "-", 
              RowBox[{"28", " ", 
               SuperscriptBox["\[Mu]", "2"]}], "+", 
              RowBox[{"14", " ", "NN", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "-", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"11", " ", "\[Mu]"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"42", "-", 
                 RowBox[{"44", " ", "NN"}]}], ")"}], " ", 
               SuperscriptBox["\[Mu]", "2"]}], "+", 
              RowBox[{"8", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "25"}], "+", 
                 RowBox[{"16", " ", "NN"}]}], ")"}], " ", 
               SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}], "-", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "3"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{"4", "-", 
              RowBox[{"7", " ", "\[Mu]"}], "-", 
              RowBox[{"38", " ", 
               SuperscriptBox["\[Mu]", "2"]}], "+", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "+", 
                 RowBox[{"5", " ", "\[Mu]"}], "+", 
                 RowBox[{"34", " ", 
                  SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "5"}], "+", 
              RowBox[{"28", " ", "\[Mu]"}], "+", 
              RowBox[{"36", " ", 
               SuperscriptBox["\[Mu]", "2"]}], "-", 
              RowBox[{"264", " ", 
               SuperscriptBox["\[Mu]", "3"]}], "+", 
              RowBox[{"2", " ", "NN", " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"9", " ", "\[Mu]"}], "-", 
                 RowBox[{"23", " ", 
                  SuperscriptBox["\[Mu]", "2"]}], "+", 
                 RowBox[{"102", " ", 
                  SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[Gamma]", "3"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{"4", " ", "\[Gamma]", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"17", " ", "\[Mu]"}], "-", 
              RowBox[{"36", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
            SuperscriptBox["\[Gamma]", "3"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"8", "-", 
              RowBox[{"6", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "-", 
           RowBox[{"8", " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{"3", " ", "NN"}], "+", 
              SuperscriptBox["NN", "2"]}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"3", "+", 
              RowBox[{"4", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Mu]"}]}], ")"}]}],
            "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"3", "-", 
              RowBox[{"12", " ", "\[Mu]"}], "+", 
              RowBox[{"2", " ", "NN", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]]}], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "-", 
          RowBox[{"4", " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], 
            ")"}]}], "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"4", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
          "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"6", " ", "\[Mu]"}], "+", 
             RowBox[{"NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
       
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
         SuperscriptBox["\[Gamma]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"8", "-", 
           RowBox[{"6", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "-", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"3", " ", "NN"}], "+", 
           SuperscriptBox["NN", "2"]}], ")"}], " ", 
         SuperscriptBox["\[Mu]", "2"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", 
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
        "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         SuperscriptBox["\[Gamma]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"3", "-", 
           RowBox[{"12", " ", "\[Mu]"}], "+", 
           RowBox[{"2", " ", "NN", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "5"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "3"]}], "-", 
           RowBox[{"4", " ", 
            SuperscriptBox["\[Mu]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], 
             ")"}]}], "+", 
           RowBox[{"\[Gamma]", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "7"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"68", "-", 
                 RowBox[{"24", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
              RowBox[{"8", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "20"}], "+", 
                 RowBox[{"11", " ", "NN"}]}], ")"}], " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "-", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"33", "-", 
                 RowBox[{"18", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "56"}], "+", 
                 RowBox[{"37", " ", "NN"}]}], ")"}], " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "-", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "4"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{"4", "-", 
              RowBox[{"19", " ", "\[Mu]"}], "+", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "+", 
                 RowBox[{"17", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "5"}], "+", 
              RowBox[{"53", " ", "\[Mu]"}], "-", 
              RowBox[{"136", " ", 
               SuperscriptBox["\[Mu]", "2"]}], "+", 
              RowBox[{"NN", " ", 
               RowBox[{"(", 
                RowBox[{"4", "-", 
                 RowBox[{"43", " ", "\[Mu]"}], "+", 
                 RowBox[{"106", " ", 
                  SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[Gamma]", "3"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{"4", " ", "\[Gamma]", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"17", " ", "\[Mu]"}], "-", 
              RowBox[{"36", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
            SuperscriptBox["\[Gamma]", "3"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"8", "-", 
              RowBox[{"6", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "-", 
           RowBox[{"8", " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{"3", " ", "NN"}], "+", 
              SuperscriptBox["NN", "2"]}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"3", "+", 
              RowBox[{"4", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Mu]"}]}], ")"}]}],
            "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"3", "-", 
              RowBox[{"12", " ", "\[Mu]"}], "+", 
              RowBox[{"2", " ", "NN", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
         SuperscriptBox["\[Mu]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "4"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "+", 
           RowBox[{"2", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], 
             ")"}]}], "+", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{"3", "+", 
              RowBox[{"4", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "8"}], "+", 
                 RowBox[{"3", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"80", "-", 
                 RowBox[{"44", " ", "NN"}]}], ")"}], " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "-", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"7", "-", 
              RowBox[{"32", " ", "\[Mu]"}], "+", 
              RowBox[{"7", " ", "NN", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"4", "-", 
              RowBox[{"21", " ", "\[Mu]"}], "+", 
              RowBox[{"3", " ", "NN", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[Gamma]", "3"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{"4", " ", "\[Gamma]", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"17", " ", "\[Mu]"}], "-", 
              RowBox[{"36", " ", 
               SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
            SuperscriptBox["\[Gamma]", "3"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"4", " ", "\[Mu]"}]}], ")"}], "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"8", "-", 
              RowBox[{"6", " ", "NN"}]}], ")"}], " ", "\[Mu]"}], "-", 
           RowBox[{"8", " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{"3", " ", "NN"}], "+", 
              SuperscriptBox["NN", "2"]}], ")"}], " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"3", "+", 
              RowBox[{"4", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Mu]"}]}], ")"}]}],
            "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", "\[Mu]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"3", "-", 
              RowBox[{"12", " ", "\[Mu]"}], "+", 
              RowBox[{"2", " ", "NN", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6433993989036827`*^9, 3.643408247742876*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"DMlimit", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Limit", "[", 
     RowBox[{
      RowBox[{"MatrixPower", "[", 
       RowBox[{"DM", ",", "n"}], "]"}], ",", 
      RowBox[{"n", "\[Rule]", "\[Infinity]"}], ",", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{
        RowBox[{"\[Gamma]", ">", "0"}], "&&", 
        RowBox[{"\[Gamma]", "\[LessEqual]", "1"}], "&&", 
        RowBox[{"NN", ">", "1"}], "&&", 
        RowBox[{"\[Mu]", ">", "0"}], "&&", 
        RowBox[{"\[Mu]", "<", "0.1"}]}]}]}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.643359431936205*^9, 3.643359457237813*^9}, {
  3.643360790159639*^9, 3.643360801902264*^9}, {3.643360839671772*^9, 
  3.643360872303562*^9}, {3.64336091869529*^9, 3.6433609436103163`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "DMlimit", "]"}]], "Input",
 CellChangeTimes->{{3.643360882004436*^9, 3.643360897232786*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.643360784600466*^9, 3.643360898019883*^9, 
  3.643360948004313*^9, 3.643399443054003*^9, 3.643408247812958*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"EquiM", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"AM", ".", "DMlimit", ".", "AMinv"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.643360966844462*^9, 3.6433609716275682`*^9}, {
  3.643399469060433*^9, 3.643399486620575*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "EquiM", "]"}]], "Input",
 CellChangeTimes->{{3.643399576097114*^9, 3.6433995810893393`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Gamma]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"3", " ", "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{"5", "+", 
             RowBox[{"6", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], 
            ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"8", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"23", "-", 
                RowBox[{"25", " ", "NN"}]}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "2"]}], "+", 
             RowBox[{"6", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"\[Mu]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "17"}], "+", 
                RowBox[{"4", " ", 
                 RowBox[{"(", 
                  RowBox[{"7", "-", 
                   RowBox[{"3", " ", "\[Mu]"}]}], ")"}], " ", "\[Mu]"}]}], 
               ")"}]}], "+", 
             RowBox[{"2", " ", "NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"\[Mu]", " ", 
                 RowBox[{"(", 
                  RowBox[{"7", "+", 
                   RowBox[{"3", " ", "\[Mu]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", 
                    RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
               ")"}]}]}], ")"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
        "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "\[Gamma]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]"}]}], 
            ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"8", "+", 
             RowBox[{"3", " ", "NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "\[Gamma]"}], ")"}]}], "-", 
             RowBox[{"3", " ", "\[Gamma]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], 
          "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4"}], "+", "\[Gamma]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
           SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
        
        SuperscriptBox["\[Mu]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox["NN", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "\[Gamma]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Gamma]"}], "+", 
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
              "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{"NN", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"8", " ", "\[Mu]"}], "+", 
             RowBox[{"\[Gamma]", " ", 
              RowBox[{"(", 
               RowBox[{"5", "-", 
                RowBox[{"13", " ", "\[Mu]"}], "+", 
                RowBox[{"\[Gamma]", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], "+", 
                   RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox["\[Gamma]", "2"], " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SuperscriptBox["NN", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"2", "-", "\[Gamma]", "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
              "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Gamma]"}], "+", 
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
              "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{"NN", " ", 
           RowBox[{"(", 
            RowBox[{"4", "-", 
             RowBox[{"7", " ", "\[Gamma]"}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["\[Gamma]", "2"]}], "-", 
             RowBox[{"15", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
              "\[Mu]"}], "+", 
             RowBox[{"18", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[Mu]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "5"}], "+", 
                RowBox[{"6", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
       
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "3"], " ", 
        SuperscriptBox["\[Mu]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"16", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "3"], " ", 
        SuperscriptBox["\[Mu]", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "\[Gamma]"}], "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]]},
     {
      FractionBox[
       RowBox[{"\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Gamma]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"3", " ", "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{"5", "+", 
             RowBox[{"6", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], 
            ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"8", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"23", "-", 
                RowBox[{"25", " ", "NN"}]}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "2"]}], "+", 
             RowBox[{"6", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"\[Mu]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "17"}], "+", 
                RowBox[{"4", " ", 
                 RowBox[{"(", 
                  RowBox[{"7", "-", 
                   RowBox[{"3", " ", "\[Mu]"}]}], ")"}], " ", "\[Mu]"}]}], 
               ")"}]}], "+", 
             RowBox[{"2", " ", "NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"\[Mu]", " ", 
                 RowBox[{"(", 
                  RowBox[{"7", "+", 
                   RowBox[{"3", " ", "\[Mu]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", 
                    RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
               ")"}]}]}], ")"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
        "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "\[Gamma]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]"}]}], 
            ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"8", "+", 
             RowBox[{"3", " ", "NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "\[Gamma]"}], ")"}]}], "-", 
             RowBox[{"3", " ", "\[Gamma]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], 
          "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4"}], "+", "\[Gamma]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
           SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
        
        SuperscriptBox["\[Mu]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox["NN", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "\[Gamma]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Gamma]"}], "+", 
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
              "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{"NN", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"8", " ", "\[Mu]"}], "+", 
             RowBox[{"\[Gamma]", " ", 
              RowBox[{"(", 
               RowBox[{"5", "-", 
                RowBox[{"13", " ", "\[Mu]"}], "+", 
                RowBox[{"\[Gamma]", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], "+", 
                   RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox["\[Gamma]", "2"], " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SuperscriptBox["NN", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"2", "-", "\[Gamma]", "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
              "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Gamma]"}], "+", 
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
              "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{"NN", " ", 
           RowBox[{"(", 
            RowBox[{"4", "-", 
             RowBox[{"7", " ", "\[Gamma]"}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["\[Gamma]", "2"]}], "-", 
             RowBox[{"15", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
              "\[Mu]"}], "+", 
             RowBox[{"18", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[Mu]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "5"}], "+", 
                RowBox[{"6", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
       
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "3"], " ", 
        SuperscriptBox["\[Mu]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"16", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "3"], " ", 
        SuperscriptBox["\[Mu]", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "\[Gamma]"}], "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]]},
     {
      FractionBox[
       RowBox[{"\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Gamma]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"3", " ", "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{"5", "+", 
             RowBox[{"6", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], 
            ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"8", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"23", "-", 
                RowBox[{"25", " ", "NN"}]}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "2"]}], "+", 
             RowBox[{"6", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"\[Mu]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "17"}], "+", 
                RowBox[{"4", " ", 
                 RowBox[{"(", 
                  RowBox[{"7", "-", 
                   RowBox[{"3", " ", "\[Mu]"}]}], ")"}], " ", "\[Mu]"}]}], 
               ")"}]}], "+", 
             RowBox[{"2", " ", "NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"\[Mu]", " ", 
                 RowBox[{"(", 
                  RowBox[{"7", "+", 
                   RowBox[{"3", " ", "\[Mu]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", 
                    RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
               ")"}]}]}], ")"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
        "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "\[Gamma]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]"}]}], 
            ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"8", "+", 
             RowBox[{"3", " ", "NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "\[Gamma]"}], ")"}]}], "-", 
             RowBox[{"3", " ", "\[Gamma]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], 
          "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4"}], "+", "\[Gamma]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
           SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
        
        SuperscriptBox["\[Mu]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox["NN", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "\[Gamma]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Gamma]"}], "+", 
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
              "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{"NN", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"8", " ", "\[Mu]"}], "+", 
             RowBox[{"\[Gamma]", " ", 
              RowBox[{"(", 
               RowBox[{"5", "-", 
                RowBox[{"13", " ", "\[Mu]"}], "+", 
                RowBox[{"\[Gamma]", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], "+", 
                   RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox["\[Gamma]", "2"], " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SuperscriptBox["NN", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"2", "-", "\[Gamma]", "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
              "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Gamma]"}], "+", 
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
              "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{"NN", " ", 
           RowBox[{"(", 
            RowBox[{"4", "-", 
             RowBox[{"7", " ", "\[Gamma]"}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["\[Gamma]", "2"]}], "-", 
             RowBox[{"15", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
              "\[Mu]"}], "+", 
             RowBox[{"18", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[Mu]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "5"}], "+", 
                RowBox[{"6", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
       
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "3"], " ", 
        SuperscriptBox["\[Mu]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"16", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "3"], " ", 
        SuperscriptBox["\[Mu]", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "\[Gamma]"}], "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]]},
     {
      FractionBox[
       RowBox[{"\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Gamma]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"3", " ", "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{"5", "+", 
             RowBox[{"6", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], 
            ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"8", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"23", "-", 
                RowBox[{"25", " ", "NN"}]}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "2"]}], "+", 
             RowBox[{"6", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"\[Mu]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "17"}], "+", 
                RowBox[{"4", " ", 
                 RowBox[{"(", 
                  RowBox[{"7", "-", 
                   RowBox[{"3", " ", "\[Mu]"}]}], ")"}], " ", "\[Mu]"}]}], 
               ")"}]}], "+", 
             RowBox[{"2", " ", "NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"\[Mu]", " ", 
                 RowBox[{"(", 
                  RowBox[{"7", "+", 
                   RowBox[{"3", " ", "\[Mu]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", 
                    RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
               ")"}]}]}], ")"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
        "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "\[Gamma]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]"}]}], 
            ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"8", "+", 
             RowBox[{"3", " ", "NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "\[Gamma]"}], ")"}]}], "-", 
             RowBox[{"3", " ", "\[Gamma]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], 
          "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4"}], "+", "\[Gamma]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
           SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
        
        SuperscriptBox["\[Mu]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox["NN", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "\[Gamma]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Gamma]"}], "+", 
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
              "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{"NN", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"8", " ", "\[Mu]"}], "+", 
             RowBox[{"\[Gamma]", " ", 
              RowBox[{"(", 
               RowBox[{"5", "-", 
                RowBox[{"13", " ", "\[Mu]"}], "+", 
                RowBox[{"\[Gamma]", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], "+", 
                   RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox["\[Gamma]", "2"], " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SuperscriptBox["NN", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"2", "-", "\[Gamma]", "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
              "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Gamma]"}], "+", 
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
              "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{"NN", " ", 
           RowBox[{"(", 
            RowBox[{"4", "-", 
             RowBox[{"7", " ", "\[Gamma]"}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["\[Gamma]", "2"]}], "-", 
             RowBox[{"15", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
              "\[Mu]"}], "+", 
             RowBox[{"18", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[Mu]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "5"}], "+", 
                RowBox[{"6", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
       
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "3"], " ", 
        SuperscriptBox["\[Mu]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"16", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "3"], " ", 
        SuperscriptBox["\[Mu]", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "\[Gamma]"}], "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]]},
     {
      FractionBox[
       RowBox[{"\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Gamma]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"3", " ", "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{"5", "+", 
             RowBox[{"6", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], 
            ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"8", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"23", "-", 
                RowBox[{"25", " ", "NN"}]}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "2"]}], "+", 
             RowBox[{"6", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"\[Mu]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "17"}], "+", 
                RowBox[{"4", " ", 
                 RowBox[{"(", 
                  RowBox[{"7", "-", 
                   RowBox[{"3", " ", "\[Mu]"}]}], ")"}], " ", "\[Mu]"}]}], 
               ")"}]}], "+", 
             RowBox[{"2", " ", "NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"\[Mu]", " ", 
                 RowBox[{"(", 
                  RowBox[{"7", "+", 
                   RowBox[{"3", " ", "\[Mu]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", 
                    RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
               ")"}]}]}], ")"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
        "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "\[Gamma]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]"}]}], 
            ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"8", "+", 
             RowBox[{"3", " ", "NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "\[Gamma]"}], ")"}]}], "-", 
             RowBox[{"3", " ", "\[Gamma]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], 
          "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4"}], "+", "\[Gamma]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
           SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
        
        SuperscriptBox["\[Mu]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox["NN", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "\[Gamma]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Gamma]"}], "+", 
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
              "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{"NN", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"8", " ", "\[Mu]"}], "+", 
             RowBox[{"\[Gamma]", " ", 
              RowBox[{"(", 
               RowBox[{"5", "-", 
                RowBox[{"13", " ", "\[Mu]"}], "+", 
                RowBox[{"\[Gamma]", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], "+", 
                   RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox["\[Gamma]", "2"], " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SuperscriptBox["NN", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"2", "-", "\[Gamma]", "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
              "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Gamma]"}], "+", 
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
              "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{"NN", " ", 
           RowBox[{"(", 
            RowBox[{"4", "-", 
             RowBox[{"7", " ", "\[Gamma]"}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["\[Gamma]", "2"]}], "-", 
             RowBox[{"15", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
              "\[Mu]"}], "+", 
             RowBox[{"18", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[Mu]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "5"}], "+", 
                RowBox[{"6", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
       
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "3"], " ", 
        SuperscriptBox["\[Mu]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"16", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "3"], " ", 
        SuperscriptBox["\[Mu]", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "\[Gamma]"}], "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]]},
     {
      FractionBox[
       RowBox[{"\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Gamma]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"3", " ", "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{"5", "+", 
             RowBox[{"6", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], 
            ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"8", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"23", "-", 
                RowBox[{"25", " ", "NN"}]}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "2"]}], "+", 
             RowBox[{"6", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"\[Mu]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "17"}], "+", 
                RowBox[{"4", " ", 
                 RowBox[{"(", 
                  RowBox[{"7", "-", 
                   RowBox[{"3", " ", "\[Mu]"}]}], ")"}], " ", "\[Mu]"}]}], 
               ")"}]}], "+", 
             RowBox[{"2", " ", "NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"\[Mu]", " ", 
                 RowBox[{"(", 
                  RowBox[{"7", "+", 
                   RowBox[{"3", " ", "\[Mu]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", 
                    RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
               ")"}]}]}], ")"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
        "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "\[Gamma]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]"}]}], 
            ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"8", "+", 
             RowBox[{"3", " ", "NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "\[Gamma]"}], ")"}]}], "-", 
             RowBox[{"3", " ", "\[Gamma]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], 
          "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4"}], "+", "\[Gamma]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
           SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
        
        SuperscriptBox["\[Mu]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox["NN", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "\[Gamma]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Gamma]"}], "+", 
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
              "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{"NN", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"8", " ", "\[Mu]"}], "+", 
             RowBox[{"\[Gamma]", " ", 
              RowBox[{"(", 
               RowBox[{"5", "-", 
                RowBox[{"13", " ", "\[Mu]"}], "+", 
                RowBox[{"\[Gamma]", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], "+", 
                   RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox["\[Gamma]", "2"], " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SuperscriptBox["NN", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"2", "-", "\[Gamma]", "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
              "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Gamma]"}], "+", 
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
              "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{"NN", " ", 
           RowBox[{"(", 
            RowBox[{"4", "-", 
             RowBox[{"7", " ", "\[Gamma]"}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["\[Gamma]", "2"]}], "-", 
             RowBox[{"15", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
              "\[Mu]"}], "+", 
             RowBox[{"18", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[Mu]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "5"}], "+", 
                RowBox[{"6", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
       
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "3"], " ", 
        SuperscriptBox["\[Mu]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"16", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "3"], " ", 
        SuperscriptBox["\[Mu]", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "\[Gamma]"}], "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]]},
     {
      FractionBox[
       RowBox[{"\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Gamma]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"3", " ", "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{"5", "+", 
             RowBox[{"6", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], 
            ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"8", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"23", "-", 
                RowBox[{"25", " ", "NN"}]}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "2"]}], "+", 
             RowBox[{"6", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"\[Mu]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "17"}], "+", 
                RowBox[{"4", " ", 
                 RowBox[{"(", 
                  RowBox[{"7", "-", 
                   RowBox[{"3", " ", "\[Mu]"}]}], ")"}], " ", "\[Mu]"}]}], 
               ")"}]}], "+", 
             RowBox[{"2", " ", "NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"\[Mu]", " ", 
                 RowBox[{"(", 
                  RowBox[{"7", "+", 
                   RowBox[{"3", " ", "\[Mu]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", 
                    RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
               ")"}]}]}], ")"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
        "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "\[Gamma]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]"}]}], 
            ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"8", "+", 
             RowBox[{"3", " ", "NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "\[Gamma]"}], ")"}]}], "-", 
             RowBox[{"3", " ", "\[Gamma]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], 
          "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4"}], "+", "\[Gamma]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
           SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
        
        SuperscriptBox["\[Mu]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox["NN", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "\[Gamma]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Gamma]"}], "+", 
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
              "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{"NN", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"8", " ", "\[Mu]"}], "+", 
             RowBox[{"\[Gamma]", " ", 
              RowBox[{"(", 
               RowBox[{"5", "-", 
                RowBox[{"13", " ", "\[Mu]"}], "+", 
                RowBox[{"\[Gamma]", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], "+", 
                   RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox["\[Gamma]", "2"], " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SuperscriptBox["NN", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"2", "-", "\[Gamma]", "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
              "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Gamma]"}], "+", 
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
              "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{"NN", " ", 
           RowBox[{"(", 
            RowBox[{"4", "-", 
             RowBox[{"7", " ", "\[Gamma]"}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["\[Gamma]", "2"]}], "-", 
             RowBox[{"15", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
              "\[Mu]"}], "+", 
             RowBox[{"18", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[Mu]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "5"}], "+", 
                RowBox[{"6", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
       
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "3"], " ", 
        SuperscriptBox["\[Mu]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]], 
      FractionBox[
       RowBox[{"16", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "3"], " ", 
        SuperscriptBox["\[Mu]", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "\[Gamma]"}], "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.643399581953308*^9, 3.643408297068825*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"equiP", "=", 
   RowBox[{"EquiM", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6434000502432632`*^9, 3.6434000591807528`*^9}}],

Cell["Testing if EquiM has the expected properties :", "Text",
 CellChangeTimes->{{3.643400099230233*^9, 3.643400117735404*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{"equiP", ",", 
    RowBox[{"{", "7", "}"}]}], "]"}], "\[Equal]", 
  "EquiM"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{"Total", "[", "equiP", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.643400068819322*^9, 3.643400091782222*^9}, {
  3.643400122449224*^9, 3.643400143809165*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.6434000923962107`*^9, {3.643400136195725*^9, 3.643400144332327*^9}, 
   3.643408297134988*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.6434000923962107`*^9, {3.643400136195725*^9, 3.643400144332327*^9}, 
   3.643408297142207*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Analysing the equilibrium obtained from the simplified mutation matrix\
\>", "Subsection",
 CellChangeTimes->{{3.643400164944603*^9, 3.643400195098332*^9}}],

Cell[CellGroupData[{

Cell["Writing the equilibrium in compact notation", "Subsubsection",
 CellChangeTimes->{{3.64340024074517*^9, 3.643400266132845*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"equiP", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Gamma]", "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"3", " ", "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{"5", "+", 
             RowBox[{"6", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], 
            ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"8", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"23", "-", 
                RowBox[{"25", " ", "NN"}]}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "2"]}], "+", 
             RowBox[{"6", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
              SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{"\[Mu]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "17"}], "+", 
                RowBox[{"4", " ", 
                 RowBox[{"(", 
                  RowBox[{"7", "-", 
                   RowBox[{"3", " ", "\[Mu]"}]}], ")"}], " ", "\[Mu]"}]}], 
               ")"}]}], "+", 
             RowBox[{"2", " ", "NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"\[Mu]", " ", 
                 RowBox[{"(", 
                  RowBox[{"7", "+", 
                   RowBox[{"3", " ", "\[Mu]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", 
                    RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
               ")"}]}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
        "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "\[Gamma]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]"}]}], 
            ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"8", "+", 
             RowBox[{"3", " ", "NN", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "\[Gamma]"}], ")"}]}], "-", 
             RowBox[{"3", " ", "\[Gamma]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], 
          "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4"}], "+", "\[Gamma]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
           SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
        
        SuperscriptBox["\[Mu]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox["NN", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "\[Gamma]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Gamma]"}], "+", 
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
              "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{"NN", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"8", " ", "\[Mu]"}], "+", 
             RowBox[{"\[Gamma]", " ", 
              RowBox[{"(", 
               RowBox[{"5", "-", 
                RowBox[{"13", " ", "\[Mu]"}], "+", 
                RowBox[{"\[Gamma]", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], "+", 
                   RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox["\[Gamma]", "2"], " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SuperscriptBox["NN", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"2", "-", "\[Gamma]", "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
              "\[Mu]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Gamma]"}], "+", 
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
              "\[Mu]"}]}], ")"}]}], "+", 
          RowBox[{"NN", " ", 
           RowBox[{"(", 
            RowBox[{"4", "-", 
             RowBox[{"7", " ", "\[Gamma]"}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["\[Gamma]", "2"]}], "-", 
             RowBox[{"15", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
              "\[Mu]"}], "+", 
             RowBox[{"18", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[Mu]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "5"}], "+", 
                RowBox[{"6", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
       ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}], ")"}]}], ",", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "\[Gamma]"}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
        ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"2", " ", "\[Gamma]"}], "+", 
         RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
         SuperscriptBox["\[Gamma]", "2"], "-", 
         RowBox[{"NN", " ", 
          SuperscriptBox["\[Gamma]", "2"]}], "+", 
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
          "\[Mu]"}]}], ")"}]}]], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "3"], " ", 
        SuperscriptBox["\[Mu]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"16", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "3"], " ", 
        SuperscriptBox["\[Mu]", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "\[Gamma]"}], "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
          RowBox[{"NN", " ", "\[Gamma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[Gamma]"}], "+", 
          RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
          SuperscriptBox["\[Gamma]", "2"], "-", 
          RowBox[{"NN", " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
           "\[Mu]"}]}], ")"}]}], ")"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.643406238320993*^9, 3.643406239684658*^9}, {
   3.643426209000906*^9, 3.6434262097681923`*^9}, 3.6434266532569227`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"2", " ", 
       OverscriptBox["N", "~"], " ", "\[Mu]"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"\[Gamma]", "+", 
      RowBox[{"2", " ", "B"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Gamma]", "+", 
      RowBox[{"NN", " ", "\[Gamma]"}], "+", 
      RowBox[{"3", " ", "N1", " ", "B"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"2", " ", "\[Gamma]"}], "+", 
      RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
      SuperscriptBox["\[Gamma]", "2"], "-", 
      RowBox[{"NN", " ", 
       SuperscriptBox["\[Gamma]", "2"]}], "+", 
      RowBox[{"4", " ", 
       OverscriptBox["N", "~"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Gamma]"}], ")"}], "B"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{
    OverscriptBox["\[Gamma]", "_"], " ", "\[Mu]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox["N", "~"], "=", 
   RowBox[{"NN", "-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N1", "=", 
   RowBox[{"NN", "-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox["\[Gamma]", "_"], "=", 
   RowBox[{"1", "-", "\[Gamma]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"equiPcompact", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          SuperscriptBox[
           OverscriptBox["N", "~"], "2"], " ", 
          SuperscriptBox["\[Gamma]", "3"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"3", " ", "\[Mu]"}]}], ")"}]}], "+", 
         RowBox[{
          OverscriptBox["N", "~"], " ", "\[Mu]", " ", 
          RowBox[{"(", 
           RowBox[{"5", "+", 
            RowBox[{"6", " ", 
             OverscriptBox["N", "~"], " ", "\[Mu]"}]}], ")"}]}], "+", 
         RowBox[{
          OverscriptBox["N", "~"], " ", "\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{"3", "+", 
            RowBox[{"8", " ", 
             RowBox[{"(", 
              RowBox[{"NN", "-", "2"}], ")"}], " ", "\[Mu]"}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"25", 
                OverscriptBox["N", "~"]}], "+", "2"}], ")"}], " ", 
             SuperscriptBox["\[Mu]", "2"]}], "+", 
            RowBox[{"6", " ", 
             OverscriptBox["N", "~"], " ", 
             SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}], "-", 
         RowBox[{
          OverscriptBox["N", "~"], " ", 
          SuperscriptBox["\[Gamma]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"3", "-", 
            RowBox[{"\[Mu]", " ", 
             RowBox[{"(", 
              RowBox[{"17", "-", 
               RowBox[{"4", " ", 
                RowBox[{"(", 
                 RowBox[{"7", "-", 
                  RowBox[{"3", " ", "\[Mu]"}]}], ")"}], " ", "\[Mu]"}]}], 
              ")"}]}], "-", 
            RowBox[{"2", " ", "NN", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"\[Mu]", " ", 
                RowBox[{"(", 
                 RowBox[{"7", "-", 
                  RowBox[{"3", " ", "\[Mu]", " ", 
                   RowBox[{"(", 
                    RowBox[{"5", "-", 
                    RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
              ")"}]}]}], ")"}]}]}], ")"}]}], ",", 
      RowBox[{"4", " ", 
       OverscriptBox["N", "~"], " ", 
       OverscriptBox["\[Gamma]", "_"], " ", "\[Mu]", " ", "\[Gamma]", "  ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "-", "\[Gamma]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             OverscriptBox["N", "~"], " ", "\[Gamma]"}]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"8", "-", 
            RowBox[{"3", " ", "NN", " ", 
             RowBox[{"(", 
              RowBox[{"2", "-", "\[Gamma]"}], ")"}]}], "-", 
            RowBox[{"3", " ", "\[Gamma]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Mu]"}], "-", 
         RowBox[{"2", " ", 
          OverscriptBox["N", "~"], " ", 
          RowBox[{"(", 
           RowBox[{"4", "-", "\[Gamma]"}], ")"}], " ", 
          OverscriptBox["\[Gamma]", "_"], " ", "\[Mu]", " ", "\[Mu]"}]}], 
        ")"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"8", " ", 
       OverscriptBox["N", "~"], " ", 
       OverscriptBox["\[Gamma]", "_"], " ", "\[Mu]", " ", "\[Gamma]", " ", 
       "\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["NN", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"2", "-", "\[Gamma]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"\[Gamma]", "+", 
            RowBox[{"3", " ", 
             OverscriptBox["\[Gamma]", "_"], " ", "\[Mu]"}]}], ")"}]}], "+", 
         RowBox[{"NN", 
          RowBox[{"(", 
           RowBox[{"2", "-", 
            RowBox[{"8", " ", "\[Mu]"}], "-", 
            RowBox[{"\[Gamma]", " ", 
             RowBox[{"(", 
              RowBox[{"5", "-", 
               RowBox[{"13", " ", "\[Mu]"}], "-", 
               RowBox[{"\[Gamma]", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "-", 
                  RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}], "-", 
         RowBox[{
          SuperscriptBox[
           OverscriptBox["\[Gamma]", "_"], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       OverscriptBox["N", "~"], " ", 
       SuperscriptBox["\[Gamma]", "2"], " ", "\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["NN", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"2", "-", "\[Gamma]", "-", 
            RowBox[{"2", " ", 
             OverscriptBox["\[Gamma]", "_"], " ", "\[Mu]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"\[Gamma]", "+", 
            RowBox[{"3", 
             OverscriptBox["\[Gamma]", "_"], " ", "\[Mu]"}]}], ")"}]}], "+", 
         RowBox[{"NN", " ", 
          RowBox[{"(", 
           RowBox[{"4", "-", 
            RowBox[{"7", " ", "\[Gamma]"}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["\[Gamma]", "2"]}], "-", 
            RowBox[{"15", " ", 
             OverscriptBox["\[Gamma]", "_"], 
             OverscriptBox["\[Gamma]", "_"], " ", "\[Mu]"}], "+", 
            RowBox[{"18", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                OverscriptBox["\[Gamma]", "_"], " ", "\[Mu]"}], ")"}], 
              "2"]}]}], ")"}]}], "-", 
         RowBox[{
          SuperscriptBox[
           OverscriptBox["\[Gamma]", "_"], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"\[Mu]", " ", 
             RowBox[{"(", 
              RowBox[{"5", "-", 
               RowBox[{"6", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"2", " ", 
       OverscriptBox["\[Gamma]", "_"], " ", "\[Mu]", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          OverscriptBox["N", "~"], " ", "\[Mu]"}]}], ")"}], "  ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Gamma]", "+", 
         RowBox[{"NN", " ", "\[Gamma]"}], "+", 
         RowBox[{"3", " ", 
          OverscriptBox["N", "~"], " ", 
          OverscriptBox["\[Gamma]", "_"], " ", "\[Mu]"}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"8", " ", 
       OverscriptBox["N", "~"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          OverscriptBox["\[Gamma]", "_"], " ", "\[Mu]"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Gamma]", "+", 
         RowBox[{"NN", " ", "\[Gamma]"}], "+", 
         RowBox[{
          OverscriptBox["N", "~"], 
          RowBox[{"(", 
           RowBox[{"3", "-", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"16", " ", 
       SuperscriptBox[
        OverscriptBox["N", "~"], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          OverscriptBox["\[Gamma]", "_"], " ", "\[Mu]"}], ")"}], "3"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"2", " ", "\[Gamma]"}], "+", 
         RowBox[{"NN", " ", "\[Gamma]"}], "+", 
         RowBox[{"3", " ", 
          OverscriptBox["N", "~"], " ", "B"}]}], ")"}]}]}], "}"}], "/", 
    "A"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{"equiPcompact", "\[Equal]", "equiP"}], "]"}]}], "Input",
 CellChangeTimes->{{3.643406258379046*^9, 3.64340632721611*^9}, {
   3.643409847163945*^9, 3.643409931087821*^9}, {3.643411438094281*^9, 
   3.643411439523756*^9}, {3.643411776450968*^9, 3.6434118483424664`*^9}, {
   3.643411932113018*^9, 3.6434120613342876`*^9}, {3.643412191884967*^9, 
   3.643412256489902*^9}, {3.643412311086192*^9, 3.643412554931871*^9}, {
   3.643412589144163*^9, 3.6434126020379543`*^9}, {3.643412634279697*^9, 
   3.643412638790618*^9}, {3.6434126741856117`*^9, 3.643412779582376*^9}, {
   3.643412860179393*^9, 3.6434128728977137`*^9}, {3.643412930323954*^9, 
   3.643413022015998*^9}, {3.643413075768589*^9, 3.643413107211733*^9}, {
   3.643414616438253*^9, 3.6434146462560043`*^9}, {3.64341468652284*^9, 
   3.643414721082446*^9}, {3.6434147827423983`*^9, 3.6434148042819023`*^9}, {
   3.643414881530971*^9, 3.6434148985785637`*^9}, {3.6434159030175943`*^9, 
   3.6434159044781513`*^9}, {3.6434159741565866`*^9, 3.643416095575457*^9}, {
   3.643416153857173*^9, 3.643416297890584*^9}, 3.643416328323394*^9, {
   3.643426226507399*^9, 3.6434262267976217`*^9}, {3.646452566345367*^9, 
   3.646452579034244*^9}, {3.646452614220352*^9, 3.646452699484728*^9}, 
   3.646452791458392*^9, {3.6464529354461603`*^9, 3.6464532235458*^9}, {
   3.656630640252625*^9, 3.656630643988249*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.643411797273396*^9, 3.6434118497544947`*^9}, {
   3.643411952577779*^9, 3.643412062337408*^9}, {3.643412204116569*^9, 
   3.64341222991024*^9}, 3.643412262837598*^9, {3.643412325593616*^9, 
   3.6434124362720137`*^9}, {3.643412495038632*^9, 3.64341255557929*^9}, 
   3.6434126035281773`*^9, 3.643412640441575*^9, 3.643412677026354*^9, {
   3.6434127275027514`*^9, 3.643412780399148*^9}, {3.643412863332171*^9, 
   3.643412873674508*^9}, {3.6434129353685007`*^9, 3.6434129795297194`*^9}, 
   3.6434130225704327`*^9, {3.6434130909231453`*^9, 3.6434131083241167`*^9}, {
   3.64341462956271*^9, 3.643414648217971*^9}, {3.643414692572081*^9, 
   3.643414722379908*^9}, {3.643414788702745*^9, 3.643414806227744*^9}, 
   3.643414894462051*^9, 3.6434159089098387`*^9, {3.643415990805253*^9, 
   3.6434160651364193`*^9}, {3.64341616013246*^9, 3.643416186956382*^9}, {
   3.64341621821867*^9, 3.643416232595257*^9}, {3.643416303488311*^9, 
   3.6434163298273582`*^9}, 3.643416360973254*^9, 3.6464525991111917`*^9, 
   3.646452704323484*^9, 3.646452793632381*^9, 3.646452828427327*^9, {
   3.646452938668933*^9, 3.646452997861072*^9}, {3.646453029011601*^9, 
   3.64645306087934*^9}, {3.6464531022916527`*^9, 3.646453162440021*^9}, {
   3.646453192825539*^9, 3.646453225475093*^9}, 3.656630628905368*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"2", " ", 
       OverscriptBox["N", "~"], " ", "\[Mu]"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"\[Gamma]", "+", 
      RowBox[{"2", " ", 
       OverscriptBox["\[Gamma]", "_"], " ", "\[Mu]"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Gamma]", "+", 
      RowBox[{"NN", " ", "\[Gamma]"}], "+", 
      RowBox[{"3", " ", 
       OverscriptBox["N", "~"], " ", 
       OverscriptBox["\[Gamma]", "_"], " ", "\[Mu]"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"2", " ", "\[Gamma]"}], "+", 
      RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "-", 
      RowBox[{
       OverscriptBox["N", "~"], " ", 
       SuperscriptBox["\[Gamma]", "2"]}], "+", 
      RowBox[{"4", " ", 
       OverscriptBox["N", "~"], " ", 
       SuperscriptBox[
        OverscriptBox["\[Gamma]", "_"], "2"], " ", "\[Mu]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{
    OverscriptBox["N", "~"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{"5", "+", 
         RowBox[{"6", " ", 
          OverscriptBox["N", "~"], " ", "\[Mu]"}]}], ")"}]}], "+", 
      RowBox[{"\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         RowBox[{"8", " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "2"}], ")"}], " ", "\[Mu]"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"25", 
             OverscriptBox["N", "~"]}], "+", "2"}], ")"}], " ", 
          SuperscriptBox["\[Mu]", "2"]}], "+", 
         RowBox[{"6", " ", 
          OverscriptBox["N", "~"], " ", 
          SuperscriptBox["\[Mu]", "3"]}]}], ")"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CC", "=", 
   RowBox[{
    OverscriptBox["N", "~"], " ", 
    SuperscriptBox["\[Gamma]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"3", "-", 
      RowBox[{"\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{"17", "-", 
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{"7", "-", 
            RowBox[{"3", " ", "\[Mu]"}]}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
      "-", 
      RowBox[{"2", " ", "NN", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"\[Mu]", " ", 
          RowBox[{"(", 
           RowBox[{"7", "-", 
            RowBox[{"3", " ", "\[Mu]", " ", 
             RowBox[{"(", 
              RowBox[{"5", "-", 
               RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}],
      ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DD", "=", 
   RowBox[{"NN", " ", 
    RowBox[{"(", 
     RowBox[{"4", "-", 
      RowBox[{"7", " ", "\[Gamma]"}], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["\[Gamma]", "2"]}], "-", " ", 
      RowBox[{
       SuperscriptBox[
        OverscriptBox["\[Gamma]", "_"], "2"], "\[Mu]", 
       RowBox[{"(", 
        RowBox[{"15", "-", 
         RowBox[{"18", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox["N", "~"], "=", 
   RowBox[{"NN", "-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox["\[Gamma]", "_"], "=", 
   RowBox[{"1", "-", "\[Gamma]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"equiPcompact", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          SuperscriptBox[
           OverscriptBox["N", "~"], "2"], " ", 
          SuperscriptBox["\[Gamma]", "3"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"3", " ", "\[Mu]"}]}], ")"}]}], "+", "B", "-", "CC"}], 
        ")"}]}], ",", 
      RowBox[{"4", " ", 
       OverscriptBox["N", "~"], " ", 
       OverscriptBox["\[Gamma]", "_"], " ", "\[Gamma]", " ", "\[Mu]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "-", "\[Gamma]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             OverscriptBox["N", "~"], " ", "\[Gamma]"}]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"8", "-", 
            RowBox[{"3", " ", "NN", " ", 
             RowBox[{"(", 
              RowBox[{"2", "-", "\[Gamma]"}], ")"}]}], "-", 
            RowBox[{"3", " ", "\[Gamma]"}]}], ")"}], " ", 
          OverscriptBox["\[Gamma]", "_"], " ", "\[Mu]"}], "-", 
         RowBox[{"2", " ", 
          OverscriptBox["N", "~"], " ", 
          RowBox[{"(", 
           RowBox[{"4", "-", "\[Gamma]"}], ")"}], " ", 
          OverscriptBox["\[Gamma]", "_"], " ", "\[Mu]", " ", "\[Mu]"}]}], 
        ")"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"8", " ", 
       OverscriptBox["N", "~"], " ", 
       OverscriptBox["\[Gamma]", "_"], " ", "\[Gamma]", " ", 
       SuperscriptBox["\[Mu]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["NN", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"2", "-", "\[Gamma]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"\[Gamma]", "+", 
            RowBox[{"3", " ", 
             OverscriptBox["\[Gamma]", "_"], " ", "\[Mu]"}]}], ")"}]}], "+", 
         RowBox[{"NN", 
          RowBox[{"(", 
           RowBox[{"2", "-", 
            RowBox[{"8", " ", "\[Mu]"}], "-", 
            RowBox[{"\[Gamma]", " ", 
             RowBox[{"(", 
              RowBox[{"5", "-", 
               RowBox[{"13", " ", "\[Mu]"}], "-", 
               RowBox[{"\[Gamma]", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "-", 
                  RowBox[{"5", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}], "-", 
         RowBox[{
          SuperscriptBox[
           OverscriptBox["\[Gamma]", "_"], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       OverscriptBox["N", "~"], " ", 
       SuperscriptBox["\[Gamma]", "2"], " ", "\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["NN", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"2", "-", "\[Gamma]", "-", 
            RowBox[{"2", " ", 
             OverscriptBox["\[Gamma]", "_"], " ", "\[Mu]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"\[Gamma]", "+", 
            RowBox[{"3", 
             OverscriptBox["\[Gamma]", "_"], " ", "\[Mu]"}]}], ")"}]}], "+", 
         "DD", "-", 
         RowBox[{
          SuperscriptBox[
           OverscriptBox["\[Gamma]", "_"], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"\[Mu]", " ", 
             RowBox[{"(", 
              RowBox[{"5", "-", 
               RowBox[{"6", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"2", " ", 
       OverscriptBox["\[Gamma]", "_"], " ", "\[Mu]", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          OverscriptBox["N", "~"], " ", "\[Mu]"}]}], ")"}], "  ", 
       RowBox[{"(", 
        RowBox[{
         OverscriptBox["\[Gamma]", "_"], "+", 
         RowBox[{"NN", " ", "\[Gamma]"}], "+", 
         RowBox[{"3", " ", 
          OverscriptBox["N", "~"], " ", 
          OverscriptBox["\[Gamma]", "_"], " ", "\[Mu]"}]}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"8", " ", 
       OverscriptBox["N", "~"], " ", 
       SuperscriptBox[
        OverscriptBox["\[Gamma]", "_"], "3"], 
       SuperscriptBox["\[Mu]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         OverscriptBox["\[Gamma]", "_"], "+", 
         RowBox[{"NN", " ", "\[Gamma]"}], "+", 
         RowBox[{
          OverscriptBox["N", "~"], 
          RowBox[{"(", 
           RowBox[{"3", "-", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"16", " ", 
       SuperscriptBox[
        OverscriptBox["N", "~"], "2"], " ", 
       SuperscriptBox[
        OverscriptBox["\[Gamma]", "_"], "3"], 
       SuperscriptBox["\[Mu]", "3"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"2", " ", "\[Gamma]"}], "+", 
         RowBox[{"NN", " ", "\[Gamma]"}], "+", 
         RowBox[{"3", " ", 
          OverscriptBox["N", "~"], " ", 
          OverscriptBox["\[Gamma]", "_"], " ", "\[Mu]"}]}], ")"}]}]}], "}"}], 
    "/", "A"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{"equiPcompact", "\[Equal]", "equiP"}], "]"}]}], "Input",
 CellChangeTimes->{{3.643406258379046*^9, 3.64340632721611*^9}, {
   3.643409847163945*^9, 3.643409931087821*^9}, {3.643411438094281*^9, 
   3.643411439523756*^9}, {3.643411776450968*^9, 3.6434118483424664`*^9}, {
   3.643411932113018*^9, 3.6434120613342876`*^9}, {3.643412191884967*^9, 
   3.643412256489902*^9}, {3.643412311086192*^9, 3.643412554931871*^9}, {
   3.643412589144163*^9, 3.6434126020379543`*^9}, {3.643412634279697*^9, 
   3.643412638790618*^9}, {3.6434126741856117`*^9, 3.643412779582376*^9}, {
   3.643412860179393*^9, 3.6434128728977137`*^9}, {3.643412930323954*^9, 
   3.643413022015998*^9}, {3.643413075768589*^9, 3.643413107211733*^9}, {
   3.643414616438253*^9, 3.6434146462560043`*^9}, {3.64341468652284*^9, 
   3.643414721082446*^9}, {3.6434147827423983`*^9, 3.6434148042819023`*^9}, {
   3.643414881530971*^9, 3.6434148985785637`*^9}, {3.6434159030175943`*^9, 
   3.6434159044781513`*^9}, {3.6434159741565866`*^9, 3.643416095575457*^9}, {
   3.643416153857173*^9, 3.643416297890584*^9}, 3.643416328323394*^9, {
   3.643426226507399*^9, 3.6434262267976217`*^9}, {3.646452566345367*^9, 
   3.646452579034244*^9}, {3.646452614220352*^9, 3.646452699484728*^9}, 
   3.646452791458392*^9, {3.6464529354461603`*^9, 3.6464532235458*^9}, {
   3.656630640252625*^9, 3.656630746906934*^9}, 3.656630806351449*^9, {
   3.656630877612286*^9, 3.656630966992937*^9}, {3.6566310242753057`*^9, 
   3.656631048570156*^9}, {3.656631084487562*^9, 3.6566311216258183`*^9}, {
   3.656631163568501*^9, 3.6566311812349157`*^9}, {3.656631326839679*^9, 
   3.656631350211228*^9}, {3.656631758264874*^9, 3.656631766085533*^9}, {
   3.656634468657929*^9, 3.6566344792622766`*^9}, {3.656634520187332*^9, 
   3.6566345538115683`*^9}, {3.6566361008357563`*^9, 3.6566361219996443`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.643411797273396*^9, 3.6434118497544947`*^9}, {
   3.643411952577779*^9, 3.643412062337408*^9}, {3.643412204116569*^9, 
   3.64341222991024*^9}, 3.643412262837598*^9, {3.643412325593616*^9, 
   3.6434124362720137`*^9}, {3.643412495038632*^9, 3.64341255557929*^9}, 
   3.6434126035281773`*^9, 3.643412640441575*^9, 3.643412677026354*^9, {
   3.6434127275027514`*^9, 3.643412780399148*^9}, {3.643412863332171*^9, 
   3.643412873674508*^9}, {3.6434129353685007`*^9, 3.6434129795297194`*^9}, 
   3.6434130225704327`*^9, {3.6434130909231453`*^9, 3.6434131083241167`*^9}, {
   3.64341462956271*^9, 3.643414648217971*^9}, {3.643414692572081*^9, 
   3.643414722379908*^9}, {3.643414788702745*^9, 3.643414806227744*^9}, 
   3.643414894462051*^9, 3.6434159089098387`*^9, {3.643415990805253*^9, 
   3.6434160651364193`*^9}, {3.64341616013246*^9, 3.643416186956382*^9}, {
   3.64341621821867*^9, 3.643416232595257*^9}, {3.643416303488311*^9, 
   3.6434163298273582`*^9}, 3.643416360973254*^9, 3.6464525991111917`*^9, 
   3.646452704323484*^9, 3.646452793632381*^9, 3.646452828427327*^9, {
   3.646452938668933*^9, 3.646452997861072*^9}, {3.646453029011601*^9, 
   3.64645306087934*^9}, {3.6464531022916527`*^9, 3.646453162440021*^9}, {
   3.646453192825539*^9, 3.646453225475093*^9}, 3.656630628905368*^9, {
   3.656630696844302*^9, 3.656630722519449*^9}, {3.656630779659175*^9, 
   3.656630808032999*^9}, {3.656630946815363*^9, 3.656630968850161*^9}, {
   3.6566310380449457`*^9, 3.6566310495326357`*^9}, 3.6566310897594*^9, 
   3.656631123994617*^9, 3.656631185481497*^9, {3.656631330659512*^9, 
   3.656631351156657*^9}, 3.6566317667255287`*^9, 3.656634498533804*^9, 
   3.656634556963727*^9, 3.656636123107265*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FactorList", "[", 
  RowBox[{"(", 
   RowBox[{"1", "-", 
    RowBox[{"\[Mu]", " ", 
     RowBox[{"(", 
      RowBox[{"7", "-", 
       RowBox[{"3", " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{"5", "-", 
          RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]}], ")"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6464533486920233`*^9, 3.6464533607796373`*^9}, {
   3.646453422693563*^9, 3.646453426764503*^9}, 3.6464534688071547`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"7", " ", "\[Mu]"}], "-", 
      RowBox[{"15", " ", 
       SuperscriptBox["\[Mu]", "2"]}], "+", 
      RowBox[{"6", " ", 
       SuperscriptBox["\[Mu]", "3"]}]}], ",", "1"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.6464533618597*^9, 3.646453428203577*^9, 
  3.6464534697672157`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"equiP", ".", "MtotalSimple"}], "\[Equal]", "equiP"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.646207445327037*^9, 3.64620749038838*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.646207492591777*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Equilibrium in special cases", "Subsubsection",
 CellChangeTimes->{{3.6434002150962563`*^9, 3.6434002372717333`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"equiP", "/.", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.643400271399364*^9, 3.643400283422915*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.64340028735209*^9, 3.643408339397472*^9, 
  3.6434096555249233`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"equiP", "/.", 
   RowBox[{"{", 
    RowBox[{"\[Gamma]", "\[Rule]", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6434003037852697`*^9, 3.643400303911928*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}]], ",", 
   FractionBox[
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}]}]], 
   ",", 
   FractionBox[
    RowBox[{"8", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
     SuperscriptBox["\[Mu]", "2"]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], 
      ")"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.643400305485898*^9, 3.643408339659939*^9, 
  3.643409655798781*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"equiP", "/.", 
   RowBox[{"{", 
    RowBox[{"\[Gamma]", "\[Rule]", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.64340032707362*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}]], ",", "0", 
   ",", "0", ",", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}], 
    RowBox[{"1", "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}]], ",", "0", 
   ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.6434003274168987`*^9, 3.6434083396940193`*^9, 
  3.643409655848301*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Limit", "[", 
   RowBox[{"equiP", ",", 
    RowBox[{"NN", "\[Rule]", "\[Infinity]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6434003532518387`*^9, 3.64340038262731*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "\[Gamma]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]", " ", 
      "\[Mu]"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Mu]"}], "+", 
        RowBox[{"\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"8", " ", "\[Mu]"}]}], ")"}]}], "+", 
        RowBox[{"4", " ", "\[Mu]"}], "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Gamma]", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"2", "-", 
        RowBox[{"2", " ", "\[Mu]"}], "+", 
        RowBox[{"\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Mu]"}], "+", 
        RowBox[{"\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"8", " ", "\[Mu]"}]}], ")"}]}], "+", 
        RowBox[{"4", " ", "\[Mu]"}], "+", 
        RowBox[{
         SuperscriptBox["\[Gamma]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]]}], ",", "0", 
   ",", "0", ",", 
   FractionBox[
    RowBox[{"8", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "3"], " ", 
     SuperscriptBox["\[Mu]", "2"]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[Mu]"}], "+", 
       RowBox[{"\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"8", " ", "\[Mu]"}]}], ")"}]}], "+", 
       RowBox[{"4", " ", "\[Mu]"}], "+", 
       RowBox[{
        SuperscriptBox["\[Gamma]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"4", " ", "\[Mu]"}]}], ")"}]}]}], ")"}]}]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.643400376211151*^9, 3.643400383955161*^9}, 
   3.6434083402600317`*^9, 3.643409655908505*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"equiP", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Mu]", "\[Rule]", "0"}], ",", " ", 
     RowBox[{"\[Gamma]", "\[Rule]", "0"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.643400647423644*^9, 3.643400651559103*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], ":", 
  " ", "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.643400652354128*^9, 3.643408340318215*^9, 
  3.643409655962078*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], ":", 
  " ", "\<\"Indeterminate expression \[NoBreak]\\!\\(0\\\\ ComplexInfinity\\)\
\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.643400652354128*^9, 3.643408340318215*^9, 
  3.643409656004223*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], ":", 
  " ", "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.643400652354128*^9, 3.643408340318215*^9, 
  3.643409656057557*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], ":", 
  " ", "\<\"Indeterminate expression \[NoBreak]\\!\\(0\\\\ \\(\\((\\(\\(-1\\)\
\\) + NN)\\)\\)\\\\ ComplexInfinity\\)\[NoBreak] encountered. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/indet\\\", \
ButtonNote -> \\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.643400652354128*^9, 3.643408340318215*^9, 
  3.643409656108728*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], ":", 
  " ", "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.643400652354128*^9, 3.643408340318215*^9, 
  3.643409656156497*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Power :: \
infy\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.643400652354128*^9, 3.643408340318215*^9, 
  3.643409656162697*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], ":", 
  " ", "\<\"Indeterminate expression \[NoBreak]\\!\\(0\\\\ \\(\\((1 - \\(\\(2\
\\\\ NN\\)\\))\\)\\)\\\\ \\(\\((\\(\\(-1\\)\\) + NN)\\)\\)\\\\ \
ComplexInfinity\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.643400652354128*^9, 3.643408340318215*^9, 
  3.6434096562093163`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Infinity :: \
indet\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.643400652354128*^9, 3.643408340318215*^9, 
  3.643409656215645*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
   "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
   "Indeterminate"}], "}"}]], "Output",
 CellChangeTimes->{3.643400652612763*^9, 3.643408340604435*^9, 
  3.64340965622115*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Calculating various statistics of genetic diversity within the population\
\>", "Subsection",
 CellChangeTimes->{{3.643416888961982*^9, 3.643416912147477*^9}, {
  3.643429266384276*^9, 3.643429282606443*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"\[Gamma]", ",", "\[Mu]", ",", "NN"}], "]"}]], "Input",
 CellChangeTimes->{{3.643416916197072*^9, 3.643417007491105*^9}, {
  3.643417233375579*^9, 3.643417234279522*^9}, {3.643429345482484*^9, 
  3.6434293678579407`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["H", "I"], TraditionalForm]]],
 " (probability that a randomly drawn female is heterozygous)"
}], "Subsubsection",
 CellChangeTimes->{{3.6572304739283447`*^9, 3.6572305676138153`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"equiHetI", "[", 
   RowBox[{"\[Gamma]_", ",", "\[Mu]_", ",", "NN_"}], "]"}], "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"HetI", "[", "equiP", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.64342937216992*^9, {3.656900567855302*^9, 3.6569006117217283`*^9}, {
   3.6569006817070503`*^9, 3.656900685725081*^9}, {3.656900748416066*^9, 
   3.656900757292965*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox["\[Gamma]", 
   RowBox[{"\[Gamma]", "+", 
    RowBox[{"2", " ", "\[Mu]"}], "-", 
    RowBox[{"2", " ", "\[Gamma]", " ", "\[Mu]"}]}]]}]], "Output",
 CellChangeTimes->{
  3.645692417545477*^9, 3.645692583518262*^9, 3.656815119218204*^9, 
   3.656900052703045*^9, 3.656900688488751*^9, 3.656900758361883*^9, 
   3.656900820710211*^9, {3.657223038458727*^9, 3.657223049119349*^9}, 
   3.657325525673889*^9, 3.657507019840836*^9}]
}, Open  ]],

Cell["Values for some special cases:", "Text",
 CellChangeTimes->{{3.6572426943476353`*^9, 3.6572427145684443`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FullSimplify", "[", 
  RowBox[{"equiHetI", "[", 
   RowBox[{"0", ",", "\[Mu]", ",", "NN"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"equiHetI", "[", 
   RowBox[{"1", ",", "\[Mu]", ",", "NN"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"equiHetI", "[", 
   RowBox[{"\[Gamma]", ",", "0", ",", "NN"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.657243524758819*^9, 3.657243562666656*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.657243547661461*^9, 3.657243563395349*^9}, 
   3.657325525794943*^9, 3.657507020091313*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.657243547661461*^9, 3.657243563395349*^9}, 
   3.657325525794943*^9, 3.6575070201524754`*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.657243547661461*^9, 3.657243563395349*^9}, 
   3.657325525794943*^9, 3.657507020174369*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["H", 
    RowBox[{"T", ",", "old"}]], TraditionalForm]]],
 "  (probability that two randomly drawn alleles are different)"
}], "Subsubsection",
 CellChangeTimes->{{3.6572304739283447`*^9, 3.657230495494699*^9}, {
  3.6572305346698847`*^9, 3.657230581356139*^9}, {3.657857248132125*^9, 
  3.657857252720511*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"equiHetTold", "[", 
   RowBox[{"\[Gamma]_", ",", "\[Mu]_", ",", "NN_"}], "]"}], "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"HetTold", "[", 
    RowBox[{"equiP", ",", "NN"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.643429420413772*^9, 3.643429422229808*^9}, {
   3.6568150361335983`*^9, 3.656815049127625*^9}, 3.656900847235861*^9, {
   3.657857315678074*^9, 3.657857319932706*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    RowBox[{"(", 
     RowBox[{"NN", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "NN"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Gamma]"}]}], ")"}], " ", 
    "\[Mu]"}], "+", 
   RowBox[{"4", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "NN"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
    SuperscriptBox["\[Mu]", "2"]}]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"2", " ", "NN"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], " ", 
   
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "\[Gamma]"}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
    ")"}]}]]], "Output",
 CellChangeTimes->{
  3.645692593508686*^9, 3.656815129372957*^9, 3.6568211389961147`*^9, 
   3.656900064395673*^9, 3.656900855432109*^9, 3.6572230628384733`*^9, 
   3.65732552612087*^9, 3.6575070205145607`*^9, {3.65785732695572*^9, 
   3.657857337881584*^9}}]
}, Open  ]],

Cell["Writing down fomula in human-friendly notation :", "Text",
 CellChangeTimes->{{3.6572251510520353`*^9, 3.657225191199788*^9}, 
   3.657231035824128*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"equiHetTold", "[", 
    RowBox[{"\[Gamma]", ",", "\[Mu]", ",", "NN"}], "]"}], "==", 
   FractionBox[
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"NN", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"NN", "-", "2"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "NN"}], "-", "1"}], ")"}], " ", "\[Gamma]"}]}], 
       ")"}], " ", "\[Mu]"}], "+", 
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{"NN", "-", "1"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "NN"}], "-", "1"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", 
      SuperscriptBox["\[Mu]", "2"]}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "NN"}], "-", "1"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"NN", "-", "1"}], ")"}], " ", "\[Mu]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"\[Gamma]", "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], ")"}]}]]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6572251945646877`*^9, 3.657225219084107*^9}, {
   3.657225658528307*^9, 3.657225676787613*^9}, 3.657225803228923*^9, 
   3.657226042575983*^9, 3.657226153159754*^9, {3.6572310813576183`*^9, 
   3.657231082489078*^9}, {3.657857340925908*^9, 3.6578573422078648`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.657231271025343*^9, 3.657325526274868*^9, 
  3.657507020659417*^9, 3.657857343951715*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Approximation", "  ", "assuming", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"N", "-", "1"}], ")"}], "~", 
   RowBox[{"N", " ", ":"}]}]}]], "Text",
 CellChangeTimes->{{3.65723114092458*^9, 3.6572311589876537`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"equiHetToldApprox", "[", 
    RowBox[{"\[Gamma]_", ",", "\[Mu]_", ",", "NN_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{" ", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "NN", " ", "\[Gamma]"}]}], ")"}], " ", "\[Mu]"}], 
      "+", 
      RowBox[{"4", "NN", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", 
       SuperscriptBox["\[Mu]", "2"]}]}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "NN", " ", "\[Mu]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"\[Gamma]", "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], ")"}]}]]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.65785734773317*^9, 3.657857348405507*^9}}],

Cell["Values for some special cases:", "Text",
 CellChangeTimes->{{3.6572426943476353`*^9, 3.6572427145684443`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FullSimplify", "[", 
  RowBox[{"equiHetTold", "[", 
   RowBox[{"0", ",", "\[Mu]", ",", "NN"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"equiHetTold", "[", 
   RowBox[{"1", ",", "\[Mu]", ",", "NN"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"equiHetTold", "[", 
   RowBox[{"\[Gamma]", ",", "0", ",", "NN"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"equiHetTold", "[", 
      RowBox[{"\[Gamma]", ",", "\[Mu]", ",", "NN"}], "]"}], ",", 
     RowBox[{"NN", "\[Rule]", "Infinity"}]}], "]"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"equiHetToldApprox", "[", 
   RowBox[{"0", ",", "\[Mu]", ",", "NN"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"equiHetToldApprox", "[", 
   RowBox[{"1", ",", "\[Mu]", ",", "NN"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"equiHetToldApprox", "[", 
     RowBox[{"\[Gamma]", ",", "\[Mu]", ",", "NN"}], "]"}], ",", 
    RowBox[{"NN", "\[Rule]", "Infinity"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.657243594038718*^9, 3.657243636915741*^9}, {
  3.657331870864849*^9, 3.657331897702875*^9}, {3.657331945480371*^9, 
  3.6573319520612087`*^9}, {3.657857353078426*^9, 3.657857366890378*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox[
   RowBox[{"1", "-", "NN"}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "NN"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], 
     ")"}]}]]}]], "Output",
 CellChangeTimes->{
  3.657243600532744*^9, 3.657243637630472*^9, 3.657325526613515*^9, {
   3.6573318991029177`*^9, 3.657331912872171*^9}, 3.65733195308418*^9, 
   3.657507021460891*^9, 3.657857370862585*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"4", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", "\[Mu]"}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"2", " ", "NN"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], 
    ")"}]}]]], "Output",
 CellChangeTimes->{
  3.657243600532744*^9, 3.657243637630472*^9, 3.657325526613515*^9, {
   3.6573318991029177`*^9, 3.657331912872171*^9}, 3.65733195308418*^9, 
   3.657507021460891*^9, 3.657857370892293*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.657243600532744*^9, 3.657243637630472*^9, 3.657325526613515*^9, {
   3.6573318991029177`*^9, 3.657331912872171*^9}, 3.65733195308418*^9, 
   3.657507021460891*^9, 3.657857370907855*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.657243600532744*^9, 3.657243637630472*^9, 3.657325526613515*^9, {
   3.6573318991029177`*^9, 3.657331912872171*^9}, 3.65733195308418*^9, 
   3.657507021460891*^9, 3.657857371222817*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "+", 
   RowBox[{"4", " ", "NN", " ", "\[Mu]"}]}], 
  RowBox[{"2", "+", 
   RowBox[{"4", " ", "NN", " ", "\[Mu]"}]}]]], "Output",
 CellChangeTimes->{
  3.657243600532744*^9, 3.657243637630472*^9, 3.657325526613515*^9, {
   3.6573318991029177`*^9, 3.657331912872171*^9}, 3.65733195308418*^9, 
   3.657507021460891*^9, 3.657857371287079*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Mu]", "+", 
   RowBox[{"2", " ", "NN", " ", "\[Mu]"}]}], 
  RowBox[{"1", "+", 
   RowBox[{"2", " ", "NN", " ", "\[Mu]"}]}]]], "Output",
 CellChangeTimes->{
  3.657243600532744*^9, 3.657243637630472*^9, 3.657325526613515*^9, {
   3.6573318991029177`*^9, 3.657331912872171*^9}, 3.65733195308418*^9, 
   3.657507021460891*^9, 3.657857371335721*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.657243600532744*^9, 3.657243637630472*^9, 3.657325526613515*^9, {
   3.6573318991029177`*^9, 3.657331912872171*^9}, 3.65733195308418*^9, 
   3.657507021460891*^9, 3.657857371382991*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["H", "T"], TraditionalForm]]],
 "  (probability that two alleles randomly drawn from different individuals \
are different)"
}], "Subsubsection",
 CellChangeTimes->{{3.6572304739283447`*^9, 3.657230495494699*^9}, {
  3.6572305346698847`*^9, 3.657230581356139*^9}, {3.65750429920295*^9, 
  3.657504307803878*^9}, {3.657504346223819*^9, 3.657504346223936*^9}, {
  3.6578572418104362`*^9, 3.657857241811055*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"equiHetT", "[", 
   RowBox[{"\[Gamma]_", ",", "\[Mu]_", ",", "NN_"}], "]"}], "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"HetT", "[", 
    RowBox[{"equiP", ",", "NN"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.643429420413772*^9, 3.643429422229808*^9}, {
   3.6568150361335983`*^9, 3.656815049127625*^9}, 3.656900847235861*^9, {
   3.657504350574958*^9, 3.657504355060869*^9}, {3.65785738487252*^9, 
   3.6578573873167143`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Mu]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"3", " ", "\[Gamma]"}], "-", 
     RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
    ")"}]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], " ", 
   
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "\[Gamma]"}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
    ")"}]}]]], "Output",
 CellChangeTimes->{3.645692593508686*^9, 3.656815129372957*^9, 
  3.6568211389961147`*^9, 3.656900064395673*^9, 3.656900855432109*^9, 
  3.6572230628384733`*^9, 3.65732552612087*^9, 3.65750435972742*^9, 
  3.6575044251512403`*^9, 3.657507022155171*^9, 3.657857389296933*^9}]
}, Open  ]],

Cell["Writing down fomula in human-friendly notation :", "Text",
 CellChangeTimes->{{3.6572251510520353`*^9, 3.657225191199788*^9}, 
   3.657231035824128*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"equiHetT", "[", 
    RowBox[{"\[Gamma]", ",", "\[Mu]", ",", "NN"}], "]"}], "==", 
   FractionBox[
    RowBox[{"\[Mu]", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"3", " ", "\[Gamma]"}], "+", 
       RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{"NN", "-", "1"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], ")"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{"\[Gamma]", "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], ")"}]}]]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6572251945646877`*^9, 3.657225219084107*^9}, {
   3.657225658528307*^9, 3.657225676787613*^9}, 3.657225803228923*^9, 
   3.657226042575983*^9, 3.657226153159754*^9, {3.6572310813576183`*^9, 
   3.657231082489078*^9}, {3.657504442729641*^9, 3.6575044513927917`*^9}, {
   3.657504861068266*^9, 3.657504922765195*^9}, {3.6575049616706057`*^9, 
   3.657505040763474*^9}, 3.657857394089155*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.657231271025343*^9, 3.657325526274868*^9, {3.6575044447347107`*^9, 
   3.657504452557588*^9}, {3.657504875527052*^9, 3.657504924150365*^9}, {
   3.657504963424985*^9, 3.657504973138544*^9}, {3.657505005770197*^9, 
   3.657505041748049*^9}, 3.657507022451021*^9, 3.657857396664657*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Approximation", "  ", "assuming", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"N", "-", "1"}], ")"}], "~", "N"}], " ", "and", " ", "N\[Mu]"}], 
  ">>", "1:"}]], "Text",
 CellChangeTimes->{{3.65723114092458*^9, 3.6572311589876537`*^9}, {
  3.657506843792205*^9, 3.657506857918486*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"equiHetTApprox", "[", 
    RowBox[{"\[Gamma]_", ",", "\[Mu]_", ",", "NN_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{"\[Mu]", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
       RowBox[{"4", " ", "NN", " ", "\[Mu]", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Gamma]"}], ")"}]}]}], ")"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "NN", " ", "\[Mu]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"\[Gamma]", "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], ")"}]}]]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.657505197804298*^9, 3.6575062190663424`*^9, 3.657506865075892*^9, {
   3.657507072312107*^9, 3.657507106144693*^9}, {3.657507201462079*^9, 
   3.657507242287431*^9}, {3.657507314224012*^9, 3.6575073186769743`*^9}, 
   3.657857400646871*^9}],

Cell["Values for some special cases:", "Text",
 CellChangeTimes->{{3.6572426943476353`*^9, 3.6572427145684443`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FullSimplify", "[", 
  RowBox[{"equiHetT", "[", 
   RowBox[{"0", ",", "\[Mu]", ",", "NN"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"equiHetT", "[", 
   RowBox[{"1", ",", "\[Mu]", ",", "NN"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"equiHetT", "[", 
   RowBox[{"\[Gamma]", ",", "0", ",", "NN"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"equiHetT", "[", 
      RowBox[{"\[Gamma]", ",", "\[Mu]", ",", "NN"}], "]"}], ",", 
     RowBox[{"NN", "\[Rule]", "Infinity"}]}], "]"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"equiHetTApprox", "[", 
   RowBox[{"0", ",", "\[Mu]", ",", "NN"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"equiHetTApprox", "[", 
   RowBox[{"1", ",", "\[Mu]", ",", "NN"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"equiHetTApprox", "[", 
   RowBox[{"\[Gamma]", ",", "0", ",", "NN"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"equiHetTApprox", "[", 
     RowBox[{"\[Gamma]", ",", "\[Mu]", ",", "NN"}], "]"}], ",", 
    RowBox[{"NN", "\[Rule]", "Infinity"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.657243594038718*^9, 3.657243636915741*^9}, {
  3.657331870864849*^9, 3.657331897702875*^9}, {3.657331945480371*^9, 
  3.6573319520612087`*^9}, {3.657506107832611*^9, 3.657506145995864*^9}, {
  3.65785740774437*^9, 3.657857431541554*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox["1", 
   RowBox[{"2", "+", 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}]]}]], "Output",\

 CellChangeTimes->{
  3.657243600532744*^9, 3.657243637630472*^9, 3.657325526613515*^9, {
   3.6573318991029177`*^9, 3.657331912872171*^9}, 3.65733195308418*^9, {
   3.657506876895239*^9, 3.6575068808936043`*^9}, 3.657507022597835*^9, 
   3.657507125927229*^9, 3.657507378278182*^9, 3.6578574333519793`*^9}],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox["1", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"2", " ", "\[Mu]"}], "-", 
    RowBox[{"2", " ", "NN", " ", "\[Mu]"}]}]]}]], "Output",
 CellChangeTimes->{
  3.657243600532744*^9, 3.657243637630472*^9, 3.657325526613515*^9, {
   3.6573318991029177`*^9, 3.657331912872171*^9}, 3.65733195308418*^9, {
   3.657506876895239*^9, 3.6575068808936043`*^9}, 3.657507022597835*^9, 
   3.657507125927229*^9, 3.657507378278182*^9, 3.6578574333715553`*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.657243600532744*^9, 3.657243637630472*^9, 3.657325526613515*^9, {
   3.6573318991029177`*^9, 3.657331912872171*^9}, 3.65733195308418*^9, {
   3.657506876895239*^9, 3.6575068808936043`*^9}, 3.657507022597835*^9, 
   3.657507125927229*^9, 3.657507378278182*^9, 3.6578574333925257`*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.657243600532744*^9, 3.657243637630472*^9, 3.657325526613515*^9, {
   3.6573318991029177`*^9, 3.657331912872171*^9}, 3.65733195308418*^9, {
   3.657506876895239*^9, 3.6575068808936043`*^9}, 3.657507022597835*^9, 
   3.657507125927229*^9, 3.657507378278182*^9, 3.657857433433991*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "+", 
   RowBox[{"4", " ", "NN", " ", "\[Mu]"}]}], 
  RowBox[{"2", "+", 
   RowBox[{"4", " ", "NN", " ", "\[Mu]"}]}]]], "Output",
 CellChangeTimes->{
  3.657243600532744*^9, 3.657243637630472*^9, 3.657325526613515*^9, {
   3.6573318991029177`*^9, 3.657331912872171*^9}, 3.65733195308418*^9, {
   3.657506876895239*^9, 3.6575068808936043`*^9}, 3.657507022597835*^9, 
   3.657507125927229*^9, 3.657507378278182*^9, 3.657857433490361*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Mu]", "+", 
   RowBox[{"2", " ", "NN", " ", "\[Mu]"}]}], 
  RowBox[{"1", "+", 
   RowBox[{"2", " ", "NN", " ", "\[Mu]"}]}]]], "Output",
 CellChangeTimes->{
  3.657243600532744*^9, 3.657243637630472*^9, 3.657325526613515*^9, {
   3.6573318991029177`*^9, 3.657331912872171*^9}, 3.65733195308418*^9, {
   3.657506876895239*^9, 3.6575068808936043`*^9}, 3.657507022597835*^9, 
   3.657507125927229*^9, 3.657507378278182*^9, 3.657857433534128*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.657243600532744*^9, 3.657243637630472*^9, 3.657325526613515*^9, {
   3.6573318991029177`*^9, 3.657331912872171*^9}, 3.65733195308418*^9, {
   3.657506876895239*^9, 3.6575068808936043`*^9}, 3.657507022597835*^9, 
   3.657507125927229*^9, 3.657507378278182*^9, 3.6578574335654087`*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.657243600532744*^9, 3.657243637630472*^9, 3.657325526613515*^9, {
   3.6573318991029177`*^9, 3.657331912872171*^9}, 3.65733195308418*^9, {
   3.657506876895239*^9, 3.6575068808936043`*^9}, 3.657507022597835*^9, 
   3.657507125927229*^9, 3.657507378278182*^9, 3.657857433581826*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", "IT"], TraditionalForm]]],
 " (relative proportion of heterozygosity attributable to within-individual \
level)"
}], "Subsubsection",
 CellChangeTimes->{{3.6572304739283447`*^9, 3.657230499350148*^9}, {
  3.657230574129904*^9, 3.6572306192307873`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"equiFIT", "[", 
   RowBox[{"\[Gamma]_", ",", "\[Mu]_", ",", "NN_"}], "]"}], "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"FIT", "[", 
    RowBox[{"equiP", ",", "NN"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6434294294385633`*^9, 3.643429438406271*^9}, {
   3.6568153779301453`*^9, 3.656815379030551*^9}, 3.65690126711691*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Gamma]"}]}], ")"}]}], 
  RowBox[{"NN", "+", 
   RowBox[{"2", " ", "\[Gamma]"}], "-", 
   RowBox[{"5", " ", "NN", " ", "\[Gamma]"}], "+", 
   RowBox[{"2", " ", 
    SuperscriptBox["NN", "2"], " ", "\[Gamma]"}], "-", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "NN"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
    "\[Mu]"}]}]]], "Output",
 CellChangeTimes->{
  3.645692599471874*^9, {3.656815369722123*^9, 3.656815380239849*^9}, 
   3.65690007137671*^9, 3.656901272122012*^9, 3.657223069302701*^9, 
   3.657325527084877*^9, 3.657507023572723*^9}]
}, Open  ]],

Cell["Writing down fomula in human-friendly notation :", "Text",
 CellChangeTimes->{{3.6572251510520353`*^9, 3.657225191199788*^9}, 
   3.657231035824128*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"equiFIT", "[", 
    RowBox[{"\[Gamma]", ",", "\[Mu]", ",", "NN"}], "]"}], "==", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"NN", "-", "1"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "NN"}], "-", "1"}], ")"}], " ", "\[Gamma]"}], "-",
        "1"}], ")"}]}], 
    RowBox[{"NN", "+", 
     RowBox[{"2", " ", "\[Gamma]"}], "+", 
     RowBox[{"NN", " ", "\[Gamma]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "NN"}], "-", "5"}], ")"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"NN", "-", "1"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "NN"}], "-", "1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}]]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6572313009286833`*^9, 3.657231442173533*^9}, {
  3.657231477241844*^9, 3.6572314817844057`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.657231325371335*^9, 3.65723139190031*^9}, {
   3.657231433763706*^9, 3.657231443305078*^9}, 3.6572314831552467`*^9, 
   3.657325527318869*^9, 3.657507023740225*^9}]
}, Open  ]],

Cell["Approximation assuming (N-1)~N:", "Text",
 CellChangeTimes->{{3.645693162109255*^9, 3.645693235237767*^9}, {
   3.645698052151037*^9, 3.645698079627273*^9}, {3.657231246854464*^9, 
   3.657231250956736*^9}, 3.6572312974571543`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"equiFITApprox", "[", 
    RowBox[{"\[Gamma]_", ",", "\[Mu]_", ",", "NN_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{"NN", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "-", "1"}], ")"}]}], 
    RowBox[{"NN", "+", 
     RowBox[{"2", " ", "\[Gamma]"}], "-", 
     RowBox[{"5", " ", "NN", " ", "\[Gamma]"}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["NN", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"\[Gamma]", "+", 
        RowBox[{"2", " ", "\[Mu]", 
         RowBox[{"(", 
          RowBox[{"1", "-", " ", "\[Gamma]"}], " ", ")"}]}]}], ")"}]}]}]]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6706347075205317`*^9, 3.670634750921111*^9}}],

Cell["Values for some special cases:", "Text",
 CellChangeTimes->{{3.6572426943476353`*^9, 3.6572427145684443`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FullSimplify", "[", 
  RowBox[{"equiFIT", "[", 
   RowBox[{"0", ",", "\[Mu]", ",", "NN"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"equiFIT", "[", 
   RowBox[{"1", ",", "\[Mu]", ",", "NN"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"equiFIT", "[", 
   RowBox[{"\[Gamma]", ",", "0", ",", "NN"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"equiFITApprox", "[", 
   RowBox[{"0", ",", "\[Mu]", ",", "NN"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"equiFITApprox", "[", 
   RowBox[{"1", ",", "\[Mu]", ",", "NN"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.657243594038718*^9, 3.657243636915741*^9}, {
  3.6572436823362513`*^9, 3.6572437013111277`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"-", "1"}], "+", "NN"}], 
   RowBox[{"NN", "+", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Mu]"}]}]]}]], "Output",
 CellChangeTimes->{3.657243702234333*^9, 3.657325527938808*^9, 
  3.65750702429461*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.657243702234333*^9, 3.657325527938808*^9, 
  3.657507024372961*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Gamma]"}]}], ")"}]}], 
  RowBox[{"NN", "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "NN"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "NN"}]}], ")"}], " ", "\[Gamma]"}]}]]], "Output",
 CellChangeTimes->{3.657243702234333*^9, 3.657325527938808*^9, 
  3.657507024402637*^9}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{
   RowBox[{"-", "1"}], "-", 
   RowBox[{"4", " ", "NN", " ", "\[Mu]"}]}]]], "Output",
 CellChangeTimes->{3.657243702234333*^9, 3.657325527938808*^9, 
  3.657507024430419*^9}],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox["3", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "NN"}], ")"}]}]]}]], "Output",
 CellChangeTimes->{3.657243702234333*^9, 3.657325527938808*^9, 
  3.6575070244435253`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["H", "G"], TraditionalForm]]],
 " (probability that two randomly drawn individuals are different)"
}], "Subsubsection",
 CellChangeTimes->{{3.6572304739283447`*^9, 3.6572305049025784`*^9}, {
  3.6572305757943277`*^9, 3.657230578757873*^9}, {3.6572306217584248`*^9, 
  3.657230636311047*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"equiHetG", "[", 
   RowBox[{"\[Gamma]_", ",", "\[Mu]_", ",", "NN_"}], "]"}], "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"HetG", "[", "equiP", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.64342941246139*^9, 3.6434294142213373`*^9}, 
   3.6569008302831507`*^9}],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]"}]}], ")"}],
       " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]"}]}], 
       ")"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "7"}], "+", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{"11", "-", 
              RowBox[{"8", " ", "NN"}], "+", 
              RowBox[{"6", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Gamma]"}]}], 
             ")"}]}]}], ")"}]}]}], ")"}], " ", "\[Mu]"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"10", "+", 
        RowBox[{"\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "16"}], "+", 
           RowBox[{"10", " ", "NN"}], "+", 
           RowBox[{"17", " ", "\[Gamma]"}], "-", 
           RowBox[{"19", " ", "NN", " ", "\[Gamma]"}], "+", 
           RowBox[{"11", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
            SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}]}], ")"}], " ", 
      SuperscriptBox["\[Mu]", "2"]}], "-", 
     RowBox[{"6", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "NN"}], ")"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        SuperscriptBox["\[Gamma]", "2"]}], ")"}], " ", 
      SuperscriptBox["\[Mu]", "3"]}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "\[Gamma]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
      ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Gamma]", "-", 
       RowBox[{"NN", " ", "\[Gamma]"}], "+", 
       RowBox[{"3", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], 
      ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"2", " ", "\[Gamma]"}], "+", 
       RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
       SuperscriptBox["\[Gamma]", "2"], "-", 
       RowBox[{"NN", " ", 
        SuperscriptBox["\[Gamma]", "2"]}], "+", 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
        "\[Mu]"}]}], ")"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.6456925933494263`*^9, 3.656815126188202*^9, 
  3.656900841133417*^9, 3.657223059310692*^9, 3.657325534353574*^9, 
  3.657507035064603*^9, 3.668803852983827*^9, 3.6823300044607563`*^9}]
}, Open  ]],

Cell["Writing down fomula in human-friendly notation :", "Text",
 CellChangeTimes->{{3.6572251510520353`*^9, 3.657225191199788*^9}, 
   3.657231035824128*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"equiHetG", "[", 
    RowBox[{"\[Gamma]", ",", "\[Mu]", ",", "NN"}], "]"}], "==", 
   RowBox[{"1", "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"NN", "-", "1"}], ")"}], " ", "\[Gamma]"}]}], ")"}], " ", 
        
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"NN", "-", "1"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"2", "-", "\[Gamma]"}], ")"}], " ", "\[Gamma]"}]}], 
         ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"NN", "-", "1"}], ")"}], " ", "\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Gamma]", " ", 
              RowBox[{"(", 
               RowBox[{"11", "-", 
                RowBox[{"8", " ", "NN"}], "+", 
                RowBox[{"6", " ", 
                 RowBox[{"(", 
                  RowBox[{"NN", "-", "1"}], ")"}], " ", "\[Gamma]"}]}], 
               ")"}]}], "-", "7"}], ")"}]}]}], ")"}], " ", "\[Mu]"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"NN", "-", "1"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"10", "+", 
          RowBox[{"\[Gamma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"10", " ", "NN"}], "-", "16", "+", 
             RowBox[{"17", " ", "\[Gamma]"}], "-", 
             RowBox[{"19", " ", "NN", " ", "\[Gamma]"}], "+", 
             RowBox[{"11", " ", 
              RowBox[{"(", 
               RowBox[{"NN", "-", "1"}], ")"}], " ", 
              SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}]}], ")"}], " ", 
        SuperscriptBox["\[Mu]", "2"]}], "+", 
       RowBox[{"6", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"NN", "-", "1"}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Gamma]", "-", "1"}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          SuperscriptBox["\[Gamma]", "2"]}], ")"}], " ", 
        SuperscriptBox["\[Mu]", "3"]}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", "\[Mu]"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"\[Gamma]", "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Gamma]", "+", 
         RowBox[{"NN", " ", "\[Gamma]"}], "+", 
         RowBox[{"3", " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"2", " ", "\[Gamma]"}], "+", 
         RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "+", 
         SuperscriptBox["\[Gamma]", "2"], "-", 
         RowBox[{"NN", " ", 
          SuperscriptBox["\[Gamma]", "2"]}], "+", 
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{"NN", "-", "1"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"], " ", 
          "\[Mu]"}]}], ")"}]}], ")"}]}]}]}], "]"}]], "Input"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.657225220078607*^9, 3.657225677820423*^9, 
  3.6572260461361*^9, 3.6572261542644567`*^9, 3.657325534827355*^9, 
  3.657507035837751*^9}]
}, Open  ]],

Cell[TextData[{
 "Approximation assuming (N-1)~N and ignoring terms like N",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Mu]", "2"], TraditionalForm]]],
 ":"
}], "Text",
 CellChangeTimes->{{3.645693162109255*^9, 3.645693235237767*^9}, {
  3.645698052151037*^9, 3.645698079627273*^9}, {3.657231246854464*^9, 
  3.657231250956736*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"equiHetGApprox", "[", 
    RowBox[{"\[Gamma]_", ",", "\[Mu]_", ",", "NN_"}], "]"}], ":=", 
   RowBox[{"1", "-", 
    FractionBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["NN", "2"], " ", 
       SuperscriptBox["\[Gamma]", "3"], 
       RowBox[{"(", 
        RowBox[{"2", "-", "\[Gamma]"}], ")"}]}], "+", 
      RowBox[{"2", " ", "\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "NN", " ", "\[Mu]"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"3", " ", "NN", " ", "\[Mu]"}]}], ")"}]}], "+", 
      RowBox[{"\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "NN", " ", "\[Mu]"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"5", " ", "NN", " ", "\[Mu]"}]}], ")"}]}], "+", 
      RowBox[{"NN", " ", 
       SuperscriptBox["\[Gamma]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         RowBox[{"8", " ", "NN", " ", "\[Mu]"}]}], ")"}]}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "NN", " ", "\[Mu]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"\[Gamma]", "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", "\[Mu]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"NN", " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]", "+", 
           RowBox[{"3", "\[Mu]"}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", " ", 
        RowBox[{"NN", " ", "\[Gamma]", 
         RowBox[{"(", 
          RowBox[{"2", "-", "\[Gamma]"}], ")"}]}], "+", 
        RowBox[{"4", "NN", " ", "\[Mu]"}]}], " ", ")"}]}]]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.645693254735557*^9, 3.645693360434206*^9}, {
   3.645693774503318*^9, 3.6456938189335546`*^9}, 3.645694633690576*^9, 
   3.645694720655521*^9, 3.64569574930401*^9, 3.645696061232009*^9, 
   3.645696260904949*^9, 3.645697148608913*^9, 3.645698357491169*^9, {
   3.64569838867806*^9, 3.6456984030241003`*^9}, {3.656900120340307*^9, 
   3.656900188740726*^9}, {3.656900867040818*^9, 3.656900879049999*^9}, 
   3.656901539997731*^9, 3.657223378267706*^9, {3.657223413606876*^9, 
   3.6572234718330173`*^9}, 3.6572235400396633`*^9, {3.6572236522141953`*^9, 
   3.657223700822887*^9}, {3.657223851002837*^9, 3.657223871443522*^9}, {
   3.657224061017871*^9, 3.657224061686533*^9}, {3.6572242752100887`*^9, 
   3.657224287826226*^9}, {3.657224381218885*^9, 3.6572244107949457`*^9}, {
   3.65722456094378*^9, 3.6572245950807753`*^9}, 3.65722464541175*^9, 
   3.657224736508471*^9, 3.6572247806006393`*^9, 3.6572248788225946`*^9, {
   3.657224936698619*^9, 3.6572249487366123`*^9}, {3.6572250074584303`*^9, 
   3.657225032548917*^9}, {3.657225119258931*^9, 3.657225119723065*^9}, {
   3.657225236901547*^9, 3.65722524446034*^9}, {3.657225392322776*^9, 
   3.657225424546967*^9}, 3.657226293879931*^9, 3.6572266401161413`*^9, 
   3.6572285977382803`*^9, {3.6572286334574223`*^9, 3.657228634975713*^9}, 
   3.657229040789596*^9, 3.6572290985920067`*^9, {3.657230351369858*^9, 
   3.657230375073893*^9}, {3.6572311054759808`*^9, 3.657231122989064*^9}, {
   3.6572311735193853`*^9, 3.657231175586894*^9}, {3.657232027509727*^9, 
   3.6572321330433187`*^9}, 3.657232719547174*^9, 3.6572327663194103`*^9, {
   3.657233111840951*^9, 3.657233116902104*^9}, {3.6572331934773693`*^9, 
   3.657233200443652*^9}, {3.657233557295958*^9, 3.657233565295439*^9}, 
   3.657233596011292*^9, {3.6572338316104317`*^9, 3.657233875204763*^9}, {
   3.657234131028646*^9, 3.657234178654294*^9}, {3.65723428292365*^9, 
   3.657234345966243*^9}, 3.65723437793078*^9, {3.6572344614310837`*^9, 
   3.657234488790525*^9}, {3.657234652466117*^9, 3.657234655969343*^9}, {
   3.657234900122394*^9, 3.657234910378496*^9}, 3.65723896200607*^9, 
   3.65723935372075*^9, 3.65723993238704*^9, 3.657240053568578*^9, 
   3.657240290768557*^9, 3.6572407664541683`*^9, {3.657240878948353*^9, 
   3.657240881840343*^9}, 3.657241810743675*^9, 3.6572420007647657`*^9, 
   3.657242595104959*^9, {3.65724267423079*^9, 3.657242676341324*^9}}],

Cell["Values for some special cases:", "Text",
 CellChangeTimes->{{3.6572426943476353`*^9, 3.6572427145684443`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"equiHetG", "[", 
    RowBox[{"0", ",", "\[Mu]", ",", "NN"}], "]"}], "==", 
   RowBox[{"1", "-", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{"NN", "-", "1"}], ")"}], " ", "\[Mu]"}]}]]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"equiHetG", "[", 
    RowBox[{"1", ",", "\[Mu]", ",", "NN"}], "]"}], "==", 
   RowBox[{"1", "-", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"NN", "-", "1"}], ")"}], " ", "\[Mu]"}]}]]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"equiHetG", "[", 
    RowBox[{"\[Gamma]", ",", "0", ",", "NN"}], "]"}], "\[Equal]", "0"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"equiHetG", "[", 
      RowBox[{"\[Gamma]", ",", "\[Mu]", ",", "NN"}], "]"}], ",", 
     RowBox[{"NN", "\[Rule]", "Infinity"}]}], "]"}], "\[Equal]", "1"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6572427268575087`*^9, 3.6572427410325947`*^9}, {
  3.6572427772988367`*^9, 3.6572427972264957`*^9}, {3.657242887033784*^9, 
  3.657242893217044*^9}, {3.657243009178237*^9, 3.657243019778534*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.657242733197809*^9, 3.657242741708202*^9}, {
   3.657242784608889*^9, 3.657242798113327*^9}, 3.6572428939497538`*^9, 
   3.657243026778051*^9, 3.657325534994959*^9, 3.6575070365034313`*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.657242733197809*^9, 3.657242741708202*^9}, {
   3.657242784608889*^9, 3.657242798113327*^9}, 3.6572428939497538`*^9, 
   3.657243026778051*^9, 3.657325534994959*^9, 3.65750703651888*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.657242733197809*^9, 3.657242741708202*^9}, {
   3.657242784608889*^9, 3.657242798113327*^9}, 3.6572428939497538`*^9, 
   3.657243026778051*^9, 3.657325534994959*^9, 3.657507036533753*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.657242733197809*^9, 3.657242741708202*^9}, {
   3.657242784608889*^9, 3.657242798113327*^9}, 3.6572428939497538`*^9, 
   3.657243026778051*^9, 3.657325534994959*^9, 3.6575070369407883`*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Using individual-based simulations under infinite-alleles model to confirm \
the analytical results\
\>", "Subsection",
 CellChangeTimes->{{3.6428106727766647`*^9, 3.642810708512825*^9}, {
  3.642812267915223*^9, 3.6428122790819902`*^9}}],

Cell[CellGroupData[{

Cell["Trial runs", "Subsubsection",
 CellChangeTimes->{{3.6428316094249783`*^9, 3.64283161693309*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NN", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmax", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"inipop", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", "NN", "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "all", " ", "individual", " ", "are", " ", "homozygous", " ", "for", " ", 
    "the", " ", "same", " ", "allele"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxAlleles", "=", "1000000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pops", "=", 
   RowBox[{"SimulatePop", "[", 
    RowBox[{"inipop", ",", "\[Gamma]", ",", "\[Mu]", ",", "NN", ",", "tmax"}],
     "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6428124824836063`*^9, 3.642812509116194*^9}, {
   3.642813360309266*^9, 3.642813364623362*^9}, 3.642819622845854*^9, {
   3.642819658296434*^9, 3.642819658375803*^9}, {3.64281970485283*^9, 
   3.642819704937454*^9}, {3.6428198570748377`*^9, 3.6428198886962147`*^9}, 
   3.642820035019363*^9, 3.642820088017725*^9, 3.6428206427573843`*^9, 
   3.642821497245062*^9, 3.642826157277855*^9, 3.6434221755915117`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fs", "=", 
   RowBox[{"Heterozygosity", "/@", 
    RowBox[{"CalculatePs", "/@", 
     RowBox[{"pops", "\[LeftDoubleBracket]", 
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", 
        RowBox[{"tmax", "+", "1"}], ",", "10"}], "]"}], 
      "\[RightDoubleBracket]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6428261825643063`*^9, 3.642826192203437*^9}, {
  3.642826364230897*^9, 3.642826405988866*^9}}],

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"Fs", ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<time\>\"", ",", "None"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<F\>\"", ",", "None"}], "}"}]}], "}"}]}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.642820368458695*^9, 3.642820402776997*^9}, {
  3.642820465249851*^9, 3.642820470481498*^9}, {3.642820502542603*^9, 
  3.642820615369596*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NN", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "=", "0.0001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmax", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"inipop", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", "NN", "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "all", " ", "individual", " ", "are", " ", "homozygous", " ", "for", " ", 
    "the", " ", "same", " ", "allele"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxAlleles", "=", "100000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"reps", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ps", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", "reps", "}"}], ",", 
     RowBox[{"{", "7", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", "reps"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pops", "=", 
      RowBox[{"SimulatePop", "[", 
       RowBox[{
       "inipop", ",", "\[Gamma]", ",", "\[Mu]", ",", "NN", ",", "tmax"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ps", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
      "=", 
      RowBox[{"CalculatePs", "/@", 
       RowBox[{"pops", "\[LeftDoubleBracket]", 
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", 
          RowBox[{"tmax", "+", "1"}], ",", "10"}], "]"}], 
        "\[RightDoubleBracket]"}]}]}]}]}], "\[IndentingNewLine]", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.642826576473112*^9, 3.642826630925867*^9}, {
   3.6428266614580593`*^9, 3.6428266918136168`*^9}, {3.6428267274091043`*^9, 
   3.642826738433477*^9}, 3.6428267763467607`*^9, 3.642831048770359*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fs", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"Heterozygosity", ",", "ps", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.642830182321514*^9, 3.6428302249945908`*^9}, 
   3.642830316801689*^9, 3.642830515193391*^9}],

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Append", "[", 
    RowBox[{"Fs", ",", 
     RowBox[{"Map", "[", 
      RowBox[{"Mean", ",", 
       RowBox[{"Transpose", "[", "Fs", "]"}]}], "]"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<F\>\"", ",", "None"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<time\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Append", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", 
          RowBox[{"Opacity", "[", "0.1", "]"}]}], "]"}], ",", 
        RowBox[{"{", "reps", "}"}]}], "]"}], ",", "Red"}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.642830253609977*^9, 3.642830307452869*^9}, {
  3.64283035014781*^9, 3.642830485956565*^9}, {3.642830577486472*^9, 
  3.6428306018291187`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Looking at individual simulations", "Subsubsection",
 CellChangeTimes->{{3.6573257118048153`*^9, 3.657325735799157*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NN", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "=", "0.00001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", "0.0001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tmax", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"inipop", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", "NN", "}"}]}], "]"}]}], ";"}], "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "all", " ", "individual", " ", "are", " ", "homozygous", " ", "for", " ", 
    "the", " ", "same", " ", "allele"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inipop", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "maxAlleles"}], "}"}], "]"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "maxAlleles"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", "NN", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxAlleles", "=", "100000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sampleSize", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"reps", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ps", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", "reps", "}"}], ",", 
     RowBox[{"{", "7", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", "reps"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pops", "=", 
      RowBox[{"SimulatePop", "[", 
       RowBox[{
       "inipop", ",", "\[Gamma]", ",", "\[Mu]", ",", "NN", ",", "tmax"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ps", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
      "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"EstimatePs", "[", 
          RowBox[{"#", ",", "sampleSize"}], "]"}], ")"}], "&"}], "/@", 
       RowBox[{"pops", "\[LeftDoubleBracket]", 
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", 
          RowBox[{"tmax", "+", "1"}], ",", "100"}], "]"}], 
        "\[RightDoubleBracket]"}]}]}]}]}], "\[IndentingNewLine]", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.657325781403275*^9, 3.657325782483416*^9}, {
   3.657325867902547*^9, 3.6573258810098047`*^9}, {3.65732643297647*^9, 
   3.657326489094819*^9}, 3.657326603165854*^9, {3.657326726924512*^9, 
   3.657326739366706*^9}, {3.6573273884234877`*^9, 3.657327390791321*^9}, {
   3.6573274912547493`*^9, 3.657327491396367*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"HI", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"HetI", ",", "ps", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HT", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"HetT", "[", 
       RowBox[{"#", ",", "NN"}], "]"}], "&"}], ",", "ps", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FIT", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"HT", "-", "HI"}], ")"}], "/", "HT"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HG", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"HetG", ",", "ps", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Append", "[", 
         RowBox[{"HI", ",", 
          RowBox[{"Map", "[", 
           RowBox[{"Mean", ",", 
            RowBox[{"Transpose", "[", "HI", "]"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(H\), \(I\)]\)\>\"", ",", "None"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<time\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Directive", "[", 
              RowBox[{"Black", ",", 
               RowBox[{"Opacity", "[", "0.1", "]"}]}], "]"}], ",", 
             RowBox[{"{", "reps", "}"}]}], "]"}], ",", "Red"}], "]"}]}]}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Append", "[", 
         RowBox[{"HT", ",", 
          RowBox[{"Map", "[", 
           RowBox[{"Mean", ",", 
            RowBox[{"Transpose", "[", "HT", "]"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(H\), \(T\)]\)\>\"", ",", "None"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<time\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Directive", "[", 
              RowBox[{"Black", ",", 
               RowBox[{"Opacity", "[", "0.1", "]"}]}], "]"}], ",", 
             RowBox[{"{", "reps", "}"}]}], "]"}], ",", "Red"}], "]"}]}]}], 
       "]"}]}], "}"}], ",", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Append", "[", 
         RowBox[{"FIT", ",", 
          RowBox[{"Map", "[", 
           RowBox[{"Mean", ",", 
            RowBox[{"Transpose", "[", "FIT", "]"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(F\), \(IT\)]\)\>\"", ",", "None"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<time\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Directive", "[", 
              RowBox[{"Black", ",", 
               RowBox[{"Opacity", "[", "0.1", "]"}]}], "]"}], ",", 
             RowBox[{"{", "reps", "}"}]}], "]"}], ",", "Red"}], "]"}]}]}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Append", "[", 
         RowBox[{"HG", ",", 
          RowBox[{"Map", "[", 
           RowBox[{"Mean", ",", 
            RowBox[{"Transpose", "[", "HG", "]"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(H\), \(G\)]\)\>\"", ",", "None"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<time\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Directive", "[", 
              RowBox[{"Black", ",", 
               RowBox[{"Opacity", "[", "0.1", "]"}]}], "]"}], ",", 
             RowBox[{"{", "reps", "}"}]}], "]"}], ",", "Red"}], "]"}]}]}], 
       "]"}]}], "}"}]}], "}"}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{
  3.65732590910038*^9, {3.657326527406385*^9, 3.657326563162197*^9}, {
   3.657326748565112*^9, 3.657326757676803*^9}, {3.657327110871846*^9, 
   3.657327142519252*^9}, {3.657327195656522*^9, 3.657327302704844*^9}, {
   3.65732736753028*^9, 3.657327374630002*^9}, {3.6573274209541187`*^9, 
   3.657327437454361*^9}, {3.6573293073113537`*^9, 3.657329309387665*^9}, 
   3.6856836769373302`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NN", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "=", "0.000001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", "0.0001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tmax", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"inipop", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", "NN", "}"}]}], "]"}]}], ";"}], "*)"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "all", " ", "individual", " ", "are", " ", "homozygous", " ", "for", " ", 
    "the", " ", "same", " ", "allele"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inipop", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "maxAlleles"}], "}"}], "]"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "maxAlleles"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", "NN", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxAlleles", "=", "100000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sampleSize", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"reps", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ps", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", "reps", "}"}], ",", 
     RowBox[{"{", "7", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", "reps"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pops", "=", 
      RowBox[{"SimulatePop", "[", 
       RowBox[{
       "inipop", ",", "\[Gamma]", ",", "\[Mu]", ",", "NN", ",", "tmax"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ps", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
      "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"EstimatePs", "[", 
          RowBox[{"#", ",", "sampleSize"}], "]"}], ")"}], "&"}], "/@", 
       RowBox[{"pops", "\[LeftDoubleBracket]", 
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", 
          RowBox[{"tmax", "+", "1"}], ",", "100"}], "]"}], 
        "\[RightDoubleBracket]"}]}]}]}]}], "\[IndentingNewLine]", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.657325781403275*^9, 3.657325782483416*^9}, {
   3.657325867902547*^9, 3.6573258810098047`*^9}, {3.65732643297647*^9, 
   3.657326489094819*^9}, 3.657326603165854*^9, {3.657326726924512*^9, 
   3.657326739366706*^9}, {3.6573273884234877`*^9, 3.657327390791321*^9}, {
   3.6573274912547493`*^9, 3.657327491396367*^9}, 3.657329608145389*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"HI", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"HetI", ",", "ps", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HT", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"HetT", "[", 
       RowBox[{"#", ",", "NN"}], "]"}], "&"}], ",", "ps", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FIT", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"HT", "-", "HI"}], ")"}], "/", "HT"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HG", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"HetG", ",", "ps", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Append", "[", 
         RowBox[{"HI", ",", 
          RowBox[{"Map", "[", 
           RowBox[{"Mean", ",", 
            RowBox[{"Transpose", "[", "HI", "]"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(H\), \(I\)]\)\>\"", ",", "None"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<time\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Directive", "[", 
              RowBox[{"Black", ",", 
               RowBox[{"Opacity", "[", "0.1", "]"}]}], "]"}], ",", 
             RowBox[{"{", "reps", "}"}]}], "]"}], ",", "Red"}], "]"}]}]}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Append", "[", 
         RowBox[{"HT", ",", 
          RowBox[{"Map", "[", 
           RowBox[{"Mean", ",", 
            RowBox[{"Transpose", "[", "HT", "]"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(H\), \(T\)]\)\>\"", ",", "None"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<time\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Directive", "[", 
              RowBox[{"Black", ",", 
               RowBox[{"Opacity", "[", "0.1", "]"}]}], "]"}], ",", 
             RowBox[{"{", "reps", "}"}]}], "]"}], ",", "Red"}], "]"}]}]}], 
       "]"}]}], "}"}], ",", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Append", "[", 
         RowBox[{"FIT", ",", 
          RowBox[{"Map", "[", 
           RowBox[{"Mean", ",", 
            RowBox[{"Transpose", "[", "FIT", "]"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(F\), \(IT\)]\)\>\"", ",", "None"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<time\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Directive", "[", 
              RowBox[{"Black", ",", 
               RowBox[{"Opacity", "[", "0.1", "]"}]}], "]"}], ",", 
             RowBox[{"{", "reps", "}"}]}], "]"}], ",", "Red"}], "]"}]}]}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Append", "[", 
         RowBox[{"HG", ",", 
          RowBox[{"Map", "[", 
           RowBox[{"Mean", ",", 
            RowBox[{"Transpose", "[", "HG", "]"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(H\), \(G\)]\)\>\"", ",", "None"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<time\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Directive", "[", 
              RowBox[{"Black", ",", 
               RowBox[{"Opacity", "[", "0.1", "]"}]}], "]"}], ",", 
             RowBox[{"{", "reps", "}"}]}], "]"}], ",", "Red"}], "]"}]}]}], 
       "]"}]}], "}"}]}], "}"}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{
  3.65732590910038*^9, {3.657326527406385*^9, 3.657326563162197*^9}, {
   3.657326748565112*^9, 3.657326757676803*^9}, {3.657327110871846*^9, 
   3.657327142519252*^9}, {3.657327195656522*^9, 3.657327302704844*^9}, {
   3.65732736753028*^9, 3.657327374630002*^9}, {3.6573274209541187`*^9, 
   3.657327437454361*^9}, {3.6573293073113537`*^9, 3.657329309387665*^9}, 
   3.685683694172592*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NN", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "=", "0.000001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", "0.0001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmax", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"inipop", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", "NN", "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "all", " ", "individual", " ", "are", " ", "homozygous", " ", "for", " ", 
    "the", " ", "same", " ", "allele"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"inipop", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RandomInteger", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "maxAlleles"}], "}"}], "]"}], ",", 
         RowBox[{"RandomInteger", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "maxAlleles"}], "}"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", "NN", "}"}]}], "]"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxAlleles", "=", "100000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sampleSize", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"reps", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ps", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", "reps", "}"}], ",", 
     RowBox[{"{", "7", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", "reps"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pops", "=", 
      RowBox[{"SimulatePop", "[", 
       RowBox[{
       "inipop", ",", "\[Gamma]", ",", "\[Mu]", ",", "NN", ",", "tmax"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ps", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
      "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"EstimatePs", "[", 
          RowBox[{"#", ",", "sampleSize"}], "]"}], ")"}], "&"}], "/@", 
       RowBox[{"pops", "\[LeftDoubleBracket]", 
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", 
          RowBox[{"tmax", "+", "1"}], ",", "100"}], "]"}], 
        "\[RightDoubleBracket]"}]}]}]}]}], "\[IndentingNewLine]", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.657325781403275*^9, 3.657325782483416*^9}, {
   3.657325867902547*^9, 3.6573258810098047`*^9}, {3.65732643297647*^9, 
   3.657326489094819*^9}, 3.657326603165854*^9, {3.657326726924512*^9, 
   3.657326739366706*^9}, {3.6573273884234877`*^9, 3.657327390791321*^9}, {
   3.6573274912547493`*^9, 3.657327491396367*^9}, 3.657329608145389*^9, {
   3.657330762224978*^9, 3.657330771217843*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"HI", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"HetI", ",", "ps", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HT", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"HetT", "[", 
       RowBox[{"#", ",", "NN"}], "]"}], "&"}], ",", "ps", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FIT", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"HT", "-", "HI"}], ")"}], "/", "HT"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HG", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"HetG", ",", "ps", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Append", "[", 
         RowBox[{"HI", ",", 
          RowBox[{"Map", "[", 
           RowBox[{"Mean", ",", 
            RowBox[{"Transpose", "[", "HI", "]"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(H\), \(I\)]\)\>\"", ",", "None"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<time\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Directive", "[", 
              RowBox[{"Black", ",", 
               RowBox[{"Opacity", "[", "0.1", "]"}]}], "]"}], ",", 
             RowBox[{"{", "reps", "}"}]}], "]"}], ",", "Red"}], "]"}]}]}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Append", "[", 
         RowBox[{"HT", ",", 
          RowBox[{"Map", "[", 
           RowBox[{"Mean", ",", 
            RowBox[{"Transpose", "[", "HT", "]"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(H\), \(T\)]\)\>\"", ",", "None"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<time\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Directive", "[", 
              RowBox[{"Black", ",", 
               RowBox[{"Opacity", "[", "0.1", "]"}]}], "]"}], ",", 
             RowBox[{"{", "reps", "}"}]}], "]"}], ",", "Red"}], "]"}]}]}], 
       "]"}]}], "}"}], ",", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Append", "[", 
         RowBox[{"FIT", ",", 
          RowBox[{"Map", "[", 
           RowBox[{"Mean", ",", 
            RowBox[{"Transpose", "[", "FIT", "]"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(F\), \(IT\)]\)\>\"", ",", "None"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<time\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Directive", "[", 
              RowBox[{"Black", ",", 
               RowBox[{"Opacity", "[", "0.1", "]"}]}], "]"}], ",", 
             RowBox[{"{", "reps", "}"}]}], "]"}], ",", "Red"}], "]"}]}]}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Append", "[", 
         RowBox[{"HG", ",", 
          RowBox[{"Map", "[", 
           RowBox[{"Mean", ",", 
            RowBox[{"Transpose", "[", "HG", "]"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<\!\(\*SubscriptBox[\(H\), \(G\)]\)\>\"", ",", "None"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<time\>\"", ",", "None"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Append", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Directive", "[", 
              RowBox[{"Black", ",", 
               RowBox[{"Opacity", "[", "0.1", "]"}]}], "]"}], ",", 
             RowBox[{"{", "reps", "}"}]}], "]"}], ",", "Red"}], "]"}]}]}], 
       "]"}]}], "}"}]}], "}"}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{
  3.65732590910038*^9, {3.657326527406385*^9, 3.657326563162197*^9}, {
   3.657326748565112*^9, 3.657326757676803*^9}, {3.657327110871846*^9, 
   3.657327142519252*^9}, {3.657327195656522*^9, 3.657327302704844*^9}, {
   3.65732736753028*^9, 3.657327374630002*^9}, {3.6573274209541187`*^9, 
   3.657327437454361*^9}, {3.6573293073113537`*^9, 3.657329309387665*^9}, 
   3.685683711606874*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Running many simulations for specific parameter combinations", \
"Subsubsection",
 CellChangeTimes->{
  3.6428316229766283`*^9, {3.642831808670665*^9, 3.642831830194803*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NN", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmax", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"inipop", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", "NN", "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "all", " ", "individual", " ", "are", " ", "homozygous", " ", "for", " ", 
    "the", " ", "same", " ", "allele"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxAlleles", "=", "1000000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"reps", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ps", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", "reps", "}"}], ",", 
     RowBox[{"{", "7", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", "reps"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pops", "=", 
      RowBox[{"SimulatePop", "[", 
       RowBox[{
       "inipop", ",", "\[Gamma]", ",", "\[Mu]", ",", "NN", ",", "tmax"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ps", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
      "=", 
      RowBox[{"CalculatePs", "[", 
       RowBox[{"pops", "\[LeftDoubleBracket]", 
        RowBox[{"tmax", "+", "1"}], "\[RightDoubleBracket]"}], "]"}]}], 
     ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</users/janengelstaedter/dropbox/projects/RecAutomixis\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Save", "[", 
   RowBox[{
   "\"\<ps N100, mu0.001, gamma0.01, reps1000, tmax10000, iniHom.dat\>\"", 
    ",", "ps"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"{", 
   RowBox[{"sampleStates", ",", 
    RowBox[{"Map", "[", 
     RowBox[{"Mean", ",", 
      RowBox[{"Transpose", "[", "ps", "]"}]}], "]"}], ",", "equiP"}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.642826576473112*^9, 3.642826630925867*^9}, {
   3.6428266614580593`*^9, 3.6428266918136168`*^9}, {3.6428267274091043`*^9, 
   3.642826738433477*^9}, 3.6428267763467607`*^9, 3.642831048770359*^9, {
   3.642831863956843*^9, 3.6428318696342287`*^9}, {3.642832075570216*^9, 
   3.642832076937661*^9}, {3.642832205986931*^9, 3.642832210233672*^9}, 
   3.642832388045518*^9, {3.642832488360585*^9, 3.642832551025982*^9}, {
   3.64283260844475*^9, 3.642832678067692*^9}, 3.642832730335905*^9, {
   3.642832877140501*^9, 3.64283301751298*^9}, {3.6428331478552237`*^9, 
   3.6428331714432573`*^9}, 3.6428332102447767`*^9, 3.642833534096607*^9, 
   3.642833806011601*^9, {3.643410400155924*^9, 3.6434104357084227`*^9}, {
   3.6434105749796333`*^9, 3.643410594908209*^9}, {3.6434106708228703`*^9, 
   3.643410672247863*^9}, {3.643410711114464*^9, 3.643410711281295*^9}, {
   3.643410816309465*^9, 3.643410846471881*^9}, {3.643411097602491*^9, 
   3.6434111218266163`*^9}, {3.6434111986219473`*^9, 3.6434112341922503`*^9}, 
   3.643419835562203*^9, {3.643419946062365*^9, 3.643419956078924*^9}, {
   3.6434216618980703`*^9, 3.6434217151404676`*^9}, {3.643421746477776*^9, 
   3.643421753501465*^9}, {3.643421807448618*^9, 3.64342180750529*^9}, 
   3.643421897923378*^9, {3.6434220112815104`*^9, 3.643422012136746*^9}, {
   3.643422068971277*^9, 3.643422069026897*^9}, {3.643422186737123*^9, 
   3.643422199000778*^9}, 3.643425887242031*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"AA AA\"\>", "\<\"AA AB\"\>", "\<\"AA BC\"\>", "\<\"AA BB\"\>", \
"\<\"AB AB\"\>", "\<\"AB AC\"\>", "\<\"AB CD\"\>"},
    {"0.6515532000000002`", "0.16477979999999975`", "0.03203740000000001`", 
     "0.08199820000000003`", "0.04996260000000005`", "0.0167382`", 
     "0.0029306`"},
    {"0.6562628784456348`", "0.1617695318943702`", "0.03214821069158214`", 
     "0.08150279116289134`", "0.049215202930296006`", "0.015958216737580827`",
      "0.003143168137644483`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6434334048580437`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NN", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmax", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxAlleles", "=", "1000000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"inipop", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomInteger", "[", "maxAlleles", "]"}], ",", 
        RowBox[{"RandomInteger", "[", "maxAlleles", "]"}]}], "}"}], ",", 
      RowBox[{"{", "NN", "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "all", " ", "individual", " ", "are", " ", "heterozygous", " ", "for", " ",
     "different", " ", "alleles"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"reps", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ps", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", "reps", "}"}], ",", 
     RowBox[{"{", "7", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", "reps"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pops", "=", 
      RowBox[{"SimulatePop", "[", 
       RowBox[{
       "inipop", ",", "\[Gamma]", ",", "\[Mu]", ",", "NN", ",", "tmax"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ps", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
      "=", 
      RowBox[{"CalculatePs", "[", 
       RowBox[{"pops", "\[LeftDoubleBracket]", 
        RowBox[{"tmax", "+", "1"}], "\[RightDoubleBracket]"}], "]"}]}], 
     ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</users/janengelstaedter/dropbox/projects/RecAutomixis\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Save", "[", 
   RowBox[{
   "\"\<ps N100, mu0.001, gamma0.01, reps1000, tmax10000, iniHet.dat\>\"", 
    ",", "ps"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"{", 
   RowBox[{"sampleStates", ",", 
    RowBox[{"Map", "[", 
     RowBox[{"Mean", ",", 
      RowBox[{"Transpose", "[", "ps", "]"}]}], "]"}], ",", "equiP"}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.642826576473112*^9, 3.642826630925867*^9}, {
   3.6428266614580593`*^9, 3.6428266918136168`*^9}, {3.6428267274091043`*^9, 
   3.642826738433477*^9}, 3.6428267763467607`*^9, 3.642831048770359*^9, {
   3.642831863956843*^9, 3.6428318696342287`*^9}, {3.642832075570216*^9, 
   3.642832076937661*^9}, {3.642832205986931*^9, 3.642832210233672*^9}, 
   3.642832388045518*^9, {3.642832488360585*^9, 3.642832551025982*^9}, {
   3.64283260844475*^9, 3.642832678067692*^9}, 3.642832730335905*^9, {
   3.642832877140501*^9, 3.64283301751298*^9}, {3.6428331478552237`*^9, 
   3.6428331714432573`*^9}, 3.6428332102447767`*^9, 3.642833534096607*^9, 
   3.642833806011601*^9, {3.643410400155924*^9, 3.6434104357084227`*^9}, {
   3.6434105749796333`*^9, 3.643410594908209*^9}, {3.6434106708228703`*^9, 
   3.643410672247863*^9}, {3.643410711114464*^9, 3.643410711281295*^9}, {
   3.643410816309465*^9, 3.643410846471881*^9}, {3.643411097602491*^9, 
   3.6434111218266163`*^9}, {3.6434111986219473`*^9, 3.6434112341922503`*^9}, 
   3.643419835562203*^9, {3.643419946062365*^9, 3.643419956078924*^9}, {
   3.6434216618980703`*^9, 3.6434217151404676`*^9}, {3.643421746477776*^9, 
   3.643421753501465*^9}, {3.643421807448618*^9, 3.64342180750529*^9}, 
   3.643421897923378*^9, {3.6434220112815104`*^9, 3.643422012136746*^9}, {
   3.643422068971277*^9, 3.643422069026897*^9}, {3.643422186737123*^9, 
   3.643422199000778*^9}, {3.6434258828747787`*^9, 3.643425948292943*^9}, {
   3.643426740709487*^9, 3.6434267429947443`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"AA AA\"\>", "\<\"AA AB\"\>", "\<\"AA BC\"\>", "\<\"AA BB\"\>", \
"\<\"AB AB\"\>", "\<\"AB AC\"\>", "\<\"AB CD\"\>"},
    {"0.679224400000001`", "0.15167699999999978`", "0.029868999999999972`", 
     "0.0760226`", "0.04537800000000005`", "0.014996999999999995`", 
     "0.0028320000000000003`"},
    {"0.6562628784456348`", "0.1617695318943702`", "0.03214821069158214`", 
     "0.08150279116289134`", "0.049215202930296006`", "0.015958216737580827`",
      "0.003143168137644483`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.643433470103544*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"chiSquared", "=", 
   RowBox[{"reps", "*", 
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"Mean", ",", 
           RowBox[{"Transpose", "[", "ps", "]"}]}], "]"}], "-", "equiP"}], 
        ")"}], "^", "2"}], "/", "equiP"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"1", "-", 
  RowBox[{"CDF", "[", 
   RowBox[{
    RowBox[{"ChiSquareDistribution", "[", "6", "]"}], ",", "chiSquared"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"CDF", "[", 
  RowBox[{
   RowBox[{"ChiSquareDistribution", "[", "6", "]"}], ",", "chiSquared"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6435102651937037`*^9, 3.643510333554474*^9}, {
  3.643510407572608*^9, 3.643510422709073*^9}, {3.6435104781677017`*^9, 
  3.643510485111833*^9}, {3.643511190039124*^9, 3.643511334376863*^9}}],

Cell[BoxData["0.884756802474404`"], "Output",
 CellChangeTimes->{
  3.643509608143388*^9, 3.643510428636653*^9, {3.6435112201442327`*^9, 
   3.643511334900895*^9}}],

Cell[BoxData["0.11524319752559599`"], "Output",
 CellChangeTimes->{
  3.643509608143388*^9, 3.643510428636653*^9, {3.6435112201442327`*^9, 
   3.64351133491217*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NN", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmax", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxAlleles", "=", "1000000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"inipop", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", "NN", "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "all", " ", "individual", " ", "are", " ", "homozygous", " ", "for", " ", 
    "the", " ", "same", " ", "allele"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"reps", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ps", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", "reps", "}"}], ",", 
     RowBox[{"{", "7", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", "reps"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pops", "=", 
      RowBox[{"SimulatePop", "[", 
       RowBox[{
       "inipop", ",", "\[Gamma]", ",", "\[Mu]", ",", "NN", ",", "tmax"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ps", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
      "=", 
      RowBox[{"CalculatePs", "[", 
       RowBox[{"pops", "\[LeftDoubleBracket]", 
        RowBox[{"tmax", "+", "1"}], "\[RightDoubleBracket]"}], "]"}]}], 
     ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</users/janengelstaedter/dropbox/projects/RecAutomixis\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Save", "[", 
   RowBox[{
   "\"\<ps N100, mu0.001, gamma0.001, reps1000, tmax10000, iniHom.dat\>\"", 
    ",", "ps"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"{", 
   RowBox[{"sampleStates", ",", 
    RowBox[{"Map", "[", 
     RowBox[{"Mean", ",", 
      RowBox[{"Transpose", "[", "ps", "]"}]}], "]"}], ",", "equiP"}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.642826576473112*^9, 3.642826630925867*^9}, {
   3.6428266614580593`*^9, 3.6428266918136168`*^9}, {3.6428267274091043`*^9, 
   3.642826738433477*^9}, 3.6428267763467607`*^9, 3.642831048770359*^9, {
   3.642831863956843*^9, 3.6428318696342287`*^9}, {3.642832075570216*^9, 
   3.642832076937661*^9}, {3.642832205986931*^9, 3.642832210233672*^9}, 
   3.642832388045518*^9, {3.642832488360585*^9, 3.642832551025982*^9}, {
   3.64283260844475*^9, 3.642832678067692*^9}, 3.642832730335905*^9, {
   3.642832877140501*^9, 3.64283301751298*^9}, {3.6428331478552237`*^9, 
   3.6428331714432573`*^9}, 3.6428332102447767`*^9, 3.642833534096607*^9, 
   3.642833806011601*^9, {3.643410400155924*^9, 3.6434104357084227`*^9}, {
   3.6434105749796333`*^9, 3.643410594908209*^9}, {3.6434106708228703`*^9, 
   3.643410672247863*^9}, {3.643410711114464*^9, 3.643410711281295*^9}, {
   3.643410816309465*^9, 3.643410846471881*^9}, {3.643411097602491*^9, 
   3.6434111218266163`*^9}, {3.6434111986219473`*^9, 3.6434112341922503`*^9}, 
   3.643419835562203*^9, {3.643419946062365*^9, 3.643419956078924*^9}, {
   3.6434216618980703`*^9, 3.6434217151404676`*^9}, {3.643421746477776*^9, 
   3.643421753501465*^9}, {3.643421807448618*^9, 3.64342180750529*^9}, 
   3.643421897923378*^9, {3.6434220112815104`*^9, 3.643422012136746*^9}, {
   3.643422068971277*^9, 3.643422069026897*^9}, {3.643422186737123*^9, 
   3.643422199000778*^9}, 3.643425887242031*^9, {3.6434263109734373`*^9, 
   3.643426324348545*^9}, {3.643426417082343*^9, 3.643426417108176*^9}, {
   3.643426525375021*^9, 3.643426525814266*^9}, {3.643426762406892*^9, 
   3.6434267647630167`*^9}, {3.6434268861784277`*^9, 3.643426886862075*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"AA AA\"\>", "\<\"AA AB\"\>", "\<\"AA BC\"\>", "\<\"AA BB\"\>", \
"\<\"AB AB\"\>", "\<\"AB AC\"\>", "\<\"AB CD\"\>"},
    {"0.2370368000000002`", "0.13254139999999992`", "0.027053000000000008`", 
     "0.007806`", "0.4317287999999995`", "0.13971840000000002`", 
     "0.02411559999999999`"},
    {"0.24386971607336436`", "0.1380718254501091`", "0.02750373765048602`", 
     "0.006898206178873058`", "0.4183292734766251`", "0.13802228309937625`", 
     "0.027304958071166056`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.643434126349571*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NN", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmax", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxAlleles", "=", "1000000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"inipop", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomInteger", "[", "maxAlleles", "]"}], ",", 
        RowBox[{"RandomInteger", "[", "maxAlleles", "]"}]}], "}"}], ",", 
      RowBox[{"{", "NN", "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "all", " ", "individual", " ", "are", " ", "heterozygous", " ", "for", " ",
     "different", " ", "alleles"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"reps", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ps", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", "reps", "}"}], ",", 
     RowBox[{"{", "7", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", "reps"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pops", "=", 
      RowBox[{"SimulatePop", "[", 
       RowBox[{
       "inipop", ",", "\[Gamma]", ",", "\[Mu]", ",", "NN", ",", "tmax"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ps", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
      "=", 
      RowBox[{"CalculatePs", "[", 
       RowBox[{"pops", "\[LeftDoubleBracket]", 
        RowBox[{"tmax", "+", "1"}], "\[RightDoubleBracket]"}], "]"}]}], 
     ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</users/janengelstaedter/dropbox/projects/RecAutomixis\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Save", "[", 
   RowBox[{
   "\"\<ps N100, mu0.001, gamma0.001, reps1000, tmax10000, iniHet.dat\>\"", 
    ",", "ps"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"{", 
   RowBox[{"sampleStates", ",", 
    RowBox[{"Map", "[", 
     RowBox[{"Mean", ",", 
      RowBox[{"Transpose", "[", "ps", "]"}]}], "]"}], ",", "equiP"}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.642826576473112*^9, 3.642826630925867*^9}, {
   3.6428266614580593`*^9, 3.6428266918136168`*^9}, {3.6428267274091043`*^9, 
   3.642826738433477*^9}, 3.6428267763467607`*^9, 3.642831048770359*^9, {
   3.642831863956843*^9, 3.6428318696342287`*^9}, {3.642832075570216*^9, 
   3.642832076937661*^9}, {3.642832205986931*^9, 3.642832210233672*^9}, 
   3.642832388045518*^9, {3.642832488360585*^9, 3.642832551025982*^9}, {
   3.64283260844475*^9, 3.642832678067692*^9}, 3.642832730335905*^9, {
   3.642832877140501*^9, 3.64283301751298*^9}, {3.6428331478552237`*^9, 
   3.6428331714432573`*^9}, 3.6428332102447767`*^9, 3.642833534096607*^9, 
   3.642833806011601*^9, {3.643410400155924*^9, 3.6434104357084227`*^9}, {
   3.6434105749796333`*^9, 3.643410594908209*^9}, {3.6434106708228703`*^9, 
   3.643410672247863*^9}, {3.643410711114464*^9, 3.643410711281295*^9}, {
   3.643410816309465*^9, 3.643410846471881*^9}, {3.643411097602491*^9, 
   3.6434111218266163`*^9}, {3.6434111986219473`*^9, 3.6434112341922503`*^9}, 
   3.643419835562203*^9, {3.643419946062365*^9, 3.643419956078924*^9}, {
   3.6434216618980703`*^9, 3.6434217151404676`*^9}, {3.643421746477776*^9, 
   3.643421753501465*^9}, {3.643421807448618*^9, 3.64342180750529*^9}, 
   3.643421897923378*^9, {3.6434220112815104`*^9, 3.643422012136746*^9}, {
   3.643422068971277*^9, 3.643422069026897*^9}, {3.643422186737123*^9, 
   3.643422199000778*^9}, {3.6434258828747787`*^9, 3.643425948292943*^9}, {
   3.643426527653924*^9, 3.643426528974101*^9}, {3.643426835209803*^9, 
   3.643426837485622*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"AA AA\"\>", "\<\"AA AB\"\>", "\<\"AA BC\"\>", "\<\"AA BB\"\>", \
"\<\"AB AB\"\>", "\<\"AB AC\"\>", "\<\"AB CD\"\>"},
    {"0.22661040000000027`", "0.13368899999999986`", "0.027189799999999993`", 
     "0.007490199999999999`", "0.43544860000000035`", "0.1425232000000001`", 
     "0.027048800000000008`"},
    {"0.24386971607336436`", "0.1380718254501091`", "0.02750373765048602`", 
     "0.006898206178873058`", "0.4183292734766251`", "0.13802228309937625`", 
     "0.027304958071166056`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.643434081026538*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NN", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmax", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"inipop", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", "NN", "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "all", " ", "individual", " ", "are", " ", "homozygous", " ", "for", " ", 
    "the", " ", "same", " ", "allele"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxAlleles", "=", "1000000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"reps", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ps", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", "reps", "}"}], ",", 
     RowBox[{"{", "7", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", "reps"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pops", "=", 
      RowBox[{"SimulatePop", "[", 
       RowBox[{
       "inipop", ",", "\[Gamma]", ",", "\[Mu]", ",", "NN", ",", "tmax"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ps", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
      "=", 
      RowBox[{"CalculatePs", "[", 
       RowBox[{"pops", "\[LeftDoubleBracket]", 
        RowBox[{"tmax", "+", "1"}], "\[RightDoubleBracket]"}], "]"}]}], 
     ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</users/janengelstaedter/dropbox/projects/RecAutomixis\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Save", "[", 
   RowBox[{
   "\"\<ps N100, mu0.001, gamma0.01, reps10000, tmax10000, iniHom.dat\>\"", 
    ",", "ps"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"{", 
   RowBox[{"sampleStates", ",", 
    RowBox[{"Map", "[", 
     RowBox[{"Mean", ",", 
      RowBox[{"Transpose", "[", "ps", "]"}]}], "]"}], ",", "equiP"}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.642826576473112*^9, 3.642826630925867*^9}, {
   3.6428266614580593`*^9, 3.6428266918136168`*^9}, {3.6428267274091043`*^9, 
   3.642826738433477*^9}, 3.6428267763467607`*^9, 3.642831048770359*^9, {
   3.642831863956843*^9, 3.6428318696342287`*^9}, {3.642832075570216*^9, 
   3.642832076937661*^9}, {3.642832205986931*^9, 3.642832210233672*^9}, 
   3.642832388045518*^9, {3.642832488360585*^9, 3.642832551025982*^9}, {
   3.64283260844475*^9, 3.642832678067692*^9}, 3.642832730335905*^9, {
   3.642832877140501*^9, 3.64283301751298*^9}, {3.6428331478552237`*^9, 
   3.6428331714432573`*^9}, 3.6428332102447767`*^9, 3.642833534096607*^9, 
   3.642833806011601*^9, {3.643410400155924*^9, 3.6434104357084227`*^9}, {
   3.6434105749796333`*^9, 3.643410594908209*^9}, {3.6434106708228703`*^9, 
   3.643410672247863*^9}, {3.643410711114464*^9, 3.643410711281295*^9}, {
   3.643410816309465*^9, 3.643410846471881*^9}, {3.643411097602491*^9, 
   3.6434111218266163`*^9}, {3.6434111986219473`*^9, 3.6434112341922503`*^9}, 
   3.643419835562203*^9, {3.643419946062365*^9, 3.643419956078924*^9}, {
   3.6434216618980703`*^9, 3.6434217151404676`*^9}, {3.643421746477776*^9, 
   3.643421753501465*^9}, {3.643421807448618*^9, 3.64342180750529*^9}, 
   3.643421897923378*^9, {3.6434220112815104`*^9, 3.643422012136746*^9}, {
   3.643422068971277*^9, 3.643422069026897*^9}, {3.643422186737123*^9, 
   3.643422199000778*^9}, 3.643425887242031*^9, {3.643512237349352*^9, 
   3.643512254261204*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"AA AA\"\>", "\<\"AA AB\"\>", "\<\"AA BC\"\>", "\<\"AA BB\"\>", \
"\<\"AB AB\"\>", "\<\"AB AC\"\>", "\<\"AB CD\"\>"},
    {"0.6549553499999947`", "0.1610910000000027`", "0.032116579999999964`", 
     "0.08185385999999988`", "0.05041440999999992`", "0.016294480000000028`", 
     "0.0032743200000000037`"},
    {"0.6562628784456348`", "0.1617695318943702`", "0.03214821069158214`", 
     "0.08150279116289134`", "0.049215202930296006`", "0.015958216737580827`",
      "0.003143168137644483`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.643576851462401*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NN", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmax", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"inipop", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", "NN", "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "all", " ", "individual", " ", "are", " ", "homozygous", " ", "for", " ", 
    "the", " ", "same", " ", "allele"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxAlleles", "=", "1000000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"reps", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ps", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", "reps", "}"}], ",", 
     RowBox[{"{", "7", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", "reps"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pops", "=", 
      RowBox[{"SimulatePop", "[", 
       RowBox[{
       "inipop", ",", "\[Gamma]", ",", "\[Mu]", ",", "NN", ",", "tmax"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ps", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
      "=", 
      RowBox[{"CalculatePs", "[", 
       RowBox[{"pops", "\[LeftDoubleBracket]", 
        RowBox[{"tmax", "+", "1"}], "\[RightDoubleBracket]"}], "]"}]}], 
     ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</users/janengelstaedter/dropbox/projects/RecAutomixis\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Save", "[", 
   RowBox[{
   "\"\<ps N100, mu0.001, gamma0.1, reps10000, tmax10000, iniHom.dat\>\"", 
    ",", "ps"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"{", 
   RowBox[{"sampleStates", ",", 
    RowBox[{"Map", "[", 
     RowBox[{"Mean", ",", 
      RowBox[{"Transpose", "[", "ps", "]"}]}], "]"}], ",", "equiP"}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.642826576473112*^9, 3.642826630925867*^9}, {
   3.6428266614580593`*^9, 3.6428266918136168`*^9}, {3.6428267274091043`*^9, 
   3.642826738433477*^9}, 3.6428267763467607`*^9, 3.642831048770359*^9, {
   3.642831863956843*^9, 3.6428318696342287`*^9}, {3.642832075570216*^9, 
   3.642832076937661*^9}, {3.642832205986931*^9, 3.642832210233672*^9}, 
   3.642832388045518*^9, {3.642832488360585*^9, 3.642832551025982*^9}, {
   3.64283260844475*^9, 3.642832678067692*^9}, 3.642832730335905*^9, {
   3.642832877140501*^9, 3.64283301751298*^9}, {3.6428331478552237`*^9, 
   3.6428331714432573`*^9}, 3.6428332102447767`*^9, 3.642833534096607*^9, 
   3.642833806011601*^9, {3.643410400155924*^9, 3.6434104357084227`*^9}, {
   3.6434105749796333`*^9, 3.643410594908209*^9}, {3.6434106708228703`*^9, 
   3.643410672247863*^9}, {3.643410711114464*^9, 3.643410711281295*^9}, {
   3.643410816309465*^9, 3.643410846471881*^9}, {3.643411097602491*^9, 
   3.6434111218266163`*^9}, {3.6434111986219473`*^9, 3.6434112341922503`*^9}, 
   3.643419835562203*^9, {3.643419946062365*^9, 3.643419956078924*^9}, {
   3.6434216618980703`*^9, 3.6434217151404676`*^9}, {3.643421746477776*^9, 
   3.643421753501465*^9}, {3.643421807448618*^9, 3.64342180750529*^9}, 
   3.643421897923378*^9, {3.6434220112815104`*^9, 3.643422012136746*^9}, {
   3.643422068971277*^9, 3.643422069026897*^9}, {3.643422186737123*^9, 
   3.643422199000778*^9}, 3.643425887242031*^9, {3.643512237349352*^9, 
   3.643512254261204*^9}, {3.643669637251444*^9, 3.6436696407227573`*^9}, {
   3.6569876419953623`*^9, 3.656987655857616*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"AA AA\"\>", "\<\"AA AB\"\>", "\<\"AA BC\"\>", "\<\"AA BB\"\>", \
"\<\"AB AB\"\>", "\<\"AB AC\"\>", "\<\"AB CD\"\>"},
    {"0.6549553499999947`", "0.1610910000000027`", "0.032116579999999964`", 
     "0.08185385999999988`", "0.05041440999999992`", "0.016294480000000028`", 
     "0.0032743200000000037`"},
    {"0.6562628784456348`", "0.1617695318943702`", "0.03214821069158214`", 
     "0.08150279116289134`", "0.049215202930296006`", "0.015958216737580827`",
      "0.003143168137644483`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.643576851462401*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Screening the parameter space to compare with analytical predictions\
\>", "Subsubsection",
 CellChangeTimes->{{3.656979331112385*^9, 3.656979356395067*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Mu]values", "=", 
   RowBox[{"10", "^", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "6"}], ",", 
      RowBox[{"-", "5"}], ",", 
      RowBox[{"-", "4"}]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NN", "=", 
   RowBox[{"10", "^", "3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]values", "=", 
   RowBox[{"10", "^", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "7"}], ",", 
      RowBox[{"-", "1"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmax", "=", "50000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxAlleles", "=", "1000000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"inipop", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "maxAlleles"}], "}"}], "]"}], ",", 
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "maxAlleles"}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", "NN", "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "all", " ", "individual", " ", "are", " ", "homozygous", " ", "for", " ", 
    "the", " ", "same", " ", "allele"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"reps", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"results", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
     "\"\<gamma\>\"", ",", "\"\<mu\>\"", ",", "\"\<N\>\"", ",", "\"\<rep\>\"",
       ",", "\"\<gen\>\"", ",", "\"\<p1\>\"", ",", "\"\<p2\>\"", ",", 
      "\"\<p3\>\"", ",", "\"\<p4\>\"", ",", "\"\<p5\>\"", ",", "\"\<p6\>\"", 
      ",", "\"\<p7\>\"", ",", "\"\<HI\>\"", ",", "\"\<HT\>\"", ",", 
      "\"\<FIS\>\"", ",", "\"\<HG\>\""}], "}"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"samplesize", "=", "200"}], ";"}]}], "Input",
 CellChangeTimes->{{3.656979802660729*^9, 3.6569798434604893`*^9}, {
  3.656981423180915*^9, 3.656981434332615*^9}, {3.6569817781283627`*^9, 
  3.656981881275826*^9}, {3.6569819124794903`*^9, 3.656981919251944*^9}, {
  3.656982031791312*^9, 3.6569820446674013`*^9}, {3.6569820853187017`*^9, 
  3.656982090172002*^9}, {3.65698283266208*^9, 3.656982839961445*^9}, {
  3.656985163513282*^9, 3.6569851878554497`*^9}, {3.6569860644134817`*^9, 
  3.6569860683567457`*^9}, {3.6569861065482693`*^9, 3.6569861571609077`*^9}, {
  3.656987539070786*^9, 3.656987560321863*^9}, {3.656987661663656*^9, 
  3.656987677105654*^9}, {3.656993646682713*^9, 3.656993656247837*^9}, {
  3.6569937229708233`*^9, 3.656993723431974*^9}, {3.656994156690151*^9, 
  3.6569941575120573`*^9}, {3.657857082619454*^9, 3.657857101416278*^9}, {
  3.6578575703502607`*^9, 3.65785757327104*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</users/janengelstaedter/dropbox/projects/RecAutomixis\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", "reps"}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"pops", "=", 
         RowBox[{"SimulatePop", "[", 
          RowBox[{
          "inipop", ",", "\[Gamma]", ",", "\[Mu]", ",", "NN", ",", "tmax"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ps", "=", 
         RowBox[{"EstimatePs", "[", 
          RowBox[{
           RowBox[{"pops", "\[LeftDoubleBracket]", 
            RowBox[{"tmax", "+", "1"}], "\[RightDoubleBracket]"}], ",", 
           "samplesize"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"results", "=", 
         RowBox[{"Append", "[", 
          RowBox[{"results", ",", 
           RowBox[{"N", "[", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "\[Gamma]", ",", "\[Mu]", ",", "NN", ",", "i", ",", "tmax"}], 
               "}"}], ",", "ps", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"HetI", "[", "ps", "]"}], ",", 
                RowBox[{"HetT", "[", 
                 RowBox[{"ps", ",", "NN"}], "]"}], ",", 
                RowBox[{"FIT", "[", 
                 RowBox[{"ps", ",", "NN"}], "]"}], ",", 
                RowBox[{"HetG", "[", "ps", "]"}]}], "}"}]}], "]"}], "]"}]}], 
          "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{
      "\"\<Neutral diversity screen samplesize=200 tmax=50000 \
randomIniPop.xlsx\>\"", ",", "results"}], "]"}], ";"}], "\[IndentingNewLine]",
     ",", 
    RowBox[{"{", 
     RowBox[{"\[Mu]", ",", "\[Mu]values"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Gamma]", ",", "\[Gamma]values"}], "}"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.656979403505506*^9, 3.656979496987492*^9}, {
   3.656981383645615*^9, 3.656981468531423*^9}, {3.6569820484514513`*^9, 
   3.656982222859928*^9}, {3.656982867238758*^9, 3.6569828700526457`*^9}, {
   3.656982933957632*^9, 3.656982935356243*^9}, {3.656985180656698*^9, 
   3.6569851821529512`*^9}, {3.6569852626017447`*^9, 3.656985266254273*^9}, {
   3.656986091262743*^9, 3.6569861007458467`*^9}, {3.656987564388833*^9, 
   3.656987627971697*^9}, {3.656993719387289*^9, 3.65699373922542*^9}, {
   3.656993880934084*^9, 3.656993882587977*^9}, {3.657857073277504*^9, 
   3.657857076622102*^9}, 3.657857107317952*^9, {3.657857677719923*^9, 
   3.657857687766217*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], ":", 
  " ", "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.657867423916984*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], ":", 
  " ", "\<\"Indeterminate expression \[NoBreak]\\!\\(0\\\\ ComplexInfinity\\)\
\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6578674240727253`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], ":", 
  " ", "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.657889553258276*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], ":", 
  " ", "\<\"Indeterminate expression \[NoBreak]\\!\\(0\\\\ ComplexInfinity\\)\
\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.657889553304206*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], ":", 
  " ", "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6579116648676357`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Power :: \
infy\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6579116649903193`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], ":", 
  " ", "\<\"Indeterminate expression \[NoBreak]\\!\\(0\\\\ ComplexInfinity\\)\
\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6579116650080423`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Infinity :: \
indet\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.657911665030682*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</users/janengelstaedter/dropbox/projects/RecAutomixis\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"results", "=", 
   RowBox[{
    RowBox[{
    "Import", "[", 
     "\"\<Neutral diversity screen samplesize=200 tmax=50000 \
randomIniPop.xlsx\>\"", "]"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6573211347640467`*^9, 3.6573211412439337`*^9}, {
   3.657321174555182*^9, 3.6573211756782293`*^9}, {3.6573213149571457`*^9, 
   3.657321320870508*^9}, 3.658534184353249*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"allMeans", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
     "\"\<gamma\>\"", ",", "\"\<mu\>\"", ",", "\"\<p1\>\"", ",", "\"\<p2\>\"",
       ",", "\"\<p3\>\"", ",", "\"\<p4\>\"", ",", "\"\<p5\>\"", ",", 
      "\"\<p6\>\"", ",", "\"\<p7\>\"", ",", "\"\<HI\>\"", ",", "\"\<HT\>\"", 
      ",", "\"\<FIS\>\"", ",", "\"\<HG\>\""}], "}"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"allMeans", ",", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
          "\[Gamma]values", "\[LeftDoubleBracket]", "i", 
           "\[RightDoubleBracket]"}], ",", 
          RowBox[{
          "\[Mu]values", "\[LeftDoubleBracket]", "j", 
           "\[RightDoubleBracket]"}]}], "}"}], ",", 
        RowBox[{"Mean", "[", 
         RowBox[{
          RowBox[{"Select", "[", 
           RowBox[{"results", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "\[Equal]", 
                RowBox[{
                "\[Gamma]values", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}]}], " ", "&&", " ", 
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                "\[Equal]", 
                RowBox[{
                "\[Mu]values", "\[LeftDoubleBracket]", "j", 
                 "\[RightDoubleBracket]"}]}]}], ")"}], "&"}]}], "]"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", 
           RowBox[{"6", ";;", "16"}]}], "\[RightDoubleBracket]"}], "]"}]}], 
       "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"allMeans", "\[LeftDoubleBracket]", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "12"}], "\[RightDoubleBracket]"}], "=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"allMeans", "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "11"}], "\[RightDoubleBracket]"}], "-", 
        RowBox[{"allMeans", "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "10"}], "\[RightDoubleBracket]"}]}], ")"}],
       "/", 
      RowBox[{"allMeans", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "11"}], "\[RightDoubleBracket]"}]}]}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{"re", "-", 
     RowBox[{
     "calculate", " ", "means", " ", "for", " ", "FIS", " ", "based", " ", 
      "on", " ", "means", " ", "for", " ", "HI", " ", "and", " ", 
      RowBox[{"HT", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "1", ",", 
     RowBox[{"Length", "[", "\[Mu]values", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "\[Gamma]values", "]"}]}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.657321429940331*^9, 3.657321612785235*^9}, {
   3.6573217479743357`*^9, 3.657321784458786*^9}, {3.657321844199195*^9, 
   3.6573218796027308`*^9}, {3.657322222595667*^9, 3.6573222360985117`*^9}, {
   3.6573222762984858`*^9, 3.657322276794751*^9}, {3.657322321129594*^9, 
   3.6573223789020033`*^9}, 3.657322463091957*^9, {3.657325062642674*^9, 
   3.6573250673634157`*^9}, {3.65732795265189*^9, 3.657328099797263*^9}, {
   3.657330931048752*^9, 3.65733093252835*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"allMeans", "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.657322472417449*^9, 3.657322477856069*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"gamma\"\>", "\<\"mu\"\>", "\<\"p1\"\>", "\<\"p2\"\>", "\<\"p3\"\>", \
"\<\"p4\"\>", "\<\"p5\"\>", "\<\"p6\"\>", "\<\"p7\"\>", "\<\"HI\"\>", "\<\"HT\
\"\>", "\<\"FIS\"\>", "\<\"HG\"\>"},
    {
     FractionBox["1", "10000000"], 
     FractionBox["1", "1000000"], "0.02`", "0.00005`", "0.`", "0.`", 
     "0.9693999999999999`", "0.010549999999999997`", "0.`", "0.979975`", 
     "0.4926375`", 
     RowBox[{"-", "0.9892415822993582`"}], "0.010599999999999998`"},
    {
     FractionBox["1", "1000000"], 
     FractionBox["1", "1000000"], "0.03`", "0.`", "0.`", "0.`", "0.9667`", 
     "0.0033`", "0.`", "0.97`", "0.48582499999999995`", 
     RowBox[{"-", "0.9966037153295941`"}], "0.0033`"},
    {
     FractionBox["1", "100000"], 
     FractionBox["1", "1000000"], "0.29025`", "0.0070999999999999995`", "0.`",
      "0.00005`", "0.6988`", "0.0038`", "0.`", "0.7061499999999999`", 
     "0.35585`", 
     RowBox[{"-", "0.9844035408177602`"}], "0.01095`"},
    {
     FractionBox["1", "10000"], 
     FractionBox["1", "1000000"], "0.9603`", "0.0068`", "0.`", "0.`", 
     "0.0329`", "0.`", "0.`", "0.0363`", "0.01985`", 
     RowBox[{"-", "0.8287153652392947`"}], "0.0068`"},
    {
     FractionBox["1", "1000"], 
     FractionBox["1", "1000000"], "0.9884499999999999`", "0.00695`", "0.`", 
     "0.0013`", "0.0033`", "0.`", "0.`", "0.006774999999999999`", 
     "0.006424999999999999`", 
     RowBox[{"-", "0.05447470817120617`"}], "0.00825`"},
    {
     FractionBox["1", "100"], 
     FractionBox["1", "1000000"], "0.9969499999999999`", "0.`", "0.`", 
     "0.0030499999999999998`", "0.`", "0.`", "0.`", "0.`", 
     "0.0030499999999999998`", "1.`", "0.0030499999999999998`"},
    {
     FractionBox["1", "10"], 
     FractionBox["1", "1000000"], "0.99995`", "0.00005`", "0.`", "0.`", "0.`",
      "0.`", "0.`", "0.000025`", "0.000025`", "0.`", "0.00005`"},
    {
     FractionBox["1", "10000000"], 
     FractionBox["1", "100000"], "0.`", "0.`", "0.`", "0.`", "0.94715`", 
     "0.05274999999999999`", "0.0001`", "1.`", "0.5132374999999999`", 
     RowBox[{"-", "0.9484156944884194`"}], "0.052849999999999994`"},
    {
     FractionBox["1", "1000000"], 
     FractionBox["1", "100000"], "0.03`", "0.`", "0.`", "0.`", 
     "0.9563000000000001`", "0.0137`", "0.`", "0.97`", "0.488425`", 
     RowBox[{"-", "0.9859753288631827`"}], "0.0137`"},
    {
     FractionBox["1", "100000"], 
     FractionBox["1", "100000"], "0.17355`", "0.01645`", "0.00005`", 
     "0.00005`", "0.7841`", "0.0258`", "0.`", "0.8181499999999999`", 
     "0.419725`", 
     RowBox[{"-", "0.9492524867472748`"}], "0.042350000000000006`"},
    {
     FractionBox["1", "10000"], 
     FractionBox["1", "100000"], "0.84375`", "0.048049999999999995`", "0.`", 
     "0.00505`", "0.10074999999999999`", "0.0024000000000000002`", "0.`", 
     "0.127175`", "0.08125`", 
     RowBox[{"-", "0.5652307692307693`"}], "0.05550000000000001`"},
    {
     FractionBox["1", "1000"], 
     FractionBox["1", "100000"], "0.9605`", "0.0263`", "0.00015`", 
     "0.0037999999999999996`", "0.009149999999999998`", "0.0001`", "0.`", 
     "0.022475000000000002`", "0.02175`", 
     RowBox[{"-", "0.03333333333333349`"}], "0.030350000000000002`"},
    {
     FractionBox["1", "100"], 
     FractionBox["1", "100000"], "0.992`", "0.00415`", "0.0001`", "0.00365`", 
     "0.0001`", "0.`", "0.`", "0.0022250000000000004`", "0.005875`", 
     "0.6212765957446807`", "0.0079`"},
    {
     FractionBox["1", "10"], 
     FractionBox["1", "100000"], "0.9765`", "0.0009`", "0.`", 
     "0.022600000000000002`", "0.`", "0.`", "0.`", "0.00045`", "0.02305`", 
     "0.9804772234273319`", "0.0235`"},
    {
     FractionBox["1", "10000000"], 
     FractionBox["1", "10000"], "0.`", "0.`", "0.`", "0.`", 
     "0.6961500000000003`", "0.26674999999999993`", "0.03709999999999999`", 
     "1.`", "0.5852375000000002`", 
     RowBox[{"-", "0.7087080031611093`"}], "0.3038499999999999`"},
    {
     FractionBox["1", "1000000"], 
     FractionBox["1", "10000"], "0.`", "0.`", "0.`", "0.`", 
     "0.7136500000000001`", "0.23585`", "0.050499999999999996`", "1.`", 
     "0.5842125`", 
     RowBox[{"-", "0.7117059289214112`"}], "0.28635`"},
    {
     FractionBox["1", "100000"], 
     FractionBox["1", "10000"], "0.05`", "0.0401`", "0.00385`", "0.`", 
     "0.6434499999999997`", "0.22699999999999995`", "0.03559999999999999`", 
     "0.9280250000000001`", "0.551475`", 
     RowBox[{"-", "0.6828052042250329`"}], "0.30654999999999993`"},
    {
     FractionBox["1", "10000"], 
     FractionBox["1", "10000"], "0.25165`", "0.1637`", 
     "0.037750000000000006`", "0.0068000000000000005`", 
     "0.37410000000000004`", "0.1372`", "0.0288`", "0.640825`", "0.44515`", 
     RowBox[{"-", "0.4395709311468044`"}], "0.37424999999999997`"},
    {
     FractionBox["1", "1000"], 
     FractionBox["1", "10000"], "0.64715`", "0.15985`", 
     "0.032900000000000006`", "0.09155`", "0.048949999999999994`", "0.01575`",
      "0.00385`", "0.164925`", "0.24451250000000002`", "0.3254946066152038`", 
     "0.30389999999999995`"},
    {
     FractionBox["1", "100"], 
     FractionBox["1", "10000"], "0.8106`", "0.025099999999999997`", "0.006`", 
     "0.1573`", "0.0007000000000000001`", "0.0002`", "0.0001`", "0.01655`", 
     "0.17645000000000002`", "0.9062057240011334`", "0.1887`"},
    {
     FractionBox["1", "10"], 
     FractionBox["1", "10000"], "0.8421`", "0.0033`", "0.00065`", "0.1539`", 
     "0.00005`", "0.`", "0.`", "0.002025`", "0.15622500000000003`", 
     "0.9870379260681709`", "0.15785`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6573224446562967`*^9, 3.657322478496694*^9}, 
   3.65732509232038*^9, 3.658534202439885*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["New screening with long burn-in period", "Subsubsection",
 CellChangeTimes->{{3.656979331112385*^9, 3.656979356395067*^9}, {
  3.6585355890461407`*^9, 3.658535601276692*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Mu]values", "=", 
   RowBox[{"10", "^", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "6"}], ",", 
      RowBox[{"-", "5"}], ",", 
      RowBox[{"-", "4"}]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NN", "=", 
   RowBox[{"10", "^", "3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]values", "=", 
   RowBox[{"10", "^", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "7"}], ",", 
      RowBox[{"-", "1"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"interval", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"burnin", "=", "100000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxAlleles", "=", "1000000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"inipop", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "maxAlleles"}], "}"}], "]"}], ",", 
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "maxAlleles"}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", "NN", "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "all", " ", "individual", " ", "are", " ", "homozygous", " ", "for", " ", 
    "the", " ", "same", " ", "allele"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"reps", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"results", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
     "\"\<gamma\>\"", ",", "\"\<mu\>\"", ",", "\"\<N\>\"", ",", "\"\<rep\>\"",
       ",", "\"\<gen\>\"", ",", "\"\<p1\>\"", ",", "\"\<p2\>\"", ",", 
      "\"\<p3\>\"", ",", "\"\<p4\>\"", ",", "\"\<p5\>\"", ",", "\"\<p6\>\"", 
      ",", "\"\<p7\>\"", ",", "\"\<HI\>\"", ",", "\"\<HT\>\"", ",", 
      "\"\<FIS\>\"", ",", "\"\<HG\>\""}], "}"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"samplesize", "=", "500"}], ";"}]}], "Input",
 CellChangeTimes->{{3.656979802660729*^9, 3.6569798434604893`*^9}, {
   3.656981423180915*^9, 3.656981434332615*^9}, {3.6569817781283627`*^9, 
   3.656981881275826*^9}, {3.6569819124794903`*^9, 3.656981919251944*^9}, {
   3.656982031791312*^9, 3.6569820446674013`*^9}, {3.6569820853187017`*^9, 
   3.656982090172002*^9}, {3.65698283266208*^9, 3.656982839961445*^9}, {
   3.656985163513282*^9, 3.6569851878554497`*^9}, {3.6569860644134817`*^9, 
   3.6569860683567457`*^9}, {3.6569861065482693`*^9, 
   3.6569861571609077`*^9}, {3.656987539070786*^9, 3.656987560321863*^9}, {
   3.656987661663656*^9, 3.656987677105654*^9}, {3.656993646682713*^9, 
   3.656993656247837*^9}, {3.6569937229708233`*^9, 3.656993723431974*^9}, {
   3.656994156690151*^9, 3.6569941575120573`*^9}, {3.657857082619454*^9, 
   3.657857101416278*^9}, {3.6578575703502607`*^9, 3.65785757327104*^9}, {
   3.658535624718808*^9, 3.658535674031666*^9}, {3.658535714120009*^9, 
   3.658535714275564*^9}, 3.658535799285668*^9, 3.6585359770311737`*^9, {
   3.658536097331828*^9, 3.658536101527072*^9}, {3.658540584972411*^9, 
   3.658540590899529*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</users/janengelstaedter/dropbox/projects/RecAutomixis\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<JLink`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ReinstallJava", "[", 
  RowBox[{"JVMArguments", " ", "\[Rule]", " ", "\"\<-Xmx1024m\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pops", "=", 
      RowBox[{"SimulatePop", "[", 
       RowBox[{
       "inipop", ",", "\[Gamma]", ",", "\[Mu]", ",", "NN", ",", "burnin"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"t", "=", "burnin"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", "reps"}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"pops", "=", 
         RowBox[{"SimulatePop", "[", 
          RowBox[{
           RowBox[{"pops", "\[LeftDoubleBracket]", 
            RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], ",", "\[Gamma]", 
           ",", "\[Mu]", ",", "NN", ",", "interval"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"t", "=", 
         RowBox[{"t", "+", "interval"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ps", "=", 
         RowBox[{"EstimatePs", "[", 
          RowBox[{
           RowBox[{"pops", "\[LeftDoubleBracket]", 
            RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], ",", 
           "samplesize"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"results", "=", 
         RowBox[{"Append", "[", 
          RowBox[{"results", ",", 
           RowBox[{"N", "[", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "\[Gamma]", ",", "\[Mu]", ",", "NN", ",", "i", ",", "t"}], 
               "}"}], ",", "ps", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"HetI", "[", "ps", "]"}], ",", 
                RowBox[{"HetT", "[", 
                 RowBox[{"ps", ",", "NN"}], "]"}], ",", 
                RowBox[{"FIT", "[", 
                 RowBox[{"ps", ",", "NN"}], "]"}], ",", 
                RowBox[{"HetG", "[", "ps", "]"}]}], "}"}]}], "]"}], "]"}]}], 
          "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{
      "\"\<Neutral diversity screen samplesize=500 sampleEvery1000gen \
randomIniPop Rep10.xlsx\>\"", ",", "results"}], "]"}], ";"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"\[Mu]", ",", "\[Mu]values"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Gamma]", ",", "\[Gamma]values"}], "}"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</users/janengelstaedter/dropbox/projects/RecAutomixis\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"results", "=", 
   RowBox[{
    RowBox[{
    "Import", "[", 
     "\"\<Neutral diversity screen samplesize=500 sampleEvery1000gen \
randomIniPop Rep2.xlsx\>\"", "]"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6573211347640467`*^9, 3.6573211412439337`*^9}, {
   3.657321174555182*^9, 3.6573211756782293`*^9}, {3.6573213149571457`*^9, 
   3.657321320870508*^9}, 3.658534184353249*^9, 3.658778479993626*^9, {
   3.659037780367386*^9, 3.6590377810607767`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"allMeans", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
     "\"\<gamma\>\"", ",", "\"\<mu\>\"", ",", "\"\<p1\>\"", ",", "\"\<p2\>\"",
       ",", "\"\<p3\>\"", ",", "\"\<p4\>\"", ",", "\"\<p5\>\"", ",", 
      "\"\<p6\>\"", ",", "\"\<p7\>\"", ",", "\"\<HI\>\"", ",", "\"\<HT\>\"", 
      ",", "\"\<FIS\>\"", ",", "\"\<HG\>\""}], "}"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"allMeans", ",", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
          "\[Gamma]values", "\[LeftDoubleBracket]", "i", 
           "\[RightDoubleBracket]"}], ",", 
          RowBox[{
          "\[Mu]values", "\[LeftDoubleBracket]", "j", 
           "\[RightDoubleBracket]"}]}], "}"}], ",", 
        RowBox[{"Mean", "[", 
         RowBox[{
          RowBox[{"Select", "[", 
           RowBox[{"results", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "\[Equal]", 
                RowBox[{
                "\[Gamma]values", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}]}], " ", "&&", " ", 
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                "\[Equal]", 
                RowBox[{
                "\[Mu]values", "\[LeftDoubleBracket]", "j", 
                 "\[RightDoubleBracket]"}]}]}], ")"}], "&"}]}], "]"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", 
           RowBox[{"6", ";;", "16"}]}], "\[RightDoubleBracket]"}], "]"}]}], 
       "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"allMeans", "\[LeftDoubleBracket]", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "12"}], "\[RightDoubleBracket]"}], "=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"allMeans", "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "11"}], "\[RightDoubleBracket]"}], "-", 
        RowBox[{"allMeans", "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "10"}], "\[RightDoubleBracket]"}]}], ")"}],
       "/", 
      RowBox[{"allMeans", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "11"}], "\[RightDoubleBracket]"}]}]}], ";"}], 
   RowBox[{"(*", " ", 
    RowBox[{"re", "-", 
     RowBox[{
     "calculate", " ", "means", " ", "for", " ", "FIS", " ", "based", " ", 
      "on", " ", "means", " ", "for", " ", "HI", " ", "and", " ", 
      RowBox[{"HT", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "1", ",", 
     RowBox[{"Length", "[", "\[Mu]values", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "\[Gamma]values", "]"}]}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.657321429940331*^9, 3.657321612785235*^9}, {
   3.6573217479743357`*^9, 3.657321784458786*^9}, {3.657321844199195*^9, 
   3.6573218796027308`*^9}, {3.657322222595667*^9, 3.6573222360985117`*^9}, {
   3.6573222762984858`*^9, 3.657322276794751*^9}, {3.657322321129594*^9, 
   3.6573223789020033`*^9}, 3.657322463091957*^9, {3.657325062642674*^9, 
   3.6573250673634157`*^9}, {3.65732795265189*^9, 3.657328099797263*^9}, {
   3.657330931048752*^9, 3.65733093252835*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"allMeans", "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.657322472417449*^9, 3.657322477856069*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"gamma\"\>", "\<\"mu\"\>", "\<\"p1\"\>", "\<\"p2\"\>", "\<\"p3\"\>", \
"\<\"p4\"\>", "\<\"p5\"\>", "\<\"p6\"\>", "\<\"p7\"\>", "\<\"HI\"\>", "\<\"HT\
\"\>", "\<\"FIS\"\>", "\<\"HG\"\>"},
    {
     FractionBox["1", "10000000"], 
     FractionBox["1", "1000000"], "0.`", "0.`", "0.`", "0.`", 
     "0.9973800000000002`", "0.00262`", "0.`", "1.`", "0.500655`", 
     RowBox[{"-", "0.9973834277097005`"}], "0.00262`"},
    {
     FractionBox["1", "1000000"], 
     FractionBox["1", "1000000"], "0.135366`", "0.002542`", "2.`*^-6", "0.`", 
     "0.858662`", "0.003424`", "4.`*^-6", "0.8633620000000001`", "0.433176`", 
     
     RowBox[{"-", "0.993097493859309`"}], "0.005972`"},
    {
     FractionBox["1", "100000"], 
     FractionBox["1", "1000000"], "0.9979960000000001`", 
     "0.0017079999999999999`", "0.`", "0.`", "0.00029600000000000004`", "0.`",
      "0.`", "0.0011500000000000002`", "0.001002`", 
     RowBox[{"-", "0.1477045908183634`"}], "0.0017079999999999999`"},
    {
     FractionBox["1", "10000"], 
     FractionBox["1", "1000000"], "0.9823440000000001`", "0.005292`", "0.`", 
     "0.000266`", "0.011712`", "0.000386`", "0.`", "0.014744000000000002`", 
     "0.009057500000000001`", 
     RowBox[{"-", "0.6278222467568313`"}], "0.005944`"},
    {
     FractionBox["1", "1000"], 
     FractionBox["1", "1000000"], "0.996118`", "0.002048`", "0.`", 
     "0.001738`", "0.000096`", "0.`", "0.`", "0.0011200000000000001`", 
     "0.00281`", "0.6014234875444839`", "0.0037859999999999994`"},
    {
     FractionBox["1", "100"], 
     FractionBox["1", "1000000"], "0.998072`", "0.000338`", "0.`", 
     "0.001586`", "4.`*^-6", "0.`", "0.`", "0.00017299999999999998`", 
     "0.001757`", "0.9015367103016506`", "0.001924`"},
    {
     FractionBox["1", "10"], 
     FractionBox["1", "1000000"], "0.9971800000000001`", "0.000018`", "0.`", 
     "0.0028020000000000002`", "0.`", "0.`", "0.`", "9.`*^-6", "0.002811`", 
     "0.9967982924226255`", "0.00282`"},
    {
     FractionBox["1", "10000000"], 
     FractionBox["1", "100000"], "0.`", "0.`", "0.`", "0.`", 
     "0.9603160000000007`", "0.039437999999999945`", "0.000246`", "1.`", 
     "0.5099824999999996`", 
     RowBox[{"-", "0.9608515978489476`"}], "0.03968399999999995`"},
    {
     FractionBox["1", "1000000"], 
     FractionBox["1", "100000"], "0.0002`", "0.001328`", "0.`", "0.`", 
     "0.9570540000000003`", "0.039805999999999994`", "0.001612`", 
     "0.9991359999999999`", "0.5106574999999995`", 
     RowBox[{"-", "0.9565677582332597`"}], "0.042745999999999985`"},
    {
     FractionBox["1", "100000"], 
     FractionBox["1", "100000"], "0.278346`", "0.025200000000000004`", 
     "0.00089`", "0.`", "0.6664659999999999`", "0.028748000000000006`", 
     "0.00035`", "0.7086089999999999`", "0.368634`", 
     RowBox[{"-", "0.9222562216181901`"}], "0.055188`"},
    {
     FractionBox["1", "10000"], 
     FractionBox["1", "100000"], "0.860286`", "0.039814`", "0.000832`", 
     "0.000686`", "0.09438999999999999`", "0.003804`", "0.000188`", 
     "0.11870500000000002`", "0.071661`", 
     RowBox[{"-", "0.6564798146830216`"}], "0.045323999999999996`"},
    {
     FractionBox["1", "1000"], 
     FractionBox["1", "100000"], "0.9335359999999999`", 
     "0.036601999999999996`", "0.00028000000000000003`", "0.018484`", 
     "0.010632`", "0.00046600000000000005`", "0.`", "0.029539000000000003`", 
     "0.0427305`", "0.30871391628930145`", "0.055832`"},
    {
     FractionBox["1", "100"], 
     FractionBox["1", "100000"], "0.9758479999999999`", "0.003402`", 
     "0.00017400000000000003`", "0.02049`", "0.000086`", "0.`", "0.`", 
     "0.0018740000000000002`", "0.022408`", "0.9163691538736166`", 
     "0.024066000000000004`"},
    {
     FractionBox["1", "10"], 
     FractionBox["1", "100000"], "0.9793399999999999`", 
     "0.00033999999999999997`", "6.`*^-6", "0.020314`", "0.`", "0.`", "0.`", 
     "0.00017299999999999998`", "0.02049`", "0.9915568570034163`", "0.02066`"},
    {
     FractionBox["1", "10000000"], 
     FractionBox["1", "10000"], "0.`", "0.`", "0.`", "0.`", 
     "0.7119640000000002`", "0.23969399999999963`", "0.048342`", "1.`", 
     "0.5840945000000003`", 
     RowBox[{"-", "0.7120517313551138`"}], "0.28803599999999985`"},
    {
     FractionBox["1", "1000000"], 
     FractionBox["1", "10000"], "0.00022`", "0.0006000000000000001`", 
     "0.000188`", "0.`", "0.7178760000000011`", "0.23761199999999996`", 
     "0.043504000000000015`", "0.9993860000000001`", "0.5811389999999997`", 
     RowBox[{"-", "0.7197021710812741`"}], "0.28190400000000043`"},
    {
     FractionBox["1", "100000"], 
     FractionBox["1", "10000"], "0.019868000000000004`", "0.017546`", 
     "0.004192`", "0.00004`", "0.68804`", "0.22458`", "0.045734000000000004`",
      "0.969223`", "0.571194`", 
     RowBox[{"-", "0.6968368015070187`"}], "0.29209199999999996`"},
    {
     FractionBox["1", "10000"], 
     FractionBox["1", "10000"], "0.23525`", "0.143584`", "0.024878`", 
     "0.004186`", "0.42719399999999996`", "0.14173`", "0.023178`", 
     "0.6763330000000001`", "0.4439285`", 
     RowBox[{"-", "0.5235178638001391`"}], "0.337556`"},
    {
     FractionBox["1", "1000"], 
     FractionBox["1", "10000"], "0.6408039999999999`", "0.166128`", 
     "0.03596799999999999`", "0.083612`", "0.052202`", 
     "0.017193999999999997`", "0.004092`", "0.174536`", "0.2457325`", 
     "0.2897317204683955`", "0.30699400000000004`"},
    {
     FractionBox["1", "100"], 
     FractionBox["1", "10000"], "0.8179979999999999`", 
     "0.027892000000000004`", "0.005358000000000001`", "0.147726`", 
     "0.000756`", "0.000222`", "0.000048`", "0.017651`", "0.1676225`", 
     "0.8946979075004847`", "0.18124600000000002`"},
    {
     FractionBox["1", "10"], 
     FractionBox["1", "10000"], "0.8226100000000001`", 
     "0.0029880000000000006`", "0.0006979999999999999`", 
     "0.17367399999999997`", "0.000022`", "4.`*^-6", "4.`*^-6", 
     "0.0018730000000000003`", "0.175884`", "0.989350935844079`", 
     "0.177368`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6573224446562967`*^9, 3.657322478496694*^9}, 
   3.65732509232038*^9, 3.658534202439885*^9, 3.658778528551178*^9}]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Simpler neutral evolution model", "Section",
 CellChangeTimes->{{3.657501765979186*^9, 3.657501773253359*^9}}],

Cell[CellGroupData[{

Cell["Deriving formulae", "Subsection",
 CellChangeTimes->{{3.65853411966617*^9, 3.65853412493259*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Fhat", "[", 
   RowBox[{"\[Gamma]_", ",", "\[Mu]_", ",", "NN_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{"Fhat", "/.", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"Fhat", "\[Equal]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Fhat", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Gamma]"}], ")"}]}], "+", "\[Gamma]"}], 
          ")"}]}]}], ",", "Fhat"}], "]"}]}], "]"}], "\[LeftDoubleBracket]", 
   "1", "\[RightDoubleBracket]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]hat", "[", 
   RowBox[{"\[Gamma]_", ",", "\[Mu]_", ",", "NN_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{"\[Theta]hat", "/.", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"\[Theta]hat", "\[Equal]", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            FractionBox["1", "NN"], 
            FractionBox[
             RowBox[{"1", "+", 
              RowBox[{"Fhat", "[", 
               RowBox[{"\[Gamma]", ",", "\[Mu]", ",", "NN"}], "]"}]}], "2"]}],
            "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox["1", "NN"]}], ")"}], "\[Theta]hat"}]}], ")"}]}]}], 
       ",", "\[Theta]hat"}], "]"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FIShat", "[", 
   RowBox[{"\[Gamma]_", ",", "\[Mu]_", ",", "NN_"}], "]"}], "=", 
  RowBox[{"FullSimplify", "[", 
   FractionBox[
    RowBox[{
     RowBox[{"Fhat", "[", 
      RowBox[{"\[Gamma]", ",", "\[Mu]", ",", "NN"}], "]"}], "-", 
     RowBox[{"\[Theta]hat", "[", 
      RowBox[{"\[Gamma]", ",", "\[Mu]", ",", "NN"}], "]"}]}], 
    RowBox[{"1", "-", 
     RowBox[{"\[Theta]hat", "[", 
      RowBox[{"\[Gamma]", ",", "\[Mu]", ",", "NN"}], "]"}]}]], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.657501781655554*^9, 3.657501857476763*^9}, {
  3.657501898460264*^9, 3.6575019105001574`*^9}, {3.657501983618891*^9, 
  3.657502163061211*^9}, {3.65751331706905*^9, 3.657513373430666*^9}, {
  3.657513416128755*^9, 3.657513416439537*^9}, {3.658009243081287*^9, 
  3.6580092523184843`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Gamma]", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
  RowBox[{
   RowBox[{"\[Gamma]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}]]], "Output",\

 CellChangeTimes->{{3.657501846211165*^9, 3.657501858432955*^9}, 
   3.657501911733406*^9, {3.6575019886668587`*^9, 3.6575019973367043`*^9}, {
   3.6575021214948797`*^9, 3.657502163723662*^9}, 3.657508124017626*^9, 
   3.657513380254353*^9, 3.6575134178137817`*^9, 3.668803748956842*^9, 
   3.682329865952922*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     FractionBox[
      RowBox[{"\[Gamma]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
      RowBox[{
       RowBox[{"\[Gamma]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}]]}], 
    ")"}]}], 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
    ")"}]}]]], "Output",
 CellChangeTimes->{{3.657501846211165*^9, 3.657501858432955*^9}, 
   3.657501911733406*^9, {3.6575019886668587`*^9, 3.6575019973367043`*^9}, {
   3.6575021214948797`*^9, 3.657502163723662*^9}, 3.657508124017626*^9, 
   3.657513380254353*^9, 3.6575134178137817`*^9, 3.668803748956842*^9, 
   3.682329866262031*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"2", " ", "NN", " ", "\[Gamma]"}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], "+", 
   RowBox[{"2", " ", "NN", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Gamma]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
     ")"}]}]}]]], "Output",
 CellChangeTimes->{{3.657501846211165*^9, 3.657501858432955*^9}, 
   3.657501911733406*^9, {3.6575019886668587`*^9, 3.6575019973367043`*^9}, {
   3.6575021214948797`*^9, 3.657502163723662*^9}, 3.657508124017626*^9, 
   3.657513380254353*^9, 3.6575134178137817`*^9, 3.668803748956842*^9, 
   3.6823298663491087`*^9}]
}, Open  ]],

Cell["Human-friendly forms:", "Text",
 CellChangeTimes->{{3.657508089568365*^9, 3.657508104644088*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Fhat", "[", 
    RowBox[{"\[Gamma]", ",", "\[Mu]", ",", "NN"}], "]"}], "==", 
   FractionBox[
    RowBox[{"\[Gamma]", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"]}], 
    RowBox[{
     RowBox[{"\[Gamma]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "-", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}]]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"\[Theta]hat", "[", 
    RowBox[{"\[Gamma]", ",", "\[Mu]", ",", "NN"}], "]"}], "==", 
   FractionBox[
    RowBox[{
     RowBox[{"2", "\[Gamma]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Mu]"}], ")"}], "4"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "-", "\[Mu]"}], ")"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"], " ", "\[Mu]"}]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"NN", "-", "1"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Gamma]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "-", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], ")"}]}]]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"FIShat", "[", 
    RowBox[{"\[Gamma]", ",", "\[Mu]", ",", "NN"}], "]"}], "==", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "NN", " ", "\[Gamma]"}], "-", "1"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"], "+", 
     RowBox[{"2", " ", "NN", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Gamma]", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "-", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], ")"}]}]}]]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6575081123255577`*^9, 3.6575081201481657`*^9}, {
  3.657508151227549*^9, 3.657508167801918*^9}, {3.657508200204624*^9, 
  3.657508219808238*^9}, {3.657513388236856*^9, 3.657513473391177*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.6575081282293*^9, {3.6575082061293297`*^9, 3.657508221757833*^9}, {
   3.6575134092372293`*^9, 3.657513420008504*^9}, {3.657513460404748*^9, 
   3.6575134743497*^9}, 3.668803749406358*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.6575081282293*^9, {3.6575082061293297`*^9, 3.657508221757833*^9}, {
   3.6575134092372293`*^9, 3.657513420008504*^9}, {3.657513460404748*^9, 
   3.6575134743497*^9}, 3.66880374941611*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.6575081282293*^9, {3.6575082061293297`*^9, 3.657508221757833*^9}, {
   3.6575134092372293`*^9, 3.657513420008504*^9}, {3.657513460404748*^9, 
   3.6575134743497*^9}, 3.668803749423963*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      FractionBox[
       RowBox[{"\[Gamma]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
       RowBox[{
        RowBox[{"\[Gamma]", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}]]}], 
     ")"}]}], 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
     ")"}]}]], "]"}]], "Input",
 CellChangeTimes->{{3.657502186555979*^9, 3.657502190674547*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     FractionBox[
      RowBox[{"\[Gamma]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
      RowBox[{
       RowBox[{"\[Gamma]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}]]}], 
    ")"}]}], 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
    ")"}]}]]], "Output",
 CellChangeTimes->{3.657502191577177*^9, 3.668803749479948*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"\[Gamma]", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
        RowBox[{
         RowBox[{"\[Gamma]", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}]]}], 
      ")"}]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
      ")"}]}]], "==", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"], " ", 
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        RowBox[{"2", "\[Gamma]", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "-", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
       RowBox[{
        RowBox[{"\[Gamma]", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "-", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}]], ")"}]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"NN", "-", "1"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], ")"}]}]]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.657507685900708*^9, 3.65750772346397*^9}, 
   3.657507971158771*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.657507703363029*^9, 3.657507724577876*^9}, 
   3.668803749522037*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"\[Gamma]", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], 
        RowBox[{
         RowBox[{"\[Gamma]", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}]]}], 
      ")"}]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "NN"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
      ")"}]}]], "==", 
   FractionBox[
    RowBox[{
     RowBox[{"2", "\[Gamma]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Mu]"}], ")"}], "4"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "-", "\[Mu]"}], ")"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"], " ", "\[Mu]"}]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"NN", "-", "1"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Gamma]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "-", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], ")"}]}]]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.657507742884709*^9, 3.65750780906248*^9}, {
  3.6575079805852957`*^9, 3.657508029090568*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.657507762768139*^9, 3.657507810439932*^9}, 
   3.6575079634086313`*^9, {3.657507996427854*^9, 3.657508030938313*^9}, 
   3.6688037495596046`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Compare these stats to the more involved ones", "Subsection",
 CellChangeTimes->{{3.657507636387738*^9, 3.65750766246279*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"muvalues", "=", 
   RowBox[{"10", "^", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "6"}], ",", 
      RowBox[{"-", "5"}], ",", 
      RowBox[{"-", "4"}]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"standardN", "=", 
   RowBox[{"10", "^", "3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]Min", "=", 
   RowBox[{"10", "^", 
    RowBox[{"-", "8"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"yrange", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.01"}], ",", "1.01"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"actual", " ", 
    RowBox[{"plots", ":"}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotHetIF", "=", 
    RowBox[{"LogLinearPlot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"equiHetI", "[", 
            RowBox[{"\[Gamma]", ",", 
             RowBox[{
             "muvalues", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}], ",", "standardN"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"1", "-", 
            RowBox[{"Fhat", "[", 
             RowBox[{"\[Gamma]", ",", 
              RowBox[{
              "muvalues", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}], ",", "standardN"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "3"}], "}"}]}], "]"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Gamma]", ",", "\[Gamma]Min", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Gamma]Min", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.01"}], ",", "1.01"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Red", ",", 
         RowBox[{"Darker", "[", "Green", "]"}], ",", 
         RowBox[{"Directive", "[", 
          RowBox[{"Blue", ",", "Dashed"}], "]"}], ",", 
         RowBox[{"Directive", "[", 
          RowBox[{"Red", ",", "Dashed"}], "]"}], ",", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"Darker", "[", "Green", "]"}], ",", "Dashed"}], "]"}]}], 
        "}"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", "16"}], "]"}]}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<\[Gamma]\>\"", ",", "20"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(H\), \(I\)]\), (1-F)\>\"", ",", "20"}], 
          "]"}]}], "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotHetD\[Theta]", "=", 
    RowBox[{"LogLinearPlot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"equiHetD", "[", 
            RowBox[{"\[Gamma]", ",", 
             RowBox[{
             "muvalues", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}], ",", "standardN"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"1", "-", 
            RowBox[{"\[Theta]hat", "[", 
             RowBox[{"\[Gamma]", ",", 
              RowBox[{
              "muvalues", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}], ",", "standardN"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "3"}], "}"}]}], "]"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Gamma]", ",", "\[Gamma]Min", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Gamma]Min", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.01"}], ",", "1.01"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Red", ",", 
         RowBox[{"Darker", "[", "Green", "]"}], ",", 
         RowBox[{"Directive", "[", 
          RowBox[{"Blue", ",", "Dashed"}], "]"}], ",", 
         RowBox[{"Directive", "[", 
          RowBox[{"Red", ",", "Dashed"}], "]"}], ",", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"Darker", "[", "Green", "]"}], ",", "Dashed"}], "]"}]}], 
        "}"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", "16"}], "]"}]}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<\[Gamma]\>\"", ",", "20"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(H\), \(D\)]\), (1-\[Theta])\>\"", ",", 
           "20"}], "]"}]}], "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotFITFIS", "=", 
    RowBox[{"LogLinearPlot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"equiFIT", "[", 
            RowBox[{"\[Gamma]", ",", 
             RowBox[{
             "muvalues", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}], ",", "standardN"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"FIShat", "[", 
            RowBox[{"\[Gamma]", ",", 
             RowBox[{
             "muvalues", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}], ",", "standardN"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "3"}], "}"}]}], "]"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Gamma]", ",", "\[Gamma]Min", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Gamma]Min", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.02"}], ",", "1.02"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Red", ",", 
         RowBox[{"Darker", "[", "Green", "]"}], ",", 
         RowBox[{"Directive", "[", 
          RowBox[{"Blue", ",", "Dashed"}], "]"}], ",", 
         RowBox[{"Directive", "[", 
          RowBox[{"Red", ",", "Dashed"}], "]"}], ",", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"Darker", "[", "Green", "]"}], ",", "Dashed"}], "]"}]}], 
        "}"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", "16"}], "]"}]}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<\[Gamma]\>\"", ",", "20"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(F\), \(IT\)]\), \!\(\*SubscriptBox[\(F\), \
\(IS\)]\)\>\"", ",", "20"}], "]"}]}], "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plot\[CapitalDelta]HetIF", "=", 
    RowBox[{"LogLinearPlot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"equiHetI", "[", 
           RowBox[{"\[Gamma]", ",", 
            RowBox[{
            "muvalues", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}], ",", "standardN"}], "]"}], "-", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Fhat", "[", 
             RowBox[{"\[Gamma]", ",", 
              RowBox[{
              "muvalues", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}], ",", "standardN"}], "]"}]}], 
           ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Gamma]", ",", "\[Gamma]Min", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Gamma]Min", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.001"}], ",", "0.001"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Red", ",", 
         RowBox[{"Darker", "[", "Green", "]"}], ",", 
         RowBox[{"Directive", "[", 
          RowBox[{"Blue", ",", "Dashed"}], "]"}], ",", 
         RowBox[{"Directive", "[", 
          RowBox[{"Red", ",", "Dashed"}], "]"}], ",", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"Darker", "[", "Green", "]"}], ",", "Dashed"}], "]"}]}], 
        "}"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", "16"}], "]"}]}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<\[Gamma]\>\"", ",", "20"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(H\), \(I\)]\) - (1-F)\>\"", ",", "20"}], 
          "]"}]}], "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plot\[CapitalDelta]HetD\[Theta]", "=", 
    RowBox[{"LogLinearPlot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"equiHetD", "[", 
           RowBox[{"\[Gamma]", ",", 
            RowBox[{
            "muvalues", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}], ",", "standardN"}], "]"}], "-", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"\[Theta]hat", "[", 
             RowBox[{"\[Gamma]", ",", 
              RowBox[{
              "muvalues", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}], ",", "standardN"}], "]"}]}], 
           ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Gamma]", ",", "\[Gamma]Min", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Gamma]Min", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.001"}], ",", "0.001"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Red", ",", 
         RowBox[{"Darker", "[", "Green", "]"}], ",", 
         RowBox[{"Directive", "[", 
          RowBox[{"Blue", ",", "Dashed"}], "]"}], ",", 
         RowBox[{"Directive", "[", 
          RowBox[{"Red", ",", "Dashed"}], "]"}], ",", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"Darker", "[", "Green", "]"}], ",", "Dashed"}], "]"}]}], 
        "}"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", "16"}], "]"}]}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<\[Gamma]\>\"", ",", "20"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(H\), \(D\)]\) - (1-\[Theta])\>\"", ",", 
           "20"}], "]"}]}], "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plot\[CapitalDelta]FITFIS", "=", 
    RowBox[{"LogLinearPlot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"equiFIT", "[", 
           RowBox[{"\[Gamma]", ",", 
            RowBox[{
            "muvalues", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}], ",", "standardN"}], "]"}], "-", 
          RowBox[{"FIShat", "[", 
           RowBox[{"\[Gamma]", ",", 
            RowBox[{
            "muvalues", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}], ",", "standardN"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Gamma]", ",", "\[Gamma]Min", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Gamma]Min", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.01"}], ",", "0.02"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Red", ",", 
         RowBox[{"Darker", "[", "Green", "]"}], ",", 
         RowBox[{"Directive", "[", 
          RowBox[{"Blue", ",", "Dashed"}], "]"}], ",", 
         RowBox[{"Directive", "[", 
          RowBox[{"Red", ",", "Dashed"}], "]"}], ",", 
         RowBox[{"Directive", "[", 
          RowBox[{
           RowBox[{"Darker", "[", "Green", "]"}], ",", "Dashed"}], "]"}]}], 
        "}"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", "16"}], "]"}]}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<\[Gamma]\>\"", ",", "20"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(F\), \(IT\)]\) - \
\!\(\*SubscriptBox[\(F\), \(IS\)]\)\>\"", ",", "20"}], "]"}]}], "}"}]}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"plotHetIF", ",", "plotHetD\[Theta]", ",", "plotFITFIS"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
     "plot\[CapitalDelta]HetIF", ",", "plot\[CapitalDelta]HetD\[Theta]", ",", 
      "plot\[CapitalDelta]FITFIS"}], "}"}]}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.656902624560759*^9, 3.65690262617528*^9}, {
   3.6569026574885483`*^9, 3.656902697425255*^9}, {3.6569027585454082`*^9, 
   3.656902864518652*^9}, {3.6569028963134613`*^9, 3.656902900936328*^9}, 
   3.6569029641296177`*^9, {3.6569030378303623`*^9, 3.6569030567786007`*^9}, {
   3.656903098212057*^9, 3.656903132231861*^9}, {3.656903425565913*^9, 
   3.6569034496567707`*^9}, {3.656903483011229*^9, 3.656903563501643*^9}, {
   3.656903645785941*^9, 3.656903662743067*^9}, {3.656903732701848*^9, 
   3.6569038327637453`*^9}, {3.6569043495390368`*^9, 
   3.6569044190323772`*^9}, {3.656904699472336*^9, 3.6569047341568213`*^9}, {
   3.6569051716585217`*^9, 3.65690529043688*^9}, {3.656905865598154*^9, 
   3.656906052382236*^9}, {3.656906094757648*^9, 3.656906152988433*^9}, {
   3.6569062122327957`*^9, 3.6569062557008057`*^9}, {3.656906306311433*^9, 
   3.656906472509644*^9}, 3.656906530982267*^9, 3.6569065797295933`*^9, {
   3.656906809552449*^9, 3.656906912683742*^9}, {3.656907255941337*^9, 
   3.65690727677704*^9}, 3.6569081072956743`*^9, {3.656908426080996*^9, 
   3.656908450552751*^9}, 3.656908688575034*^9, {3.6569087422749567`*^9, 
   3.656908754179594*^9}, 3.6569087998180447`*^9, {3.656978520807332*^9, 
   3.6569785528925447`*^9}, {3.656978585364151*^9, 3.656978612797564*^9}, {
   3.656978974866426*^9, 3.6569790373168173`*^9}, {3.656985085502877*^9, 
   3.656985091645115*^9}, {3.65698536086092*^9, 3.656985363089777*^9}, {
   3.656986011336241*^9, 3.656986013416499*^9}, {3.6569862168384733`*^9, 
   3.656986230312249*^9}, {3.657224659244261*^9, 3.6572247011931953`*^9}, {
   3.6572420173952312`*^9, 3.657242031646739*^9}, {3.657323158011145*^9, 
   3.657323177795216*^9}, {3.657323246386232*^9, 3.657323419847897*^9}, 
   3.657323760159091*^9, 3.657323806364111*^9, {3.657324547483872*^9, 
   3.6573245746147137`*^9}, 3.65732462064291*^9, {3.657325593533354*^9, 
   3.657325600508608*^9}, {3.657506934148386*^9, 3.6575069735984907`*^9}, 
   3.657507057019453*^9, {3.6575083835321198`*^9, 3.65750838690856*^9}, {
   3.657508424921865*^9, 3.6575086067603807`*^9}, 3.65750864734894*^9, {
   3.657508703491355*^9, 3.657508745451584*^9}, {3.657508801481691*^9, 
   3.657509113618639*^9}, {3.657513742341158*^9, 3.657513919541039*^9}, {
   3.6575139530120173`*^9, 3.657513975509788*^9}, 3.657514027230239*^9, 
   3.6575731236868362`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      GraphicsBox[{{}, {}, 
        {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1:eJwd1nk4VG8fBvBJKNmyJCmSbVSWGWSrzlciUUJ2SkJCFIqQkGylxVZJipAt
RFF2j6zZlaVQSUSWGcn+I+8zrz+4Ptd9P9s5c8bZZXfp5DkmEom0A/9i/FV4
51hUcEEBGQc5nyd66VBzUd0LXBTQVJPDw/XYJlJc+1qdFFBA1aR7Yw8dvB4U
FY6dU0BZ09VSRtjFl5kLd9oqoOEalQibbjoQlJTXd00U0PeWT0VOn+igl/X1
lfNBBXQXqhRV2unQb1twaWG/AnrUkPltuo0OroKh8qHqCigk84NENvbdcJlX
ySoK6JSwd9B27I5z1/J6qQpoZc+rc0stdDAT25arLaWAfNhLHJ830cH+iUn2
Lm4F9FbYmudZHR26Zly1ozgVUIpb7KgmtpZe6OA/dtzfcI0yWksHqaUigYGN
CigsdkFADnvcbOvNh0x4fclykaL3dHDn7bNmn6eihvq/phlVdAi4dYZzboCK
/Ee/rBMooQN98GqmfT8VrQrke2YU08FWNerwxy9U9HEhV1UV+9Ao8n3VQ0Wn
bXiR+Ts6MGuL/XLuoKId/nVJ94roEEkaqfxWQ0W+scLFfQV0iL/q4t6YTUV/
+abShrPo4OnD9sIoC48nq9w7j33cN/NLXwYVnSFX1PzOpMOa3y/NqTQqCvwv
gnsygw6OAXZbeJOoSHBmN9fYCzoohVqVWsdS0U3tKzXlz/H1i9Fjpl+jojL/
82md8XTIjv2t6uNHRbF10jwHsEPiItzW+VKRY/mPjBeP6KDysL6Hz5uKhp9H
nfB+SIdnjzWzVN2pqLpq5AxnHL5fyeongh2o6EnBhVCe+3Rgy9sTv0Ufn29X
3U7nEDo0rg1LpR+jIofuLfSSm3SIMEoqUtajosKTvz+wYW+c4/tkrkNFAfNT
iek36LDhwCpnwiEqKu0bje0KoANLU/tNEWUqUgljTiT50mHdryuXyDupiMna
+NJ9VzogFfl/74Sp6Bmq5Kq6QIegW7/vHN1BRUc277w75UIHkqxNtvM2KuIt
fCuq44yv12WdkZd8VJRQmuYzeY4Oq+uErCkbqegFh2fUPxs6LAlXHVH7Q0Ei
b83F9xni+8FdmZ9Np6A4paQwaQM6qK6rENpBoyABn2gLoRN08Bkupf0bpyDh
2BBYOkaHxey3D2uHKch4wakvVYcO8yp5vww+UxBZuE0jm6DDjNHTMMcqCvL8
oyR0YS8dYg4nTvdWUFCj3N168h46KOx7YqVbTkHuXvZxQ9J08BB8LCdTgtdj
Frx9UooO09/iev68pqAans7Y7bvw5+/CHanr6RRk+De0wUCADpOh1+pj71LQ
1aLAg7JrNJgTXde08w4FPeg81Px+lQb/ysJaX96moLV8wsVshQbcM9FdNeEU
dHlqy8erSzRQsMkc+nuDgpo9Rtan/qWBj3L3P2NvCirh6CyPH6UB86icCv8Z
CiqoqzxDb6UBZ3ChevJpCqI8U9il2UIDAWF1QuYUBXm3aifHNNGAbKytrWWJ
12sSb5FpoIFelbXxFWMKit8gdEcb0SDqUcSlLh2cO/6WY31Ng+1HhzLiKBRk
X6d741UsXu9mTtg6eQqy1OlqvBVNg8kK73MXZSmIdW5myfY+DSoV2cWP7qGg
nOdrG1kjaWC3U+nZf+IUdOgcm8ueYBpkzofG2W2loE/Sx7M+X6KBs54x09kV
ecTKQRnNPUoDdTRapb4kjx6HFDgIH6EBh7L/df55eaTkeEb71mEa5O96sdhA
l0eiYTdFzAgazC/O0+R+yiNTDaY3NYo0CM5I6F/5II94yKc9x4VpkMg8VBj/
SB5//v+xHaFPgfqOXKkbcfKIi1/GRmdyCnoVfeKdo+URf5JaptbvKeC15/JX
j5RHZoPZ7Io/pyCiWv3wQIA8qmuyvP+tZwq8AmI7dzrKoxNrttddK6bgxKIW
LV0J91WUth4On4JJ7s2296nySLdFYmfpzSm4Re7vvConj9yyDMJkgqag1syj
6Ki0PLrya9VmvS/eT9FT//Ht8kj7D+drH5cpIHvOb5JbL4/O3aM8vX58CkiT
GeSiTjnU/+vA4TaOKXA3C2r52CaHhDLfGdE3TsF3ZOEx3SyHItcbdLKzTEHl
A7ayvfVy6Prlbj6V1UnwhwsnUkrl0EtrC2WzqUlYiJHzup+Krbbq+aZlEmhq
Re+dveTQ99zUpdbwSbBJu3s+3FMO6Um88zK9OQmtXI4cLy7JoWB7ieHegEnI
+SlgNugsh7S8gyNavSbB5a7PbzMbOVRmNx18zX4SRgb3b9bSkUMlEc5D3w5O
wkD4+9Mi2+TQkdCR8UzaBHAoSJSsbpFDx53itQV/T8D+gVD+r7xySGxYVOzG
zwlIoOg2P+GQQypL+Sfg8wRYfGlX3UaSQ133lhddqyege89XPv5RWcQlIVp1
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
Dh4j0hMToq6qP64kMX68XA7+D7Ehv7Q=
          "]]}, 
        {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1: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
7LDxe8xXKQVZGQkB+unPCfhVHp1j+D9S6/Ll
          "]]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
3238H5s3Zhs=
          "]]}, 
        {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
         Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwV1nk0lF0cB/AhRFkK2bMzZJsRQvX8vEKIENkqCUmWSouliLTYWpQWSWXL
2oLIErmYkBAiS0IiYswokmy9d/6ZOZ/z/d5l7n3Oc0bO4/iew+wkEkkKf7C+
tUu9Swr9tFHdF38/opsJdccMz4CvNjr9OyB5FbaDMr9ui482CqpePN34iQln
7pQUjx/WRo3F/ZvssMtOcRTLuGujp0G+V926mEBQ0ouuOWijrWz6FT4fmWCZ
++XF0e3ayNTjmv6WD0z47F54/M9WbWT/OfzbdCsT/MUua1021Eb/lT5RzcO+
Fq3+InWLNtpl5H5ZErvt8Lnn3VRt9Gi6xPdvMxMc5cWfmSprozTeRb+0JiZ4
PnDIkxPQRoO9kqKP3jKh85e/aQKfNqJvOjBljG1ieXloZa02mvhorTdGY4Ly
3xKRfm5tVJTTL6WJPeEoevEuuzaihNQrltQy4YRg3761c1Rk5rxrf3Y1E87H
HuT73U9FX3K7uUXKmcAcCs7x/ExF7xrKQrPLmOCun7Cjo5eKVufUgD72f2Mo
9MUnKnprtK3BqZQJHKby34+2UdHeRKns6yVMiCeNvhmoo6IHAR3VfYVMSAr2
PdGYR0XFj/yejeQy4WQIzxO7XCraLFx79wi2VWhOb182FenFODT/yGHCv7Pf
jacyqSjqrIEYPZsJ3uc9Ngg+pqKZGD7R8SdM0LnsWrEvkYpkb9Y0V6bh87tl
ycE8R0U3ue49b09iQl7iD/2Qs1RkqXBEchv2pdsxAWyhVHR4lVbRk3tM2HK3
/pNQEBVJLi06B91lwqP7xrn6J6jopNl1X77b+L5SDXdHeVERjXYrYf0NJvA8
35S0wZqKjv1bUDt6iQmN/0aUs3ZR0aLYgcXyi0yIsXtcomdJRSLCxp94sLl/
C3102klFCctHc7MuMGH1tmW+5P+oyOF+fmrneSZwNn24KK1HRasu7s8lhTKB
7fvp42QZKorlHw+/4c8EtEVrpXQjFRlq+Wys9mNCZOyPq+ZSVLTO6cuDKV8m
kDTc8o6KU5HGqsdaO4/i8zq1czRfiIoizw9H0w8zYZlNYh+Fm4pKjrmnrrgx
4e/GajODnxTEb1eto2uL70PgTUEek4L2JcklqdgwQZ+tSkKKQUE2LZq+EruZ
EDJSwViZoKBZU2e7v7uYMJ/36i5thIJ+OebTM3YyYW7L8+82PRR0qOO3fR7B
hF92D694V1NQKLuFlp8aE27tSJnurqKg+js1n8mbmKCt+8DVopKCxD3LcodV
mBAodl9TvZyCdt56/niPMhOmB25/+llEQWm6U7mScvj587uqHJ5FQQ86Xw3Y
iDCBfvlcfeI1CpLwY3fS+MeA37JsTTJXKShzbHykdpkBK6+vtOTHURDFdc0l
xyUGCPy62VkXTUHSjmr04L8M0HbLGZ65QEHP3yZIZ8wwIESva8U+iIKKFIt6
ksYYwDGmuUX4IAWZCuqeZ7YwgC+q2DD1AAX1buoE42YGiGw0JNT3U9CfLsHq
W00MINubmpq44PER5pPqDQywrN5nf9qegqyY0/mmiAEJ92KOd+6kINnDFFuu
IgZImg9n36ZQ0MhM2pMXiXi9i0+vsGlRkIek11TsTQbQq4IOH9OgoDU1FdKH
bjDgzea1CuabKKjBUV+TK54BHjI6jxYV8Hl8ISdsimJAztzl2x6iFLRiZ9be
c5wBRy3t2Q8taaGVeCWh5+YMMERj1YZ/tdDtgR8JG80YwKsXFi48p4V6FvsC
Y3cwoEDuyXwDUwsJVVzZ5UgwYG5+jqH5TQsZ7hP/WreZAVHZyZ+X3mmhAY0X
6RMbGZDCMVycdE8L6RiIgBlzCgylnilfuK2F7jTdStxJn4LuzSFJR29qoU4P
5heTH1Mg6MkfZhivhfj5SMabv01BTI3hjv7zWmhYcKZ+4NMUnDmf2C7jrYXM
ZJNK/aumYPe8CSNLB693lc1pR/QU0AXWud+gaiHhApuDFRenIJb8uT1YUwsl
pPTUq0dOAc0xsMRcRQv9DDdJXRWK91PyMGxCUgtx/e2aDfGdAvLJuTWaq7RQ
7UPhb+FWU0CiZ5NL2jXRneWaG628U3DCMbK5o1UTWapmPmJyT8Egcg6cfq+J
vp7IkOblnII3d3heq9Vr4vfz4qEty3QIA7/d6RWaeP/kK45TdPhzS/PMjQxN
1DShV/+ymQ4Mg5Lao2c0kXS+pENrNB3cMq8diT6piZzfZ7ftvUiHFn5v3ifH
NZHVzuvQc54OT7+JOA4d1URx14dGWs7QwfdayA9HN03kPbj96zlPOowObV1n
slMTBW0pMhncTof+6NoD0uKaaEYqeW8uYxJ4tRXLlzdooppfIwViPyZha/9l
4S+CmohNgev6hW+TkEyxeP+AVxM9Gn/3Gnomwbn3g744SRO1rL/kE1AzCV2b
vggJj2kgVd2CzXG3JqG15c87nhIN1L044/hUaxJWgl2UfhRqoM41I/k7VCdB
Q/51ZONzDVSgaPvvo/wkXA06vyU6RwMFz5slDm6YBEsZziccKRpI4V4AX/ri
BNSfEIz8F6WB1FK1XdrfTkC1kIbeb1sN9L106986hwlA61JoPLs10OHssPCf
1hNQy7fWXnqXBloxL74ttnMCaKt/HN9pqoHKm7jP2BtMQNNiZu59Aw30NuFh
67mNE/Dpm9RGQl4DSUl1Jt4Z+QH0l7wc0TPqKLZQVWc04AdIONDbxe6qI3Qm
qr/ffxzGf90U3paojt70Xj+f6DUOJTe3OB1MUEertKpHd+wfB9sPUf1P4tRR
9t1snlu7xuGypfiYdoQ6cvLL7fqmOg7TRmZLVj7q6M4mS7mDo2NQr5GqfMFQ
Hd1IeNBFcxqDk6sdzv0YUENWR1484lD7Dh15axvIYmqIjfKGXd3lG+Sxi30q
ctuEhL/M0ciRQxBneTo6/44qSl9S/W1N64MjnKFmdm0q6Gqwf705Rxco+kWt
C2xRQdLPjk+zTXfCcFt8X0KTCloKAfW3nzthf8qjY200FeTPnszv+7IT9mym
3bUpV0FzA3x0Tc9O2HZIYMw6XQUp/7d/dQHtIwhWPYm2PK2CjgW6xQ/d6IDK
0x2NO8RUkG0w1y9+izYwlDhsobRBBY0/S0HKem1QWv3nHZegCnJdQxKxVmiD
ojUb379bq4JSBHv74hY/QE7qkRabf2SU+jD7S5P3B0hsXmrf952MRjrfOrYa
t4KvIvnzqWIyKrA2ihFb3wzj78r37S3EfV7nnwuM93D4uFW/3nMyKnYkWSw2
vwf3isAvf7PJ6FLhTNPe2PfgaFs5GPGAjPrPRxucXPUe/guzG4mPIiOOr5/a
zJffgVjnuakMWzJSdG7/5ba6EY40S6ZVWJMR/ZNfBPtkA7yivXZotySjyGGj
z9WtDbC3ZPH1igkZid37OhF9twFu3T0X52KAfd+o0YrcAHwu58gC8mQkTI8Y
yrCuB/aBs4fOziijIfcNbnue0WDPJ4kNN6eVUQrdSF/+Ng3SWisas6eUUUj+
we9rztHAqHpBq2tMGa3Li7yjbEGD8NSzK1r9ymh/Uqr4le91MO9x9sEoTRn5
nPYl9yvVwdRYaJftXWVEX/RdvPmqBpZkMkA1URk12nuvufaoBnidm3PZEvB4
Cd/zGVdqYFOj9PmiWGVkFXLLVt6pBnxy6pSFw5VRKjWi+PBfBCM+fCHdnspI
nSL2ZcYYwecfqRJuVGWE8g8xnT5WwYRc0yU9Teyut51DuVWw4DLD4FdTRkZ/
R/oeRFaBWJNpXbWiMip7dTAvW7MKHPMm/OTElFEPpeDP+muV0OGrUzWyooR8
NEq5+O1fw7vJhoN+zUqox034zWX2csh8Sz6/550Ssr1zc3PuYBlEPo5OMajH
+cI73vnKMtCz39m7Gimhdf+5WImGlEFmRf2ezJdKKDU46KnTdCn+f/PW9Euy
EkJqi7uqxl+BHrlOzeaoEtIPkpjnmi8GQTYFSz1vJeQsWUtY9hXDVF+Uz0ZP
JURaps+/rCyGzOvGTyb34/1FSaktXCiG9XM10jG2eP0AKyNr/mKg09D6mi14
vT0+0nSNl5Du8eaPNhder8tmaiW6EGxuqFnYrMJ9ReMvZ04UwtLrpGQ/khKK
EXUSX+NSCE4bTm3PXFBEzsTrpdhNhcDbSL64gamIkORxhZHWAgjSuMk/362I
EtplX49JFYDlvKdSVa4iKrBpiHid/Az+KLYH9WbhvtuIa+zJZ5BpRzT+zsB5
tlFonOUz+Jcn5qf5SBFNL5k/Ulp8CsUHWgoe31JEsh96j5S7PQXpOr1tUecU
0ZDZSx9lrXyYucZjv9NaEdlOvsy7P5MD7gv/XJUsFRFFwsn6SmsOtHrPeaza
qYhOpIluz87NgRz4drLaCK8/Jr9yyT0H3H5W3tqio4hSXzpN5LRlQ5PDiQ6y
JJ7/Xra5a0UWpEp223H/UEDTX2sWnhVmAn9Mi8v3UQVEsj9fnnsrE87N1h2i
DeOc1szZcSoTHFsKAiP7FdCJ9ZfcsvUyYW1E3M35DwrIVvEncnuTAUHD29vH
XymgSI78661d6WCVm2n77pICMtp13ZeikAbxPjnx/RcUENoxkLd6bRo0kZ/W
M88roALeQx/+/UoFi6yX20RCFVBqlZrMnrpUMMuoVfEMwONfhLiePZwKRg+H
SMt7cX5sOd3v4GPQuSlVSCHj9bZvm4svSYFTtrL0HYp4/+2yyr1XU6BIQJHs
JIf7SzEebl4pQL2u9jBcUgHJKgkOCgingGa8YWyTgAJy/zuydnXQA1C57HzI
a14eyX71OsRtkgwbQ2+vT3onj1ILn4SFcCWBSl8rqaJeHpEC5/6jj9wDna08
05/r5BF6El57re4eWC6Ht8q8wa6N4Ha5cA+CLhyJzy7Clncj1vy7C22xhpyl
D+TRULTbQCb7XbiUPDTfFYDXMx3p0VG9DTcWJcb/+MojIxlr81+8tyF5/95u
cR+8fp54/KfpRCiUbio54CGP3IPj3giWJ8JA+suTo47yKLK4z95hVyLo51+h
zwLup0a/agu6BZOv1YeEBPF8W9kOu40nwKv905f/8OP9x9LKb7cmQNTyS7XP
a/F8nv6VP4sTQAy2Bqdz4vzlnUnpqAQwq7Xgp/6VQ0Nxg8MgnQCpjd7bdg/J
ISOv/iO9FdfBsSs1Kea5HIq8lyTNQ48H+SAvwj8f5z4tKvY18TAlojJik4Pd
lZfx5W48XHJ+oSWaLodIuYOBRcbxUPi5qv7JHTmEdq0ztHsYB7zDfbO1Ydj/
av2E3GKhhiFst2yJ52/Ucd2xNhrchkdVRczx+B6jKPOJK7DU9YpdyxTPLxC8
N+zdFdCrci52B5xfebx4LOYK5MWniNI2Y8+tsQ7lvgK3VRQH4qTwfFs6zCbX
XQYfj81+YgxZhIRuGz/+7yJwOnKYUCdlUeTBtFWrlC9CukWXlOW4LCJFbl26
tuYifKEEt54bxv76oVysMwr2/KugDn7C/fVB5xd9omBbivH8k2qcyxT2NNy/
AAKf7C5vvonnP9njJyoSCf48T4X5r+O+gfMX6YUIaNrGlTkeh/sXjmvsb4yA
SxkVtQ8vYSv1dVcejoCFEwok7hDcN0rP5sk8DyNrf5/td8OuodEDNMOh4r+k
E5fVcV98Zq9P8FkQPfPr30FV7M/cRZt2n4XTOVY3DJWx3bLH1JXOgpYA23Om
DB5/t8GF+TEUMvuPTroIYQcqtR/SCQVpZlDz/lkZRJJST84jhUCja1Xp8xsy
KLJLXtaBdgYkOAeJC7E4Z/f3XU4/AwEvSPX2F3F+OC+i98IZEOQw6ZwPwkb6
vSpGZ2D/s6ZpYzfcd4jhkKo+DT//dat2q+N82eqyUP0pkHjy68G/d9KIpBHv
5DQXCP42wgodddIo8tbJoZa+QKj+q5uXWYXziuDAY9WB4LU7tMyiEOfivc/U
YwPh+Z9/nYlJ2BeDi+5KB8IOSz5+lSPYUmyak7YnwJ9JjrTlwOP/TKbMZgSA
B3gFXFvZiEi/29bFhAaA841U16Z57NIznM42AWCqJa5rMoUd0irxdNEfpI+v
mdjyCdsvoFjSyR/aGXR7mRzsF8fE2sT8QI9RSGbswhYaOe/+1gfUCYawmhl2
7vv672k+IH99E7uPEfbX2ZLH531AQDOj/6sOa/2vvjn6PjAecPtm10bsFLov
34sj8GAqaLGSKYVInntGxzO9gTS19UN8InZ+7AHBl14QVBmnanUNu4+2Z+KW
F0zF917kjcZWPCg1e9IL+jYF6187i/226++DzV5Q7FOUdv0QtpdVok6pJxwd
UTl9Uwt7ocvTvMEDOj5vEL/3XhKfb6f+Gp5DYJ7vdcrpLTaReCiB4Q7VZ1+2
iFZjWz9Khk53eCpuF5VUhB1hZiSW6g5XnK5O3r+PfaT0Qr6BOxh+ZH+TcgR7
5PUT83E3yGhieqSvwk521o3n2Q9vwEWhZVkCkeTRup6hfdBTXPvtzx/sCZOx
g2X7gPfxHS9rOvZtL6qMzz4IOrXVe74Tu5HGZd/kCuZS0Ud3Z2Hv4cnced8F
6AHSJxbMsaWaa7YedAKub9EUpR3YrWq9u7Y7gazzz2mb7dgnp5WuSTrBXmNa
4BMqduXpHek9jvBGxPeUrQR2Hgzy73WEm9UlQVmT4ojEe9anxHEv6K23Dt9z
HTuBscr3nD3+f6uQlRyDPSKU+vSgPSRHLbQOR2Hrl70QMbGHfzPZsqeCsRu/
W7jz2UPjJ3Zaojt22OSBurQ94JpStqZLGzv9Rvr9djsIJysmOXWLIZK34qCE
lS1QhhbQ43ZsEyP9UR1bGE5q/zH2Hlul9m7bRlswWxOxNQRhn3a1ExqyAf6p
3oGkXGwjDhmSug2kFt1Q6juHPVsY+PSDNdC2Lxbtl8WOuZfG2LEL5s6MmKtI
YK/zkGkR3wWqz1sGZoSw/Y/m0pmWcF06dU38amzhcrupFEtw/mfiUc4QRaQT
mXITfy1gEl1fL1KF7T+4MbzaHARN5E98cGE5bvOFIDMwCVvL9cAemyQk12Rv
BsHFsw+8rbEdavLNqWbQr9jQsGyE3Wa1e5RuClmc/jLqKthP/3xO9DYFw4aS
1pg5EUSad7WJ9DSBQ5YWGsaJ2D6SjZEXjEFfxVo15Bp2AkfIB29j4OeyU3oe
jU0qTjexMoaKGueNEmHYKoLxaaLGIGjgw/fLC5u7I1+m4D+gkaOn0vRYrrFa
GTMCFc63z9j6NuD5pgcqvhGwMtyYu6UTO/Jti1opAZ2o+UlAK3bOl8X+OAIu
hHU+7K3F7tmUuaJNQN/Mt2uF+diNp5R1r2yH+GH2Y4fCsddtyJLV3waMaiPN
Glnstq2zSQ0GYLLR6d5ZCWzbYFvLxwbw4GwASUcY23043zDYAMx1kzuyVmPr
u3R/IhtAet5M0FWGMJ4v1fNXvD7svZNV7VSJLbu0x/PgFqj05bVjOGEXOMsX
UXRBsFG+ItsO2zl65IaALhxVMlA4tIvVvx+YxtABkaHDvz8S2NM7ct2e6cCJ
vdX3y5VYuW6nvoYOKBidHL40I4Rt1EPW2wxxG3pOSd7APvFi5LsvFS6J8eyA
WGyxmz1BdlQ4L2ko6HkR2zlmWk2fCqfkUgrygrFjDIo5uKiwX8N9ysAdu8er
wDeDAhqm497OVOzIEeuSd1rQdnre5c5HQbz/3c6f2DSgKVhVtbwFm3SgIqRb
HWhnXef7G7Blib/Oz9ShPLLyrmIlq/8hs91FHdKvRn58mYmdun3mfokanMrk
tu44w8ovCBmGbAKRTjEjATHsdW7cx8kqkCNRGmwryJpPj9LDoQKGh/a+uMnL
ymUGTg6TwY1xU1qYjTWevXDrIzJkc69dFptYj3//9nghMTLob18ul6/EpjSI
pgorg2vW18167thGBh7uWopAp0f4Bbti20Y6hggqwvnN0hllDtgJV5+X/1aA
dOQquNWCle9+WFqpAJN9H6dBmzXeXiDZSgHCBOqfWXBgoyWFhlPy8DAkj3wg
Zx3eb6fffwOyUEDsa5ZLx25T4hCgyUItB2/g9wfYKMCSM08WvicEVBy/gU3K
GvENkgVKLsU6Kgh7KCBCaD3u9746mW2C7b60xvKBNLSduXLuW40A7mv3eNIk
4TfbOM2/BDtygN3kviRIXLfgn8vBNvJSOnJMEjyzeNO4E7Bly4pOi0vC3Kdb
9Rpu2O6Vr9JOSoCk/uP1IQv8rOcnb5IiDt4Lpdm8m7FJy1GpfSLQ0b67ypeM
nWqpfb5cBIjc0Y5GSWz33RPxSSIg6iy0cokDe8jNTc9JBBpLjjksd/HhPr29
+tMGUA1UYmOEYLtv4vAdEAb62C3XD294cX+O3ZlfCJyrVU9ovMRGmwxKfwkC
7S66HJ+NbUQKJ7oF4aEpo2BnAqufY0pLFYTdGRar0SFW/uNOlq4gvHAjFRdw
YJNiRe94r4eTXQF8tyzX4pwpbdwgAAP5qstz27FJe3yd7gjArqhR+j4qK+fd
+NpTABS1DjQriWGjN81+bALQHWMVXz66BudlvIeN+GHbNjWer5HYkVx6Ns28
sDpjnINSyoO96cG42Bo4HZo5ezsPG500mmDywJCN+8jfh6zc30K9gQcqlrrr
6i5hG936dTyIB/wdG6Kc9rBML5vo5oYOnixSxBQ37s+9d85aDSknPJdaFLCN
9uyKP8YJ+q1/KwNEWf57M9yaE7rUEsL51mIjl450dU7gH6tcsfq1GtuG6/Ik
B0QeEGFrRqtZ79fqx34c4GX5jrPpAHakthz99CpQV9QSqL/HhX0ORnPZoPHC
2w+H47FJ2frZ19ng8OC+BM4IbKP9uomn2OBRcsx6U29WP1VvfDsbrFs/LETT
YeWDrhGdJJhdvi1W286J8/1hajwkeN29IPdmLcs1Y4Ubl4lHkfXPtUnYpH0S
zTNLRJTqra3Zsxys5/WufNMSYXlOdW/CF5ZlhS4GLxF90s4xHi+wSToV3F2L
xMLhEgaXPcvxB78kLxCGs8df2ySvwm4SCrWZJ6QfbjWnXceOtL4Yrj5PsJut
7tK/yPINi2KeeaLp3iOGnD+rv1BWSvtDuG5tkZvdzsp7bPm3/yHORm2KSfrK
jvOfG6v05oiKdaMOX1VYHpfdZTVLPCrrer1fCjvSXTdNfZa46F4v3yPAyt2f
q/DNElYF2dOtc2zYRslNrTPEgI3v1Uoay5k8exxmCPYbzLp77tiR4eaaPr8I
C74F7d1JJJxLnFErnCY0Sybuv4tneThG7t40IXjgM8k0guV/hkbh00Tf08rW
rd4sq4TPWUwT/lYRvqo6LOeZRTQxCVlRHhOe1H/VJNIubmkzBvFCSFo+SGAF
m4dP6PQkwbVwNEZkfhm7KnqD1SThNlTCeDXEco/xHsVJgv+Z9es/hSy7kEO7
JohjZuEOoQ4skyJPGU4QmqH9V8LuL2E/eNHB/4N4NpA8GaWwiO05ITz4neB4
+91OgZdl79W0qu/E/nztsrrZBdb4pxkp3wnekKZLHPUsPwiccf1O+K9f2HjF
h+VDVi29o4S6iYtt7LO/2K6hmkMjRH6uaMmNLfPYdh79fN8Ij0diVU9kWRba
kfVrmJBIFH/7modlRdK97mEiLkyya+zzH+xwKj1tmPCxkfkNkSw/PHlQf5hQ
/K2sO904h90RYuj/lXhkpFdi6/ob2/hccf8g4ai7pcp7B8u0ps0vBgm+Tfpv
w9RZbtowe2GQCBMy7MpZmcXOVNNTGSRcv2//TcpgudP2VfAAIXrVVLdwcgab
d8FJ/guR0O1Qsj78F3bQlvqMPsK86XGgrhfL6gsXzvYRbFUTGi67WPbJDbfr
I06mR2alirPMZbyZ1Ec4BDy9p/XqJ3bt06vuvYTYKo6z1sxp7LK+TPUewviA
d7hgHQPbsHSS2UW8NF767XKT5c7d0y1dhKLKrWNpB1k2i1N92kVwzVQdpCxN
sfaXrX+0i2iK2WC8W5flvnw02knYF9O44rInsfOEN49/JLzWKiSwXR3HLt6Z
uK6DmNl43SDlAMt5Bmfm2okoyt9hPS2WhRlh/e1E6t4Puv4dY6z7oC3ltBP9
j899/iTG8gKU7Wgn9up0Kj99MordaDEd0UaYHbhc5Vg9jK3DxanYSnQdn/b+
mcBywenA+RbCK2rfuqseLJ/4JtXSQkRlUz1rOFle56gV3EK8+fmFW93qK3ZI
uX5rM3GMNyCHvWiQtZ9jCdHvCVu3D11Oo73Y+i84lN4Rr9/Uh9WGs5xpf2qp
kVCWeaOgIcLyJT+FzkZiafBpIPvOHtbzamt2qZHIPhTH9yznE3ZzTPxYA7Hi
ZWrK7v8R27a2oryecO0OOuoy+g7byI4zjkZQkg6XaoqwbC477EMjuFwcODl2
NmJPH57dSSMK+6hpz3PqsSOXSrloBPcAvWeVfx32U56iK3VEwLu3CftHy1n3
90cloZYQ25WhvnpnGcuTuidrCVpzZGNhzitWn3rKoZaQattKWu3/EjvhXLh4
LXH7meegx2gu6/enNj6pISYLpEXLcrKwHUptYmsI4+Le3Xz+GdhebzgCaoiv
Zx6HHR+9j1156o9ODZEQtoEu7p/Iuo8bOuI1RBiXaGnMaCzr/XD60TIiCslc
6q9HQ7FN+nWGEZGVkpwQbHj/DT6f8D/1iPgfQuDNVw==
          "]]}, 
        {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
         Dashing[{Small, Small}], LineBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], AbsoluteThickness[1.6], 
         Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
oP7NSsoejbw4HTX4H6MNdV0=
          "]]}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{-18.420680743952367`, Automatic},
       CoordinatesToolOptions:>{"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& )},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           StyleBox[
           "\"\\!\\(\\*SubscriptBox[\\(H\\), \\(I\\)]\\), (1-F)\"", 20, 
            StripOnInput -> False], TraditionalForm], None}, {
          FormBox[
           StyleBox["\"\[Gamma]\"", 20, StripOnInput -> False], 
           TraditionalForm], None}},
       FrameStyle->Directive[
         GrayLevel[0], 16],
       FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledFrameTicks[{Log, Exp}]}}, {{
          Automatic, Automatic}, {{{-18.420680743952367`, 
             FormBox[
              TemplateBox[{"10", 
                RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> 
               SuperscriptBox], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
             FormBox[
              TemplateBox[{"10", 
                RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> 
               SuperscriptBox], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-9.210340371976182, 
             FormBox[
              TemplateBox[{"10", 
                RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> 
               SuperscriptBox], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-4.605170185988091, 
             FormBox["0.01`", TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {0., 
             FormBox["1", TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-16.11809565095832, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-6.907755278982137, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {0.6931471805599453, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}}, {{-18.420680743952367`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-9.210340371976182, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-4.605170185988091, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {0., 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-16.11809565095832, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-6.907755278982137, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {0.6931471805599453, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}}}}],
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
       PlotRange->{{-18.420680743952367`, 0.}, {-0.01, 1.01}},
       PlotRangeClipping->True,
       PlotRangePadding->{{0, 0}, {0, 0}},
       Ticks->{
         Charting`ScaledTicks[{Log, Exp}], Automatic}], {193.5, -118.66252583997979`},
       ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}], InsetBox[
      GraphicsBox[{{}, {}, 
        {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1: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
8V6KTfn6Whp4rzwu5jbgxRPv27eO36dB5zubBn81XmzVkvlLI21ROt7ZLMWL
W3x0Iobv0UDMUejvOVZe/OViVtxXToPmmqD9q908WFXJ8r63jAYaoSrMcxE8
eLTLLGy5iKz3RJrzm2fcyMp5Y/RpDg0cCY0QnYfc2Hum5doe0o0ZGJ9UzI35
nSPTjNtkPS3nKnakcGOHiWQoO2mbfKu1SOdGdmzrcs6mwQM3puoKVm6sCZY0
kr9Bg6PdgTxp1lwYxyoRKZZOg5G7GqtLG7kwq+Za78M0GuyKG585ROXCNUqp
72xJK+u5tqmIc+GrLN3ryak06E3cnfRkfB1OPo214UqhwYYNWpwfYteh0PP1
t5Uv0WBt/iQr5TEnlhuzpGECDY6fLFi8WsaJ/CESRBDp0b20T79ucWKQ16MA
GdJ1f3pfvjzHiYUHD22PPk+DAIfXcQf3caIWd9IwxJP15SxiOj3LgZOMbQvD
cTTIDvH4067Egb35ZjdCTtHAtONXfaAYB5qyRufoku7WSonh4eLAy0PRXLMx
NOCdqP+7+9tavG9lLXiEdKyrKHMbrkUuJtXWI9E08LRuYWt1XYsGWmFupyNp
oK2sx9d0nR1L6gnlL2Fkv868euOVxI4xBicbq0l7MQ6lsJ1mx6UJ3tpTpG9n
JQpYerOjw/nWTCHS/AJjQo2G7Mjucll/8wkaLK5eFX/xjg2bo5Sd7x6jwdPe
FYVnXGzYy9JjXBtCPh/bdF+fiQ0jv3p6XyYdp5FmXrzIipJccp2epK2jNA6k
DLMi3886F0HSA7KOie4PWLGRz9QoJJgGK141c+z2rFiby1lmHEQDs8Xgp3uz
1uAfEePQmSM0kL1lvrPx8hrs8o1KaCHNsn1tt+nZNdj8ZvVNEenW67fnFALI
cckbS3TSzubtCosb1yAb16G0AX8aRMZpJmZ+YMHqN5+auvzIfvGP7/+gzoJT
Y99svviQ66/tfuoizYKUv1o1/5E+S2tS7ONjQfujFbvLSe+uKP7ascSMjbt8
eYNIj+z1T65vZMYF5Z1d373J9VyZf3mdxoxiQl/UOUhb8azo22QyoWvrFNs+
Txro1kzfaEliwt282zhNSQu6DjJZnmZCwwU1I1nSA+X1HebeTOizNoXtiwd5
fnaf9tcwZMLzfHxx50nLi3Fu48z9R6R2hVQ3upPvg5CsYhjfXyLUg8XHhU4D
9hW/RNHlVeJwcOjRnaTdRmvmHo2uEj7dC1mGpHnv7Xn6s3KVWJcas4WHdND2
mP0n968SG510Jwgaub6TQ+ejb/whAhzUPDRJ3xvJ+hKn9Jtg8VsUFDpMA9ZX
n+2UuH8TwzzMx1hIu9zVr325uEJwyVl+WXCjAXdE6znWphWC/c5npXekAwRW
ZM77rhB967AyhbT2NifbC/d+EXK7lxWESd8tFau5YrJMxDC3BWu50sD9tnhD
ofwyQVMrH5QhLZku8eop5zJxM+mrMz/pi9FS3RODP4nwUJP0Hy408N0r9wNi
fxLpq8QEklb+oWr0tXmJmNfdw3mI9O1NxjW2zj+IVKnEyOxDNHAwMmnw3vqD
yK9Ul08lzaNp+ipa+wfBPvqvO550tJBZd8nfRcLywo/QYNLOnzf+YMpfJLA3
xncrabFkS6PKL9+J1Ar/DXPONEjp3V8jEPONePjLdcqG9M7WnFAjz2+EkHLq
rW2kmRumdZx2fSMkdj2mm5E+mhdblCvxjSgZOymhSnp/YPl1vUcLBPN7nW1/
nWggvoY1cs/8V+LxanhoJektrt4xgi/nCJ9k3WRF0g+3/PnhlDpH7NxUKiBJ
Wlk9LejO4Tnih+H2AgHS7N8bDlP+zBIGOde+MpFuTRTZYmM0S7w876g06kgD
++pG9ovFX4joua2juaQ9uZRSmJMnid2HAg21SH+Xubw+23WSiOC0qFAmHUf5
NWasN0lono00kiWde+CNUUDnBBESyuQiQHooJ2qwR3yCUC9/LbZ8kAYHDLtU
ywvHicSdzyxek97uGt/gQIwRq4lfF46Q7g7+6r2QMkasWFrGeZP2jDvEn+w+
RtzlCJOkk44rpno8ZxsjhDdYuDuQfrYwzKG9+wMxb6Jns5l0EHdgCUsVg4jm
+3lJnLSt25vug+P9ROmKj0ebA/k9etYU/SKmn3h+uNP+NWlVuWdKOqL9RBCH
z+4XpP8wykNZdvQRLokDB2pJF9Mv8twr6SFGbp5qLiD919PSkiXgPTHadEfh
NGnn3jA/p/EWYgNHjs160pRMr8e6oi2E+4UD2kak2Z32s7HuaCbETjzmp5Ku
HKDeuV/SRDxP2zerTppjZKZvTcBLwmawflGcdGDLqxSX8SfEQr2twcoBst+7
8rXX7qglUvt7w5ZIN7bFNleWPCI+SXvjN9LSb82Z1gY8JG5vCvX6QvrqPQ+G
+3gpEX3OaGmI9JcKWbHakiIiZX7St5/0lup+G56AfKLJ6+CHbtIfTuREB4/f
IH6e3/Sxg3RKtMiMREA60TVaEvAf6Wh2sceJ4xcI3/zi369JV6qxaz8dP0lM
tRqkNJIuys5KCTe78UzKfZvmc9L/A4SdXSI=
          "]]}, 
        {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1: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

          "]]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
         Dashing[{Small, Small}], LineBox[CompressedData["
1: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
O3SCQ0UUui1E52ekJ/prX6qnVtTMm4/+DwaOvJ8=
          "]]}, 
        {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
         Dashing[{Small, Small}], LineBox[CompressedData["
1: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

          "]]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], AbsoluteThickness[1.6], 
         Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
Xa+Jf41dmJOdFKSX1RjLvHkrgf1/Caajyg==
          "]]}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{-18.420680743952367`, Automatic},
       CoordinatesToolOptions:>{"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& )},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           StyleBox[
           "\"\\!\\(\\*SubscriptBox[\\(H\\), \\(D\\)]\\), (1-\[Theta])\"", 20,
             StripOnInput -> False], TraditionalForm], None}, {
          FormBox[
           StyleBox["\"\[Gamma]\"", 20, StripOnInput -> False], 
           TraditionalForm], None}},
       FrameStyle->Directive[
         GrayLevel[0], 16],
       FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledFrameTicks[{Log, Exp}]}}, {{
          Automatic, Automatic}, {{{-18.420680743952367`, 
             FormBox[
              TemplateBox[{"10", 
                RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> 
               SuperscriptBox], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
             FormBox[
              TemplateBox[{"10", 
                RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> 
               SuperscriptBox], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-9.210340371976182, 
             FormBox[
              TemplateBox[{"10", 
                RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> 
               SuperscriptBox], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-4.605170185988091, 
             FormBox["0.01`", TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {0., 
             FormBox["1", TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-16.11809565095832, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-6.907755278982137, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {0.6931471805599453, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}}, {{-18.420680743952367`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-9.210340371976182, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-4.605170185988091, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {0., 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-16.11809565095832, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-6.907755278982137, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {0.6931471805599453, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}}}}],
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
       PlotRange->{{-18.420680743952367`, 0.}, {-0.01, 1.01}},
       PlotRangeClipping->True,
       PlotRangePadding->{{0, 0}, {0, 0}},
       Ticks->{
         Charting`ScaledTicks[{Log, Exp}], Automatic}], {580.5, -118.66252583997979`},
       ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}], InsetBox[
      GraphicsBox[{{}, {}, 
        {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1:eJwV1nc8ld8fAHAkI3uvsrm2eyUzPQ0jhYhKA5F8VZRRVLZSSmVWiiRkRUaU
2flUMopKGREle9z73CIz9Du/f+59vV/PeZ7nPOfz+ZzzUfA4s/c4GwsLiwT+
+f+/3guvyrJTepDRsE6cVk+iN6dNzhEn9WBt4u1sKraTKv+mNm89EHK5SP2/
z92urBg/rge5unY7dbGrAtkr5I7qQY4Iu5829hZqVvlNJz24NPYhQx17V0F/
yQkzPdhi/zZAAfvb0bIz86Z68Fs4a0Ie20cyRjfGRA9Yfr9w+79vXtUqyTTU
AxRy3VoO+9PxkKfdND342V0osgF7v6JUsYWqHqzc/BIpiX0szalQQUAPOnm2
PefH7pj2sUjg0wO3g6Ls/7f5rpiBVR490Pb/aM+HrbpYKd7HpQf20nOjPNiT
+yUu3WHD8znbsZYb20+49zDPHA0+bbXgXYMdfs2Nb7aPBgGuP3Tm6kjEHAjO
P/aNBvf2ye2fxT5qlLDjcw8NzviuC/2DvW0MLpR00eB5Ws+baWx2C8XRE59o
IBclv4OJHccy8vL7GxrMtp5YHcNODT7p11xIg1X+lQNfsQPOcz92KMDX2zrd
u7FtLuT39ObR4KCmxcku7H8XR7czcmhgevZHUAe2V7iHmPBDGlQHN4V/wtaP
OVRzOJkGUV2XrZqxPyXtYmeG0OD6LGfxc+zC5Amj8xfxeGpgTCX25ZRYX9YL
NNgfonWkAtvwTmOXSBAN1K0i2MuxM+5tLzDyowGnqtvWYmyfTBO7aE8aeMk3
eWRjcz/VSBWzpQFf+HHiFnbzv2HV3N00OLYuYOgGdqzDw0qDXTT4+vlaTBw2
16zIlwNWNKhv//gmFptz8wrf/W00GK08rnYJe+27j5dkDWjQ/FsrPhibdfTs
GYocDbbdG613xQZD3dUXG2iQVJOywQU78trEjZ3raeD9fOriYWwWbdfCE1I0
sIErOs7/X69Aq5EnIjRwzBC64IC9wip9mMpFg26r06k7sBc3IEvj31Swbf4y
qvL/eAi8LC1kUuHm/OF3SthGrPXS60kqSG1OLVTAPj9cQ65OUoHjP0n3DdgL
hc/vNAxTYY3248ei2HOGT0f3fKVC6XPzWDbsaYcHV7wQFUqcQm98qyVR0o70
X931VDB7M/X3K7beprRD1nVU4OQ+9F8Xtr/kPR2taipsFJDWa8f+9T2l63c5
FVSSgu40YjNP3VANy6XCk9U/KaXY9JiQxuSbVLgoF20chT0rz/pO7gYVoqR2
O4Rjr9ZeaXtynQq0gW7PEGyB6cSON1epsEFWOeLc/9/vmj84E0WFeJ+vESew
zxt0rjoGUcGvULrIHpt9TMdQ1I0KTjqeUTLYfNEVJpkuVKjvXmGXxBbfYLJF
6wgVmkMvXRLFpjhaWJgfpIKY9CZ/Puxd6LDjWUcqTAy78f+rIVHC3dgzHVZU
+PtEwfontszOwbwUKp7fH9/YR9jsl4qusOpS4St7KMsDbHp90PHT2lTgj/Hw
T8V+uZFHaacGjtedOLN4bA85/Yy/Svh73fjCQ7Hz52JSPCTw9ae3bu/DPrHL
kc19WRekddObWbFNYAyZLOpC3idf8+VqEvEahIaJzukCZ+O1F3PYpQqPF5qY
urAl7cSlKey5hTlSZ0gXRsu3l3ZgR+fd/7bcogv1VT8cHmOnsw9WpN7VhblZ
qg2BbbK+WDUqRRdK6V4VRtjdG8+nnkjUhQb+48J62MLH+ENN4nQhyediiTJ2
7CuTHX3husBmv9OHG/tceHK7nJcunHcUHfxURSK7BXMyV18Xfs1SLQ9g0wUE
j8bTdGElu91yD/Y1yrf2YB1duHaDz9QKu2G/f+VONV3QV1+3aoBtUvkgdFJG
F8JaZ6fEsCkBc+t01ujCxzKt/e0vcL3Q8yiV7TrQqGT72Qzbb39k6+cPOpAi
qNOoj/0DnP1/vdeB4fXLRZrYL29z12o26kDDnIijFHYoccouq0YH0o/L/Jt5
TqL5JJ1z8dk6cPFs4NtcbNK48vWJczpg/aIklBXbNefmf1cDdGCREpo3V0mi
Nn4v3sdndMDy66PXU9hFQ+L7B07oAO+FjJZO7JM3z0/sd9UB6vo+iQLskQFT
QXMr/L67c5k22H1XX7vISunA6na22isVOJ56ytUrYjqQc7Cw4Dy2aV+MaL+w
DtROW0WfxL5PtX6fxqsD10N7ftliO/d8NJJi0QHhxmgkgt2p0S8iOqYNG7Ie
rkl7RqIPbfMt3JXaQHvSIn+3HNdT8EGViTJtsFjh5ryCra1YG9n8VBsyuaM+
n8W+ERRueDVfG84HnZLci71Lbu1j9nRtcN5x4zAPdqOfcOS/aG3weT2Xer6M
REhE22DWXhvei/0u21yK9zfB9AZuO20I/LRjtzr2az4eR9nd2qDjZNosht3A
OXHGykIb5JcCfMgSEr37m1Nwz1gbDh46czADu2to/YYtitoAYpTMhac4X57x
sl+d0YKSgva828U4HqUhSWm/tIB1V8fRcGxm8aR8KUMLWrZ1zHthT+c1m/WM
aYFO4lpkiL2QdjlYs08LKqxLirqLSLTm8vLkxwYtSFsx/iqILe1Eb5e8owUf
2Q8tehWSaHw6UXRzshakfN59bzd2ZaLhAbcELXCi8QpTse0/Rvc9vq4Fr05I
3lwoIFHMLqkxvQgtUHmpmX0V+9dWy2Ubby2Iu3V/fUY+Xi/tTNUoEy34+cAg
ozCXRCmtFidyDLXghOa2kWvY7qemnjTpa8G84PkVb+zlfAMav64WWG5zy1TF
pim3maYpacHgRFH+w8e4XqWX7Ct5tcDvRceV2Bx83nI6hUx81wRRHrOojVm4
Hkajz374pgn/WI0EuLFvNpT5PvuqCVobHA5/f4T3lyiBo2GfNSH2soVWLPb3
v+/MhRo1gX/N1OOvmTjev7bxGxdrQn9GdZrPQxIp9ug+ig3RhKf05jiXdLy/
vHC973teE066VvFoYJvduZm895wmLK1pMp1Lw/noOBWz/owmMMscC29i32rL
PVnqoQm0i2HPqu6TaOnVBv2v1ppw4bgOx79UEn0u5GmiSGpCRXc5u/VtvJ/3
Wc1sE9MEi5/dtfzYiXyX5Y4Ia0JVVI1sRwpef7/l4AReTdgi82XEBbttE0Nt
kUUT8ltHTvkm4/MbPlx/N6EBNkvkREgirveuRDvfWg1YaRGQcbxJIlmuDxev
VmkA2+YYBz7sMON1eY8qNSBMn6bUdINEm9Oj/3WWaACf+cRtY+xq98DSLTka
8CC5I18qjkQVdCdhwZsasNG3nrUxFvcjbJJd5a4aQPpf2/z+Es7nwP6qW4c1
IDVfNd8Pe2I4K+2kswYIxEhfEcNWa9J2V9yrAZkbb992iSZRbtwOeqKFBqy9
dm5yNJJEWaJn2Py1NCCnwC+nPwzXu2qjju6SOkxOx3Y4BZOo5m6cEM+8Ojio
HGgcDSJRD5fDn9EZdRBg7uY9jy059a06g6EOAasRCannSHSn5Lc5/091OKie
eqQ9EJ/fRhsOM5rUoUXKR1jBj0TXd529+uS2Oryv+ypC8yZRkIuf7J0kdQj/
ttxb/B/OTz+fysh4dZDWc+tRxza64zm075o6XCzaECznRaLRn04ES5g6jHP3
iLJ64v7xwqZ5J091WDwj25juhusvb85rVU8dDnSvsmvvJ9FwzfTKuK46uLn+
2XFrH4k+tpEpX7TUIdX8bgLphNdjZvR1vqo6rN2ua1vkiPt3olvWUVodav8a
aa53wPnX9aIrj1Ud7gYZU1t3k+i/tRcsHT6pQfhHwzseW0mkfCpa0L9NDSb3
w50SgkSDn+J6E96pwcKAyb2/W0h0JD3j9KcGNRCVvpCRYEaivRsb7uypVgPv
yq7opyY4/u4CY7ZZamBsWhVQpY/Pu/rHV3edVYNt7IOXlyh4voolDif91WCI
fE8qY9+IrZK5floNYr5Eadip4n7Q6X1Ji7caPDV4LfhAGdfz5K/unS5qwBak
e1JLgURjkpvVrCzVwJxrW5eANInqzn5u3iGpBnv7t1v1r8PnnfRxaxUxNZjh
vTrbzE2iF2i+hUNYDVobN6+Uc5GofN2G9y08atA2vV4gmgPXc+Z/bXv+UUB+
/v0cDxuJkluX2w+PUmDp87q01gUGOqlM+RZYQQG1hZUMcpiBxluqD+8ro8DP
Af/TmUMMdPyMTZ/BUwooBO7bZj/IQEdr/PsX8ygQJJI/UvCDgfbb1/2ISKOA
5UWzTvNeBtoW6jAcF02B4zmp+eIfGUiyI4SRbU8B3hLqGtEXDPRfq8yjGlsK
JEl+NkyrZKDnDbVO7bsoED922Vm+goH2Vf6tXTWnwNRc017lMgZKuhNy/aAx
BWwt03uFnzAQ38EQioAiBVqOuRRezWAgtu8X3S/OqMKJt66ytZcYaG+XtFji
L1UQ/tgptBTFQI8+1DTnMVQhyutOvEEkA21FS7qdY6rw6VLV+vxQBgrLvLiq
26cKATuX5XzPMdCCx8W0kQZVoDxb+hTixUCMsQud9ndUwbIgaVOyJQMty2UT
6smqwNf/hNxjzkC8zq0FrAmq4Lx0fAv3dgbSaJYNL7+mCtSvurf8zRjIO/+N
qmiYKsjGD3lK6jPQsDff+e5jqmB0/UZsjTwDfZvIlHalqULz2l6K1jwdTSq8
u2ygowpdZy3e+v+ho6WDMyS/pip82f3K/tlvOpJ8Z/EGKavCTV05GQ06He0v
nDylIKkKHB9O9I0M0NHnk/r1w6sqEEecmk5ooaOWqSa3U60q8Pp0PFfcXTrK
eUsJ39uiAjZ63np7U+go8uHVdONGFQici3gmmkhHBo5WPZygAvLSsVlx1/H4
msa9Oc9UYKBt++WtYXj8tbcW/ffx8039XoM7Hk95o7nnhAoUHs1RZqjSkTCr
0i4DLxUImbuRJ6xER4zeaO8Nx1SgqfdesZ4cft6t7Y+njqjA+oF2VQ8JOhKa
eyUba68C2i+FOcI56YjeAEKvDFUguItTOXt0CmV5vJzX41CBR5sru09nTqE9
8ZrWe9aowJ5r//JU0qfQcm3q/VMsKnDZKfdn190pdEAs0CxnSRlu1dsGq8VP
Id5myiUxpjJI1rYEXQ2bQkHaifwL3cowo+/Mq3twCu1aOKZSX6AMNVxTMMsz
heaV24N6cpVh8++VcTrHFMpx2NI8m60Mdv2W2f2sU+hfoeQpnQxlWJN+pPzJ
/CSqcGkrfZikDHtEPpxdHJxEsm8MNkeHKAOIO9rtq5pEMze5Ha1slaG9vPTu
N5dJdHTp3yGVXcrwoayuNvjAJPrgNeexxkoZVCPQFh6HSZRPDAWgrcrwqdje
VNJ8Ern+rksy1FcGlGHE2qI+id45+X2myChDGmPUMmxmAmXKdDtwTSiBxA1T
DXrEBOKPbTs4OqIEMXPVdu7nJ1DInzfuDYNK0K9pmtrqN4H2t5X6R/YpQcY2
64AY9wnEE3E9ceGjEhQ22WlEbJ9AQYNm7ePP8f2bUoeusU0gm4Ic+5bLSsDn
u6Lx/OI4ivPOj+uLUgK99/zKgQHj6B2lqJEZrgQHDG+dVj05jqxzn20Wv6AE
XfuPdJ85OI4ss1+rHfNVghEHC7GbhuNo64MBlpV9SlDNYak3+XsM6SeuL6NS
lIDLW1hg3nUMBdrL03coK8HAoe6i0/vGULmAMuWAghJ0JtMffNs9hmi3NB+E
yShB8COvw7eNxpBOnMm1dwJKQM0NP31VaAypxTi7ey4ogpFVpLvbq1G04UKK
UGqLInx8sej6RHIUqfV+YKlpVIRHgt5Sc3yjSN+U+9e3N4pg/vfis01rRtGu
lbAPci8VoVgw3jeZMYKCov6LyytXBPHVIpvmVyPo0zWTtS/SFGFOKjtQ2HsE
Xb4/sNDpqwhPBV+XsBQNo6larQERYUWIL0yw1hccQs+P/IqZ51eEioWVC56s
Qyh65ZnmNx5FuKlWZ3BlehBJEqbBWWsVYTKrf2dGxyCyfG3NT1tUgFiCNVI+
dRBlNnttthtQgANxm+VOrR9E+zszU2OfKsCViWtf+KV/olekqMPKLgUwolzI
PfqlH7kOjqiL71SAgX2xbfOl/Wi58zmbroUCaPiNmgfd6kcG9c4VRwkF4EPe
NurW/agwLl2iYaMCdLmzDHvX96EUNeXv19crwJJmvJnzo2/I22PjKUlSHlRX
v/fuO9CDBLocYjYmysMByyOCOREdqPlQ/Yun8XLg5pBl8oPtNfJhUiLt2WUh
cdci47lKPsHCMP0Yl7wejM6eCcu2bCWy3zE9stbIgLTMnaaru3uIl8RBpbYV
afAVyKhMCOghvla8Hpqfl4altydfX7rXQ/A+vO1pS5cGzmqWfspYDxEUaOq1
0CENM1tqc49H9RI71189YZcrDac4ZP7llH0j6L6yfks7peFl5D7tYpbvhIGQ
bdjeW1Jweihy0yeNn8R4i1Lu/VgpUNosusBq+pO4H730YTBaCqT+Nl2i7P5J
/JvJkw8MloLscE267amfRHMXW0PyUSmImv7vJeeTn8Sh9Kp1nXpSwCdaVaat
NkiEUZRTD3RLAivjv2oTqSGCOrAED9slwUHcM2eQMkQMprZPjL2XhM4tScbh
BkOE5boI0/MgCS7anscTHIcIfkbP99QCSdAI1e2TvzlEZJbHq/SGSAJ7rbrL
zMoQ0WD2t/yIvCRwn0Dkqa5hYu7c8E41aUn4d6X6bsHwMKH+tO37jIgkRHW2
cfZMDxO3ZDPXxXFKQrZlvB2fwAjh/M/co5qUgMf8LLPvLUeIKbglJF4vAQcE
vkw8fjZCCJsr+n08KAGe+wy3zESPEuahPBxpjhIgzRU8Ghg/SgRX/EnzspWA
/O93ecbSRok+5aamla0SEMNxbjynYpTIXesjp6UmAWdG11dEjIwSJk2VH2Ln
xOHUM3v2KvMxwn2Xtfb2ZHEY6H0icXJxjDBSs1U/f1McHmYd4ohfM07wczio
PL0qDi9Ei3gL+MaJmlfOG6RDxUE1+GRoncI4IWzszTftKQ5VcUdK3K3HiQbK
VcYjA3FYZciUP7kzTqitfVvM2isGC1uTBv3VJ4jVweYCww4x6NtyZMJKb4Lo
gNbHvh/EYGK92KyI6QQRFdrxoOe1GHALGZvcspkgemeGbpY9EYPf182deM9M
EHGDbKfdw8QgbjUxdVP5BO4Qt+q8kheD5N1LRwJpk4T5hgN3L0qLwcqjkT31
xpNE2kVfFn1RMdihebh0edsksXPT/c+5nGLAsLYZPLx3ksgqnAm6QYpCrpaE
yoOASWLf7Vx0oA573vrvxrJJou4krwN5QBSU0dzeRdUpQrhZsSbPQRTGv3tc
YNeZIk6oGCu57xaFJzs87Tg2TRHiA8dnv2wRhYuLxZrk9inCbx+6V60iClxb
bJr2uE4RSlsDBi/PiMCG/lGxY8lTxHWxr4Ey8SJQjtpb+eaniMuS3DuIayLA
6Ro3m748RYTLmAgfuyQCYvp31qmw0YlAhfTSwmARMFKelZDnoxNHtI8yjI+K
wGXq1uTXinRC22Lcy5kmAs8dplKRDZ34dHbh4O0vwlBU736gLY1OvAtWV69u
E4aW37L/xWbSiYaLhxb6moRx/6pua/aYTlRH1t1RrhMGlwdKVSlP6UTWjcgv
z3KEocntWOsS4PfncNl+PicMlk9WpwuG6YR4h+RWAUlhKLW6t/sNhUHkS78I
thcWhraNWqblmgzCxH1fSSKvMDhIPuNJ12UQrmSirCirMFg3XvjvqCGDyOPi
WZGcFAJpl96SIksGYWS2Uq1YJwS9319nOXsyiEO5PzcaHBWCvZUiKyrpDIJO
jzgVfEgIGlVtTUIfMojwjbLZVU5CsDnzGd+HLAaRBYeETa2FoFT+0A3PAgYx
1fvlF6EnBHZ0vTCX5wwiVKCx2JpdCPjOFNVf+sggHpwvpLjkCwJZ/dPg7SqD
KN1yuFUhSxC0jIS2dLKSxGt2Xv/RNEFo1+xuH2AnidEE35oz8YLwPF7jxeQ6
kqAWUG2jgwTBxSRZ7p04Ht/zPCDPXBCiXdOu1GmTxKdzV0KGXglA06sym7vO
JDHLOt7gUykAZ35Z8SgfJgnpW9b8c/kCMCfPtq7YhSSO5fI+4koQAE/Xx33P
PEhiriupUdtVAMbCM7xu+5CEjNFDofNL/GAW0H2+KIIkvJZe5PFu5IeWfQEV
Ntkk8bndrv4khR8+Rd/7Z/mYJLYUjHxuluEH4e1rbm7JIwkJZ5HVy+z8cFJL
PEzlCUk0V552Wunkg9n2BPEv5SSh7q/CSp7nA7ShZkfpK5KgjyUd+viSF54Y
rDpd7ycJZ6Tup/2MF2w1HqRt/EESDXcgJi6PF57VHUroHSCJBxZkqVUCLwgF
ZiUoDJOEXbY1J7jzQmh/9vaUSZIocWWpKGXnhSBtUdxQkERApy9f0i4eKBWa
e3ean0l8f6K+MmfGA7LCU86/BZjE7ugR+mEaD1hdcrnvL8QklHVdWlUkeaD9
63aLU6JMojvWJq56ZB1ctXybukOaSWzerMn9M3Id9P86JhanwiQ4s8fZqS+4
YdFWOyDOhEmcvZDzJ6WQG5yP/Mx/Z8okBvYcHV58wA13zL7PcZoxiZrl7jdv
LnNDYI/gcCjBJHz2N0Uf2MsNMz38e+3NmcRn7lyWCAYXZFgajjy0ZRLpfseW
25S4oLUsxOuPK5Mw+rBY5yvBBYziwdk5NybRqZkQxsfDBcIcXavzR5kE/1jd
qs00J5Re8rgy68EkIl3EWVuBE8oSvAq/ezEJz10ta9+5cIL0/SidU6eZhJay
rkDjXQ54afr0fUgok2iOevvxeBwH9L8RKnEIYxLHfxxOWBvBASNxO+xUw5lE
xv1YIQsvDsiUuN/0PoJJCAoNijToc8A2IYNezktM4s9KiuTr9rXw+WuihOU1
JlHbvaTwkmct8AfH6o6l4PsjG5/qsayFhT8P1W/cZhLR6kmmeX/Y4Zp3mTH1
DpPYFaK+L6GfHXZI9Weeu8skemWdYz1K2KHz5LOns/eYxNLxSpLDkR2Iw/n9
7zOYhMmfM7V77q+BtztK+r7mMQnZB6Y7G26tAbeEcKZHPpNgs+TsNLq0BrLz
l8zo2O/uZpAKPmtAedQyabmASRwybVP4Y7YGBFlXNokWMYmL0RqxqT/ZoDvp
pqN8KY6X4IjTTzU2UOCkTpW/wPOv6qw9sp4NFoyeK1GrmMSlo42KXwXYYDWv
634Rtk1p3q8Pc6wwbn3JOrsa59uekzfqGlih62FQ89VaPJ945pu7R1nhkn+S
pQ5iEtZ8S3p2qSwgk+9ct/CWSehUTt5riWMBlvr+YbdGJiHs8o3FIoIF3NOb
fBuxe4vqPph6sYDjZFpOYhPOH5uIk+r6LCD9rBLkW5iEvAS3OXfmP/SxIiZK
sZVJlIjIKgYJrKKHveNONe1MgmPpRKz4wgpa/y25gPszk3AdqCSfD6wgBdng
OGds/mLb2vmyFXR814XFP9inLcOcLjitoMizZglqHXh+F/quhN5bRqZDR/VD
uphE8ff7U9FKfxGjLv3K514mwf521EGJ9y8qc/tRKvqNSRx5olf15s8Sui6y
O2Q/Nu/5d5fZG5fQdpG301+xfYSWNlzxXkJP/bRCevpwPpoftL9WvIiWNe97
tXxnEk8KJCrjDRcQ+7ynmvcgk/DIkKx/LL+ArM24tmZgSydLva3lXkB/eJvX
dWBfD5XpHPs2jx627andMsQkvPfIzRKR88jQdmuK4DCu71nVTb+a55A0O0Tl
juB4bjWotD80i47tjuDPGGcS+zcZ1nvtmEWp2484vMfm0zB6G6o1i7QedDku
YIeKmHTmr/5BxuMC9xwmcP6Mms2yZP9BZ3+e0WGdZBISNyw2lU3NoFMuip+d
pphEQrdTpVDYNLr1+rDdJwaT2Pnuof8mz2lUwGLrvojNWj+pfXD3NFI1+qKv
SDKJgKzI3EypabTNXVkuENvJt+iu7vPfaP17dx5hJpOQXMN+0Zb5C8l+LUox
/8Uktrt4hQm/IVGdZO9A+DSTeLZ9efZgIom4LEqqMrGV1ZJOP3IjEbw1PfIa
m2Om3o26zEAFUXWca2dwPcSKbbfbxECjhvyLV7EdKxo4rudNoWK16djLf/B+
waOUwHpjHK0uThw/NMckZjbcMk53GUcWL9pOncWOpi4OGuiOIxYbis0t7Mx9
Hzf5fB5Dyp9EHrzC7nsY8q1Lcgx1GOfHqM4ziX36HapFj0dQoEjQwwlsS5eY
+v1oEH3x93Tav4j3szO/vH4nDKLhH0K8Ptie0YcFb3gMomqqd04UdnQe7dir
tYMotvVNcBH2y9/9XFo2P1G1kMRTliWcr7y++WzlP1CPvVtENra968fOAyM9
6I3l+Z4vf/F+9LIx9HVYDwpqGxIex1aVe6mkLd6DzorUai5jL/8o8mez+oo8
lMKXlZaZRJ77db7i/C7Uu7gsF4C96mlhwebzBb1U4EjjWsHx7w46cXCkBdWp
epbLrTIJaurxFzriLUjdqdqIis1x0Gktu1UzClr0zdmKXdZLe/Q0vxF9+JCp
5Y7N9Z3+dY3PG6SY+579EbZvy9uEIyPVqFV/74LMPxzv3dlanFZVqOa2wrgG
dkNrZHNZ/nOkWfsdGWOv/2TKwunzDC0I11MOYKcUH/vhMVKA6IWG/QnYU6Wy
ElX5uejqgxzBh9jbK3rs+HyykeBdHe1i7J/nHoaeGbmHphu0FFuwE0LF6FI+
yahmYWKpCzuUQ+JF7Mg1xLFxf/0wdhmFQ6t25AJKc799Yho7N/1+QrDJvZeX
jd7/+4f9P/ikwTM=
          "]]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwV13k4lF0UAHBEyL4PSvbdmFGpSG9fkQhRihayRCiRbJFIKZKsqSwlhEq2
EkL3FAkhlaWyLzP2GdmS0Hf7Z+b5PXPf996555y7yDl5HXRhY2FhEcIf/751
ylxLi8/oQFffrqGBTjqqOafnR3jowElf+r1/tlbm39LspgM+OrIW/+x3p/Tl
qIsONJabl/Vjl19gf7nRQQfEUkOv9WHvpGSWxFjrgKp8MXcPtumTnkJ3Ax04
vef5607sLodir1/6OiAie9fxn8+SIrQj9HRAt/4v5z/H3NAszNiqA4a3TA91
YLe6BBd0UnUgWq54qA37iLzkcyNlHejtI018xnZOtX4qJ6AD3Ncbb3/Ebps5
axTHpwOibTzS/2xoGtG/yqMD8lJ3cxqxlX+Xindz6cBVkRuVDdjjRySuJrPp
wPnl/O4P2N7CP47zLFDBrZb3Tw325aiTfPPdVKh9lvKwEpvZH5Dn3EUFz5Im
4X922Ba358t3KpzcJxfxGvu/EbhY2EGFvwWapyuw2Y3k6e6tVBBpeCxbhh3N
QnvTW0OFHzy00yXY9wI8vOufUmF6cqdBHrZPIPdjqydUEFg5kp6LbXYx7/uP
XCrsNbm2nIP9N4i+eyqbCi5UyfLH2K6XncSEH1JBUWitYhb25ohjr48nUqGL
+aI5/d/8JZiyM4OpcFaQap+A/TRxbFtgEBXIs5oP4rGvJUV6sl6kQhiDvycO
e2tyXYeIPxVESy/bxGI/uL/7yTZvKmzJ69t561+8MvQswk9Rwcae0hGBzV2g
fk/MnArl0V+kArHr/w4r5+ynwnxX/bYA7Eirh6W6plQ49uPiYX9srnmRrzbG
+Pnb7NG+2Jw7VvhS/qNCza9Iujc2R+OnqzK6VGDZmGPnjs1K9/VS2UgFxwrH
nUexYav2atkGKuSnTmnbYodFjd3atx6P77+5jTbYLFr2T90lcfyE3f9Y/5uv
C8a0ZyJUIN6VPLTEXmGVOk7hogL17MdUY+zfG9De7T8pkGAZbbX5XzwE3hQ9
ZVLARdh7Rgd7G2u11HoGBU7HU+Kp2IHDrxmr4xQod9xaT8ZefPoquXaYAlcc
VqTVsBe2FtAPfKNA6aSjzQbsGav0666IAg1MOXZ27IQ9adOd1RTwEUw5yoat
syX1mEkVBXg0A/NZsM+T7pM1Kyjgxn/EdKWDjqZ7kzp+lmBvUnJdwGaeuaUc
kkOBxj2OUqPYkxHBdYkxFLBl9T7SgD0vy9q48RYFDrbO+3zAXq283vzsJgWS
9CpvvccWmIlvq7lBgW9f5sreYuvY5w3OXqGA5OniyQrsQN321UP+FChRKfz4
BJt9hLxV9CQF2rd6/3cDmy/8pV6GHQW23y5cuYYtvkFvp+YJCuTvyXwVjq1y
yMjI8CgFPkbflrmMbYqOH/I9RAE+46X3vthxdyO92owpUHa39pwjtvS+wdwk
CgX6j7Su2favv6v511m1KZBZu0N4y7//V+3vck6LAk/Ia9brYL/ZxKOwT50C
ovFhcprYThs3P/ijQIGfWzxnN2LnLUQkOUlQIED3VP5abHfTQ2yOy9qgHT2j
19pOR3owgvR+awP1Q/DjJmxe3UshogvasN/4xLoG7CK5x4sfmNpAMv377i32
wuICgzykDWerPjFKsMNzU7qWG7Rh12yIahJ2Gvvgy3t3tcHrvUS/1b/3r3+u
fCVJG2Jyo++aY3duCrznHq8N5q3H95lgCzvzX9KL1gZdNHJnF3bkW7093Ze1
gVf0Zh8Z2+9y4ueNrtqQx52lsA7bYtGQkbNZG0xk/spWtuH5EBB0iKVqQ0Fy
I6MUO0ql63MAWRtaDka+LMKuPXK+dJ+qNvSl5KnkYOuVpl8al9aGLlOpZ3HY
Kj4L68hr8HzoeEufwmaZzFUp/UyG+g8ye9ixvY+ENX1pIcPJ27ucVr/SUR/Y
np/+SAYti6HARew3d7grNerIkBIXdGsS+xJxxiLzNRlGNiTtb8P+lUD2i80i
g06djUwmNmN76Tt3PzKE/vao0MW2z445fcOHDB+3hBZqYzfzu/I+9iJDpOPp
VFXs/CHxI/3uZLhRGGgthe0REzh2xJ4MtsmrJitf6IjWry9oaEyGb6P7t7zF
7r7xzk5Gkgya5Ln0Xdi8OooVK2JkqIr7enErtn53hGiPMBlmvU4ak7FTKCYf
U3nJcOS9fJk0tu33T9skWcig/ucHff4zHbWr94iIjmgBC0upTy52S/OvBu5S
LQhffyV+tRXXU8BRpbFiLXgaX+I7i60lXxlWX6AFB04G7R3FvuV/eeuNPC2I
+XKy9DO26UaOx+xpWnDj5KXqLOw6b+Gwv+FaQF3YaW+IjUS0dOcttcAr54Vw
wCe8vgmm1XJbaAGnyYy/B/Y7Pp5DMvu1oH7P23o77FrOMS9jIy0IdMvebIjd
+Cf7yf3tWhDWfVVdELtjaP2GnfJ4vKLG/tktOF9e8LLfmNWEuqJD76qbcTyK
ghNSpzVh5/KxRwXYzOfjskVTmiCfbOjxEHsmt97g+4gmJLoYVIRhL6ZeC9Do
1oSQaeq+3dhrri2Pf6rF/jDJ+7aJjqSsJz+TkjUhlC/TIP8jHY3OxIvuSNQE
SrS9Twp2afxWm5NxmnDKID0mEtvyU3j345uacEdfIOAUdoSp5IhOqCZIk6qE
pLGnd+1dNnPThMP5O42uNuL50spQvqKnCTz5DfE7G+goqcnIPXurJthpipqp
YTuemXj2YbMm3Pw1MiKCvZynS+XX1oRx/pCa0Xo6oio266cqaMJ/HNEc8dhp
UkuWpbyaEKnVFtP1Ae+3nNbBY70acOzsPVebOlwP9HDfli4N8Iz80KyPHVNb
7PnimwbE6Uisk8XOuyLgEPJFA9QF+FlH39NR759GQ6E6DSi5sNzvh206/R//
9ucaMFp8VzOqlo7kv2s/igzWAO5c86Xod3h9KbNP8QzUgHEedMkD2yA5JvGg
nwbwnKJ83Idte2giYr2XBnCFtjayY99uzvEoctKARpKUWdBbOlp6u2HzNxMN
eEVt5TsOdPTlKc8HFZIGfDpYrP6zGq/n3caz/4lpQCoK++8jdjzftY0nhDWg
47aX3GNsS+/lgDheDYi1Padvi928ZUr1N4sG7GrS/FRZhfdvaLnZOKYOVTHC
5MBKXO8d8RaelepQfVfUt6acjmS4WoJulKtD4GAcbzJ2yPZ1uY9K1SHGyMHZ
DXtHWvjf9kJ1ULkVYsqLXeF4oWhntjp0zmybsyyjo5eT1sKCMerwbEHRobkU
n0fYSB0l9urgqybRGluC8/lCT/nt4+pQqfOj2xp7bDgz1cNWHeS2EDGS2Kof
tBzlD6pDWmRBx6NiOsqJ3jMZb6QO0Ye0lp8X0VGmqBfbeU11eFdHEnhZgOtd
uY6svaQGip9LBS48paPXd6OFeH6pwXZOKzcN7O9cVnP0WTWQJddbDj2hI9JE
V8WDKTVImIhtscJOLvxpyD+gBmYPqR5qeXj/3rbh+NQHNfjz+cHVd4/p6Kap
741nd9Rg/dKIyN0MOvK385ZJTlCDFOuf9//DdvQ+WxoWqwaDGd/SJh7i80Ty
qaHDUWqw+EpOfCc2fcCaYAlRg7y3YdCdjs+PF7f8sj6lBkMHHxAsqbj+chdc
V3XUIK3uw9/vSXQ0/HpmZVRbDSxOnbrhg/2pmZH0VVMNdktFea/Dzpmlv8tT
VoNmcp7ztkR8fic6ZQ5JqcE+wbSSW/E4/zrKOnJZ1YBnb7ak+G06Os1xca9V
qypEhf6czr5OR4pnwgXPN6vCGk0mlYI92Br9I65RFUidt5peR9DRibQH51pr
VSHg28q6lmt0dHBTbfKBClVYvPchYTIcx99RYMQ8UxVOGpstcYXi/a768Q1T
X1Uol5DdW+6PxytfaOVxXhVaFBa6NLFvRZZL3zynCsKVic8y/PB50PpjYYOb
KryYbJqN8MX1PD7duc9OFbaxBHIb+9DRCGmHqvFeVbApq7XI9KSjKt8v9XtI
qrCRaz+p1Bnvd1IuJkpiqrA9Sy2OBbsM/WpYK6wKJsU2M6ZOdFSybsPHBh5V
MC0U9Op2wPWccbr5wF8VqLrgJz1jR0eJTcufj9NVIBRYauk2eP9RVOm68FIF
7BLcmKOmeH1rqDh+uFgFng1+PsSP7eJl1q1bgC1PddcxwfeB1+d7fueqAPfI
7AN/Y3xfsazqC01VgQ9GPauMPTi+l6yGo8NVIDLAtSF9B863tuCpLEsVIL3v
fjWsiePRJP3otbkKkKWv9U1p0NGr2krrz6YqsEa5MG9enY4Ol/6pXDVUAbEd
TFFWNZyPycE3j25XgQoJhY2cSvh8djRYRUBeBWZ07Xa3rKcjtt4gx6BZZUh6
NRKkx4Pj1SElFj+tDImVmz+LrKOjRy2v63OnlGGTHuv1CS462oWWtNtHlMG8
WpYteS2u74ygVe1uZejfJsTRyYrz0SkolVarDCxNvRTORRqaGrnYbpmsDMFS
aicEhmhoeWMWoZaoDE+G80ISBmiI17bpCWucMpzcVnNUpJ+G1OtlLpdEKQNf
mvtm/h4acsurURYNUYbr8kzR0Q4aGnbjC+x0VoYHu1xC1RppqGssQ8qeqgzH
f1WMNBTQ0Lhc4zVdsjLUDJ+JXsmnoaWjswx+DWVQFvzmR35GQ6RGoxqkqAzE
UWmByFwaOvJ0/IwcSRnk4tqGJDNo6IvH5urhVSUocTeNehlHQw0TH06eaVIC
6vot+/K8aCj7vcrlgw1KUPXTcPC6Jw2FPbyRtr1OCS66sh91OkNDuoeMv3OC
EswtSH0UOI3bv647mP1CCdi27NhraI/bR7036klRgrjIoGcCZri9So3GAXfc
X11AgYASDQmzKpjquipBuQNpzRV5PH8/wt02OCvBZ+NjDxgb8ftu7348cUIJ
jPdEJ72RoiGhhbcykZZKMHxtcJoiSEOTtSD0dqsSJFMi+48tDaNMpze/dNYq
QftRM4UHH4fRgVgNkwNrlOB7yuyXd/XDaLnyXsoZFiUoetheMPR+GNmIXTDI
XlKE/2qvfJOEYcRbr3JVjKkIbcfWeNm8HEb+WvH8i52KMBXE6y+SNoxMF52V
qp8ogqGBsdtZt2H0S/Gz//ccRWg6f4HC5zKMsq121s9nKcKfZ1MRTxyH0d+n
pDPkB4rA+am6pu3YMHpp11z0MEERTj3zWJgzG0YyNbo7woMV4ZAZ6boNZRjN
xnAfMjZXhN8DLO2XZ4eQw9LfY0qmilAWbTBLYQ6hFtcFpzXGilA+ab22Z3wI
5RFDPmiXIrA6u0/JDw4h+59VCVs3K0LY8W2MU61DqNHa+4uKtCL4Mmc3Vj4b
QhnSnVZcYwqwXjbCJMhuCPFHNh+l0xTAwVlx+wnbIRQ8V+NYO6gAPnWpSlsP
DaEjzUXnw7oVIIqjpK1z3xDiCb0Zv/hJAcprG3JrNg0h/0GDz6OvFGBtVOec
AdcQMnuSbdlwTQFEVqwHwp8Nomi3vOjuKwrgFHA3vOvxIGpUya9jXlaAYvsQ
Ga2MQWSS82KH+EXcv66+emXSINqb9U7V2VMB7vzRa74SMoh2pfezrBxWgOHo
JNIL80G0OX59MUVFAZLPcaj5jg6gC5ayk3sUcfu3pt69AwOoREBRxUZOAd4P
WX3a1TWAqLc10kOkFWCFsq58qnkAkaP1ohoFFKDZv+/MSMkAUo2wdTy1KA+V
DpnS1sEDaMPFJKF7DfLwYjCxtJ8D//6jheV1nTzk3neOc13tR5v1uae7auRB
4p76r6GFfmS6EtKy8Y08qL4ysHg/0o/8r5yOzi2RhwcG7h5yDf2oNUqPoyxV
HqbXqmdvv9mPrqX0L7Z7ykOt8C7lao5+FPtHavSXhzyMnB9lHljqQyknDndK
uuH+vi0Ji4z1oWKZxlI7J3k4fi4p17GuD/VmvvChHZGHpMGbFTJhfWjbs+uT
c4Q8KBSJK/BP96KJSs1+EWF5KIocVPR524NenZiO+MUvDzPXr1lvze9B4Ssv
NLp45EFbtE2UltyDSIR+QCaHPFj194ksnelBe9+Z8FN/y8ENzco8LrEelFHv
usOiXw7CiqIvPnfqRkfaM+5FFsiBXGxXX93ED/SWIWq1YioHF9WWlne96ET2
gzQ18X1yIPij72DR/U603P6KTdtIDrQufffhDutEutW2Lx0IOfAK6uG+aNaJ
nkanSdRukoO9RhlnzIc7UJKqYu/N9XJgE9pu3ijQgdycNp0hMWShz3OokHSk
DQl0WEVsipeFMPsXIp8yWlH9seqygtiNoNW4u6RspRqdZaqEWbLLQI9iIzk7
P5tgmdL/FJ24Ht5dU2z0764nshqZTplrpGF5pUw0q6uD0BUyDzl4WxI2qNE6
0qv7iNEGhZyUSEnwye/s1u7tI1LCl1oGwyVBn083v2C1j/g7myt7IUASWh5c
2VSxsZ+o72CrTXSQhF27Zcy4HPqJY2nl69p1JEGoPPhKc28/EaKieM+mkwST
NX4WdW0DRK3Bn5ITsiR44++u7vBoiFjwG96nKkUC1tAEZaJoiFAraO6dFSHB
x13XAoXQEHFbJmNdNCcJer2vS8R1DxG2fw2dKhgS4JJwd8O8+DAxAbeFxKsl
YLLbOs4uapgQNpT3/nRUAtbfHE7LO0UjDC/xrE09JAGxuysf/TxPIwJezqW6
mktA5Vg8BzmURnQrfviwsksCEk6OzITdpxE5HGc3aqpKwI2WoJzYZhqh96G0
JXJBHKq27u44uIlOOJqaaO1OFAdyn5xj5Dyd2KZqrhYYIw6uF8quBLGMEPxr
rZQKbohDeFswpxPPCPH6re0GqUvikNn8+qCQ3AghvN2Nb+aUOFxINj/xc/8I
UatyY+qRrjjcK7BdV/lwhFDleP+c9YcYyHG/7b1DjBKrg/VPtraJwZ7vxHkD
k1GiDZoee7aIQe1VL7aug6PElUtt6d/ficGJkQXdRZdR4sfsUEzxMzEA3j0R
ldGjRPQg2znHEDF4m/Oo3KN9lGCgXeS3smIwnFyofsdxjDDcYHM3SEoMTpnG
7a72GCNSgzxZNouKgaHYw6AfF8aIfVtSvuRwisHhi3xn5yLGiMyns/63GKLQ
+lhWP/fJGHH4Tg6yqRKF0K+vOgSYY0SVB68Vw0YUFl1fXVH1GSeE6+Vf51qJ
Qvv0fgZ70DjhrrRdwXG/KGysvx/deWWcEO93mf+6UxRcnD2CT8aPE96H0f0K
JVG43PVI6U/hOKGwy2fw2qwIRCkl27hPjBM3xb5dkI4VgY4Rzjn74xPENRL3
HiJKBLKzosmPHCeIy9J6ws5XReA/perWrtMTxAW5tKKnASJAmq9z0/OdIE5o
OUxtdxCBIO/Lhem3Jggto1FXW6oIXN6/+oWtaoJo9V08euerMPQ0mTACxSaJ
xgA1tYpmYXi3Al3tUpNEbdCxxe4PwsAb7CSsKTtJVIRVJStWCYNqzAv/WvVJ
IvNW2NcX2cLg39Pa9ZiYJC5kc5l/8ROGM2xNAlS3SUK8jbRLgCQMcWEPNO+9
nCTypMoCLIWFYYPxZV/RiklCz/FwYTyvMKg/nBCLrp4k7BnxMqKswtA8UhVy
um6SyOXiWSGNC8Ffp8ibPZ2TxDaDlQr5KiEY8s/uqPk9SRzLGdik6yAEjj1h
tpnbp4jJydAzAceEQD1wn4WfwRRxeZNMVrm1EPjVRNnu+W+KyIRjwvomQhAj
UwOt+6aIiR9fpwkdIegyUQoutpkiLgnUPTdhFwKRG6pOsb5TRHrgUxW7PEFI
nIpyG3w6RRTtPN4klykIMOL13K1ginjHznuenioIGbSZ6bHiKYIe5/naK1YQ
frzxiekpnyIoTyjm4f6CMPfUtyWqDrf//son11AQFM1kpv70TxGtfteDh94K
wMGppzvPCzOIedbR2rOlAkAeeW3uLMYgpG6b8C/kCYAluXa9FYlBOOfwPuKK
E4DCvdZCsjIMYqEjoU7LXgD8HUR+RqsxCOltD4UCl/hhBcWfyCAYhOtSWS7v
Jn4QYa/WHXBjEF8+W1R7qPBDevnjWY0zDGLnE9qXeml+OLlhNPaCJ4OQsBVZ
vcbOD8FHvPx/n2cQ9aXnrFfa+SBSe79HfxCDUDuvxMoI5AMfiz2HZW4xiMmR
hGOf3vBCqiSk+OYzCFuk5q31ghdWmmyfOxUwiNpkiIjO5YUE+oi4RRGDSDdi
FBnH8cK4f8Py+pcMwiLLhBMceaHiZfeF1EoGUWjP8rKInReqeLzYZRoZhE+7
J1+CKQ9IUkdiLGkMoveZ2sqCAQ9oC5UmCY8wiP3htMnjVB6YsYX5z6MMQlHb
rkmJxAPl9xrb900yiM5Is+gK2jpgfbY9QGKWQezYocE9ELYOUi/2BeuzMAnO
rFF2Shk3ZPJv9ysjMQnfi9lzSU+5wf/c1QYNKSbRf8Bh+Hc6N3BRP4+mSzOJ
18udNTXXuIH1id2dYBkmcfbIh3Cbg9xgNZT8d70ik/jCncMSOsUFq+5O7Utk
JpHm7bzcrMAFzFHLhK17mMS2lt9VnhJcoOra+9DFkEm0a8SF8PFwAf/9tNF4
IybBP1K1ajbDCU1Ds1toxkwizE6ctQk4QTLWmDPAjEmcMm3gaLTjhCJxlhcm
h5mEpqK2QN3dtTBz/81MpQuTqL/y/pNL9FqQyQiUe+XKJFz6jsdxhK4Fapph
Z8FpJvEgJVLIyHUt+LWV96e6MwlBoUGR2s1r4cfhhZxTnkxibiWJ9O4zB1zX
0Ooo8WUSlZ1Lcm94OGBupv3rgXD8fFhdgQ4LB/QpqrMIXWUS4WoJ+rlz7JAQ
3ib9Gds0WO1wXA87JJEEVCwimMQPGdtIp0J2+MlLL9WPZBJLLqWMtYfY4dZu
hXlaDJPQm/OqPJCyBs5tOHov7B6TkEnX31d7ew3QLw+6yN9nEmx7Odu3XV0D
XGBhUYPdePcBQ+7sGtCDRl+2VCZxTL9Zbs5gDagc+qTnn84kgsLVI+8NsEH1
bErF5kwcL0Ga9YAqG2QtcGSJPcPjL2+vPLGeDehlx4PysK861Ml/E2ADI0ah
l14+kzAryp1uWWCFh/sKKo4/ZxK9BzxuVdWywtkz/NOJhXg8scyauw6sYLTq
yNX9gkmY8C3pWNxjgfIbJ+58rWQS5NLx+w3RLGBoHJBhVsUkhO26WIxCWcBp
zdfpWuwf+VUt+q4sIOqBXF5U4/wxC/VQ28wCxrZa6AZiErIS3IbcGX9Rr4WE
nEANkygUkZH3F1hFiuWv2h42MIm1S+6R4osrKEXo9MIytn1/KeNV/wpKupkX
f7QR589z88pfxSvo5FjvVqGPTOLc3hDri9YrSIa9zyaoCY/vYvf1S/eXkWDb
r8jNn5jE896UiXCFP/ieFBpv3sYk2N/TrRR4/6BVyU17U7FPPNMpr5lbQrNa
cTdHsXkDG6+x1y2heeJj7ZV2PH6hpQ3X3ZZQ1spzwcIOnI+GRy2jnv9GSayJ
t+e/MYlnTyRKY7cuInZWKT3dHibh9IBU/Vh2EUVMOdf5YUslSr6v5F5ESgqh
iy+xb16Sbh/p+oX2nVay1OllEm4HNs4TYb/Q7irGD9U+JqE4r7xlun4B7a5X
aeQYwPHcpVtqeWwesR/xNg0fZhJHtmytdt0zjwzXOAWVYfOpb3t/SXMerZ2t
tZ/EviSi1563OofqSVF7D9Nw/tAN5lmy5pBdUGK6Ap1JSNwy2lI8MYvY7krW
lowwibhO61KhkBkkMmXwJH2cSexrfHh+y6kZpGd0YLoZm7V6XOvo/hmkOzYx
uYLtkxmWkyE5g1yLY7nsJpiEtWf+Xe1XP9HB0s52iUkmQVrDHmTOnEYnJadV
w6aYxG471xDhGgYq0BtMlJlmEi92L88fjWcgn+c77PZiK6omnHt0koFsE8hj
nthrZ6tPUpanUNaAlWkVdmOk2G6LLVNoMeKD/pGfTOLQy9q1N3Mn0LtuVY3Q
Gbxe8CjEsd4aRa5X3qXnzjGJ2Q23t6fZjaIL14Z067DDKb8HdbVHkWTIWNYw
dsbhT1vOfhlBP0IfLcnOM4nuh8FdHaQRNH025dFd7MOb25TzH9NQV/ZBnpAF
JrHXLqL6CBpEflvcx9QW8XrmNe36M24QZXI7XdiDfSr8uOAtp0F0mOf6txPY
4blU57ccgyhWX2FLLPabnz1cmmYDaJf5GYMZ7HO8nnlsJX1ohY2zrPg3k7C0
/9RuQ/uOeNqdcyT+4PXoTd2ldyHf0V2zy17a2Mob3yhoiX9HzormwsbYy335
59mMv6H8whWaH3au402+53kdSGPCrOkz9uopIyO2s19Rx8Tl+vBlHP9Of/ej
tAYkbCLF83GFSVDuuZSRxRvQibCOoF7stUetOdiN6xEt2fDjT+ziH9RHBXl1
SMv9Lz9plUlw9U5+W3O2BmWa26k4Y3s2vI87QatAG+4o1c1ik/ZnaXIal6M0
xQkbjr9MorYprL447xUq2+rcLI69vlWfhfPsC+RfJntqO3bSc+c+J9oT9IJW
YRSCPVEkI1Gel4OGTq7+jsHe/fK7Bd/ZLOT39GjiA+wBv4eXvGj3kcMdVn+E
HXdJbFLybCKiL2WhT9iX1kqURdKi0GIlF7MPu1hlrWYl7SKaFzjGPo2dk5YS
F6B3/03w+Nu/f7H/B4mKvrw=
          "]]}, 
        {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
         Dashing[{Small, Small}], LineBox[CompressedData["
1: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
k/bT
          "]]}, 
        {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
         Dashing[{Small, Small}], LineBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], AbsoluteThickness[1.6], 
         Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
x4nR3rqPysRWdkuoYv8P2inV8g==
          "]]}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{-18.420680743952367`, Automatic},
       CoordinatesToolOptions:>{"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& )},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           StyleBox[
           "\"\\!\\(\\*SubscriptBox[\\(F\\), \\(IT\\)]\\), \
\\!\\(\\*SubscriptBox[\\(F\\), \\(IS\\)]\\)\"", 20, StripOnInput -> False], 
           TraditionalForm], None}, {
          FormBox[
           StyleBox["\"\[Gamma]\"", 20, StripOnInput -> False], 
           TraditionalForm], None}},
       FrameStyle->Directive[
         GrayLevel[0], 16],
       FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledFrameTicks[{Log, Exp}]}}, {{
          Automatic, Automatic}, {{{-18.420680743952367`, 
             FormBox[
              TemplateBox[{"10", 
                RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> 
               SuperscriptBox], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
             FormBox[
              TemplateBox[{"10", 
                RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> 
               SuperscriptBox], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-9.210340371976182, 
             FormBox[
              TemplateBox[{"10", 
                RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> 
               SuperscriptBox], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-4.605170185988091, 
             FormBox["0.01`", TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {0., 
             FormBox["1", TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-16.11809565095832, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-6.907755278982137, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {0.6931471805599453, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}}, {{-18.420680743952367`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-9.210340371976182, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-4.605170185988091, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {0., 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-16.11809565095832, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-6.907755278982137, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {0.6931471805599453, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}}}}],
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
       PlotRange->{{-18.420680743952367`, 0.}, {-1.02, 1.02}},
       PlotRangeClipping->True,
       PlotRangePadding->{{0, 0}, {0, 0}},
       Ticks->FrontEndValueCache[{
          Charting`ScaledTicks[{Log, Exp}], 
          Automatic}, {{{-18.420680743952367`, 
            FormBox[
             TemplateBox[{"10", 
               RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
            FormBox[
             TemplateBox[{"10", 
               RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-9.210340371976182, 
            FormBox[
             TemplateBox[{"10", 
               RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-4.605170185988091, 
            FormBox["0.01`", TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {0., 
            FormBox["1", TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-16.11809565095832, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-6.907755278982137, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.6931471805599453, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}}, Automatic}]], {967.5, -118.66252583997979`},
       ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}]}, {InsetBox[
      GraphicsBox[{{}, {}, 
        {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1: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
fG0kVvKcJM5KToz2Ur0DpL5VU8T/AzwFRis=
          "]]}, 
        {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1: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
X2wGcsj2Zl8fEmemJEV7qd4GWmBuTgHx/2c/mwc=
          "]]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
5O1kST/uolm89aiw82lnHg+J655yXPocefKHb7Vto8H5m9uE9jciFZ9oicAW
sOm1a2qxjai/LaEnuQnMSRU6VtCI9mXeONJWC6Zofb37sxHtXlObvqsUzORa
RZ9rQibu4kM7ssj6JXVylS+QVOXtWOujJH+4R3hnK3qp9NDWO5DsJ5W3KLwV
nY97tiL+CMkXObwppxUJ2L942HiY5OcKH/7bima/TXRZuoK5j+pS771EQzIm
NIutxGXOdoltqOJoe4OZDKknVCy5pB0ZyR60Ul0KTmZUNGu1o6f4d+NCKZLv
HVS0rR09EpJ70ShM6qd0T59uR/lsz5Zd/6hw307onZ1qR2nNs69cBsEUL9NX
n14jbxXqu+BiMCeW/o3bgb40lro4FJG4kZkDbyc66L+9V/8BmPmI+kO5EzHL
At//ySNO9K727ER7bCo+nLxG8tfdqP3eiTZF2n5OiCaulLwg/hbJvDk+mm1D
9v+5yepoD/JsXnGrbAeYdVOr5WoPelJbbv/KGsy1KY3BPcih5G/5/BYSR3cv
CL9DqenH450MwaZ7XVbmvkOiTsep4kpgRY0L2wd6EW9fhHvEpBr0v3r9z8QP
aHen7NKUCTCzaCiw7AO61VrWkDcKpjgKqQ99QKZ4RqtjCKx9MbhAkYui2BHz
Wr1gxSf3LCK5aNoj4tpALdhmMtTT8CMaHQrvsEkn+XIXXJr70axC9kZ6Gpi9
crD/Sz8ScWy+w5NM1t/KTeP/hBgN8icenSP9XF8ftPETOpxfo7YkitR7xqGX
fEKfD4uGde0n6zmPH+V/Ru++smXddMBcdmd50SD6tqopRl/z/+dJev96EM04
TY6JrSb5Pn1aU4NIpsm8BquQ8/maeBoPoT13v/mskiEWuEVtGELt3msrP8+r
wnmXmakOf0GNw8//82kGsx8HvXQcRjl11BO7G8GmdhmYNYxYN2MzDetJvqv5
YP4w0rez6BbggLkTq97+gfyy+t05j8GsrZ/sb4zA3yN15u8zwJzIwG/fR5E+
tWb1Li+wxD2pXI8JJMWjbK1/CFw4ULclYgKN9kQflttP6pU086ZOoJykzbeH
95F+1ri8r5pAklNV8nE2ZP8emoTydzRSy5GsMiD1/knFD39HWR7ot+5C0m/O
hspLk2jXhdVWuxaQ+M7EOw8n0Wz5lQwfCpip+Kq4cRLtXRq8PmdGBfYvyqPN
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
52ZmJIcaXUUUxU6+RPD/APkJreo=
          "]]}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{-18.420680743952367`, Automatic},
       CoordinatesToolOptions:>{"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& )},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           StyleBox[
           "\"\\!\\(\\*SubscriptBox[\\(H\\), \\(I\\)]\\) - (1-F)\"", 20, 
            StripOnInput -> False], TraditionalForm], None}, {
          FormBox[
           StyleBox["\"\[Gamma]\"", 20, StripOnInput -> False], 
           TraditionalForm], None}},
       FrameStyle->Directive[
         GrayLevel[0], 16],
       FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledFrameTicks[{Log, Exp}]}}, {{
          Automatic, Automatic}, {{{-18.420680743952367`, 
             FormBox[
              TemplateBox[{"10", 
                RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> 
               SuperscriptBox], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
             FormBox[
              TemplateBox[{"10", 
                RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> 
               SuperscriptBox], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-9.210340371976182, 
             FormBox[
              TemplateBox[{"10", 
                RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> 
               SuperscriptBox], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-4.605170185988091, 
             FormBox["0.01`", TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {0., 
             FormBox["1", TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-16.11809565095832, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-6.907755278982137, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {0.6931471805599453, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}}, {{-18.420680743952367`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-9.210340371976182, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-4.605170185988091, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {0., 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-16.11809565095832, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-6.907755278982137, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {0.6931471805599453, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}}}}],
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
       PlotRange->{{-18.420680743952367`, 0.}, {-0.001, 0.001}},
       PlotRangeClipping->True,
       PlotRangePadding->{{0, 0}, {0, 0}},
       Ticks->FrontEndValueCache[{
          Charting`ScaledTicks[{Log, Exp}], 
          Automatic}, {{{-18.420680743952367`, 
            FormBox[
             TemplateBox[{"10", 
               RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
            FormBox[
             TemplateBox[{"10", 
               RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-9.210340371976182, 
            FormBox[
             TemplateBox[{"10", 
               RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-4.605170185988091, 
            FormBox["0.01`", TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {0., 
            FormBox["1", TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-16.11809565095832, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-6.907755278982137, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.6931471805599453, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}}, Automatic}]], {193.5, -355.98757751993935`},
       ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}], InsetBox[
      GraphicsBox[{{}, {}, 
        {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1:eJwd2Hk8VF0YB/AhkogsZSkUshRRkRKtlnhLtlREkpSQUtlCk4goS0lCJXtk
jUR1CCGFEhIq1YzdUCTbXO/z9JfP9/N7njNnzj333DtWOribH+ek0WjjHDQa
/l1f4lRc4LK+gkYznLP0ZZCq09oXtp0C0wUybMCWCgKaDSfR/gcdwBduFxf1
Hcf6S+3u4GfnuIpk7NHZJuHgrerJhTcssV5/RTXY+NGXPGddNE+l7kUG6bQv
cP+7Bb30uT7YVTxYLVgb+wvK94JvhKjkJWlh/nHQFvz++MXcT+swv/8hAGwl
K5Gjr4C5049K8LEEy6yVgmjZO5Z+DNLy21U/ahHWu/+2A+sZB3dTfJjPs3MG
K0wVL+1agLmNUwB4wErsSiwn5k+2PgKfEe6w4ZtYB7n8Kk5/Bgm4dmTRny70
0vBX4JFur8xjnejbco1g+01Ru5o/o7uaOsA7eit88trQOxzHwVz6sj3O78H0
yktKAQwSTmOSr1WYM+7FgOO8Tp2py0K7OvhfYhAPb940s0dYr5EXDt7jk/m5
IwP9e3E8eM63Z+dwKtbXipSAnQIclgg/QG+T/A3WCLYus7mFXmngSof1u2nM
NXIR+69yeFxmkKxb/Zu8fdEda66Ag2JC3Th80FbuMWCt2Jo2EU/sN99ZAr5/
d+ejTWfQLsspsGuStkmgI9Z7VkYFMghv7uq4JXv/zWew/gqD1M0xFNL/QwdK
fwOHmj0o3miM3np6DLzgj8jHA4bYb3l8eRCD8OiwF8XvQGc+dQdz1zddkd6I
9e58y4MZhKPnvLuiDLrq6fWrDFKhpUaVSKHPfE0F06/1X9+9HPtfK70E01Tt
spwlMF+nwALPnTNkZougg96YhTAIm0PSRn0BmvVVJpRBpqTKDTb/Uof+L2Xt
1+B6CJL8rBEw7a3QJHgTx0vJ5SzM/e+KhTGIN6OMRQ1gbqlzADyZ9TS2moG5
Zns7eEIrt2dfO+bWOcxwBvltdu+qUzm6b6FSBIPc3JU4+ukluniJCXi9ZoK1
0QvsT7Y5Dz4rfnetSinmh+NfgUe/xrT9KsTcYtguEvafy3UF/3T0YZ20KAYZ
Cr5Yc+sG2lnz2C0G+bOCo17mOvbPGUWAqedXG7LDMJ9LLAUL/o5uqQpBF8wt
joHPt8v8MXYZ6xtfVYK9N7ZSFp5o3bD1sbB/e9dqiR7B+nfN+ncZZFFgkXaS
LdrRzQe8VEp7q8phdJ55DljRQl9f7xD2884tiYf7v9zG4rwF+vHAADjqTqh7
iyHWfzudksggy3b/yIhRR/PuN0+Cz7vy+CqHGtZfNr8NHnrpefy0Kpr1rB1M
NvDJ7V79b35V9g8ZxEFG4/6MHLr224VkBsmcCI5xEPu3Hu+KUhnE2diC8+is
GuQlRmGPGES7ordcewr9s7gTzL/Rz190Au36UDWLQfJXpk3WjqCTp5rBE5MT
rLU/0THVco8ZJDAjvnP2DZhu7vU1l0ESuX4Uxd3B/JUiKYLxl+coXI7B/Ju+
TDGDfNrgHeccjfn7STpY+JiAn3Y4OnWFwVO4P15p7+oKQC+L/lQC52vArQ8y
Tmj9V2LPGcRkUo+VroF+O1+0EtZDcLF95DocP/DGNfA1xc4PXmsxb6+dA1db
nS3erYR+aMOqgvkU3/MbWIb1d6VaXsP18ZhYuHYe5vy0qjdwvwxlKBZ/WAvO
2bKxGc4/K7jQjWiehjLwt4qDZ0ffoqslt3+E9b/N+3xNzVq8H0b2tDCI3zYX
k+QyzLkS3NsY5O/NtRciUzB/3fu5g0FYm4srnS+gKQFjBoPYpd44EeKBPqPf
B24QcOJPc0ezbEKYDPL451Krbmf0T9W6HgY5dcO738oOxxcKtexnEGb3lsV6
hpjHqt5lMUhXSKWttATmD606p+B6rpcvZS9Z+2//ZUwzyJauYNEvwmjP7gsz
DBKvbvQ2gf/f992/hM0gBz83bZKg4XgausfgbG5d/UVEtFcVvDddh4dJGhv+
vuEtRmskjC1hEsrr0Kr+AvQ6mcGlTKIq+5xelwumFS5jiDHJdc8ArZBMzFlX
OySYxFiGO40rEZ177LMUk9ScEabPBf4bf81KBSYpF1Hd+McU+1W39msxScXi
xGpeE7SBJW0zk1Qu4rOQ/g89f1xcm0mqefrdDfXRTe0mOkxSP5P66O5mtLdH
w3Ymafu5XGqrLPpNjZgxkww94ecKGVPB9QgetWUSVv7FmwmjaBa/7hEmGckZ
WJE/jD7kFG7PJL8z6nQ/96Lpd1SPMclkQpDXmi50tlboSSaZFzQ70FSN3nI/
7hyTSFoOfRCPRRcs3RTOJH2/o0V1bqHNWc+vM0lxtNaBI1Hoc607IpjEtCmw
Ky0M3dBlEc0kwcYSvesvoSMlo+8wyeh2g9k9J9FNBR6psF6qSQqXtdFm/cxy
Jol5p++cqoXO5y14xSRHXQazazXQv24FVDHJbObGdQJqaKPfK2qZZJ18w5YE
OXT6miuNTJIoOW1azI9eaVjxhUk8eCwv9n9dg+eN7waKSWg9gecbO9HRanRa
D7lRXeD2pB2dpPmes4dkXha0929Gmxr48vSQrzP1ekI16JI/E4t7iPHoDoHN
OWgT31j5HiL7We1h6EU0r0+ESQ/JL7GLd/NGP5A3MeshurE3bplfQB94KmTZ
Qw5aDAYvd0dzJ6Ue6iERDemn8h3QBuLTjj1k+pWURrsRumjhSb8e0pzFV6so
jtY4cD63h6zvMhzbsQR98WJgQQ+JXhQkc1gYrR4bU9RDTM/MekXxo6sqqst6
SIPmsNIUDd12cn9tD6mraAyr71+N15+m872HkLZoE7fn6OnGreK9RHpBo2/I
M7RfVsuyXuK/eWHGw2J0oZC7TC/RSQyca81Dp8QWKPSS0qPn8remosXmndbs
JUVDlsKLb6BbC+ssekkWp3hboR1axFQpppfUn/vyLMIGPRr2JK6X9DOSE04d
RId91rvXS5RqVY/KmqPl3/mk95L08F1D0froEKJa2kuSRd05z6qg2xOqvvWS
eIWatWrTyrgf8lvX9ZGyO+FCfH/RBuvVtfrI5wVm4z1j6KuJ0Tp9RHyws/T+
MDpWz9mwj8Tm/dIT+I5Ove9q20dubpKyGa5F51m9CesjYcbnQ7Jvo+Wv8Q72
EU/bM9KxN9FLEtR/9ZGjZ1yL6ZFoOdkjf/vIpljHn/uvofUym+f1k57vltto
/v/G3y4q1U92+Gj+tXREv56Yb9ZPJjMmnKj1aEO9FtJPGGW/2X1q6Lepf173
k6YGVsxHFXSnlkxDP0kf66nMVEB/5wvv7CeW2z5JW0j+G5+7ZrKf5LeVtGVw
oH0nGzQGyAluHwOz90rg8z+NngwQeZfAxWcb0FrLWWUD5Mf78I6oenQ5Z3zl
ADmceP/0+2r0qd4FzQPEfEN17L5StO3ZXb8GiM5Rwd69yehvPmvXDRLhl2kh
xufRu7t+PR0kL8431+0SR+9996RjiGhLHjdatQTtoriaOURKyv++mS+MzlbL
GhkihQul3r7hQ980quUaJplJJxr2zSmCJ7IvqA2TW+9mP9j0oGVXpVwdJqfk
FTvPFaGlMrfosIh4y8XhFFO0Y9z3qhEy3OvTahqrgPuziifgF3kzWHvE5d0q
sOhAvvsYSXYgf9fPB9NTmra7/iFjN3gtDPfKgw03XdD6S/Y8SjV9EyQHfjy8
cWqShJ/MDO+6jA47YjQ3SeoVH9eMBKB3Mg5wTxGj9Cc6S33Q4cuchaaIQUql
0jE39IYpG+Upsv1eN429Xw7nt//ywSmiEb28QF0RvULqxZMpIuUTIxT3Rhb7
tVJsp4lSRyOtrEYWr+e2Ww7TRGML72hnFeZ16y6dmCbGbP9GGYI2bDE+O008
L58IzyhEe4oWBE2T99e0uUsS0Hx5pVnTJCi+e7LVDcfbYEnGpknkjGTf31OY
V+uqTE6T+MP7P0mcxLx/RezsNCmQri+2dUA/+2TLPUO+Jj/xYFphfa7cy6Uz
ZFP21aHxbeiINS82zZDB5yrdIsLovb3VPjPk6eHR4L8C6BUPeANmSCD7yZpO
PvSHt0aBM0R82xavZG600fUXYTPEoNJIYN3USrBHj0vCDEmqc9Ix6QbTHk2P
PZ8hVq1JcaG5mH9MKpuaIbKejltdszE3pnuwZ8jwUiXGvkzM98kpcMySoIN5
amLJmC8vpy+YJQWdL2vSbqNVE+eJzRL+Hx3jlX5Y7+2yc8MsecUSNWMbo0vm
np2cJXY/mMpLd6OrVj1zmSWzrU851fSxv3r4yelZsvHlwSL7begmt4fnZ0lW
eKJY9Qb0yQuW9FkSoyT/NWw59tO/L78zS046bHARZ60AK1gZVc4SbisuvXWD
aN2y79WzJNmodblxH5h2RMSrdpZ8UfdqvPgDbZgX926WmM+VrfvWhr74qaRt
Fs7fnZNp5djP1jo5MEsE28yCN0RjXpaZIsgmrryPRQUiMD+aKCjMJvU681P7
wtBi9t6ibBKUUlZ5Lwg94rhdgk2mz8jRFnhj/1hFliybMPj++HbZYd6TMqjB
JmU74s4Eq6Ajf2ocYBOxC7/njihjvZH6jkNscj5zT6S2AppRZGzDJmqCHLkj
Mli/32P/ETZJ7XIePCSC7l9ifIJNpEc83x0elwHrPSv0ZJM665cluZHoyrrY
W2wiyf1t6+VrMngezRneZhO3PFqNxRX0OHMilk2EufRaJj2xnuft3ng2OZxT
P7rTDr1NrzuJTX7NfVL+pIL12fvic2C8tN8Jc2+kwUo7LryG9dknKtdcBabX
XvtewyblU5pZqS/RPq3/1bGJo4nPM6MCNHVJ8i2b5P6da7kVh/ZwSnrPJruM
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
c3OcBacnxkd5ad8l8Pvmpgf4fyFdfqY=
          "]]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwd2Xk8VN8bB/AhFYWEGfsS2cLcabO1SaSUEGUphfCNiFKKqEkpRRlLJW0T
hbSNSlnijFIhaipLUlKRypISSej3ub9/eL1fzznPec5zz73mjml+YasDxBkM
xlT8oH/PuhdYWLBllpDBbR+716dIHm612rkoGNZeLCiC3fRl59ZthoXn/Yrh
nScK73wJoMdvqimBiyIk7mj5wD7zc8rghZysW8fcYE4s7yHscOXdzaAFMGOB
lQhu8SkI+z2Pnl8m+wIOUY6n4q1gwfZ22scOm9zkm9PjuWmvYFHAnhtNM+m4
F6MJXqujct1On86fzWqFN51xy582BeYV2PTA9T9D7HgycHjV2l7Y1iG+bWwy
PT8l5Dus/6eQ9VYSbrM99wP+tlbpwElx2nsUBuFw+TfrJg/OxPxTa/7Be49s
lBl4S7vOVuGHIvnetitvUwvMvZKuCPtY8Ja8bIadT3xmwos7hVE3G+G2fJ4y
LGGn8zlIBPcZjGnAiYyO8taHsI/XYiM4Y1dweFU+bef9i+Htu6Uuu1yB5UrG
bOCVUXnNb3JhketeW/hf9GebnkuwQPegPRy4148pfwHm8/Id4TnxXiXr0uj1
Dwd4waJUB4nve+j65lzbCeenfbXYHQ1zZkXugg+mJ4SKRdH7E9lEweYnHzcq
RNLjRz/FwOdP21yxCKcdv/QgHMK3WhXnD1vXJafBUjdmZDAd6X5scr4DV/1r
189ZAWsf2HIXTnC5UGjmAAvzjxTBkgMKr9zt6fE6z+/DE+ePymQupvPP3PcI
Hl/z/ICmGcy4v6sJFvu8I8xAi/bOrlFYaE6N3dOg9783nPFTkXCPfE1apk7n
N/wjDjNMN+QHqdD92saUhP9F2HdcVaDrDY2Wh0fFVNdxJOn+VgwbwH80yFLL
Hxz0f9HIGjhjSrkg/zvMOLvYE7YQK1NV74W1FZPWw7vbS3rHvsGinZxN8FD+
3ZOV7XDfh3vh8KD5jc9Or2HrjKok+KfLuUOBhJ4vx66GU5ec7Wsqg8OtDerg
WXPPeC2/D7dd0n8Bb1M+zTYppvNRFs1wX2t6449bdD7f3K/w9y1J+rE5tEfK
J/crku74PY/TjsHOfPU18IC2WI1WEp0v8ZwnPFZ6qO7qUVgwQW8DPOVnSv3D
wzDvuf1/8KwNeR/799P5yt9FwbvNGsZcI2nfceXDEp1sc8WNMNdE8BOWibtj
xfem+5PGGoJZGlYLTdbT/Wg8OAobuNrZ2XrS9ehGSf7C/U/Wue5wpfej+EAT
5p1KCKu3h+WK36+E1ZZ9zE3nwEIu/yYsceDaITGKjltevgt3l0UGbDWl+ze+
sAwunz1Zd9kM2pqDT2E/rTnn/+rS+e0YX+G8wfh0PyV6/0tt9QYUSZCDq7jv
CIX9/5ySC1sJO4nVH5gz48xNWNosJlZxELZ+N7sIFky7PPTkO9w26Xg1PDg0
2Mv+BMu1dXbDcbmZLSPVsDOxNRtUJGclPt7JOAULR23rYSv16/r702k/im6F
m2bvzghKgfu8hV9g+U2yMVaJsI/vnlE4ocJqydu9dDz4tsFvPF/3pr3QCoRF
RYv3wauGbHtz5tDrSafMG0I/psj5JM+k97O43x4+YtDyYhcb5mZvdoMr124r
XGYIMwKOhcJWhedivqnBPIMHfNhg++Ak9jh6f8n9k/7gfunONSh8wUac5f4d
Dl/LrX35DGY0eIzC74Ue2/qewtq1WycPo/8npEqNH8Oc100GcMyiLauySmDB
pYu+8O9U9s7kbFgUzG6Gey0LHwTthH1KJZv/KpINl479d3g7nc+x7itcJxso
fTkMlpPPH4avfWKtbQuCueSa+ogiCT62++vaDbQPvfGFO9rmydnaw22Ov/vg
t4cfeGuq0Pk/zdcdw/WcNb14lAkLZcUt4Xlv4xXfydPjl39dBWdylj89Iw1b
V2rugT2an1uoMOBwgXED3DDjnYJipynW448m/1Mkz+p+V0sVwn3VTB0xJhnb
5an3tQCWizw6HzbVKeVW3YDbuIbucFLkXvPDebCw8EMS7KA1/rLEWVhQ4TQM
Pw6X5/6Lg5073d6JMwlRMDUbcIZFG3seSTCJUO5spdQqer2A3k/wA5nJrpor
YAZHTXw8k1RO/Bpmb0fPl/mzEK75e+nKaUt6vaHaErjxk7rGQh04XHdK6QQm
6b4tLXG43wTrG797L8kkvYI9qWf6YA6reZwUk3y//k1b0ANrR0gZwj9zqxY0
d8L8Qslt8NCZg7uM38KMp0fGT2KScQdHvj2vhNsUWiwmM4mqW/cL5ZN0vpdD
NTJM8uVniuL8NDqfmd0AXJhi7r6RB4f/rdOSZRLn53FvLx+FncVP7oTjHVQ6
Z+2DrWOlpk9hkj7rpSMrN8Pcm0+T5NAvU77+fitYZL+Ep8Ak6bV2QZfM6f1s
ffoA9t3SdfXJHHr9S2cG4JE8s5myFCxsYK5XZJKZ0+vmndGl6z8fY8JkkrOq
w86F0nR+hfAWFpNsn+i252urMfbT+32HKpMwPsfteNYC833C78LHKgtCb7+G
hXJrh+C8/VN8Yl/CjNOusWpM0vq3xnbqY5jLNUxSx/XuWyxreR0O3/K4TJNJ
dJqpiwl74L5bW3bqMong3obM0N2wz4JXlfCCk8fSVu+EeU6FitOZxMO1K149
jM73p6sQPl6XEyzwgzn6FmN6TDJcoTHn9XI6/7mBHEMmeZk/+YmBMiwYSt7A
ZpJZb+37FzPpehPciuAUmYNa6+Xp/FMz5Sn0P3xkF0+aXv9bfhVcN7fH8A8D
thYbsprJJFXCZ0drvs7A9XPtsJjDJOWNKatCS2fQnwfCLlgxiabks+jDRbAw
qmbSPCaJtZyUe7EQ5r4pj4Tnn43713CTHi/Y7TyfSYp9IwQLL8FtD5ZNXsgk
d7rd5OWOwRx1rQuLmSRfXLnx1gZ6/heppctxniPeFR1fRzvP5AX8tT3rTLAH
bQUDbwcmMXxi6quzGu6bkrdrBZPkJC7pTrGD+bL/7joySZZimPg2E7r+jzN8
VjNJpv5jNjVshP1lcwLXM0nJqcSpk3/DbXVdst5M0izp8utzP8zPuFoEK3e1
FJ/vgRlWi6ZsZJKTN3/Yyn6g53t/rPJlklQLjXU9T+j4jNiw/5jkqMOOw1dP
wOF7805EMEmkd7jmyVRYSHw27MD5DA8p5CbT+WWWGe5kEouT/p/WHKHjT/NJ
JJN8/uC2iBFL57f4ORLFJIuj5v5284dFFuq3ubj/cgcDx2bBXOUx1WQmaS/5
OfqFgp1XGMnwmOR5XW/6KxN6/hIhIwX96P/8IE+fdq1ldyqTuC1q0nRVpd19
ov4kzl/jvcZcMboepRfd55nkv/FRS11Ehljv8icHAZNM3xInt62O9nGpdQVM
8lGU+IZXAzuvzA+5xSTrz57fKqqEeWb+6XeYZPXsypNOxTDjx4+BIlx/3ymd
jln0/OCF4x4wiXzZ5cMOO2CBfciaBtSrc9MleBvskziQ0YjnZUKR2tGtsLb0
wtYmJpno9vRm9WZYOI619Q3u5299Tcu84T4l3ez3TNKpPN/QfinMdX/k/41J
7u94WbVEmV7v0Dp3MRaxUg1Yrsek69mjMCTOIvfI7+oJ8nQ+I/MzEixya5LG
0+rJdD1ez79MZJE8/n91Tv8MkD8q+6Isi6TVjrxY9xm21upOUmeR4OkGLRF3
YIHC1k1WLPKlunjdmgJYLvCox3wWCQhb+dbsBh1vOey8kEV8Sra9+5NLW9Js
uQ2LrHW+/37fGZjn8tzbgUUWx7i0J8bR+ScdVFrHIsr1e3qynWkv2/htL4v8
V6t2scSR9txotf0screy1O2FA8xZeMzpAIusKfxbOmYLc8PzhYdZJPXknqOe
lnDbXaMnPBaR8dxjMEUHFnUc3ZzNIuKt0b7R/froh7yC8lMWWd2oykzpg+XG
Zd2sY5GLz0qqcntg4Z4cBxGLWJNhqqGTHn9VO7GBRWL50WPUW9h6vZNZG4sM
+UWf6aiEtWUdLQdZpKczqsH5JCySWiKnp0RGtLIXGaXRcdFWH0MlIu1Re0WM
p0+/HzgVGiuRGVWae28dofPvXBo6S4lsznuorxgLc74WsKyVSPtmmd1Nm2Af
uVK39Uqk5StfdcNMOm66Iy9DiXybVnPQjE3XXzCYeVaJDHv298oa0+Ml+1P5
SkS5xu4hmQ47/92elqdE1uZ/2zJNmZ7vbddUpEReBs8pax/TQzywO+yNEqnu
erJxSy3MV65R0FEmlx4Z7F1dDTPOhVzTVybcC4fPWj6GBYO6K4yViZmrffNE
IW3zrsw5GF/yePWl2zD3WepBe4w/8sjuXSasTSQObcV4g4fGTkGw3OqasApl
Ii+m62AWSM8/Vtv0WJn0vInbrLGJ9rl7S2uR77jN5a719HypTZZNymTqYIVm
gjPtpzXbe5RJd6VwaoU5Pb6zdJ6aCsnyK/89awLcFjTkFqNCnJKNlzuNg/vc
F1jFqZCR0ozMLQxYpLFIP0GFuDMjFlwano7nVcJx+XQVIl1lcID5Hbau/jH/
mgqJNE2RHWqCuYVB796pEIehTXplV2jLxW9bqkp+T38R2ZwD94UdsXBUJZdc
FlYNZMPaHd8nuKmSf/nKW9jnYdGdwWJfVXLHu05wIZX2xh1RsapE86HZ/Lg9
MGO8n99dVdJ/TMrV3hHmJXuPmKoRn+F/XnoOsLNJ60YzNfIscNBvnD0s3FxU
u1CN5C36tJ1Y0/WkH3/gpEY2/Lifaj6H9mdnre1qpMYt/KWBGsyx3XuxSI3w
1ZpcJL/qwgbzvqxUJyuvXHKuPghbZ05dnqZBEjfnJb7dDwtn2Aef0yA1Btce
f99Lx9+vS8/VIMtzbs9nRenSfw/1xt3Hy2L2A8NNoTC/dumKDg1ifa6NMboG
bmv/E2+pSeakqBdwDHTp5+GLrC+aRCMqfWpGtQ76feBICkebdJWatCnIw6Id
5JdoGqnoVXQZdZiGuN7Bm091yZRGl/jZKdo4L0WuB+7rkSqvsns3krXo948f
c54akJDvBlxnCU3UF3824qIR8VvkH3psTAP7dyt/lWtEPJL5XjVDsHA5g3PD
iNhRKnNtezTo7w9evy0xIpphk76ZN8KMZfET643Ii95uV608mHdt/fnxM4hZ
b4FB7wpYTrdEGDCDMHrmPU9MU8f+b7pGqBiTyPtHjVYeg/uinyzQMiY9ic0H
pA/DnBum4/SMyZsZuyyORcPCs8/3cozJnc23Lh73hbkCH0t7YxLUbrgjhYJ5
wZmlEcbkZQtT5dRTNfRTe/xglTFZdtU/wv0RLCf4oPnMmJDo23VKBOall9i8
MibXVFziMm7R8eSAPe+MySH3pK7Tp2FhGxH8MCZWr8TLz/4Hi8ayTFRMSHbN
d7+scXRc+keEvwkpX+SpWzeqivO1713BZhPy+s6DT79/q9Ln91RXiAmRvnDC
37EbFu6LXb3ThERGzAscqoc5TQt6403IMvXDQatyYNH62RtzTEh3qGb48DKY
v+jHnHYTMuHTYY7eErgt17Ov04Roe/zoc1pAj/8iyu0yIWtsKrddnknHDQcm
9aMeVnCEsyq9fv2aLDFTkkIKI3O6VPA8U09S0jQlZlMdY1cfh0V+kqZupvj7
o5uTmQDLOWRscDclmXHDzz7G0T6Yn+RlSv7152pH7IL5bze2+piSqkbxyjQf
Ol+Pq0eoKfE6WzSpYRbMHU7PizclsQbTM9yblNHfJI/a26aE0zYsvPBC+f/v
G2l3TcnHjBdfO5/Cgl8Fa4tNydJJ++btFsLa7oH15aZEtqe5NeMK3Pdkdn61
KeHfStZ7s4fOV3GtotWUVC74e2u9Nhx+NfrWBDYZ3Nm+zFAVFjqNrpRiE6Mb
da39CjBf36B9Mpsc1+RPSpwIc6tjJaeyicc/W7/iXiXU45xupMYmXcLjU1ll
tD2dRGw2kbfVCX/uCQsSFJ+4soltzOQJZ1xhrlbnyBo22XXn15lAR1hOuYby
YJO30588GbWm4+LPktazSc74EC0TQ9hnrsH0ADaxelL4LGGQhfOR0VGzk018
HZab2qTB/IAQ2RNsYmHoaLT7GMyVjqg9ySayE1z0bhyGGeWLEzLYpKTCQ0M1
Bub8sP5zBvVZbpb56c+iP79Mqshik0qDwz0Xzei4fuvXm2xiOP7RdbE3TKwf
1iOoYpOxj1VXzOvh8OwEkxo2qRfWXg59BgsczXKessn+mPpzzQ/gtrYXac/Y
5E3/p2MFV2Fulr1HPZskfhTf6hsLO4sUE96zSS+xZldow5wl8qm/0B8N91PR
qjAjdPr3ATY5Ex3KmKMIC5VsHH6zybK5mS9zJtL5FPOH/7BJVn5/ZFKvIq6n
eoTtPzZZcyKHuN+HGQ8U90pR5H6wtEuvOyyI2pqpThH5Kp2SXBdF+v3vapkG
RYL0LHV9V8BtjYvea1KE1RYw8GohzL0apTGNIuFryOliPToeFHpIjyK61ts/
HuxXwHk/Ok+aTZGjzNcRasmwNtNgcAFFDipLLVl0BOY3c18vpMheNSv5TQfg
8FdZxYsoEjHtrCB/F8wosNu9mCLrTX16LH3o+YWzOm0pYmr3JdBjpgL9fBQ7
toIioh1DnideyaP+ya/EPShSs8vIqLgOdm7XrIAro72G3j6BrSX89npSpJh7
/+T0+7DP8VcDXhTJSuK+un0J5lw48tob61+SdHy5E9Y22LJ1E/Zbr2w9RZnO
lz7WHkqRPNV7u5zl6fkVmfu3UsTKd83NFGm4LXWjRhhFNvSmaCqKwTzef6vD
KZIrOXlU+dtU1JuXfGs7RSwWjBbr3If7zsxcuYsiXjkfZpv50HE9ie59FOnu
3rdllxfcFlERxkV/ZmtmF7nBcn5VP+EsoZf8vOUwt+vu4H6KdL151bdoFhwu
O3PwAEVipjy+vlwCFuRtrj9MkXO78w288+RQf66OYjJFBAvX1U7LgnkKVBL8
QEJ62+czMNfm0DgeRT7zQkvCkmGhjEofzLnCcYyLhNtke4SpGN98d3uurRz9
/TFlcxL933loz6eKKcj334fqsxQZEPtSGVIIiwzZpucoonp8uexgHuy8sD0Z
3pQjfVGSB/M/JLuep8hgY+pj0w10XG/01QWKqFlcmLp7WJb+fqu7OIsigcP3
cqVnwzzzaq08irx8saos2AAW3PcPgRde6XhZpUbHV6YVwUoeCmMHJWBG91Wn
KxSpKtzqNtogg/2daNmdTxGjbXpivbvhtuDCe9fQ785Ur+fl0qjXZFaXgCIe
xCjc9Dbcl7bUuADn56QwPjEXFib9C4bP2fUK7HkwZ7bvV3hV9vKJQl84fPaP
D7cocnMD445AAm6rEjy4Q5HtDaEyqQ6TsX7mT7siirReNRodXADzmaP74BVx
Hd3rZsKMzOvF8HTKu1ZPeTJ9fsVNiinSlLAysbhjEsZ7HJMuocj8+cZSH7hw
+OiJslKKTMz+IsG5J4XzcaTvYzlFdkRd+pWeD4c33JMnFGlz8mn/cw4WdMyx
gUtGmh4+PAhzVFfz4ZC1T+LcV9PW0fMUor9SOYx9PZLop+TxsgqKnA3fNFKn
C4ter3SrxPl99ud+qBIdd/kcDTcY82JlJsP8GtuLsGzn/bGVPydi/zqre2Cu
N0usVghbTy2Ke0QRf4fq8TXeE+nPgyNZjyliMp2a8vjUBNQbcKW0Ctdr/6Pn
AYkwJ+BQCxzwfh1v/D7Y+dysv/D5zISpdoFwX+sfy2qKyE39qFA5B7bOXVEI
/xpNV37wYjzyd1ll11CktGl4WvlkWLvSYEMt5nMf35jFgH32CSLhOKPUebm/
JOj/x7CSYYc9Rmt47+C+3t0EfqPpkeB3k47/vKhZR5HhgMLeCa6w8NvVRtjq
V1ipU+Y49Kf1E/s5RTTPzVtWeRzuWxqwBBZfOrHB4gDMd612h2tOne+dFjKO
/r7Gigt7zaub9msBLJj94DkcHTcjIeODOK6nZ0qQCNdLrsPtgyHMDbY68gL1
FzWUrleHBTV1Z+ADPo91Xk+h4862N+CVgty+Z4Ni6N/elpdwq1Nw0v1KWDj7
nupL1JP8/eEpHzj89vLL8HKZ4VmrMhiIs//mvKIIu/Db6epE2LrU9i4s793C
sNsHOx+MfAS/uXb/2bxAOHxD2ic4ZOW+YKM5dNzkrmY9RbSVpGyl+P8Io20R
4cE3FTR1IqeMEYbc11r/BopMGA5KYA2NEobPaGI4vKGtsPduG9wnZhUDy153
LP1dAAsWbkqDty6NdYtyoz2zRwizo94eijk9Qhj89n7lRopcb83sitP9i3wN
IWWwxKPPLrrSsGC++RN4/dVZRQ9/DROGMKhfBEvvrjko8Rh2/m9xOxwydVjj
0GaYb2w2qQnn0dbT+cj1P5i/PN0VvnpFqTDZfAjzr+e9hf3OK5dd1obbLue1
w6ppKo9KpWBt83Pd8NEYtYbOlt+YH+A/Am920hpYxIWFt0PUXuP+HtCf21c1
iPl1293h89Zmhc5eA4TB8Ch/Aq+da14WuATumx32DJaZYfEoxgQWxLMa4BgF
q4a8sV+EEV6x7CPs9XnBACMbtpZbMAIrJdnNLejqJwzO0XB2M0V4TW6FU2N/
EgZXZ10SvKzmwra5/nD4QEgqLFb2zdRzBSzy35kBb8/i5vBVYP7q4EuwW+i1
U9TdH8j3t6MUVh4nEe34vQ/Xs5zzFbbxDoyVf9iLevO2LXhDkds2IwOeKTDv
wDYbeLph6taLG2HRxSB7eEJ/2UbOSA/632zjAtckMG1WzYUFsZn+sOudyglH
c7tQ350vR2D/ybo8saQvWE981XO4X+O45VlvmNui9wqO4/z5aEbBfQZDjTB/
zfO5IS87EbdMaoXfXtjT0qgM+2hE9MBr5tTrX7vcgX7dsJnUQpGl3vFla8lH
XI9edWu4Iawv8AcP5te7LIH949bJJfnB1spxS+G43JmbKsbDovr6lXD5j3eS
Jis/YP03SzzhrdKheeK33mN/Dx23wc4bnje4dzRjP5vnn4dLyx/HPIilXWJx
EdbXKtc1ZcHa8zmX4JH317aJ279G/T1y+XCu71GZ63mNWL/1dCE85m9nJx7y
Cvn3i57CXk2RQZ4d1ThfN8UHYE5GwD02C+YoRfyGJ3i6jZewr0I8+f0fuODN
zIs38h5jf3XXxmDJ1u7X40IeIr+xiuRbioRWP+Kt7yhGvx4tVIWVV2SbTLQv
wn6nRajDlbXcqoK8u8jfl60Jq4vmMSaG3MZ+/gzrwOnXN73367iC9dbvM4a7
BJpKRXk56O/nU6awzZ3mVTIh2fCU6xT8YeeFmLCO06jHtW42zIthdquEpGH9
qNdz4ZgJSvcSOo4gv2ubOVxgMMGktCMK++9st4RzzmbydlmdLmeILD/Pg/8H
/Zxxiw==
          "]]}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{-18.420680743952367`, Automatic},
       CoordinatesToolOptions:>{"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& )},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           StyleBox[
           "\"\\!\\(\\*SubscriptBox[\\(H\\), \\(D\\)]\\) - (1-\[Theta])\"", 
            20, StripOnInput -> False], TraditionalForm], None}, {
          FormBox[
           StyleBox["\"\[Gamma]\"", 20, StripOnInput -> False], 
           TraditionalForm], None}},
       FrameStyle->Directive[
         GrayLevel[0], 16],
       FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledFrameTicks[{Log, Exp}]}}, {{
          Automatic, Automatic}, {{{-18.420680743952367`, 
             FormBox[
              TemplateBox[{"10", 
                RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> 
               SuperscriptBox], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
             FormBox[
              TemplateBox[{"10", 
                RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> 
               SuperscriptBox], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-9.210340371976182, 
             FormBox[
              TemplateBox[{"10", 
                RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> 
               SuperscriptBox], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-4.605170185988091, 
             FormBox["0.01`", TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {0., 
             FormBox["1", TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-16.11809565095832, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-6.907755278982137, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {0.6931471805599453, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}}, {{-18.420680743952367`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-9.210340371976182, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-4.605170185988091, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {0., 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-16.11809565095832, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-6.907755278982137, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {0.6931471805599453, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}}}}],
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
       PlotRange->{{-18.420680743952367`, 0.}, {-0.001, 0.001}},
       PlotRangeClipping->True,
       PlotRangePadding->{{0, 0}, {0, 0}},
       Ticks->FrontEndValueCache[{
          Charting`ScaledTicks[{Log, Exp}], 
          Automatic}, {{{-18.420680743952367`, 
            FormBox[
             TemplateBox[{"10", 
               RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
            FormBox[
             TemplateBox[{"10", 
               RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-9.210340371976182, 
            FormBox[
             TemplateBox[{"10", 
               RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-4.605170185988091, 
            FormBox["0.01`", TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {0., 
            FormBox["1", TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-16.11809565095832, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-6.907755278982137, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.6931471805599453, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}}, Automatic}]], {580.5, -355.98757751993935`},
       ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}], InsetBox[
      GraphicsBox[{{}, {}, 
        {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1: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
3sX79xmZjON/9lYUN4JDW+z3aJBxvmL7PWdrof+1UBaz/WTckxL2zOwx+Pe9
hU1Exp+u5iCxe9Be+8nfw4ZknK2ooW2umEijfS/hszAl485Wn6xe5EPc3Vfy
swUZf7iy2ZeRDfE7jwT4qGScUCjp7J0OZl/99M2ajNtYHvymlQzjc6UG2tqS
8dJlTz/2OCJt9FFG7TE7Mr56J+7nyEUizU1y7iGvAxm3sCg/VxkG4ys5Wbg6
kvH83x2b0aeJtIVkj1gzJzK+cHsm7nAA9Df2sH8HPmjOySV/nEjL+hDT+Bec
taRyfc2NSOuJaKtpBk/lY2JvnIi0O2JLSB683yy46LYt5Od4z0UJxr+6mLE7
mEKkSdQ58XXbk/HRWzWPDU2JNL1d+sd4ID8100EtIQPIXyDQfsGGjMf9WsW/
74f+i7SVQLi/oTwRk4a9kK/wd0oyhYzvNtHpukqCuJCXrynMz/mfLofdFWC8
uOjDRSZkvCf34rCaNIxHdJG+dRDqa1xwjFkc+kd/GtsL8x+y0Dw9JAjxXY0P
ArTJ+H85Y6fu8YBpERmGe6G+83JRGBO9/rn8PQpk3AN5BqRsiMPzqma9JE3G
Ha7dcepcBT+KyWsRJ+NGpB17DX+I06IuTzT78pBxnYuHpS5NQnxE9J0uGxlX
7U7jbvoC7rB2pjGQceLJbdOaA+DmgJL0byScHzceDOkBh3ptFvSScHbuyy2P
O8FtyebsL0j46sO/+Yo4uDivZzaXhL+dm7XZWQ6WP7q4aEbC23UV9J0LwU6L
oh/VSHjTVS+Vm3ng4KrHRHESXqHyiXV7GtggLqPhhwoeE9jdyBwO7s1qdYlX
wcOb2O8dDAFjZR9U/VXwIC7T7KhAsHljxHFMBXd5SAte8wAzOUv8FFTBNeYe
y81Z0PNReZSep4wr6c7xKxqD1ze7gmA/kbq6m9FHD2z4eW/VEWWcW6Vo+Is6
mGfzq5uwMj4VkJnWLw5uUY6OTFTCc3+E/m2YF4PzOMN19yFFPP3Ak6k/38GG
+q0X5BXxhJT5fo0xcFBnHtrYjYco+1RWDoEtv6iyle/GKQGOXsUvwEq8YV1L
Cjjhx/7upAwwq3dB/Wl5PLQhUcEyhW7/zmEdefxH0vvLHPHgddkil63y+Ifd
Z7VSwsGEJsPoTDm82qeq4Ko7mJY7G3xPFvcdkw9JI4H1GMf7G2Tw3o8CO268
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
mB2PAZfm5aSe1b7ZRPBjjLwO/h9C+3SO
          "]]}, 
        {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
ZyWfMc5sxFo/bnkB/h83kJOb
          "]]}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{-18.420680743952367`, Automatic},
       CoordinatesToolOptions:>{"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& )},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           StyleBox[
           "\"\\!\\(\\*SubscriptBox[\\(F\\), \\(IT\\)]\\) - \
\\!\\(\\*SubscriptBox[\\(F\\), \\(IS\\)]\\)\"", 20, StripOnInput -> False], 
           TraditionalForm], None}, {
          FormBox[
           StyleBox["\"\[Gamma]\"", 20, StripOnInput -> False], 
           TraditionalForm], None}},
       FrameStyle->Directive[
         GrayLevel[0], 16],
       FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledFrameTicks[{Log, Exp}]}}, {{
          Automatic, Automatic}, {{{-18.420680743952367`, 
             FormBox[
              TemplateBox[{"10", 
                RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> 
               SuperscriptBox], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
             FormBox[
              TemplateBox[{"10", 
                RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> 
               SuperscriptBox], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-9.210340371976182, 
             FormBox[
              TemplateBox[{"10", 
                RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> 
               SuperscriptBox], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-4.605170185988091, 
             FormBox["0.01`", TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {0., 
             FormBox["1", TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-16.11809565095832, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-6.907755278982137, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {0.6931471805599453, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}}, {{-18.420680743952367`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-9.210340371976182, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-4.605170185988091, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {0., 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-16.11809565095832, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-6.907755278982137, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {0.6931471805599453, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}}}}],
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
       PlotRange->{{-18.420680743952367`, 0.}, {-0.01, 0.02}},
       PlotRangeClipping->True,
       PlotRangePadding->{{0, 0}, {0, 0}},
       Ticks->FrontEndValueCache[{
          Charting`ScaledTicks[{Log, Exp}], 
          Automatic}, {{{-18.420680743952367`, 
            FormBox[
             TemplateBox[{"10", 
               RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
            FormBox[
             TemplateBox[{"10", 
               RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-9.210340371976182, 
            FormBox[
             TemplateBox[{"10", 
               RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-4.605170185988091, 
            FormBox["0.01`", TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {0., 
            FormBox["1", TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-16.11809565095832, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-6.907755278982137, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.6931471805599453, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}}, Automatic}]], {967.5, -355.98757751993935`},
       ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}]}}, {}},
  ContentSelectable->True,
  ImageSize->{1147.6187499999996`, Automatic},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.657508611031905*^9, 3.657508650077796*^9, 3.6575087082842197`*^9, 
   3.657508879200274*^9, {3.657508924989118*^9, 3.657508960364176*^9}, {
   3.6575090679592752`*^9, 3.657509115971201*^9}, 3.657513921891637*^9, 
   3.6575139795040283`*^9, 3.6575140317226543`*^9, 3.657573127679742*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Corresponding quantities in sexual populations", "Subsection",
 CellChangeTimes->{{3.657855532904812*^9, 3.657855552442384*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"HISexualhat", "[", 
    RowBox[{"\[Gamma]_", ",", "\[Mu]_", ",", "NN_"}], "]"}], ":=", 
   RowBox[{"4", "NN", " ", 
    RowBox[{"\[Mu]", "/", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"4", "NN", " ", "\[Mu]"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ESF4", "[", 
     RowBox[{"a1_", ",", "a2_", ",", "a3_", ",", "a4_", ",", "\[Theta]_"}], 
     "]"}], ":=", 
    RowBox[{
     FractionBox[
      RowBox[{"4", "!"}], 
      RowBox[{"\[Theta]", 
       RowBox[{"(", 
        RowBox[{"\[Theta]", "+", "1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"\[Theta]", "+", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"\[Theta]", "+", "3"}], ")"}]}]], 
     FractionBox[
      SuperscriptBox["\[Theta]", "a1"], 
      RowBox[{
       SuperscriptBox["1", "a1"], 
       RowBox[{"a1", "!"}]}]], 
     FractionBox[
      SuperscriptBox["\[Theta]", "a2"], 
      RowBox[{
       SuperscriptBox["2", "a2"], 
       RowBox[{"a2", "!"}]}]], 
     FractionBox[
      SuperscriptBox["\[Theta]", "a3"], 
      RowBox[{
       SuperscriptBox["3", "a3"], 
       RowBox[{"a3", "!"}]}]], 
     FractionBox[
      SuperscriptBox["\[Theta]", "a4"], 
      RowBox[{
       SuperscriptBox["4", "a4"], 
       RowBox[{"a4", "!"}]}]]}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Ewens", " ", "sampling", " ", 
     RowBox[{"formula", ".", " ", "Probability"}], " ", "that"}], ",", " ", 
    RowBox[{"when", " ", "sampling", " ", "4", " ", "alleles"}], ",", " ", 
    RowBox[{
    "a1", " ", "alleles", " ", "are", " ", "present", " ", "in", " ", "one", 
     " ", "copy"}], ",", " ", 
    RowBox[{
    "a2", " ", "in", " ", "two", " ", "copies", " ", "and", " ", "so", " ", 
     "on"}]}], " ", "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HGSexualhat", "[", 
    RowBox[{"\[Gamma]_", ",", "\[Mu]_", ",", "NN_"}], "]"}], ":=", 
   RowBox[{"1", "-", 
    RowBox[{"ESF4", "[", 
     RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", 
      RowBox[{"4", "NN", " ", "\[Mu]"}]}], "]"}], "-", 
    RowBox[{
     RowBox[{"ESF4", "[", 
      RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", 
       RowBox[{"4", "NN", " ", "\[Mu]"}]}], "]"}], "/", "3"}]}]}], 
  ";"}]}], "Input"],

Cell["Checking properties of Ewens sampling formula:", "Text",
 CellChangeTimes->{{3.657855562291429*^9, 3.657855577910017*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"HGSexualhat", "[", 
    RowBox[{"\[Gamma]", ",", "\[Mu]", ",", "NN"}], "]"}], "\[Equal]", 
   RowBox[{
    RowBox[{"ESF4", "[", 
     RowBox[{"4", ",", "0", ",", "0", ",", "0", ",", 
      RowBox[{"4", "NN", " ", "\[Mu]"}]}], "]"}], "+", 
    RowBox[{"ESF4", "[", 
     RowBox[{"2", ",", "1", ",", "0", ",", "0", ",", 
      RowBox[{"4", "NN", " ", "\[Mu]"}]}], "]"}], "+", 
    RowBox[{"2", 
     RowBox[{
      RowBox[{"ESF4", "[", 
       RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", 
        RowBox[{"4", "NN", " ", "\[Mu]"}]}], "]"}], "/", "3"}]}], "+", 
    RowBox[{"ESF4", "[", 
     RowBox[{"1", ",", "0", ",", "1", ",", "0", ",", 
      RowBox[{"4", "NN", " ", "\[Mu]"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.657854595161914*^9, 3.657854627691724*^9}, {
  3.657854755791088*^9, 3.6578547915449963`*^9}, {3.6578548419299726`*^9, 
  3.657854896395502*^9}, {3.657855153594597*^9, 3.657855188305676*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.657855188958333*^9, 3.66880375840108*^9, 
  3.682329840394586*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"4", 
      RowBox[{"ESF4", "[", 
       RowBox[{"4", ",", "0", ",", "0", ",", "0", ",", 
        RowBox[{"4", "NN", " ", "\[Mu]"}]}], "]"}]}], "+", 
     RowBox[{"3", 
      RowBox[{"ESF4", "[", 
       RowBox[{"2", ",", "1", ",", "0", ",", "0", ",", 
        RowBox[{"4", "NN", " ", "\[Mu]"}]}], "]"}]}], "+", 
     RowBox[{"2", 
      RowBox[{"ESF4", "[", 
       RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", 
        RowBox[{"4", "NN", " ", "\[Mu]"}]}], "]"}]}], "+", 
     RowBox[{"2", 
      RowBox[{"ESF4", "[", 
       RowBox[{"1", ",", "0", ",", "1", ",", "0", ",", 
        RowBox[{"4", "NN", " ", "\[Mu]"}]}], "]"}]}], "+", 
     RowBox[{"ESF4", "[", 
      RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", 
       RowBox[{"4", "NN", " ", "\[Mu]"}]}], "]"}]}], "\[Equal]", 
    RowBox[{"1", "+", 
     FractionBox[
      RowBox[{"4", "NN", " ", "\[Mu]"}], 
      RowBox[{
       RowBox[{"4", "NN", " ", "\[Mu]"}], "+", "1"}]], "+", 
     FractionBox[
      RowBox[{"4", "NN", " ", "\[Mu]"}], 
      RowBox[{
       RowBox[{"4", "NN", " ", "\[Mu]"}], "+", "2"}]], "+", 
     FractionBox[
      RowBox[{"4", "NN", " ", "\[Mu]"}], 
      RowBox[{
       RowBox[{"4", "NN", " ", "\[Mu]"}], "+", "3"}]]}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"expected", " ", "number", " ", "of", " ", "alleles"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.657855302194149*^9, 3.657855397835017*^9}, {
  3.6578554372549343`*^9, 3.6578554864143543`*^9}, {3.657855609336872*^9, 
  3.657855619653553*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.6578553580152483`*^9, 3.6578554017275553`*^9}, 
   3.657855488352746*^9, 3.668803758458837*^9, 3.6823298404677896`*^9}]
}, Open  ]],

Cell["Same quantities in inbreeding sexual populations:", "Text",
 CellChangeTimes->{{3.682341400093561*^9, 3.682341413955315*^9}, {
  3.682341605650339*^9, 3.6823416089110003`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solutionInbreeding", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "HI"}], ")"}], "\[Equal]", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]"}], ")"}], "^", "2"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Sigma]", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"HI", "/", "2"}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Sigma]"}], ")"}], 
            RowBox[{"(", 
             RowBox[{"1", "-", "HT"}], ")"}]}]}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "HT"}], ")"}], "\[Equal]", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]"}], ")"}], "^", "2"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"1", "/", "NN"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"HI", "/", "2"}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"1", "/", "NN"}]}], ")"}], 
            RowBox[{"(", 
             RowBox[{"1", "-", "HT"}], ")"}]}]}], ")"}]}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"HI", ",", "HT"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6823416119227037`*^9, 3.682341805767304*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"HI", "\[Rule]", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
         RowBox[{"NN", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
             "\[Sigma]"}]}], ")"}]}]}], ")"}]}], 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}], " ", "\[Mu]"}], 
          "+", 
          RowBox[{"NN", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
              "\[Sigma]"}]}], ")"}]}]}], ")"}]}]}]]}], ",", 
    RowBox[{"HT", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
         RowBox[{"NN", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
             "\[Sigma]"}]}], ")"}]}]}], ")"}]}], 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}]}], " ", "\[Mu]"}], 
          "+", 
          RowBox[{"NN", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", 
              "\[Sigma]"}]}], ")"}]}]}], ")"}]}]}]]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.682341783523159*^9, 3.6823418065687313`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"solutionInbreeding", "/.", 
   RowBox[{"{", 
    RowBox[{"\[Sigma]", "\[Rule]", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682341810779155*^9, 3.682341830200602*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"HI", "\[Rule]", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"NN", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "NN"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}]}]}]]}], ",", 
    RowBox[{"HT", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "NN"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "NN"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}]}], 
         ")"}]}]}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.682341823132309*^9, 3.6823418309515743`*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"HIhatinbreeding", "[", 
    RowBox[{"\[Sigma]_", ",", "\[Mu]_", ",", "NN_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"HI", "/.", "solutionInbreeding"}], ")"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HThatinbreeding", "[", 
    RowBox[{"\[Sigma]_", ",", "\[Mu]_", ",", "NN_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"HT", "/.", "solutionInbreeding"}], ")"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FIThatinbreeding", "[", 
    RowBox[{"\[Sigma]_", ",", "\[Mu]_", ",", "NN_"}], "]"}], ":=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"HThatinbreeding", "[", 
        RowBox[{"\[Sigma]", ",", "\[Mu]", ",", "NN"}], "]"}], "-", 
       RowBox[{"HIhatinbreeding", "[", 
        RowBox[{"\[Sigma]", ",", "\[Mu]", ",", "NN"}], "]"}]}], ")"}], "/", 
     RowBox[{"HThatinbreeding", "[", 
      RowBox[{"\[Sigma]", ",", "\[Mu]", ",", "NN"}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.682681810388164*^9, 3.6826820355934067`*^9}, {
  3.682682435436854*^9, 3.682682456271652*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"FIThatinbreeding", "[", 
    RowBox[{"\[Sigma]", ",", "\[Mu]", ",", "NN"}], "]"}], "==", 
   FractionBox[
    RowBox[{" ", 
     RowBox[{
      RowBox[{"NN", " ", "\[Sigma]"}], "-", "1"}]}], 
    RowBox[{"1", "+", 
     RowBox[{"NN", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "/", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]"}], ")"}], "2"]}], "-", " ", "\[Sigma]"}],
        ")"}]}]}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.682681869170577*^9, 3.6826818766503983`*^9}, {
  3.682681913798482*^9, 3.6826819170761547`*^9}, {3.682682022929408*^9, 
  3.682682046984324*^9}, {3.682682092805895*^9, 3.6826820986124487`*^9}, {
  3.682682151857106*^9, 3.682682297715948*^9}, {3.682682473752606*^9, 
  3.6826824739807777`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.682681877299485*^9, 3.682681917600054*^9}, {
   3.682682024041645*^9, 3.682682047784339*^9}, 3.68268210015623*^9, 
   3.682682159431398*^9, {3.682682210980522*^9, 3.682682293112619*^9}, 
   3.6826824749617558`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Producing the final figure", "Subsection",
 CellChangeTimes->{{3.657574798774209*^9, 3.657574830821253*^9}}],

Cell["\<\
This figure contains the results from the simple model (HI, HT, FIT) and the \
HG result from the more complex previous model. Also, it includes the \
simulation results and results for outbreeding sexual populations for \
comparison.\
\>", "Text",
 CellChangeTimes->{{3.6575748334174*^9, 3.657574917106554*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"muvalues", "=", 
   RowBox[{"10", "^", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "6"}], ",", 
      RowBox[{"-", "5"}], ",", 
      RowBox[{"-", "4"}]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"standardmu", "=", 
   RowBox[{"10", "^", 
    RowBox[{"-", "6"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"standardN", "=", 
   RowBox[{"10", "^", "3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]Min", "=", 
   RowBox[{"10", "^", 
    RowBox[{"-", "8"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"yrange", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.01"}], ",", "1.01"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"actual", " ", 
    RowBox[{"plots", ":"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotHetI", "=", 
   RowBox[{"LogLinearPlot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"Fhat", "[", 
            RowBox[{"\[Gamma]", ",", 
             RowBox[{
             "muvalues", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}], ",", "standardN"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"HISexualhat", "[", 
           RowBox[{"\[Gamma]", ",", 
            RowBox[{
            "muvalues", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}], ",", "standardN"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3"}], "}"}]}], "]"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "\[Gamma]Min", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Gamma]Min", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.01"}], ",", "1.01"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Red", ",", 
        RowBox[{"Darker", "[", "Green", "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Blue", ",", "Dashed"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Red", ",", "Dashed"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Darker", "[", "Green", "]"}], ",", "Dashed"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "16"}], "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\[Gamma]\>\"", ",", "20"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(H\), \(I\)]\)\>\"", ",", "20"}], 
         "]"}]}], "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotHetT", "=", 
   RowBox[{"LogLinearPlot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"\[Theta]hat", "[", 
            RowBox[{"\[Gamma]", ",", 
             RowBox[{
             "muvalues", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}], ",", "standardN"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"HISexualhat", "[", 
           RowBox[{"\[Gamma]", ",", 
            RowBox[{
            "muvalues", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}], ",", "standardN"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3"}], "}"}]}], "]"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "\[Gamma]Min", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "\[Gamma]Min"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.01"}], ",", "1.01"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Red", ",", 
        RowBox[{"Darker", "[", "Green", "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Blue", ",", "Dashed"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Red", ",", "Dashed"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Darker", "[", "Green", "]"}], ",", "Dashed"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "16"}], "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\[Gamma]\>\"", ",", "20"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(H\), \(T\)]\)\>\"", ",", "20"}], 
         "]"}]}], "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotFIT", "=", 
   RowBox[{"LogLinearPlot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"FIShat", "[", 
           RowBox[{"\[Gamma]", ",", 
            RowBox[{
            "muvalues", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}], ",", "standardN"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3"}], "}"}]}], "]"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "\[Gamma]Min", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Gamma]Min", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.02"}], ",", "1.02"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Red", ",", 
        RowBox[{"Darker", "[", "Green", "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Blue", ",", "Dashed"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Red", ",", "Dashed"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Darker", "[", "Green", "]"}], ",", "Dashed"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "16"}], "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\[Gamma]\>\"", ",", "20"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(F\), \(IT\)]\)\>\"", ",", "20"}], 
         "]"}]}], "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotHetG", "=", 
   RowBox[{"LogLinearPlot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"equiHetG", "[", 
           RowBox[{"\[Gamma]", ",", 
            RowBox[{
            "muvalues", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}], ",", "standardN"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"HGSexualhat", "[", 
           RowBox[{"\[Gamma]", ",", 
            RowBox[{
            "muvalues", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}], ",", "standardN"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3"}], "}"}]}], "]"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "\[Gamma]Min", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Gamma]Min", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.01"}], ",", "1.01"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Red", ",", 
        RowBox[{"Darker", "[", "Green", "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Blue", ",", "Dashed"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Red", ",", "Dashed"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Darker", "[", "Green", "]"}], ",", "Dashed"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "16"}], "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\[Gamma]\>\"", ",", "20"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(H\), \(G\)]\)\>\"", ",", "20"}], 
         "]"}]}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.657574940846143*^9, 3.657574975051195*^9}, {
   3.657579164410584*^9, 3.6575791646530247`*^9}, {3.657579195482185*^9, 
   3.657579228435973*^9}, {3.657579344355453*^9, 3.6575793853827953`*^9}, {
   3.65757942299851*^9, 3.657579596407552*^9}, 3.657579748796528*^9, 
   3.657579834964394*^9, {3.657579893949712*^9, 3.657579894308652*^9}, {
   3.657847174532259*^9, 3.657847253612862*^9}, 3.6578473823759203`*^9, {
   3.657847546031818*^9, 3.657847568973104*^9}, {3.6578530140118732`*^9, 
   3.657853051812101*^9}, {3.657853119322939*^9, 3.657853176274714*^9}, {
   3.657853209405807*^9, 3.6578534306178102`*^9}, {3.657853583573412*^9, 
   3.657853635684518*^9}, 3.657855557416051*^9, {3.6585340898789253`*^9, 
   3.658534092336464*^9}, 3.6683956391955557`*^9, 3.668803892211515*^9}],

Cell["Plots for simulation results:", "Text",
 CellChangeTimes->{{3.668395656813542*^9, 3.6683956633893747`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Mu]values", "=", 
   RowBox[{"10", "^", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "6"}], ",", 
      RowBox[{"-", "5"}], ",", 
      RowBox[{"-", "4"}]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]values", "=", 
   RowBox[{"10", "^", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "7"}], ",", 
      RowBox[{"-", "1"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</users/janengelstaedter/dropbox/projects/RecAutomixis\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"headings", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<gamma\>\"", ",", "\"\<mu\>\"", ",", "\"\<Rep\>\"", ",", "\"\<p1\>\"",
      ",", "\"\<p2\>\"", ",", "\"\<p3\>\"", ",", "\"\<p4\>\"", ",", 
     "\"\<p5\>\"", ",", "\"\<p6\>\"", ",", "\"\<p7\>\"", ",", "\"\<HI\>\"", 
     ",", "\"\<HT\>\"", ",", "\"\<FIS\>\"", ",", "\"\<HG\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"allMeans", "=", 
   RowBox[{"{", "headings", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"results", "=", 
      RowBox[{
       RowBox[{"Import", "[", 
        RowBox[{
        "\"\<Neutral diversity screen samplesize=500 sampleEvery1000gen \
randomIniPop Rep\>\"", "<>", 
         RowBox[{"ToString", "[", "rep", "]"}], "<>", "\"\<.xlsx\>\""}], 
        "]"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"allMeans", ",", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
              "\[Gamma]values", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
              "\[Mu]values", "\[LeftDoubleBracket]", "j", 
               "\[RightDoubleBracket]"}], ",", "rep"}], "}"}], ",", 
            RowBox[{"Mean", "[", 
             RowBox[{
              RowBox[{"Select", "[", 
               RowBox[{"results", ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[Equal]", 
                    RowBox[{
                    "\[Gamma]values", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}]}], " ", "&&", " ", 
                   RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "\[Equal]", 
                    RowBox[{
                    "\[Mu]values", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}]}]}], ")"}], "&"}]}], "]"}], 
              "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", 
               RowBox[{"6", ";;", "16"}]}], "\[RightDoubleBracket]"}], 
             "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"allMeans", "\[LeftDoubleBracket]", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "13"}], "\[RightDoubleBracket]"}], "=", 
         " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"allMeans", "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "12"}], "\[RightDoubleBracket]"}], "-", 
            RowBox[{"allMeans", "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "11"}], "\[RightDoubleBracket]"}]}], 
           ")"}], "/", 
          RowBox[{"allMeans", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "12"}], "\[RightDoubleBracket]"}]}]}], 
        ";"}], 
       RowBox[{"(*", " ", 
        RowBox[{"re", "-", 
         RowBox[{
         "calculate", " ", "means", " ", "for", " ", "FIS", " ", "based", " ",
           "on", " ", "means", " ", "for", " ", "HI", " ", "and", " ", 
          RowBox[{"HT", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"Length", "[", "\[Mu]values", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "\[Gamma]values", "]"}]}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"rep", ",", "1", ",", "10"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grandMeans", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"Prepend", "[", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"Mean", ",", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{"SortBy", "[", 
            RowBox[{"allMeans", ",", 
             RowBox[{
              RowBox[{
              "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              "&"}]}], "]"}], ",", "10"}], "]"}]}], "]"}], ",", "headings"}], 
      "]"}], ",", "None", ",", 
     RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"StandardError", "[", "data_", "]"}], ":=", 
   RowBox[{
    RowBox[{"StandardDeviation", "[", "data", "]"}], "/", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"Length", "[", "data", "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"grandMeans", "//", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.668396266587113*^9, 3.668396272250634*^9}, {
  3.6683963133992662`*^9, 3.668396333773945*^9}, {3.668396455042844*^9, 
  3.668396488401943*^9}, {3.6683973659573812`*^9, 3.668397390468625*^9}, {
  3.668716095203022*^9, 3.668716099795259*^9}, {3.668716181238315*^9, 
  3.6687161819300413`*^9}, {3.668716521036345*^9, 3.6687165243786182`*^9}, {
  3.6688030629305897`*^9, 3.66880308573695*^9}, {3.6688040013586617`*^9, 
  3.6688040042389*^9}, {3.668804116170083*^9, 3.6688041200798273`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"gamma\"\>", "\<\"mu\"\>", "\<\"p1\"\>", "\<\"p2\"\>", "\<\"p3\"\>", \
"\<\"p4\"\>", "\<\"p5\"\>", "\<\"p6\"\>", "\<\"p7\"\>", "\<\"HI\"\>", "\<\"HT\
\"\>", "\<\"FIS\"\>", "\<\"HG\"\>"},
    {
     FractionBox["1", "10000000"], 
     FractionBox["1", "1000000"], "0.00011119999999999999`", "0.0003672`", 
     "0.`", "0.`", "0.9952158000000001`", "0.0043058`", "0.`", "0.9997052`", 
     "0.50102085`", 
     RowBox[{"-", "0.9953381891484614`"}], "0.004672999999999999`"},
    {
     FractionBox["1", "1000000"], 
     FractionBox["1", "1000000"], "0.3507028`", "0.0024396`", 
     "1.8000000000000001`*^-6", "0.`", "0.6439404000000002`", "0.0029146`", 
     "8.`*^-7", "0.6480764999999999`", "0.32537855000000004`", 
     RowBox[{"-", "0.9907230202556757`"}], "0.0053568`"},
    {
     FractionBox["1", "100000"], 
     FractionBox["1", "1000000"], "0.8383602`", "0.007037400000000001`", 
     "0.`", "0.000013000000000000001`", "0.15413820000000003`", "0.0004512`", 
     "0.`", "0.15810810000000003`", "0.0809392`", 
     RowBox[{"-", "0.6949467897461474`"}], "0.0075016`"},
    {
     FractionBox["1", "10000"], 
     FractionBox["1", "1000000"], "0.9729008`", "0.0076802`", "2.`*^-6", 
     "0.000166`", "0.019088`", "0.000163`", "0.`", "0.0230921`", 
     "0.013674350000000002`", 
     RowBox[{"-", "0.5656441058513616`"}], "0.0080112`"},
    {
     FractionBox["1", "1000"], 
     FractionBox["1", "1000000"], "0.9954138`", "0.0027651999999999998`", 
     "2.`*^-7", "0.001232`", "0.0005882`", "6.`*^-7", "0.`", "0.0019715`", 
     "0.0029093500000000002`", "0.3230171750122178`", "0.003998`"},
    {
     FractionBox["1", "100"], 
     FractionBox["1", "1000000"], "0.9980840000000001`", 
     "0.00041539999999999996`", "0.`", "0.0014923999999999998`", "8.2`*^-6", 
     "0.`", "0.`", "0.00021590000000000004`", "0.0017042`", 
     "0.8255671702933206`", "0.0019078000000000005`"},
    {
     FractionBox["1", "10"], 
     FractionBox["1", "1000000"], "0.9984552000000001`", "0.0000362`", "0.`", 
     "0.0015086000000000001`", "0.`", "0.`", "0.`", "0.0000181`", 
     "0.0015267`", "0.9850963615273451`", "0.0015448000000000003`"},
    {
     FractionBox["1", "10000000"], 
     FractionBox["1", "100000"], "0.0133158`", "0.0008124000000000001`", 
     "0.`", "0.`", "0.9484306000000003`", "0.0367236`", "0.0007176`", 
     "0.9862779999999999`", "0.5028817999999998`", 
     RowBox[{"-", "0.9611683486886416`"}], "0.0382536`"},
    {
     FractionBox["1", "1000000"], 
     FractionBox["1", "100000"], "0.030942400000000002`", "0.0024252`", 
     "9.4`*^-6", "0.`", "0.9288428000000003`", "0.0370704`", "0.0007098`", 
     "0.9678403`", "0.49415599999999993`", 
     RowBox[{"-", "0.9585378244812587`"}], "0.04021480000000001`"},
    {
     FractionBox["1", "100000"], 
     FractionBox["1", "100000"], "0.2794618`", "0.024313200000000004`", 
     "0.0003658`", "0.0000778`", "0.6684239999999999`", "0.0265542`", 
     "0.0008031999999999999`", "0.7081209`", "0.36753105`", 
     RowBox[{"-", "0.9257297603841582`"}], "0.0521142`"},
    {
     FractionBox["1", "10000"], 
     FractionBox["1", "100000"], "0.8130364`", "0.0530016`", "0.0009334`", 
     "0.0025466`", "0.12530999999999998`", "0.0051454`", 
     "0.000026600000000000003`", "0.1574495`", "0.09652145000000001`", 
     RowBox[{"-", "0.6183891873203469`"}], "0.061653599999999996`"},
    {
     FractionBox["1", "1000"], 
     FractionBox["1", "100000"], "0.9512202000000001`", "0.0276542`", 
     "0.00048660000000000006`", "0.0130226`", "0.007347000000000001`", 
     "0.00026920000000000004`", "2.`*^-7", "0.0216868`", 
     "0.031211900000000004`", "0.2975217884414077`", 
     "0.041432800000000006`"},
    {
     FractionBox["1", "100"], 
     FractionBox["1", "100000"], "0.9789110000000001`", 
     "0.0037024000000000002`", "0.0000628`", "0.0172116`", 
     "0.00010640000000000001`", "5.8`*^-6", "0.`", "0.0019948`", 
     "0.01918315`", "0.893751588267792`", "0.0209826`"},
    {
     FractionBox["1", "10"], 
     FractionBox["1", "100000"], "0.9817734`", "0.000345`", 
     "7.199999999999999`*^-6", "0.0178728`", "1.4`*^-6", "2.`*^-7", "0.`", 
     "0.00017769999999999998`", "0.01805335`", "0.9897850825665362`", 
     "0.018225200000000004`"},
    {
     FractionBox["1", "10000000"], 
     FractionBox["1", "10000"], "8.6`*^-6", "0.0001106`", "6.4`*^-6", "0.`", 
     "0.7152438`", "0.23804240000000015`", "0.0465882`", 
     "0.9999328999999999`", "0.5828035999999994`", 
     RowBox[{"-", "0.7157615155744796`"}], "0.2847476`"},
    {
     FractionBox["1", "1000000"], 
     FractionBox["1", "10000"], "0.0015776000000000002`", 
     "0.0009822000000000001`", "0.00016639999999999998`", "0.`", 
     "0.7105240000000005`", "0.2410488000000001`", "0.045701000000000026`", 
     "0.9978480999999999`", "0.5824070999999996`", 
     RowBox[{"-", "0.7133621408776929`"}], "0.2878984000000003`"},
    {
     FractionBox["1", "100000"], 
     FractionBox["1", "10000"], "0.0350076`", "0.023629400000000002`", 
     "0.0042642`", "0.00005239999999999999`", "0.6647038000000001`", 
     "0.22509800000000008`", "0.047244600000000005`", "0.9509932000000001`", 
     "0.5645513`", 
     RowBox[{"-", "0.6845387840211189`"}], "0.3002885999999999`"},
    {
     FractionBox["1", "10000"], 
     FractionBox["1", "10000"], "0.24298979999999998`", 
     "0.14348200000000003`", "0.026798599999999995`", 
     "0.0069228000000000015`", "0.4135548`", "0.139898`", "0.026354`", 
     "0.6649471`", "0.4435173`", 
     RowBox[{"-", "0.49919877493159764`"}], "0.3434554`"},
    {
     FractionBox["1", "1000"], 
     FractionBox["1", "10000"], "0.6481542`", "0.1648466`", "0.034262`", 
     "0.0821812`", "0.0508408`", "0.016461`", "0.0032542`", "0.1701103`", 
     "0.23988684999999998`", "0.29007644057479554`", "0.30100499999999997`"},
    {
     FractionBox["1", "100"], 
     FractionBox["1", "10000"], "0.8092880000000001`", 
     "0.029739599999999998`", "0.0061822000000000005`", 
     "0.15355080000000002`", "0.000878`", "0.00029639999999999994`", 
     "0.00006500000000000001`", "0.019200299999999997`", 
     "0.17532910000000002`", "0.8905444628662437`", "0.189834`"},
    {
     FractionBox["1", "10"], 
     FractionBox["1", "10000"], "0.8284838000000001`", "0.0028898`", 
     "0.0005610000000000001`", "0.1680506`", "0.000013000000000000001`", 
     "1.4`*^-6", "4.`*^-7", "0.0017402000000000001`", "0.17006444999999998`", 
     "0.9897314234337351`", "0.17150320000000002`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.668803969048739*^9, 3.668804022627966*^9, 
  3.668804199707904*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"style", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Directive", "[", 
      RowBox[{"Blue", ",", 
       RowBox[{"PointSize", "[", "0.02", "]"}]}], "]"}], ",", 
     RowBox[{"Directive", "[", 
      RowBox[{"Red", ",", 
       RowBox[{"PointSize", "[", "0.02", "]"}]}], "]"}], ",", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"Darker", "[", "Green", "]"}], ",", 
       RowBox[{"PointSize", "[", "0.02", "]"}]}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotHetISimul", "=", 
   RowBox[{"ListLogLinearPlot", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"grandMeans", "\[LeftDoubleBracket]", 
        RowBox[{
         RowBox[{"2", ";;", 
          RowBox[{"Length", "[", "grandMeans", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "10"}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
       "7"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Gamma]Min", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.01"}], ",", "1.01"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "style"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "16"}], "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\[Gamma]\>\"", ",", "20"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(H\), \(I\)]\)\>\"", ",", "20"}], 
         "]"}]}], "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotHetTSimul", "=", 
   RowBox[{"ListLogLinearPlot", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"grandMeans", "\[LeftDoubleBracket]", 
        RowBox[{
         RowBox[{"2", ";;", 
          RowBox[{"Length", "[", "grandMeans", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "11"}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
       "7"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Gamma]Min", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.01"}], ",", "1.01"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "style"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "16"}], "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\[Gamma]\>\"", ",", "20"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(H\), \(I\)]\)\>\"", ",", "20"}], 
         "]"}]}], "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotFITSimul", "=", 
   RowBox[{"ListLogLinearPlot", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"grandMeans", "\[LeftDoubleBracket]", 
        RowBox[{
         RowBox[{"2", ";;", 
          RowBox[{"Length", "[", "grandMeans", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "12"}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
       "7"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Gamma]Min", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.02"}], ",", "1.02"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "style"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "16"}], "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\[Gamma]\>\"", ",", "20"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(H\), \(I\)]\)\>\"", ",", "20"}], 
         "]"}]}], "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotHetGSimul", "=", 
   RowBox[{"ListLogLinearPlot", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"grandMeans", "\[LeftDoubleBracket]", 
        RowBox[{
         RowBox[{"2", ";;", 
          RowBox[{"Length", "[", "grandMeans", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "13"}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
       "7"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Gamma]Min", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.01"}], ",", "1.01"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "style"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "16"}], "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\[Gamma]\>\"", ",", "20"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(H\), \(I\)]\)\>\"", ",", "20"}], 
         "]"}]}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6573246296224117`*^9, 3.657324653476829*^9}, {
   3.6573247151404133`*^9, 3.657324757386764*^9}, 3.657325119361618*^9, {
   3.6573252263711443`*^9, 3.657325287918709*^9}, {3.6573253791645823`*^9, 
   3.657325383457219*^9}, {3.657325466094327*^9, 3.65732548193705*^9}, 
   3.657325611697722*^9, {3.658534317160204*^9, 3.658534320800872*^9}, {
   3.6585352129697742`*^9, 3.658535217007029*^9}, {3.668395839135746*^9, 
   3.668395874023478*^9}, {3.668395940168516*^9, 3.668395944271454*^9}, {
   3.6683959992919407`*^9, 3.668396027632718*^9}, {3.6683960781607237`*^9, 
   3.668396141297805*^9}, {3.668396584637999*^9, 3.668396598398625*^9}, {
   3.668396796422784*^9, 3.6683968075155067`*^9}, {3.6683968815433064`*^9, 
   3.66839689683162*^9}, {3.668396977153195*^9, 3.6683969818397903`*^9}, {
   3.668397191129568*^9, 3.668397313147892*^9}, {3.66880328934758*^9, 
   3.668803298779438*^9}, {3.668803340650503*^9, 3.668803373947859*^9}, {
   3.668804175504223*^9, 3.6688041785645437`*^9}, {3.668804217910296*^9, 
   3.6688042375496798`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Show", "[", 
       RowBox[{"plotHetI", ",", "plotHetISimul"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{"plotHetT", ",", "plotHetTSimul"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Show", "[", 
       RowBox[{"plotFIT", ",", "plotFITSimul"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{"plotHetG", ",", "plotHetGSimul"}], "]"}]}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.657325138784667*^9, 3.65732515321474*^9}, {
  3.657325279704018*^9, 3.6573252965817757`*^9}, {3.657326219219453*^9, 
  3.6573262509444304`*^9}, {3.657326325674511*^9, 3.657326346086038*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      GraphicsBox[{{{}, {}, 
         {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1: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
hHU+7K3F7tmUuaJNQN/Mt2uF+diNp5R1r2yH+GH2Y4fCsddtyJLV3waMaiPN
Glnstq2zSQ0GYLLR6d5ZCWzbYFvLxwbw4GwASUcY23043zDYAMx1kzuyVmPr
u3R/IhtAet5M0FWGMJ4v1fNXvD7svZNV7VSJLbu0x/PgFqj05bVjOGEXOMsX
UXRBsFG+ItsO2zl65IaALhxVMlA4tIvVvx+YxtABkaHDvz8S2NM7ct2e6cCJ
vdX3y5VYuW6nvoYOKBidHL40I4Rt1EPW2wxxG3pOSd7APvFi5LsvFS6J8eyA
WGyxmz1BdlQ4L2ko6HkR2zlmWk2fCqfkUgrygrFjDIo5uKiwX8N9ysAdu8er
wDeDAhqm497OVOzIEeuSd1rQdnre5c5HQbz/3c6f2DSgKVhVtbwFm3SgIqRb
HWhnXef7G7Blib/Oz9ShPLLyrmIlq/8hs91FHdKvRn58mYmdun3mfokanMrk
tu44w8ovCBmGbAKRTjEjATHsdW7cx8kqkCNRGmwryJpPj9LDoQKGh/a+uMnL
ymUGTg6TwY1xU1qYjTWevXDrIzJkc69dFptYj3//9nghMTLob18ul6/EpjSI
pgorg2vW18167thGBh7uWopAp0f4Bbti20Y6hggqwvnN0hllDtgJV5+X/1aA
dOQquNWCle9+WFqpAJN9H6dBmzXeXiDZSgHCBOqfWXBgoyWFhlPy8DAkj3wg
Zx3eb6fffwOyUEDsa5ZLx25T4hCgyUItB2/g9wfYKMCSM08WvicEVBy/gU3K
GvENkgVKLsU6Kgh7KCBCaD3u9746mW2C7b60xvKBNLSduXLuW40A7mv3eNIk
4TfbOM2/BDtygN3kviRIXLfgn8vBNvJSOnJMEjyzeNO4E7Bly4pOi0vC3Kdb
9Rpu2O6Vr9JOSoCk/uP1IQv8rOcnb5IiDt4Lpdm8m7FJy1GpfSLQ0b67ypeM
nWqpfb5cBIjc0Y5GSWz33RPxSSIg6iy0cokDe8jNTc9JBBpLjjksd/HhPr29
+tMGUA1UYmOEYLtv4vAdEAb62C3XD294cX+O3ZlfCJyrVU9ovMRGmwxKfwkC
7S66HJ+NbUQKJ7oF4aEpo2BnAqufY0pLFYTdGRar0SFW/uNOlq4gvHAjFRdw
YJNiRe94r4eTXQF8tyzX4pwpbdwgAAP5qstz27FJe3yd7gjArqhR+j4qK+fd
+NpTABS1DjQriWGjN81+bALQHWMVXz66BudlvIeN+GHbNjWer5HYkVx6Ns28
sDpjnINSyoO96cG42Bo4HZo5ezsPG500mmDywJCN+8jfh6zc30K9gQcqlrrr
6i5hG936dTyIB/wdG6Kc9rBML5vo5oYOnixSxBQ37s+9d85aDSknPJdaFLCN
9uyKP8YJ+q1/KwNEWf57M9yaE7rUEsL51mIjl450dU7gH6tcsfq1GtuG6/Ik
B0QeEGFrRqtZ79fqx34c4GX5jrPpAHakthz99CpQV9QSqL/HhX0ORnPZoPHC
2w+H47FJ2frZ19ng8OC+BM4IbKP9uomn2OBRcsx6U29WP1VvfDsbrFs/LETT
YeWDrhGdJJhdvi1W286J8/1hajwkeN29IPdmLcs1Y4Ubl4lHkfXPtUnYpH0S
zTNLRJTqra3Zsxys5/WufNMSYXlOdW/CF5ZlhS4GLxF90s4xHi+wSToV3F2L
xMLhEgaXPcvxB78kLxCGs8df2ySvwm4SCrWZJ6QfbjWnXceOtL4Yrj5PsJut
7tK/yPINi2KeeaLp3iOGnD+rv1BWSvtDuG5tkZvdzsp7bPm3/yHORm2KSfrK
jvOfG6v05oiKdaMOX1VYHpfdZTVLPCrrer1fCjvSXTdNfZa46F4v3yPAyt2f
q/DNElYF2dOtc2zYRslNrTPEgI3v1Uoay5k8exxmCPYbzLp77tiR4eaaPr8I
C74F7d1JJJxLnFErnCY0Sybuv4tneThG7t40IXjgM8k0guV/hkbh00Tf08rW
rd4sq4TPWUwT/lYRvqo6LOeZRTQxCVlRHhOe1H/VJNIubmkzBvFCSFo+SGAF
m4dP6PQkwbVwNEZkfhm7KnqD1SThNlTCeDXEco/xHsVJgv+Z9es/hSy7kEO7
JohjZuEOoQ4skyJPGU4QmqH9V8LuL2E/eNHB/4N4NpA8GaWwiO05ITz4neB4
+91OgZdl79W0qu/E/nztsrrZBdb4pxkp3wnekKZLHPUsPwiccf1O+K9f2HjF
h+VDVi29o4S6iYtt7LO/2K6hmkMjRH6uaMmNLfPYdh79fN8Ij0diVU9kWRba
kfVrmJBIFH/7modlRdK97mEiLkyya+zzH+xwKj1tmPCxkfkNkSw/PHlQf5hQ
/K2sO904h90RYuj/lXhkpFdi6/ob2/hccf8g4ai7pcp7B8u0ps0vBgm+Tfpv
w9RZbtowe2GQCBMy7MpZmcXOVNNTGSRcv2//TcpgudP2VfAAIXrVVLdwcgab
d8FJ/guR0O1Qsj78F3bQlvqMPsK86XGgrhfL6gsXzvYRbFUTGi67WPbJDbfr
I06mR2alirPMZbyZ1Ec4BDy9p/XqJ3bt06vuvYTYKo6z1sxp7LK+TPUewviA
d7hgHQPbsHSS2UW8NF767XKT5c7d0y1dhKLKrWNpB1k2i1N92kVwzVQdpCxN
sfaXrX+0i2iK2WC8W5flvnw02knYF9O44rInsfOEN49/JLzWKiSwXR3HLt6Z
uK6DmNl43SDlAMt5Bmfm2okoyt9hPS2WhRlh/e1E6t4Puv4dY6z7oC3ltBP9
j899/iTG8gKU7Wgn9up0Kj99MordaDEd0UaYHbhc5Vg9jK3DxanYSnQdn/b+
mcBywenA+RbCK2rfuqseLJ/4JtXSQkRlUz1rOFle56gV3EK8+fmFW93qK3ZI
uX5rM3GMNyCHvWiQtZ9jCdHvCVu3D11Oo73Y+i84lN4Rr9/Uh9WGs5xpf2qp
kVCWeaOgIcLyJT+FzkZiafBpIPvOHtbzamt2qZHIPhTH9yznE3ZzTPxYA7Hi
ZWrK7v8R27a2oryecO0OOuoy+g7byI4zjkZQkg6XaoqwbC477EMjuFwcODl2
NmJPH57dSSMK+6hpz3PqsSOXSrloBPcAvWeVfx32U56iK3VEwLu3CftHy1n3
90cloZYQ25WhvnpnGcuTuidrCVpzZGNhzitWn3rKoZaQattKWu3/EjvhXLh4
LXH7meegx2gu6/enNj6pISYLpEXLcrKwHUptYmsI4+Le3Xz+GdhebzgCaoiv
Zx6HHR+9j1156o9ODZEQtoEu7p/Iuo8bOuI1RBiXaGnMaCzr/XD60TIiCslc
6q9HQ7FN+nWGEZGVkpwQbHj/DT6f8D/1iPgfQuDNVw==
           "]]}, 
         {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1: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
           "]]}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
oP7NSsoejbw4HTX4H6MNdV0=
           "]]}, 
         {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
          Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQbbQ9bevGbKMDLCbXv08PLLD3Wnl3faYtgp88O2SV
Ij+CP6M8q+DEKkM4n3Od1gxRXwT/p+x+N8uPBnD+m9bqY5N7EXxpj0fLpxgg
+HNYHm2ZMV0fzmd4s1x960U9OP9O+6FYOUkEf7+wrtnXAF04XyrkzUWJaTpw
fhF7SPXLe9pw/qVV3MfVJRD8VUwS1zbFacH5XV4l7aunasL56ayVboEXNOD8
PSWXTjhLIPgSV6rfLg5Qh/PfPq+8GjBNDc4/+fp4fPYZVTh/UdK+70ZsCP7n
Xs5gd18VON9n5ZKAky3KcL5s5RTBGSeV4PzXu3UeCAsh+AffiQT+9VKE8/mv
BbYaT1SA809E7d2+rl8ezs95r94QwCKHCN+31ue7J8vA+YtPvU9axCwN55sJ
+tYG9UnC+Udsf2+KUZCA8xO9PHWdJovB+e/2O+gdVBBFhKfojWLpfmE4X+yK
hAO/hBCcP7dilXrsCgE4P+3X9uU8xnyI+LuayzvJixuRPgqS/5xV5oDzd1//
pbiPmxXO3yXwNOShBhOcv15YTqmM/99+GH/1SvGt/eY/4PwJ10O2CtZ+gvNT
uJUnMPa8gPMD4s5fDX96E86Pul6WGfn0JJy/bM6sCeVWM/fB+ACS/ocW
           "]]}, 
         {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
          Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQbbQ9bevGbKMDItYbha03Lrb3Wnl3faYtgp88O2SV
Ij+CP6M8q+DEKkM4n3Od1gxRXwT/p+x+N8uPBnD+m9bqY5N7EXxpj0fLpxgg
+HNYHm2ZMV0fzmd4s1x960U9OP9O+6FYOUkEf7+wrtnXAF04XyrkzUWJaTpw
fhF7SPXLe9pw/qVV3MfVJRD8VUwS1zbFacH5XV4l7aunasL56ayVboEXNOD8
PSWXTjhLIPgSV6rfLg5Qh/PfPq+8GjBNDc4/+fp4fPYZVTh/UdK+70ZsCP7n
Xs5gd18VON9n5ZKAky3KcL5s5RTBGSeV4PzXu3UeCAsh+AffiQT+9VKE8/mv
BbYaT1SA809E7d2+rl8ezs95r94QwCKHCN+31ue7J8vA+YtPvU9axCwN55sJ
+tYG9UnC+Udsf2+KUZCA8xO9PHWdJovB+e/2O+gdVBBFhKfojWLpfmE4X+yK
hAO/hBCcP7dilXrsCgE4P+3X9uU8xnyI+LuayzvJixuRPgqS/5xV5oDzd1//
pbiPmxXO3yXwNOShBhOcv15YTqmM/99+GH/1SvGt/eY/4PwJ10O2CtZ+gvNT
uJUnMPa8gPMD4s5fDX96E86Pul6WGfn0JJy/bM6sCeVWM/fB+ADFaGDm
           "]]}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], AbsoluteThickness[1.6], 
          Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQbbQ9bevGbKMDk1Q8geiSvdfKu+szbRH85NkhqxT5
EfwZ5VkFJ1YZwvmc67RmiPoi+D9l97tZfjSA89+0Vh+b3IvgS3s8Wj7FAMGf
w/Joy4zp+nA+w5vl6lsv6sH5d9oPxcpJIvj7hXXNvgbowvlSIW8uSkzTgfOL
2EOqX97ThvMvreI+ri6B4K9ikri2KU4Lzu/yKmlfPVUTzk9nrXQLvKAB5+8p
uXTCWQLBl7hS/XZxgDqc//Z55dWAaWpw/snXx+Ozz6jC+YuS9n03YkPwP/dy
Brv7qsD5PiuXBJxsUYbzZSunCM44qQTnv96t80BYCME/+E4k8K+XIpzPfy2w
1XiiApx/Imrv9nX98nB+znv1hgAWOUT4vrU+3z1ZBs5ffOp90iJmaTjfTNC3
NqhPEs4/Yvt7U4yCBJyf6OWp6zRZDM5/t99B76CCKCI8RW8US/cLw/liVyQc
+CWE4Py5FavUY1cIwPlpv7Yv5zHmQ8Tf1VzeSV7ciPRRkPznrDIHnL/7+i/F
fdyscP4ugachDzWY4Pz1wnJKZfz/9sP4q1eKb+03/wHnT7geslWw9hOcn8Kt
PIGx5wWcHxB3/mr405twftT1sszIpyfh/GVzZk0ot5q5D8YHABnoaj4=
           
           "]]}}, {{}, {{}, 
          {RGBColor[0, 0, 1], PointSize[0.02], AbsoluteThickness[1.6], 
           PointBox[{{-16.11809565095832, 0.9997052}, {-13.815510557964274`, 
            0.6480764999999999}, {-11.512925464970229`, 
            0.15810810000000003`}, {-9.210340371976182, 
            0.0230921}, {-6.907755278982137, 0.0019715}, {-4.605170185988091, 
            0.00021590000000000004`}, {-2.3025850929940455`, 0.0000181}}]}, 
          {RGBColor[1, 0, 0], PointSize[0.02], AbsoluteThickness[1.6], 
           PointBox[{{-16.11809565095832, 
            0.9862779999999999}, {-13.815510557964274`, 
            0.9678403}, {-11.512925464970229`, 
            0.7081209}, {-9.210340371976182, 0.1574495}, {-6.907755278982137, 
            0.0216868}, {-4.605170185988091, 
            0.0019948}, {-2.3025850929940455`, 0.00017769999999999998`}}]}, 
          {RGBColor[0, 
            NCache[
             Rational[2, 3], 0.6666666666666666], 0], PointSize[0.02], 
           AbsoluteThickness[1.6], 
           PointBox[{{-16.11809565095832, 
            0.9999328999999999}, {-13.815510557964274`, 
            0.9978480999999999}, {-11.512925464970229`, 
            0.9509932000000001}, {-9.210340371976182, 
            0.6649471}, {-6.907755278982137, 0.1701103}, {-4.605170185988091, 
            0.019200299999999997`}, {-2.3025850929940455`, 
            0.0017402000000000001`}}]}, {}}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{-18.420680743952367`, Automatic},
       CoordinatesToolOptions:>{"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& )},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           StyleBox[
           "\"\\!\\(\\*SubscriptBox[\\(H\\), \\(I\\)]\\)\"", 20, StripOnInput -> 
            False], TraditionalForm], None}, {
          FormBox[
           StyleBox["\"\[Gamma]\"", 20, StripOnInput -> False], 
           TraditionalForm], None}},
       FrameStyle->Directive[
         GrayLevel[0], 16],
       FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledFrameTicks[{Log, Exp}]}}, {{
          Automatic, Automatic}, {{{-18.420680743952367`, 
             FormBox[
              TemplateBox[{"10", 
                RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> 
               SuperscriptBox], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
             FormBox[
              TemplateBox[{"10", 
                RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> 
               SuperscriptBox], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-9.210340371976182, 
             FormBox[
              TemplateBox[{"10", 
                RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> 
               SuperscriptBox], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-4.605170185988091, 
             FormBox["0.01`", TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {0., 
             FormBox["1", TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-16.11809565095832, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-6.907755278982137, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {0.6931471805599453, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}}, {{-18.420680743952367`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-9.210340371976182, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-4.605170185988091, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {0., 
             FormBox[
              InterpretationBox[
               StyleBox[
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-16.11809565095832, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-6.907755278982137, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {0.6931471805599453, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}}}}],
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
       PlotRange->{{-18.420680743952367`, 0.}, {-0.01, 1.01}},
       PlotRangeClipping->True,
       PlotRangePadding->{{0, 0}, {0, 0}},
       Ticks->{
         Charting`ScaledTicks[{Log, Exp}], Automatic}], {192., -118.66252583997979`},
       ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}], InsetBox[
      GraphicsBox[{{{}, {}, 
         {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1: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
O3SCQ0UUui1E52ekJ/prX6qnVtTMm4/+DwaOvJ8=
           "]]}, 
         {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1: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

           "]]}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
Xa+Jf41dmJOdFKSX1RjLvHkrgf1/Caajyg==
           "]]}, 
         {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
          Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQbbQ9bevGbKMDLCbXv08PLLD3Wnl3faYtgp88O2SV
Ij+CP6M8q+DEKkM4n3Od1gxRXwT/p+x+N8uPBnD+m9bqY5N7EXxpj0fLpxgg
+HNYHm2ZMV0fzmd4s1x960U9OP9O+6FYOUkEf7+wrtnXAF04XyrkzUWJaTpw
fhF7SPXLe9pw/qVV3MfVJRD8VUwS1zbFacH5XV4l7aunasL56ayVboEXNOD8
PSWXTjhLIPgSV6rfLg5Qh/PfPq+8GjBNDc4/+fp4fPYZVTh/UdK+70ZsCP7n
Xs5gd18VON9n5ZKAky3KcL5s5RTBGSeV4PzXu3UeCAsh+AffiQT+9VKE8/mv
BbYaT1SA809E7d2+rl8ezs95r94QwCKHCN+31ue7J8vA+YtPvU9axCwN55sJ
+tYG9UnC+Udsf2+KUZCA8xO9PHWdJovB+e/2O+gdVBBFhKfojWLpfmE4X+yK
hAO/hBCcP7dilXrsCgE4P+3X9uU8xnyI+LuayzvJixuRPgqS/5xV5oDzd1//
pbiPmxXO3yXwNOShBhOcv15YTqmM/99+GH/1SvGt/eY/4PwJ10O2CtZ+gvNT
uJUnMPa8gPMD4s5fDX96E86Pul6WGfn0JJy/bM6sCeVWM/fB+ACS/ocW
           "]]}, 
         {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
          Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQbbQ9bevGbKMDItYbha03Lrb3Wnl3faYtgp88O2SV
Ij+CP6M8q+DEKkM4n3Od1gxRXwT/p+x+N8uPBnD+m9bqY5N7EXxpj0fLpxgg
+HNYHm2ZMV0fzmd4s1x960U9OP9O+6FYOUkEf7+wrtnXAF04XyrkzUWJaTpw
fhF7SPXLe9pw/qVV3MfVJRD8VUwS1zbFacH5XV4l7aunasL56ayVboEXNOD8
PSWXTjhLIPgSV6rfLg5Qh/PfPq+8GjBNDc4/+fp4fPYZVTh/UdK+70ZsCP7n
Xs5gd18VON9n5ZKAky3KcL5s5RTBGSeV4PzXu3UeCAsh+AffiQT+9VKE8/mv
BbYaT1SA809E7d2+rl8ezs95r94QwCKHCN+31ue7J8vA+YtPvU9axCwN55sJ
+tYG9UnC+Udsf2+KUZCA8xO9PHWdJovB+e/2O+gdVBBFhKfojWLpfmE4X+yK
hAO/hBCcP7dilXrsCgE4P+3X9uU8xnyI+LuayzvJixuRPgqS/5xV5oDzd1//
pbiPmxXO3yXwNOShBhOcv15YTqmM/99+GH/1SvGt/eY/4PwJ10O2CtZ+gvNT
uJUnMPa8gPMD4s5fDX96E86Pul6WGfn0JJy/bM6sCeVWM/fB+ADFaGDm
           "]]}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], AbsoluteThickness[1.6], 
          Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQbbQ9bevGbKMDk1Q8geiSvdfKu+szbRH85NkhqxT5
EfwZ5VkFJ1YZwvmc67RmiPoi+D9l97tZfjSA89+0Vh+b3IvgS3s8Wj7FAMGf
w/Joy4zp+nA+w5vl6lsv6sH5d9oPxcpJIvj7hXXNvgbowvlSIW8uSkzTgfOL
2EOqX97ThvMvreI+ri6B4K9ikri2KU4Lzu/yKmlfPVUTzk9nrXQLvKAB5+8p
uXTCWQLBl7hS/XZxgDqc//Z55dWAaWpw/snXx+Ozz6jC+YuS9n03YkPwP/dy
Brv7qsD5PiuXBJxsUYbzZSunCM44qQTnv96t80BYCME/+E4k8K+XIpzPfy2w
1XiiApx/Imrv9nX98nB+znv1hgAWOUT4vrU+3z1ZBs5ffOp90iJmaTjfTNC3
NqhPEs4/Yvt7U4yCBJyf6OWp6zRZDM5/t99B76CCKCI8RW8US/cLw/liVyQc
+CWE4Py5FavUY1cIwPlpv7Yv5zHmQ8Tf1VzeSV7ciPRRkPznrDIHnL/7+i/F
fdyscP4ugachDzWY4Pz1wnJKZfz/9sP4q1eKb+03/wHnT7geslWw9hOcn8Kt
PIGx5wWcHxB3/mr405twftT1sszIpyfh/GVzZk0ot5q5D8YHABnoaj4=
           
           "]]}}, {{}, {{}, 
          {RGBColor[0, 0, 1], PointSize[0.02], AbsoluteThickness[1.6], 
           PointBox[{{-16.11809565095832, 0.50102085}, {-13.815510557964274`, 
            0.32537855000000004`}, {-11.512925464970229`, 
            0.0809392}, {-9.210340371976182, 
            0.013674350000000002`}, {-6.907755278982137, 
            0.0029093500000000002`}, {-4.605170185988091, 
            0.0017042}, {-2.3025850929940455`, 0.0015267}}]}, 
          {RGBColor[1, 0, 0], PointSize[0.02], AbsoluteThickness[1.6], 
           PointBox[{{-16.11809565095832, 
            0.5028817999999998}, {-13.815510557964274`, 
            0.49415599999999993`}, {-11.512925464970229`, 
            0.36753105}, {-9.210340371976182, 
            0.09652145000000001}, {-6.907755278982137, 
            0.031211900000000004`}, {-4.605170185988091, 
            0.01918315}, {-2.3025850929940455`, 0.01805335}}]}, 
          {RGBColor[0, 
            NCache[
             Rational[2, 3], 0.6666666666666666], 0], PointSize[0.02], 
           AbsoluteThickness[1.6], 
           PointBox[{{-16.11809565095832, 
            0.5828035999999994}, {-13.815510557964274`, 
            0.5824070999999996}, {-11.512925464970229`, 
            0.5645513}, {-9.210340371976182, 0.4435173}, {-6.907755278982137, 
            0.23988684999999998`}, {-4.605170185988091, 
            0.17532910000000002`}, {-2.3025850929940455`, 
            0.17006444999999998`}}]}, {}}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{-18.420680743952367`, Automatic},
       CoordinatesToolOptions:>{"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& )},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           StyleBox[
           "\"\\!\\(\\*SubscriptBox[\\(H\\), \\(T\\)]\\)\"", 20, StripOnInput -> 
            False], TraditionalForm], None}, {
          FormBox[
           StyleBox["\"\[Gamma]\"", 20, StripOnInput -> False], 
           TraditionalForm], None}},
       FrameStyle->Directive[
         GrayLevel[0], 16],
       FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledFrameTicks[{Log, Exp}]}}, {{
          Automatic, Automatic}, {{{-18.420680743952367`, 
             FormBox[
              TemplateBox[{"10", 
                RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> 
               SuperscriptBox], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
             FormBox[
              TemplateBox[{"10", 
                RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> 
               SuperscriptBox], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-9.210340371976182, 
             FormBox[
              TemplateBox[{"10", 
                RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> 
               SuperscriptBox], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-4.605170185988091, 
             FormBox["0.01`", TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {0., 
             FormBox["1", TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-16.11809565095832, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-6.907755278982137, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {0.6931471805599453, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}}, {{-18.420680743952367`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-9.210340371976182, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-4.605170185988091, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {0., 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-16.11809565095832, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-6.907755278982137, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {0.6931471805599453, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}}}}],
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
       PlotRange->{{-18.420680743952367`, 0.}, {-0.01, 1.01}},
       PlotRangeClipping->True,
       PlotRangePadding->{{0, 0}, {0, 0}},
       Ticks->{
         Charting`ScaledTicks[{Log, Exp}], Automatic}], {576., -118.66252583997979`},
       ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}]}, {InsetBox[
      GraphicsBox[{{{}, {}, 
         {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1: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
k/bT
           "]]}, 
         {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1: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
           "]]}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
x4nR3rqPysRWdkuoYv8P2inV8g==
           "]]}, 
         {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
          Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxF0H0s1HEcB/DrnMPEeejOTzgPV05yOiwtpqyGurp29NsaQzkPhRN5zJzN
H5lScnXolNaiuQchcp1Sd3mIu8Y85LEVsf2W5rBqrZKs2vL5frb33nv9997H
XZgZlUwmkUj8v/nX/poUdVu6/0vS/+s9H5R3MA0Z97TeO3QOOa9a3bGYjNyZ
Q+lwPYN8gFvfXoEj85TvW1NDkBPv4Cp3GrKsIC1Lr/IDW7R4y+h85J8uuvD9
n7lgY2lRv7QC2enIgryKi1xHWeiQ3doDJhnlbPWoL/hdWU8c0xFZZ88J/Cbg
gLfjxlGsxgecbYYXfZrdDR5TWQ6wMWQVGZtsj/cGl/Nyy5qqd4HPmhaGR454
gZ/njukPY8jYeNFyg4ANXv5YOCGo8QQblgZOpw/uBNcLtd/9qchfKyxORvB3
gI8rHwgMl1hgl8IqW5nBA7zU5fPB3g65e2Vb5G+eO5g2GVkacMMNrI95oWmp
dAWLVtklAgoTTFoOHr4qdQY3vF4V1ps4gQNt+cVR1x3BfSG/2mPdMHAC7yjn
kJQBXtGF+na70cHl9Okcp0p7MGMcC6VhduC7F1XsOIUNOGVNI98aYA3Onsiw
usmzBNdlJa4PsczBXVNr7lpLU/AzGwKf9yKDW+2ZHvm0Dd2mm5QO6sp9P8CS
KVxtW/wFnGTJkmy5tggWxA9PnCJmwF3afnFPMbKnq5bFYSCvzz28QI6YBssT
yq2aFZPgjaSwMLLoDThmKj81mjCAubJkjS8DmRqNm1Ii9OC2t373WxT9YPNZ
47SJqBecYXgliSWegrFjDT5mEZ3gvsESfZviCdh5JJhkJnoMrmpOnBMSSvDS
I6ZDp6IRfKhj5oSVqAE8n3dPnEnUon+K6UZHkRQspjpoLhNX0H421aeLKAQ3
1t2WFATVajf9B6QUMsY=
           "]]}, 
         {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
          Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxF0H0s1HEcB/DrnMPEeejOTzgPV05yOiwtpqyGurp29NsaQzkPhRN5zJzN
H5lScnXolNaiuQchcp1Sd3mIu8Y85LEVsf2W5rBqrZKs2vL5frb33nv9997H
XZgZlUwmkUj8v/nX/poUdVu6/0vS/+s9H5R3MA0Z97TeO3QOOa9a3bGYjNyZ
Q+lwPYN8gFvfXoEj85TvW1NDkBPv4Cp3GrKsIC1Lr/IDW7R4y+h85J8uuvD9
n7lgY2lRv7QC2enIgryKi1xHWeiQ3doDJhnlbPWoL/hdWU8c0xFZZ88J/Cbg
gLfjxlGsxgecbYYXfZrdDR5TWQ6wMWQVGZtsj/cGl/Nyy5qqd4HPmhaGR454
gZ/njukPY8jYeNFyg4ANXv5YOCGo8QQblgZOpw/uBNcLtd/9qchfKyxORvB3
gI8rHwgMl1hgl8IqW5nBA7zU5fPB3g65e2Vb5G+eO5g2GVkacMMNrI95oWmp
dAWLVtklAgoTTFoOHr4qdQY3vF4V1ps4gQNt+cVR1x3BfSG/2mPdMHAC7yjn
kJQBXtGF+na70cHl9Okcp0p7MGMcC6VhduC7F1XsOIUNOGVNI98aYA3Onsiw
usmzBNdlJa4PsczBXVNr7lpLU/AzGwKf9yKDW+2ZHvm0Dd2mm5QO6sp9P8CS
KVxtW/wFnGTJkmy5tggWxA9PnCJmwF3afnFPMbKnq5bFYSCvzz28QI6YBssT
yq2aFZPgjaSwMLLoDThmKj81mjCAubJkjS8DmRqNm1Ii9OC2t373WxT9YPNZ
47SJqBecYXgliSWegrFjDT5mEZ3gvsESfZviCdh5JJhkJnoMrmpOnBMSSvDS
I6ZDp6IRfKhj5oSVqAE8n3dPnEnUon+K6UZHkRQspjpoLhNX0H421aeLKAQ3
1t2WFATVajf9B6QUMsY=
           "]]}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], AbsoluteThickness[1.6], 
          Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxF0H0s1HEcB/DrnMPEeejOTzgPV05yOiwtpqyGurp29NsaQzkPhRN5zJzN
H5lScnXolNaiuQchcp1Sd3mIu8Y85LEVsf2W5rBqrZKs2vL5frb33nv9997H
XZgZlUwmkUj8v/nX/poUdVu6/0vS/+s9H5R3MA0Z97TeO3QOOa9a3bGYjNyZ
Q+lwPYN8gFvfXoEj85TvW1NDkBPv4Cp3GrKsIC1Lr/IDW7R4y+h85J8uuvD9
n7lgY2lRv7QC2enIgryKi1xHWeiQ3doDJhnlbPWoL/hdWU8c0xFZZ88J/Cbg
gLfjxlGsxgecbYYXfZrdDR5TWQ6wMWQVGZtsj/cGl/Nyy5qqd4HPmhaGR454
gZ/njukPY8jYeNFyg4ANXv5YOCGo8QQblgZOpw/uBNcLtd/9qchfKyxORvB3
gI8rHwgMl1hgl8IqW5nBA7zU5fPB3g65e2Vb5G+eO5g2GVkacMMNrI95oWmp
dAWLVtklAgoTTFoOHr4qdQY3vF4V1ps4gQNt+cVR1x3BfSG/2mPdMHAC7yjn
kJQBXtGF+na70cHl9Okcp0p7MGMcC6VhduC7F1XsOIUNOGVNI98aYA3Onsiw
usmzBNdlJa4PsczBXVNr7lpLU/AzGwKf9yKDW+2ZHvm0Dd2mm5QO6sp9P8CS
KVxtW/wFnGTJkmy5tggWxA9PnCJmwF3afnFPMbKnq5bFYSCvzz28QI6YBssT
yq2aFZPgjaSwMLLoDThmKj81mjCAubJkjS8DmRqNm1Ii9OC2t373WxT9YPNZ
47SJqBecYXgliSWegrFjDT5mEZ3gvsESfZviCdh5JJhkJnoMrmpOnBMSSvDS
I6ZDp6IRfKhj5oSVqAE8n3dPnEnUon+K6UZHkRQspjpoLhNX0H421aeLKAQ3
1t2WFATVajf9B6QUMsY=
           "]]}}, {{}, {{}, 
          {RGBColor[0, 0, 1], PointSize[0.02], AbsoluteThickness[1.6], 
           PointBox[{{-16.11809565095832, -0.9953381891484614}, \
{-13.815510557964274`, -0.9907230202556757}, {-11.512925464970229`, \
-0.6949467897461474}, {-9.210340371976182, -0.5656441058513616}, \
{-6.907755278982137, 0.3230171750122178}, {-4.605170185988091, 
            0.8255671702933206}, {-2.3025850929940455`, 
            0.9850963615273451}}]}, 
          {RGBColor[1, 0, 0], PointSize[0.02], AbsoluteThickness[1.6], 
           PointBox[{{-16.11809565095832, -0.9611683486886416}, \
{-13.815510557964274`, -0.9585378244812587}, {-11.512925464970229`, \
-0.9257297603841582}, {-9.210340371976182, -0.6183891873203469}, \
{-6.907755278982137, 0.2975217884414077}, {-4.605170185988091, 
            0.893751588267792}, {-2.3025850929940455`, 0.9897850825665362}}]}, 
          {RGBColor[0, 
            NCache[
             Rational[2, 3], 0.6666666666666666], 0], PointSize[0.02], 
           AbsoluteThickness[1.6], 
           PointBox[{{-16.11809565095832, -0.7157615155744796}, \
{-13.815510557964274`, -0.7133621408776929}, {-11.512925464970229`, \
-0.6845387840211189}, {-9.210340371976182, -0.49919877493159764`}, \
{-6.907755278982137, 0.29007644057479554`}, {-4.605170185988091, 
            0.8905444628662437}, {-2.3025850929940455`, 
            0.9897314234337351}}]}, {}}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{-18.420680743952367`, Automatic},
       CoordinatesToolOptions:>{"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& )},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           StyleBox[
           "\"\\!\\(\\*SubscriptBox[\\(F\\), \\(IT\\)]\\)\"", 20, 
            StripOnInput -> False], TraditionalForm], None}, {
          FormBox[
           StyleBox["\"\[Gamma]\"", 20, StripOnInput -> False], 
           TraditionalForm], None}},
       FrameStyle->Directive[
         GrayLevel[0], 16],
       FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledFrameTicks[{Log, Exp}]}}, {{
          Automatic, Automatic}, {{{-18.420680743952367`, 
             FormBox[
              TemplateBox[{"10", 
                RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> 
               SuperscriptBox], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
             FormBox[
              TemplateBox[{"10", 
                RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> 
               SuperscriptBox], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-9.210340371976182, 
             FormBox[
              TemplateBox[{"10", 
                RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> 
               SuperscriptBox], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-4.605170185988091, 
             FormBox["0.01`", TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {0., 
             FormBox["1", TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-16.11809565095832, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-6.907755278982137, 
             FormBox[
              InterpretationBox[
               StyleBox[
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {0.6931471805599453, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}}, {{-18.420680743952367`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-9.210340371976182, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-4.605170185988091, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {0., 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-16.11809565095832, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-6.907755278982137, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {0.6931471805599453, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}}}}],
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
       PlotRange->{{-18.420680743952367`, 0.}, {-1.02, 1.02}},
       PlotRangeClipping->True,
       PlotRangePadding->{{0, 0}, {0, 0}},
       Ticks->FrontEndValueCache[{
          Charting`ScaledTicks[{Log, Exp}], 
          Automatic}, {{{-18.420680743952367`, 
            FormBox[
             TemplateBox[{"10", 
               RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
            FormBox[
             TemplateBox[{"10", 
               RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-9.210340371976182, 
            FormBox[
             TemplateBox[{"10", 
               RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-4.605170185988091, 
            FormBox["0.01`", TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {0., 
            FormBox["1", TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-16.11809565095832, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-6.907755278982137, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.6931471805599453, 
            FormBox[
             InterpretationBox[
              StyleBox[
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}}, Automatic}]], {192., -355.98757751993935`},
       ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}], InsetBox[
      GraphicsBox[{{{}, {}, 
         {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1: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
OKob
           "]]}, 
         {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1: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
           "]]}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1:eJwV13k8lE8YAHAkd26Sc1fuc1dyZ1RIKrmSO0l+KgpJiBLKWY6kSyU5O4QS
ufYJu45c7dotkiSkHIlIkn7TP3y+n5mdmXee55l5X6LvCcfDHGxsbC74z7//
etX+VRXH9KDWy13mpxUdNR83OYWO6kG2tLfbPzurCG7uCtCDJWrdtX8+dbXq
2cRhPYC5ixJL2DUnOZ8p+OiBkeQxiV/Y5qT8ykvOejB8eVjlN7Zt6fsnR7bo
Qdlzt+y/2O98Kk78NNWDDkbR0D8HSl3QvWCiBzzlB9TZrOnoUqLWkzxDPbi4
fj38c+/hM2VvyHowMPt4jh3bRXHDYysVPbhswBvEiX3olvMDohCe77ZoHS92
31ygVcY6PZBavCnDh21pe2F4lV8PiqTqov9Z5VeV5CCPHnRH0Cz4sb+6rI/P
4cDPK6PUK4AdLDrgwb9IhptpDAFh7LPJB9YtDJLBQFl67Xrsb8OnSw69I4Ne
b2LUP/sYZWyn95OhRb5s9p+3fobIJywyXCSrf5DC5rRSHD/SSwYOr18t0tip
bGONQ81kCLfhrZLHvn76aHDbAzJ0cyXqqmKHRvAWOpSSIdvx47N/3h1Z0j9Q
TAa6218TNey/UePbpgvIQNiQulMd2/+sr4ToXTI812IP1sTWv+Be63GFDHyN
xz7p/tu/LFvOb2fIUDD+PNAY+8GVL0YRUWRQc2QJmGAnZCcFsUeSwRyGH/+z
YQ6NJRaO23nr50yx79zYVmoUTIbj5ysTzbED80zs4vzIwGnz5sN2bN4yjesS
e/B+rSc57cVu+zuqUrSLDL6XHwrZYyc53K0ysCXDHMmg6595FsQY+3eQwU7s
3C5HbG6zP+tubiVD/lm+ffuw13b0xMsbkMGEGXDbA5t9POyEqgLev3Mtgkew
wVB3tVqODDpqVrP/HJv8Jc1GlgyPjPgYR7HZtL0fHNlABsHBgNzAf/t1csfY
QzEyLDIfmgdj/2GX9iDxkEG/bKbpNPYvOYq18XcSHHfSeJv4Lx5CjeUPvmHL
jq4kYRuxN0jLzpBAvMl/Ywp2xGjtzOpXEnB1vD6Vhr304HlOyygJVHoukTKx
Fw3Lxve+JQGPhxLbLew5h9sX/Sm4v8+8bDl21vbc2TcNJJDSuRBbga23+Zb7
znoSCAxsHa/EDpG6oaP1ggTl+3bWVGHPDmWzvleSwLJjNrzuX/4dS1OJKSLB
ML3yYCv21IUztCuXSDD1vZLrI/YCgb1DIY0Ezz49uTGCvVp3sethCgn043/q
jGILzWX2NSeSIE45zOfzv/m9S0bmz5PAMeb8h+l/z2fAXHUKJ0HszKz973/5
+1nHUPwACYI/O0lL7aCjdXHPTPK8SFAQH/NnA7aknIm5licJ6If8P8lgqzpZ
WVm6kQC+XahWwLaleDiFOWFHBp1Xxc64lnSibwcJuifP3DXElrEZKc4m4fET
qIru2Jzxjy6y65KAtvFJjif2VEP44ePaJJBEpwUPYDdu4t9oo4Hj41zH64ft
q6B/5/dGPP5fiu5x7JLFC9m+60kw3rQdxWMfsXXiOLiiCxzz6TfLsU3gM8Xk
ly4Mig3kPMUWMIiOEV/UhZGw/mvPscuJhUut33QBSiRK6rEXlxZndD7pwoyF
C0c7dlzxzXcr7bogkFdZMIKdyzny7Po1XejkNujfYIPHl32scj5bFxpXjh2V
w36zKeL6kUxdeKujyk7EFj0kGG2SqguKoXuRGnbSS5Ptg2d1YfSY218D7FNn
r7xW8NeFXg6hnH3YdkuWM0X6umCzVOd9DXtKSNgnnawLAaBaeQs7WfXd69M6
ukC4aimQh93iElJlo6YLfi9r+0r+rafqdvRXGV3Q0mmsrsVWDV3k01mjC64/
zvZ8wGabKlateq0DFsG22bo78fnnEttJ79aBtJM3IvSxP4BryOwrHegjLh4y
xm68ylunSdOB57Ls9tuxo9Exu/xaHVjiiTm7H/tnls6p9Ps68MzW2Pw89oxx
VdORUzpAD9tzdQDbu+DSf4mhOiBpKxM8jN0l6C9QeEIHamdcncaxH32SdBk+
gsfTdN40h330UsQXF28dyPl6z53Plo7Ghk2FLXfg+cUzHMywBxObvOQ36MDq
y41mxdgCekov/kjogHBjArMM23Twgvh7UR1YlmuJeo59k7Tz1S0BHUj6pfqF
iu3a32O0gQ33X0jfP4bN1HgvJv5ZG+zd7qaq7KKj7q6f7bxV2tCm9WmwEnv1
tJvylwptoI+KStVjayvWxbaVaUO90oODVOy08LOGiSXakNcVQHiLbauwtpAz
Vxtmd96zW8WmBYvG/o3Thrkc67g9u+mIIqZtsGCvDSbPZGZ/YoNwbguvnTZw
mXD+x7GHjprW8TvJ79IGxzUq0wLYLdxfTuyw0gbnC0GqitgdvwtKbxhrgy8p
2mUPNuuTrJy5ojbUdsZWFmFPPRXgTJzXgsuSZjz+djge5Weybs1qgXdMwJVQ
7G+PvxLKp7VAKbObdA57rrhtS/9nLXj0tzz/OvbSrYTTmoNakDZVfbgTe03C
yteeFi0wa86KNdxLR9LOU6+lcrRA5Wt1j6w9HU3MZYqbXdGCt3Y8aZrYVZmG
+w9kaIGg7x4vE2z7nrjBwhQtCGNpIlfsC7YbPuud04Lgl2fXXMWetbBe2R2g
BTSqZqmoA94v7TyV8yZasOg+a63gSEfZnVZHCgy1QIrPYoiEffDY5MNWfS0Q
j026vA17pcSALKiLn1ctw8Qfm6zUZXproxbkMz1ayrBzpZftqwS0YE48s9HS
Cd+33M5nvgxpwhyY7rvgjOthPC6s+50mlFQnyeViX2qpCHr6VhMs7r3jeYpd
cl7IJ4aO+0sG7PyIPfS7w1KEpgnZtqun0T4c79mtgsaPNWGoxKyOw4WOFPt1
7yWd0QRFtbFjRfvx+VLtfTMoQhPEX3NxNGFvybl0xfGUJizGhza9x3Z1mrwg
e0ITmiJUmyVc6ehyV9HRcl9N8CdKvUrEXn4pp/92pybYc/TqhLnREf0Bf6uq
lCaQTmSpBnvg83xwx/xWCU2Q+uy2Ox07c12CgqeoJlz0Tbhdhm0fvHI6Q0AT
iqqXqdPYXZun1X6xaUKGz06D4574/obulI4vGmB/PKDztBeud1amXVCdBnDW
7c97coCO5Hm6oxJrNIBPXKG3DzvGmK/4XpUGPu8r9JexzXLj/jKfaMBlzQO3
rXzo6MXBk+XmBRqgUvftxxD2sylnUeFLGuDT93VVxhe/j3BIsSq9NWAxZiX/
pR/O55Pvay57aIDZIHvjd+wvo/m3jrpqQEp8naLiYTpSa9U+qOioAYNMjlfx
2EWp26cyrTTguuHa+7b+dJQvfoIjREsDEuwWGOP/4XpXoenoLqvDD84tJz2P
0VHttVQR/p/qIJWoVZiD3c/j8GN8Xh3UrtTqvsaWmnz34s60OvCdqrPfEUhH
OU++Wwp+VIdh/epewyB8fxvJeUy3qsPXeClzjRN0lGIblvjwqjqU/d2c53qS
jsK9guVzstShllFZeBv7YHBgVWy6OpRkXxf5hG2U4/dpX7I65GWPyp8Io6Px
j86ILUYdwszTFdJO4ffHyM0/nf3UIXdZzmzgNK6/4kX/VT110PFkI76KpqPR
2rk/E7rqMPUlQEY+ho56umayGVrq4C3DSg/BLpofbypRUQeuqcNfNpzF7+/o
jbyTtDr4s8mFBp/D+ceqZhWzq8NiRH7o5jg6+m9tpLVDrxpkfLAlKiXRkdKx
OOGQLjWw5ohYjsUe6U0dyOhQg0DuTIchbM/cO8d7W9TA4D5n9M1kOnLc1JKz
94UaXIxMYkil4vgfFPq8J18N6C9HZHQu4/uuoTDRNkwNnrGLPKJk4/UqPnE4
GqIGK0n2CdpX8XmZVCOTclwN3i5VfLuFze386kl7gBqk0cvionJwPX+dfWPj
pQadjxMem1+no89SZmo7rNVg7uiFmk+36Kg+jN62XUoNEl5uflN4H9930od3
KkuowYOGnHN6BXRUTfnZziWqBlG+u79TsCv55F6186tBU22T/vtCXM95/3Xt
/asKWpqBrsQSOrrSufLaY1wVzDt3L/c+wvePkuq7k89Uga9pWoL5HJ9v7S88
9lWowqz9yGx0NR0dPrF70KBMFZQi3KqVa/D3QG3I+1/FqiDd5MAf9QJ/r9jX
fzh3SxVCx9S/adfj+EY7jKbGqULGkFlx80ucb31npu/bq0JTIZP3SReOR6fM
vdo9qvD8vKDFkW46et5S5/zaVhUsBlT9lHroaF/V77pVS1VQdP8ZebsX52PO
mRQ3Y1WoXeJcusnA72duZ1SFFFVhhbpDoaWfjjiGog5GzavAuMB9M9Y4jhdL
WiJzVgUMIrYql3+mo3vdtW3F0ypAmj8umzpBRxaUZV3mZxUgWBSYWH7F9Z0X
tao7qAKySS+dmqdxPvpG3Rprwf256j4t/KCj6c+RTPscFYhYQ+zfxMlAKwr3
kfoVFejsu/TBei0DCbh2lrJnqEC9mvUuDy4G0miTP1uZrAJxnPP7k3gYKKCk
WUU8RgXn5/1j8wIMNBqwLuLNIRUQVwouEpRkoHdf8qS9ySqQNumd56vOQF+J
HQkGOirQIdTwoUCDgZbd5mcENVWg4Na2sglNBpLqsGqmKKnAbE37nzAdBnJ5
8PUYUUoF8pXLkvM2MRD9qH7D6KoyTFjW/mdpzkDtk60HjnUqQ+6dU/GtzgxU
QFU969iuDFkJ21QMXRgo9m5irjFNGe58fBpUsp+BDJx29HODMjwIPDGT7o77
19IcC57idi5DeqgP7p9MtXp/UxnCAhzmkgJxf9Vmzb1HlEFlV3HMygUGyvdt
/KnHpQyEoLIhpUYG2puuuXPvGmVwV3S0+0TB+1d3/eYxNmWQKmDbff8lA+2X
OLmlYFkJYPjMd1Uq3s821XiJb0oguW740/ZOBgrXzhRceqME/nmNdrQBBrJd
OqTcUKoErErFM/NLDDR/iddpxx4lWC3+Utdt3Id2lxbYtydshO7HG50F3/Yh
uchskevtijBunKUeFc5EagPdbLU0RTDg3TU0HMFE+qa8s++aFSH0l1q/9Rkm
sv0T063QqAhT650vCscyUfj5/1KLKxWBZqL390YyE/Umm6ytvqUIHe0f7c/l
MlHCzeElZpAiSCZefezzkonSf0tP/DyqCBkzpz3ym5nopue+NxsCFGFIwPHw
CJWJKuQ7qrx8FcGm2z3Iq4OJhvKfho65KILjJp5gcwYTGT28OPUDKYKwbD65
cJSJJuu0hsVEFSFJbnfPq7Us9Nxz9sJPQUVwqads/8HNQnF/nmq+41eEuKyo
jA18LCSFTE/nr1UENnriRXdBFrJu2ilI/kUEPiWFsmeSLJTX5m9mN0yE0Ama
EqiwUOARjRHyeyJMsDuNlquxkCHfTKLEABEE+uXab2uwUPeuU4xBBhFWThoz
j+mw0O/u+KPHWokQHVNW+2YzC7kw864nlRGh5ttU7+h2FlIM9zMPfEiEO6b9
V7OsWGhaUm10bwkRgu8PdJjuYKEE1ye66/OJkE+c3B9ry0IV7xpohVeJ0Gse
3tRrz0LR0ecDk7PweJ16na6OLGQjZyUalE6EqPHJyXdOLDTk3emln0wEOJpm
wXBhIYGRgR9N0USwniNwXfBkoTdxd24WRRJhMMoicdSLhfI3+lqkhBOBVeVE
NT/AQsaHv6Q6BBPB9eTW3Z8OspD/xE/F4UNEGM9CjpP+LPRyRtzhjy0RFg0T
Xk6fYCHvkTF1SRu83s5X+SPBLLTCfM6ha0WEgkFnN3oICxk0uD7zQURYOkNW
yj/JQg9Sc9e3bCKCIKeRFcdpFtpxLmh2kIT7K4aNdmKPhpq3L2gTwbFqRiIr
goUU3IejVNWI4P/oraBAFAtlqykNpcgSQU/02KmGaBYiyy48v7+BCD4+qNkj
BsdDiJZeL0mEhJgR3x/YvD//2zojTASlHqMI8XMsVPTVSJpbEPe/4zl0C9ty
iHdegZ8IF4dIp+ViWegs9WGBw1oiXH6/X1HoPAvJvIiOOcpBBB3xOOVz2DWP
9rjE/yVAtqTAli/YLnnyurkrBCg5GX9wTxwLzV/5xl31iwCc+fGpD7EzEmG4
a5EApM3Pn66JZyGdM5kvxucJ4CfKoO/DfnXcN+vvLAFiC/M+3sMO8N10TGqG
AGkSP95+xl7rwmlJniSAbGRFhWoCjtdOpqztBAHO8nX6HcS22FK04DtGgDIP
68ls7Pek091nRgiglqJn3oQdpWRTnP2BAJahlS5fsKWkNsQ+HiRA0chPbb4L
LFTF/9WV1k8A4R7LBiVsx7+15A8sAvjET/4xwv42l8q3xCDAKNPuizV22rjn
J+HXBMhxG4mww9YY0K5X7yaASoZG0V7s1q7V7G2v8PplGo7aYvu97AnyaCNA
wDcLMMfmqMqzDqMSQDTueJ4W9t2SEIVLTQRw/iO0VhzbLHfbUiGFAAPH2Sd+
4PX2p4u9bqzH+7dE2t6DHR4/WvrmBQEKVu8I38cWP10VN/ucAFnu3rbB2BVH
L3rwPiNAxMXsrwbYdt779RUrCJDfFTm5iPdzykFtnWkZATKi3HaUYydb/Rpz
ekiAZ5xZS77YKsYdjYElBNA3v/pLELtZ69a1C4UE4Dg/YfkMx9OHEBh8Jx/v
/zslpiP2TW5Bxd5cvJ/3CE/O4Hww/D20PHGDAF+3hM+sxe6becJgv4bnK/3o
lYzzS4jlcGFTJgEGzblfnMH5F8j7SFzwMgHmDpsTh86yUIcZV8FECgHGh1JD
jLAT7tc23U4gQAsZKvtwvo+wxB0jzhNAarvsdUlsxHfio+NZArinRtrZn2Gh
5eCNbDwRBHjeHCj1MJKF9hfEpI+EEcAs6gixE9fTszdv5BtCcLz8No+P4no7
YZ62JfQYAULveqb/OYXrj38hatAbP//emncduH63ob181R54PjEV81Jc33dD
S29kuuJ8Vf1geA7Xv3u/V421I44Pdd9HkSAW6imiLZRbEUA+7GzB6/9YSGuA
cCF1GwFG5tJcA/H5kbLujLg/IoDAp5TEVT9cf2G6m2SMCQDWRba8vixUu/V6
8AUt/Dw9ojI1Hiy0/tTc3wPqBPBN/c9D0J2Fwkp2p5uo4HbvLg5PVxbSFWIv
+6ZAABuJ0HPvnVmoYPDIpJsYARxDfDgj9+B8E26J0hcmgMnLZPuUXSx0YLs8
n9A6Ahg4lCxl7WQh6Qd0tRYuHJ+fg24p+DyW/xbe6flDATqXHzqJbGGht/s0
J0VmFKDRQCD0vQkLXan/wNv6WQFCGaZf84xYiCfFZgf5nQK83V78ZZ0+rn8l
6aa1TQpgW/jbMBbfD23uDdVl6QoQuzKj1CqB51v7wfx8sgJYqzORpBgLBT1h
oznF49/v7ZT2EmYhUU7LvqVwBfBdlZSh4/vK83HH7DZvBSDllVxx+8tE3/++
UX+jpYDvz/odH8eZyPLBr/JSFQUItA8eePyJiXKcZYyiCQowLCp3OHSYicxK
va2J4gow9Ggy7FM/E110HPM99lseamatuf07mUi6cO7W33Z5kOTNK/n+hIkC
94pvpDfLw3GCmYbFIyai/Nr8oKBBHnyIt1YuljCRn11kzc4KedCIVS37k8dE
ZT//9l25Lg8G6n2cGZlMtN12naDaf9h7V8fsQvB431Rj7TmxfVbTj2sykS/y
C7q0KgecEtrJyqpM5Jqe596xJAd3SjtrWYpMZKW7YbPltBxEbRKfUJVmIvkT
fF8NWXLAsitxusjDRK9nppwUSuRgSqh1xmS0DxnMVKjO7JIDX5Pz55qu9SG2
adOe1CuyUC/CEx3ynYHud3zzzV8jA2cbRa3W4e9NA5E9MY6XNwBH9Y3potFe
1LLld6UnQQpIYQsrFeI9aPHUqI2atBQkvY/Mfsrbg9TLuobmxaSgb6HvcP1q
N7osn8eXyi0Fset9WZ8mupHrX0vfFzProVd6TXtKQzeahMsikg3rwX722x4U
0I1ELRWDe9zWg5lRp/fx5i500Han9rYrklC+q+dQX2YnMlLbox5xSRJ6p7O+
BSR3IkEuB+WyRElgeyRYyHm+E9W+dJWTjpaEPC/9yw7BnUjUOGDdnJ8kSD09
7Ll1bydqUU2cvmcgCWYSj1ojBDuR2lrqY/YBCRDo8z68LesVWh1pKzXsk4C0
wZWDdSmvUB90FgZ1S4DZ+QvBpvGv0Pnovtv9TRJQ4vxfvX3YKzQw/+lSxUMJ
6LRcftfj8gqljnAcPxgjAWqJdWHycq/QDMVC5yUBm7sraKqsA1nK7b8WJY37
sywPPCvuQLeigtj0xSVg4nDA9oS8DmSz+Sa9iFsC4MRzhmlWB8p/MB+eNiMO
NYJD93jDO9C+q0WU/fXi0KL00VgWdaD6owIOM/vFwcY0x+cPqx2JtinWFjuI
g71E6Ya63nZ0RNl448Fd4pBgEUOO7WhHksOHFxjm4jA8UxxAaGxHwfsoN14o
i4NrpaVvTWE72mgROpIwLwYFu1Xebg1vRykSb0/KpIuBfd5V32zZdpQgxbsd
JYtB2Lxd2OX17eisjInooXgxqHFvcLss2o5OEnPLH5wWAzPCt7S7PO3IU9tn
2tgHj7f5qTD3QhvStprwdyWLQe5wccB4dxvqDVtyu8oQhbCtzd9bLrahjtPq
6i+6RIEUumwZHNeGWqLclwZbRUH8rj6DcLYNvYitz1GqF4XctohLmafaUH5a
LONpgSjYaDbMlfu1oZMFPHvop0QhI/n4nk/b25Bkn5SFkBT+/cF++o+1bahE
uvq0vagoCHAbvLXnaEMmB/c9yRTA/Z8rO1astiLvmUx5cXbcniSWde5nKyrm
4f8j9VUEJs4zafZfWpHRlj8vFOtFoPddm05TVytyL/q4ycBHBMRN2p803WhF
U1Pnjp12F4EfYd/7C3Ja0dlN8vdrnEWA8yd9JuVKK8oHd1HTnSJg9kqszfdS
K5ocYMwiPRGI5bRvsTjfiqKFaI93copAn/7rnZVHWtHtiAeqXiXCYOZzB+3d
0orKzT06ifnCEPhM5lCQSStq4hQIGb8lDEoZZSnphq1oPCOo9kS6MLARIukf
yK2IVEraExcuDH77TOufqOD+/c9Diy2FYUlmRxOPSCvqPXXxzKeXQpDB/6P2
7AQNLbBPtARWCYFzsrW2+DgNSV/eKbhYIgQBpTGCjz/R0KEigXs8GUIw5ckt
8GWIhhZZWTRtbyFY8QqJTGbSkIzRXZGIZUEYzMxzD2imIf/l6mKBTYKQnbd9
OfYeDdFf2zUcVRWE3VoKp+/cpSHz0jF6m4wg2AtZnW28TUPrXcVWEzgF4VHD
G3mumzTUVnXc+Q9zHXAm3nV4mkVD6iHK7DMR66DvqG5nXAINTX3Ocu9pFIDy
8IeaH4/QkCtFPVj7qQBItYyI2gbQUEsOXEgtFoA89lTlKn8aum01U74jA7er
KjRlHqIhu/s7ueGgAJAas1L9vGjoiTfbs3JOAVDjQGuOO9BQKDNoXZYtP0iZ
HTJdNaGhoYfqfxa38ENE8hdGijEN7Yobm/Ig80On9oZrG4xoSEnXq1NZih96
PxpmbtlMQ2+Sdqe+GOMDy4o7f+/o0pCZmSbvx1g+GIyt1aAq0RD3/QlOUjUv
JASrlqQI01BYZMGP7Ae8IGsbP+MiREPDe31Gf93mhd3KBZzKgjRUu/KmuTmB
F3iuUK/S+Gko0KU1br8jL8CA8RoFbry/vEVs56Z5gBB9mqG4SkW5wYdWujby
gLDgduPD01Rk1P2rPmg9D2T08O88NkVFTM2MmHX8PCBefbwrdJKKBD/Xr+6e
44YpqSLNi1+oKNZLkr0TuKHg1+SaxjEq8rNtX9vhxQ2BlL1ewUNUpKWkK0S7
xgWkK5/56L1U1Hae2nM4lQsmelkMDuzDHzwy1p7jAnHJNIZ+DxXduZkkYuXP
BYPHjIJzu6hIWGRErEWfC/THHk1HdlDRjz/ZUk2v14LrXHBkYAsV1b1ZJjby
rwWIqLRXeoF/H0sr02NbCwGxHuSEGiqKU88yLf7BCX7VuvOj1VRke0Z9X8Z7
Tui7clGi9DkVDci7Jvk+4QT9P+eemj6jouXDVTNcTpzQe2m7XfITKjL5caJu
7801YJPFLtNYREXyt01tWi6vgSmb7M+G2BzW3Eyj+DUwfPZaSGUhFXVcuzND
DFwD0evevigtoCJ30y7ijy1roGDxy2pePhVFxWkkXf/IAVqGc9EVd6ioVnjM
+aMaBwgfTLvhdA2vv4ZZ5ynLAWr6spT+HCqK96EpvhXiAAKh/q4P9u7y4tnu
RXZIGGq+FHyViob2Hk2rb2GHiYmQ1etX8HrSvzVf82EHi7tHt/NnUNHOdct6
dtfZYJj8Sf94MhXpVH290Z7KBvBTuZoXW9TrHZvVOTaIvS3fV5iE9+NRfbep
Pxs8entx4EMiFQXuPndUXR/3b2P8db9IRYT1vJa8eX8pZqzGscB4KnoiJq8Y
LrRKmTWX1f4VQ0Vcy0eSJJf+UNSkNPseYnsPV808H/5DSbta9tUbW/Dxnrqf
FX8oKz+uH6JFU9Fx6xjnSOc/lJr61ydvnsHrixy8GH1jhRJYuCfRJZKKHg/d
nIzb+JsSeG1riPQpKuKkjjtsFPhNUVPZ/qk/jIo8H+rVNP9YptjEnaq8gS0Q
0ZHASVumhCm5+ktjB4osy10MWKYMupZJEE7ifLR0s09+/ItiEfCSaBZCRQ9L
11elGy5RCqZn0p4GUZHvHamGQsISJXjheeNZbOkrG6h1vEsUIy1XU1vslGgZ
5ud3PykrGefFRgKpKGCvwgKK/UlJ6xfSl8BWWlDZPNu2SJm6PjmYdBTH08Kg
yt59gcK5NZpw/z8qctls2OC/fYESISswFY69TsOIGq21QCnQdV20xY4WM2GW
rP6gSF1vps774/wZ37LAdv8HpSbG1doGe32a1eaKyXlKi8Xl+BU/Ksp441wl
EjNHEdB9UpbuS0U2HXdDNvvNUTI89C/9h83e8FXbbdccJeFzRinCDs2PLcrb
MEcpT9h3c/YgFTkHPbqm+/w7ZffX1w77sKXWcEbt+TZLGQ5Pa1P3oaJtXv4x
os0zlGz1sOAVLyp6um1lwS1zhrL7+mPPd9hKalnH7x3A7ZpTZ2qxueYbDpBW
pikBfcgxErsjSWKb3eZpSkZ5575fnlTk9KyFK6V4kpKb7hLOge3HvzGDPW2C
8kOTfaOhOxXNy102zvWaoKywRCvlsONIv0YMdCcoS3OvDnNi5+3r2RxI/0yR
dfM1obtR0eDdM+9YUp8pRjohWSew9+n3qTwqHKMEc2S9LnelImuvCw0ulBGK
WZOFwe79+Dw7Mev/PWOEYvGg9ZcBtl+ch3Ca7whlQnfqHRE7rph86OVa3H7A
+/dPFypq/P6eR2v3R0oCn2p+IfZxgaASjsoPlDxFkaNc2PbePcz9Y/0Utb9P
qYPO+DxqpEU3xfRT2qhbVtuwVRQaN2pL9lOi8++4VGGvfHgUwrHjLYVwY4P/
ZezigynrHpewKLHyoctbsVf9rKw4AhmUsM15XWVOOP5vwo+4jbVT1Lwtmbcd
qYh0/XC1jmQ7xfL6/YeXsLncnNdy7mij9PoL5MZgVwyQ75WV0ChT35w6vLB5
hqberglspvjcNXZVwA5qp2Z4jr2g+LjrSBY74Hjvuq/FvaOGErGgGHUdu6Uz
tq2i5DmlJOn+QjK2bK8pG3fgU8rwYIVeEHb240MffMdKKRanv4M+9mS5/Pqa
kiJKr6feexXsbc/67dYF3qcQpt4IbcD+eOpu9ImxGxThnpfVf+xxvkZLTG0I
vEJJkKJozWJHc62vThpLprQsZlWPYFeocmnVjUVS8k5JuzKxi3JvZpw2udHo
N6An2Ib9P8Tcf8U=
           "]]}, 
         {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
          Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQbbQ9bevGbKMD/hsYfmrrVNt7rby7PtMWwU+eHbJK
kR/Bn1GeVXBilSGcz7lOa4aoL4L/U3a/m+VHAzj/TWv1scm9CL60x6PlUwwQ
/Dksj7bMmK4P5zO8Wa6+9aIenH+n/VCsnCSCv19Y1+xrgC6cLxXy5qLENB04
v4g9pPrlPW04/9Iq7uPqEgj+KiaJa5vitOD8Lq+S9tVTNeH8dNZKt8ALGnD+
npJLJ5wlEHyJK9VvFweow/lvn1deDZimBueffH08PvuMKpy/KGnfdyM2BP9z
L2ewu68KnO+zcknAyRZlOF+2corgjJNKcP7r3ToPhIUQ/IPvRAL/einC+fzX
AluNJyrA+Sei9m5f1y8P5+e8V28IYJFDhO9b6/Pdk2Xg/MWn3ictYpaG880E
fWuD+iTh/CO2vzfFKEjA+YlenrpOk8Xg/Hf7HfQOKogiwlP0RrF0vzCcL3ZF
woFfQgjOn1uxSj12hQCcn/Zr+3IeYz5E/F3N5Z3kxY1IHwXJf84qc8D5u6//
UtzHzQrn7xJ4GvJQgwnOXy8sp1TG/28/jL96pfjWfvMfcP6E6yFbBWs/wfkp
3MoTGHtewPkBceevhj+9CedHXS/LjHx6Es5fNmfWhHKrmftgfABjCmkG
           "]]}, 
         {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
          Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQbbQ9bevGbKMDB2fFWq1w2mDvtfLu+kxbBD95dsgq
RX4Ef0Z5VsGJVYZwPuc6rRmivgj+T9n9bpYfDeD8N63Vxyb3IvjSHo+WTzFA
8OewPNoyY7o+nM/wZrn61ot6cP6d9kOxcpII/n5hXbOvAbpwvlTIm4sS03Tg
/CL2kOqX97Th/EuruI+rSyD4q5gkrm2K04Lzu7xK2ldP1YTz01kr3QIvaMD5
e0ounXCWQPAlrlS/XRygDue/fV55NWCaGpx/8vXx+OwzqnD+oqR9343YEPzP
vZzB7r4qcL7PyiUBJ1uU4XzZyimCM04qwfmvd+s8EBZC8A++Ewn866UI5/Nf
C2w1nqgA55+I2rt9Xb88nJ/zXr0hgEUOEb5vrc93T5aB8xefep+0iFkazjcT
9K0N6pOE84/Y/t4UoyAB5yd6eeo6TRaD89/td9A7qCCKCE/RG8XS/cJwvtgV
CQd+CSE4f27FKvXYFQJwftqv7ct5jPkQ8Xc1l3eSFzcifRQk/zmrzAHn777+
S3EfNyucv0vgachDDSY4f72wnFIZ/7/9MP7qleJb+81/wPkTrodsFaz9BOen
cCtPYOx5AecHxJ2/Gv70Jpwfdb0sM/LpSTh/2ZxZE8qtZu6D8QEGXpBu
           "]]}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], AbsoluteThickness[1.6], 
          Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQbbQ9bevGbKMDdzxVQcjea+Xd9Zm2CH7y7JBVivwI
/ozyrIITqwzhfM51WjNEfRH8n7L73Sw/GsD5b1qrj03uRfClPR4tn2KA4M9h
ebRlxnR9OJ/hzXL1rRf14Pw77Ydi5SQR/P3CumZfA3ThfKmQNxclpunA+UXs
IdUv72nD+ZdWcR9Xl0DwVzFJXNsUpwXnd3mVtK+eqgnnp7NWugVe0IDz95Rc
OuEsgeBLXKl+uzhAHc5/+7zyasA0NTj/5Ovj8dlnVOH8RUn7vhuxIfifezmD
3X1V4HyflUsCTrYow/mylVMEZ5xUgvNf79Z5ICyE4B98JxL410sRzue/Fthq
PFEBzj8RtXf7un55OD/nvXpDAIscInzfWp/vniwD5y8+9T5pEbM0nG8m6Fsb
1CcJ5x+x/b0pRkECzk/08tR1miwG57/b76B3UEEUEZ6iN4ql+4XhfLErEg78
EkJw/tyKVeqxKwTg/LRf25fzGPMh4u9qLu8kL25E+ihI/nNWmQPO3339l+I+
blY4f5fA05CHGkxw/nphOaUy/n/7YfzVK8W39pv/gPMnXA/ZKlj7Cc5P4Vae
wNjzAs4PiDt/NfzpTTg/6npZZuTTk3D+sjmzJpRbzdwH4wMAwUiKvg==
           
           "]]}}, {{}, {{}, 
          {RGBColor[0, 0, 1], PointSize[0.02], AbsoluteThickness[1.6], 
           PointBox[{{-16.11809565095832, 
            0.004672999999999999}, {-13.815510557964274`, 
            0.0053568}, {-11.512925464970229`, 
            0.0075016}, {-9.210340371976182, 0.0080112}, {-6.907755278982137, 
            0.003998}, {-4.605170185988091, 
            0.0019078000000000005`}, {-2.3025850929940455`, 
            0.0015448000000000003`}}]}, 
          {RGBColor[1, 0, 0], PointSize[0.02], AbsoluteThickness[1.6], 
           PointBox[{{-16.11809565095832, 0.0382536}, {-13.815510557964274`, 
            0.04021480000000001}, {-11.512925464970229`, 
            0.0521142}, {-9.210340371976182, 
            0.061653599999999996`}, {-6.907755278982137, 
            0.041432800000000006`}, {-4.605170185988091, 
            0.0209826}, {-2.3025850929940455`, 0.018225200000000004`}}]}, 
          {RGBColor[0, 
            NCache[
             Rational[2, 3], 0.6666666666666666], 0], PointSize[0.02], 
           AbsoluteThickness[1.6], 
           PointBox[{{-16.11809565095832, 0.2847476}, {-13.815510557964274`, 
            0.2878984000000003}, {-11.512925464970229`, 
            0.3002885999999999}, {-9.210340371976182, 
            0.3434554}, {-6.907755278982137, 
            0.30100499999999997`}, {-4.605170185988091, 
            0.189834}, {-2.3025850929940455`, 
            0.17150320000000002`}}]}, {}}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{-18.420680743952367`, Automatic},
       CoordinatesToolOptions:>{"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& )},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           StyleBox[
           "\"\\!\\(\\*SubscriptBox[\\(H\\), \\(G\\)]\\)\"", 20, StripOnInput -> 
            False], TraditionalForm], None}, {
          FormBox[
           StyleBox["\"\[Gamma]\"", 20, StripOnInput -> False], 
           TraditionalForm], None}},
       FrameStyle->Directive[
         GrayLevel[0], 16],
       FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
           Charting`ScaledTicks[{Log, Exp}], 
           Charting`ScaledFrameTicks[{Log, Exp}]}}, {{
          Automatic, Automatic}, {{{-18.420680743952367`, 
             FormBox[
              TemplateBox[{"10", 
                RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> 
               SuperscriptBox], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
             FormBox[
              TemplateBox[{"10", 
                RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> 
               SuperscriptBox], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-9.210340371976182, 
             FormBox[
              TemplateBox[{"10", 
                RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> 
               SuperscriptBox], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-4.605170185988091, 
             FormBox["0.01`", TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {0., 
             FormBox["1", TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-16.11809565095832, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-6.907755278982137, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {0.6931471805599453, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}}, {{-18.420680743952367`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-9.210340371976182, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-4.605170185988091, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {0., 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
              AbsoluteThickness[0.1]}}, {-16.11809565095832, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-6.907755278982137, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {0.6931471805599453, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
             FormBox[
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
              AbsoluteThickness[0.1]}}}}}],
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
       PlotRange->{{-18.420680743952367`, 0.}, {-0.01, 1.01}},
       PlotRangeClipping->True,
       PlotRangePadding->{{0, 0}, {0, 0}},
       Ticks->{
         Charting`ScaledTicks[{Log, Exp}], Automatic}], {576., -355.98757751993935`},
       ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}]}}, {}},
  ContentSelectable->True,
  ImageSize->{717.6562500000001, Automatic},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.6590378725822353`*^9, {3.668804222069955*^9, 3.668804241438858*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Figure to show statistics as a function of map distance", "Subsection",
 CellChangeTimes->{{3.682328888984836*^9, 3.6823289209513903`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"gamma", "[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.682337532725398*^9, 3.682337564279945*^9}, 
   3.682337623727604*^9, {3.682337661575584*^9, 3.682337662678734*^9}}],

Cell[BoxData["0.009851488817163948`"], "Output",
 CellChangeTimes->{{3.68233755618718*^9, 3.6823375650153503`*^9}, 
   3.682337624760912*^9, 3.682337665265843*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"muvalues", "=", 
   RowBox[{"10", "^", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "6"}], ",", 
      RowBox[{"-", "5"}], ",", 
      RowBox[{"-", "4"}]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"standardN", "=", 
   RowBox[{"10", "^", "3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gamma", "[", "d_", "]"}], ":=", 
   RowBox[{
    FractionBox["1", "3"], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "3"}], 
        RowBox[{"d", "/", "100"}]}], "]"}]}], ")"}]}]}], ";", "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "\[Gamma]", " ", "as", " ", "a", " ", "function", " ", "of", " ", "map", 
    " ", "distance", " ", "d", " ", "in", " ", "centiMorgans", " ", "for", 
    " ", "central", " ", "fusion", " ", "automixis"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"dmax", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotstyles", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Directive", "[", 
      RowBox[{"Blue", ",", 
       RowBox[{"Thickness", "[", "0.007", "]"}]}], "]"}], ",", 
     RowBox[{"Directive", "[", 
      RowBox[{"Red", ",", 
       RowBox[{"Thickness", "[", "0.007", "]"}]}], "]"}], ",", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"Darker", "[", "Green", "]"}], ",", 
       RowBox[{"Thickness", "[", "0.007", "]"}]}], "]"}], ",", 
     RowBox[{"Directive", "[", 
      RowBox[{"Blue", ",", "Dashed", ",", 
       RowBox[{"Thickness", "[", "0.007", "]"}]}], "]"}], ",", 
     RowBox[{"Directive", "[", 
      RowBox[{"Red", ",", "Dashed", ",", 
       RowBox[{"Thickness", "[", "0.007", "]"}]}], "]"}], ",", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"Darker", "[", "Green", "]"}], ",", "Dashed", ",", 
       RowBox[{"Thickness", "[", "0.007", "]"}]}], "]"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.682329650566416*^9, 3.6823296574162188`*^9}, {
   3.682330042234006*^9, 3.68233005477277*^9}, 3.6823301303353*^9, 
   3.682330416144001*^9, {3.682331508522088*^9, 3.682331566195361*^9}, {
   3.6823316316917267`*^9, 3.682331702438704*^9}, {3.6824078612501593`*^9, 
   3.682407865525647*^9}, {3.682407960045013*^9, 3.6824081030029707`*^9}, {
   3.6824083137987957`*^9, 3.682408316223597*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotHetI", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"Fhat", "[", 
            RowBox[{
             RowBox[{"gamma", "[", "d", "]"}], ",", 
             RowBox[{
             "muvalues", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}], ",", "standardN"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"HISexualhat", "[", 
           RowBox[{
            RowBox[{"gamma", "[", "d", "]"}], ",", 
            RowBox[{
            "muvalues", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}], ",", "standardN"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3"}], "}"}]}], "]"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "0", ",", "dmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "dmax"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.01"}], ",", "1.01"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "plotstyles"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "16"}], "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Map distance \!\(\*
StyleBox[\"d\",
FontSlant->\"Italic\"]\) [cM]\>\"", ",", "20"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(H\), \(I\)]\)\>\"", ",", "20"}], 
         "]"}]}], "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotHetT", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"1", "-", 
           RowBox[{"\[Theta]hat", "[", 
            RowBox[{
             RowBox[{"gamma", "[", "d", "]"}], ",", 
             RowBox[{
             "muvalues", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}], ",", "standardN"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"HISexualhat", "[", 
           RowBox[{
            RowBox[{"gamma", "[", "d", "]"}], ",", 
            RowBox[{
            "muvalues", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}], ",", "standardN"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3"}], "}"}]}], "]"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "0", ",", "dmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "dmax"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.01"}], ",", "1.01"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "plotstyles"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "16"}], "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Map distance \!\(\*
StyleBox[\"d\",
FontSlant->\"Italic\"]\) [cM]\>\"", ",", "20"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(H\), \(T\)]\)\>\"", ",", "20"}], 
         "]"}]}], "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotFIT", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"FIShat", "[", 
           RowBox[{
            RowBox[{"gamma", "[", "d", "]"}], ",", 
            RowBox[{
            "muvalues", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}], ",", "standardN"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3"}], "}"}]}], "]"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "0", ",", "dmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "dmax"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.02"}], ",", "1.02"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "plotstyles"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "16"}], "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Map distance \!\(\*
StyleBox[\"d\",
FontSlant->\"Italic\"]\) [cM]\>\"", ",", "20"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(F\), \(IT\)]\)\>\"", ",", "20"}], 
         "]"}]}], "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotHetG", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"equiHetG", "[", 
           RowBox[{
            RowBox[{"gamma", "[", "d", "]"}], ",", 
            RowBox[{
            "muvalues", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}], ",", "standardN"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"HGSexualhat", "[", 
           RowBox[{
            RowBox[{"gamma", "[", "d", "]"}], ",", 
            RowBox[{
            "muvalues", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}], ",", "standardN"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3"}], "}"}]}], "]"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "0", ",", "dmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "dmax"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.01"}], ",", "1.01"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "plotstyles"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "16"}], "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Map distance \!\(\*
StyleBox[\"d\",
FontSlant->\"Italic\"]\) [cM]\>\"", ",", "20"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(H\), \(G\)]\)\>\"", ",", "20"}], 
         "]"}]}], "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"plotHetI", ",", "plotHetT"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"plotFIT", ",", "plotHetG"}], "}"}]}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.682329277329256*^9, 3.682329374871367*^9}, {
  3.68232942196716*^9, 3.6823295627236347`*^9}, {3.682329597958961*^9, 
  3.6823296005373697`*^9}, {3.682329631003306*^9, 3.682329645677308*^9}, {
  3.682329705309928*^9, 3.6823297340745773`*^9}, {3.6823300595965033`*^9, 
  3.682330093749586*^9}, {3.682330176028472*^9, 3.682330194599504*^9}, {
  3.682330307820725*^9, 3.682330357695724*^9}, {3.682330460131111*^9, 
  3.682330465832522*^9}, {3.682330695982581*^9, 3.682330698646634*^9}, {
  3.6823311800716867`*^9, 3.682331240872348*^9}, {3.682331489906705*^9, 
  3.682331496228208*^9}, {3.682331579139615*^9, 3.6823316014507217`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      GraphicsBox[{{}, {}, 
        {RGBColor[0, 0, 1], Thickness[0.007], LineBox[CompressedData["
1:eJwV1nc8V18YB/BLAw0rhC+hECWphEQfM7KyKnunkFCSaHwJyS57ZBQKPysZ
hfqKqCSlRBGSpMgoNBS/44/7uq/365x7z/Oc59xzrpiTl+lhZoqi/pFr8a53
eOQl48vhPTZsywXM5yewVFPQu19AC7+MVKUa/NuxIyslo0LAHNkm/APbphow
JCQedFrSDkpt0VIx/Heh39Z1+5qAC251eDFF6FdAPEo4b0HEDfTk5zPGFqX4
q+ec7Ch5HHKVU7UTzoX4GvK6yTHJB8bjmkUvn+TjkMvP+qsCvhC1bUjYsToX
TZqC1Y0ZfshWt+PvHM6B3AbVsmmRM1ALZIvl2JyNDGaHAokbgVDj6883DLwG
1sHg6wclz0Ot/NEjzrXpuDfQ0dZoTsdAykxUFXsqvI1d9GySgkApsEkz7U+G
JGOmeborGNnSYw41TxLxfuslzWiBEFCbOHtFfBOQkMXPkLAOBUPGpGFGOx56
HIUq9zPC4PDfyrRHSldBXdh992DfJTDsen5461xB1fiznRMil0G/W7+nxzMO
x+zsbl9yjACjMKbYyiQW659PyIreiAR9YE266ddodKsGFdUMRYFewJBYcz0K
McXcUiaSMaA3Vxx/4RsJbeHc3C9HYkG1aPFZ2EfgfHMaZ4N5HKiYdzzTdpdh
ef6jUfRMHOj1Pn/MfMIhryATbZl0BYyUvoWAhEvgGPdtlVC8CjVBo8by5jB8
zatn+95F4mba1RWwPAzZvPvDIgQSQL2TVrxXEILAtuSmg/cSQC+Kd121MgQH
QweYN1gngjG68si1UxexasbnQm1GEhif/i54Ogfj83/36i+pJoNRUsVq/SkI
D12W/DXrSwZ9qk+/1zMI/q8T/MdEUkGnt5nmx9FhFvW+qoaRCor5zQvuTXTI
aknOhDimgQrOViuLu4Chimof4RvpoBwyryqLn8cDD6rsi2YGqPOX3TgCziFt
w77xyiHiApZfKl1nYRL/zt1IMhPUjJBye14gZPQ3FAi2ZJL5UOF34gsE65Jj
n4ePZIGedVjsVlQA7O/Olz8wzwZdcJR7IfwMDHg3vJTII249ZeXPfgbKPjqT
kTPZoHaUO/um+INXOk7WIimH5GNRPV9zGsyhdwzvk3VIN3O5J7T/NCYHuo+J
K14HvZBZvnfED60pYkWTXcTa1TfDJP0QxFqx8bJALuhttP1Czb7YpHMl/LY3
8ZNGwWXHfdER6vWlpyUXlLLlnjZ+X4gvkSmS9csDPdxQ2dvvJJr/5cq+7sgH
PUopK8/oBLxULsb+k74Jus9RQaEVJ8Af6DgpGXQTVAV/eVSLD9x+Cd8+s/UW
qOXtq1l0fbDqR9JOkagC0DdWd+nbeqNy26kk3Y/EfZMrTkl6w87b7KePciGo
ZWzXuAe9UPqN427TCDFHoJI/jxdMR8JV3LX/A5VontWX5Ik5ySPX4jOIc2al
RFU9kXtYe77uB3G3t+TZT8cwM8jE4LheDOrcD/oulWNIeR+gWTlfAqruu8zU
gjvUhSxz+w6Ugsq7o7Cx0h1frRSXsRYTl965+NPDHevGzjgXbykD1X9Gc0ef
G7zcFCSoXmIt4bmnr46iKTyvM4GlHBTrr7jghKPgv8UTJr2DOJZ/6MzBo2AM
fx82jSCmt2Yz9x0Bt0vprTyl26DS0r5E/nGF68V1lsouxEnhwkZNrqi9Hs3W
Hkv89oope6wrXD54uP8aJl7rZO+50RWVdlIy+okVoMYHCn84HYaFZU7p5NQd
UM/YWnZTLpjoMV9xXbASVGf2j+dvnRFmx3rYTJOYZbx7usIZFc5eglUJxDy5
70fdnMF+XDU0ULEKVI2ux7ZeJzwKfmu1/Fw1qE9FN+90OcJmWXRldR5xZr+a
0F1HfL+kxun2nPjyhNJYmiNEo28+ahWpAfU4kK3e3hFnk0/JXXlIPBESOPrN
Adv/41ouxHoPFJ+60LigA57IPnJokyMWbr04z+QAh3L/2vOWxMtXJ1R32CO6
qt/7QyFxiv3ouI89RhjFPfmGtaD4U0yEq+2Q2bmvfFt8HSi/t3X2VrbYafFv
5cdaYrvJou9ytnj2rsw1YYj4ewrfHxZb/O5fK/RzZz0o+bZmu2obmH/9FFbX
Tby9ocSAZoOVC0E2OusegJqMzNGYtUKK2yE7mb3E5g/U/76ygvhrGQeu48T5
BYxVt62wp6DLuaee+F70ni1eVrhbkFRZLcsg9ZB4s++bJb6ZjdXpPyeW2nNs
6qcF5Nm6VPcMErNv+R35zgIB9xvuy80S+2XGetRbgEU6mcG7rgFU9hre2YsW
EJtXb+r3JKZHrxXhscCBW8mtJ1c/BCVr/JRZ7RAybIMNXMWIlQw9QiUPYZDb
s81iJ7GN6UusPgSvcxrtqrbELyL4LHsO4rLptw6WYmLz4gMrAg6i/q/Gu3SD
RrKfyXh1MQ5AwmR8pDGyCVTU4WPC3uYQvKCjfCSHWLavrcHKHJzF2ZErqok1
ah5c1TbHH1YzWZNB4nebN9fQzPGCUX2yT+kRqV9iAPNTMwTIBc3/+kQcVhwj
KWuG5xw8PLJqLWS+Ap1SuUzRqOp5+OUB4prG1BHKFDUezVW+HsTyvVkHJ01w
o8XfsjaJeMX9R9HtJvC/8D5T9xvx5NRp+1gTrJ/Il3ZOe0zyPSdlwGOC0893
IWX6CSjBqhzbbcZgl6389IT1Kain4uI94sbIjZaLmhMiHuv548FvjJcGG9/a
aROHsA5HL+zH5laekxJJxFqfU+9l7kd/y0T+bcVWUBajl55/NIJOQx57W8Az
UNNbrj0NM0SfqFjlfAzxX4YldcIQvvQMa7kbxKK1jma2hshB/K34VmKtRFtj
eUPM1dM1rITayH6z6njWRwOU3rP2+1xPbNFmZq9jgLV3uPqYmNpBeb9bPymm
D5uoOfMhPuKxXYFj7Pq47vKptVmGeESKvuSvHmR4796NtFjs715Gf6MHDT+H
RN4yYnHx8vIoPShkHMpP2PoClMtPA8a/fXC0y7e91Ucsr5WpMqWLED1aauoX
Yv/GTpkPushXiHsdMU3cFNi07aUuxtgD9D1XvCT58kqdKdeF3wPDXdsViFdd
afh9QhdRojM8ddHE/Nv0cn7roGpQ81m7SgfJlzsjgUcHb3SDpqJ1iI8WH+Nl
0cFsyX0+A1NiURv2/N97oRi4y/HxEeJnODjbtxc1a7bOMq4Sd8st7C/ci7ta
gqK3R4hfM2peaO5FXf7kyYSEV6CMOyqsg7TRu0o21TSLWI73eN4pbfw94XGf
s5C4V+77nJs2VDHMGv2AWDd0abupNu539VwL/UqsdnbNSgltPGBtafFTe032
PyH/J61aeOh+jWY5RnynP7dXTAsVXzw87GaJQ54H6vFrIfeocq0z1UniP3+y
gV0Loa5dVsd5iJ/xXnk6pwldJ660iyrEcWrrdN9oot0ylL8kiph+PvlTlCZ6
dT15l2x5A8p3zvoQpYkZSVWOYs8uUo/bYo3/1LFnUKMlwp+4t6g8cEYdYdd0
Lxy9SJxw7vPub+rg4zGf2JBKPHlM8FWvOhSYPNrTmogHVgdY16nDvyclNpzW
TfLx12g9q46/sdMcLk+IdfcXf2RWB/PvIk6axDtS36IFrvVqoLVp/MBWYn/B
qF6aGuRz3na67CIOz/xUxKuGw/tY0ksMF13+xYJNDY9TnSQ0/IhFO5W6PgCx
ygLKbi2LNp55HwQInQ1zrnbrIfV+Zxv/eA8UFhyqzEp6Sb0KO2OOq8LAkBGs
XUOstCTB20UVzuki+xUfEnf/Mra0UkWcYt9nwTfEcq0F2KuKL17WAoP/iHXL
2O3XqSJj4MBZb8P35Hnf4MF2FTA91NOIHiOe/Dz4TFEFz0Lknzdv6ifxsOh0
COyGSNzo74LxAfJ98fR7zihh9Gd/X6fcIPl+bHVXQRG5X2ufssd8BMWw6Lxy
YyfYhW9ODA0NkXoVlr7XlEeUW6VrtvgwmR/WrdvW78CsWtHQ0QufyfnOZ/di
xXb4bm+6w9c4Qvp7RmSJbUN/SVPkS7GvoDhVj7jtkcOc++t06YBRUNT5C4yv
stiszjLvWjtG8ovnS0ncAp3rYkfK146T9Tie/lZTBqeF7dd/sJkg+ezeO7N+
M2TGDqzsMpwk+zfn10ThTVjDMcna9IeYEb+yaq00lj5IL92QMUU84nNypxQ8
5Gvfsul/J+MtD+s02YiifU7Z92eJ5WSNzIIlMTMqyDmc9IPEd6gysU0ClWY6
SxK0pkn/5kY5Pglc0A3NujNMPJA2V3dKHGLv9bpvhM6Q+tVEZnzYAGXFkASB
7bNkfVd1q+ltgM269t9Mr4jpdK21j9Zj5mn0oHfQTzKeXEmLynqkLLXzNRX/
Rc6z9HifJjGs6au8ztxEXPZntb+5GJadCzLf5fOb7F8GI4ofRMl/s13pIPcf
ku+uVasDRXEirTSa+yHxpOazFi5R1G8OZ+U6Pkfed3l0jb0IuPROyASz/yXn
l3nS3rJ16N3y4tWZOmKGbovVnDDKMiE+ZPePmFOTyUoYtqUKXMLzxAMyer4P
hUAPzQnqLZwn8Ru1zIkLoXhEOJ3dYIHMh4z85hQawq+FOvQZEWd7GzUm0uBi
+k2ixISYvr/LOp4Gobq6MsNDi+0u8jExNETEWjdHOS0+X8L/K4SGowqpUyvO
EIuOeA340LA+hEeXJZ944EQUswEN80pnV3fdInYQVL+1j4a33z525Bcttlc7
GOnQEHeownZv+eL7nAbSNWhY2GR6MrSOmGHZt3sXDb0vYzOXvFpsF62LlaSh
Juyn86tOYrUP3CriNCTstpe+0b3ozo4RMRr082TvaPQtxjscrSlMwz3/tidB
XxbHz/v2bw0NSVt2xpqMLcY7HVHMRYPPYIa52MRiPMlxthw0SBkc62dML9r7
9f0VNCxlep0b93Oxvxe3NysNA5W73R3+LM6PeY3Ychrq3G9slfu36GXNr5bQ
kCyycmZhYTGeI7vDmGj4H6EhE8o=
          "]]}, 
        {RGBColor[1, 0, 0], Thickness[0.007], LineBox[CompressedData["
1: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
0r8pU3aDGojdu2VhbY108VYh5g8a+B9nJz4h
          "]]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], Thickness[0.007], 
         LineBox[CompressedData["
1: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
vCWtWGmchDdiXN/X11m8pcP45icS/gdbwprK
          "]]}, 
        {RGBColor[0, 0, 1], Thickness[0.007], Dashing[{Small, Small}], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6l2LCbXv08PLLBfIOrf1iU5xR7Gb+TY
rN4puQTOj4hcuP7Dxy1wPvf/xhh3uf1wvmrguxeHu4/A+eXnLO1nfDkJ54tv
EbzHyHgezt/2yPnMeZtLcP6hrLnSkW+uwPlf1Wz51+Zeh/OZfq4WkFa9Beeb
/U/YFrzuDpx/psXk3DGt+3C+/ITXP1e+ewDnv/5+/95Vg0dw/pJXu0/x9T2G
8/lkl79/8uQJnN+TuTVtgcozOP+bw+onGfXP4fwSoyNbxA6/gPPvrzvSfVHx
FZz/O+vKbM2q13C+tiP7v7Tdb+B890WK6RvF3yHCSzZe6WHMezhf500o93Xf
D3C+MP8HjiO/EHyW/bPXK8/5COdnm+y+yen9Cc5f7Zm0YN83BP/raymBZ9M+
w/lbg92Zp7h8gfPrPVrnb3mG4Cve9bqxuPUrnG9l3jJF0ugbnB8jd/4n42UE
/+up3kcFjd/h/BkscSVBKj8Q7r+3dRHTEQSftbYxxLLwJ5zPsDJu/SOhX3B+
0az1vUKHEPy92h0cgnm/4XxBryKdJr4/cP4d3QuXK/cg+Bvm2as8ifsL58eu
NxOU/YfgN7QubLyz6h+cv/aF7Gw+n/9wvlKLiAf7MgR/ujz31///EXwAISCT
Hw==
          "]]}, 
        {RGBColor[1, 0, 0], Thickness[0.007], Dashing[{Small, Small}], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6l2ItYbha03LrZfIOrf1iU5xR7Gb+TY
rN4puQTOj4hcuP7Dxy1wPvf/xhh3uf1wvmrguxeHu4/A+eXnLO1nfDkJ54tv
EbzHyHgezt/2yPnMeZtLcP6hrLnSkW+uwPlf1Wz51+Zeh/OZfq4WkFa9Beeb
/U/YFrzuDpx/psXk3DGt+3C+/ITXP1e+ewDnv/5+/95Vg0dw/pJXu0/x9T2G
8/lkl79/8uQJnN+TuTVtgcozOP+bw+onGfXP4fwSoyNbxA6/gPPvrzvSfVHx
FZz/O+vKbM2q13C+tiP7v7Tdb+B890WK6RvF3yHCSzZe6WHMezhf500o93Xf
D3C+MP8HjiO/EHyW/bPXK8/5COdnm+y+yen9Cc5f7Zm0YN83BP/raymBZ9M+
w/lbg92Zp7h8gfPrPVrnb3mG4Cve9bqxuPUrnG9l3jJF0ugbnB8jd/4n42UE
/+up3kcFjd/h/BkscSVBKj8Q7r+3dRHTEQSftbYxxLLwJ5zPsDJu/SOhX3B+
0az1vUKHEPy92h0cgnm/4XxBryKdJr4/cP4d3QuXK/cg+Bvm2as8ifsL58eu
NxOU/YfgN7QubLyz6h+cv/aF7Gw+n/9wvlKLiAf7MgR/ujz31///EXwAU4ps
7w==
          "]]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], Thickness[0.007], 
         Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6l2k1Q8geiS/QJR/7YuySn2MH4jx2b1
TsklcH5E5ML1Hz5ugfO5/zfGuMvth/NVA9+9ONx9BM4vP2dpP+PLSThffIvg
PUbG83D+tkfOZ87bXILzD2XNlY58cwXO/6pmy7829zqcz/RztYC06i043+x/
wrbgdXfg/DMtJueOad2H8+UnvP658t0DOP/19/v3rho8gvOXvNp9iq/vMZzP
J7v8/ZMnT+D8nsytaQtUnsH53xxWP8mofw7nlxgd2SJ2+AWcf3/dke6Liq/g
/N9ZV2ZrVr2G87Ud2f+l7X4D57svUkzfKP4OEV6y8UoPY97D+TpvQrmv+36A
84X5P3Ac+YXgs+yfvV55zkc4P9tk901O709w/mrPpAX7viH4X19LCTyb9hnO
3xrszjzF5QucX+/ROn/LMwRf8a7XjcWtX+F8K/OWKZJG3+D8GLnzPxkvI/hf
T/U+Kmj8DufPYIkrCVL5gXD/va2LmI4g+Ky1jSGWhT/hfIaVcesfCf2C84tm
re8VOoTg79Xu4BDM+w3nC3oV6TTx/YHz7+heuFy5B8HfMM9e5UncXzg/dr2Z
oOw/BL+hdWHjnVX/4Py1L2Rn8/n8h/OVWkQ82Jch+NPlub/+/4/gAwCn+3ZH

          "]]}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0, 0},
       Frame->True,
       FrameLabel->{
         FormBox[
          StyleBox[
          "\"Map distance \
\\!\\(\\*\\nStyleBox[\\\"d\\\",\\nFontSlant->\\\"Italic\\\"]\\) [cM]\"", 20, 
           StripOnInput -> False], TraditionalForm], 
         FormBox[
          StyleBox[
          "\"\\!\\(\\*SubscriptBox[\\(H\\), \\(I\\)]\\)\"", 20, StripOnInput -> 
           False], TraditionalForm]},
       FrameStyle->Directive[
         GrayLevel[0], 16],
       Method->{},
       PlotRange->{{0, 2}, {-0.01, 1.01}},
       PlotRangeClipping->True,
       PlotRangePadding->{Automatic, Automatic}], {192., -118.66252583997979`},
       ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}], InsetBox[
      GraphicsBox[{{}, {}, 
        {RGBColor[0, 0, 1], Thickness[0.007], LineBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[1, 0, 0], Thickness[0.007], LineBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], Thickness[0.007], 
         LineBox[CompressedData["
1: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
eEjX3D5gwvf/AfyyuEE=
          "]]}, 
        {RGBColor[0, 0, 1], Thickness[0.007], Dashing[{Small, Small}], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6l2LCbXv08PLLBfIOrf1iU5xR7Gb+TY
rN4puQTOj4hcuP7Dxy1wPvf/xhh3uf1wvmrguxeHu4/A+eXnLO1nfDkJ54tv
EbzHyHgezt/2yPnMeZtLcP6hrLnSkW+uwPlf1Wz51+Zeh/OZfq4WkFa9Beeb
/U/YFrzuDpx/psXk3DGt+3C+/ITXP1e+ewDnv/5+/95Vg0dw/pJXu0/x9T2G
8/lkl79/8uQJnN+TuTVtgcozOP+bw+onGfXP4fwSoyNbxA6/gPPvrzvSfVHx
FZz/O+vKbM2q13C+tiP7v7Tdb+B890WK6RvF3yHCSzZe6WHMezhf500o93Xf
D3C+MP8HjiO/EHyW/bPXK8/5COdnm+y+yen9Cc5f7Zm0YN83BP/raymBZ9M+
w/lbg92Zp7h8gfPrPVrnb3mG4Cve9bqxuPUrnG9l3jJF0ugbnB8jd/4n42UE
/+up3kcFjd/h/BkscSVBKj8Q7r+3dRHTEQSftbYxxLLwJ5zPsDJu/SOhX3B+
0az1vUKHEPy92h0cgnm/4XxBryKdJr4/cP4d3QuXK/cg+Bvm2as8ifsL58eu
NxOU/YfgN7QubLyz6h+cv/aF7Gw+n/9wvlKLiAf7MgR/ujz31///EXwAISCT
Hw==
          "]]}, 
        {RGBColor[1, 0, 0], Thickness[0.007], Dashing[{Small, Small}], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6l2ItYbha03LrZfIOrf1iU5xR7Gb+TY
rN4puQTOj4hcuP7Dxy1wPvf/xhh3uf1wvmrguxeHu4/A+eXnLO1nfDkJ54tv
EbzHyHgezt/2yPnMeZtLcP6hrLnSkW+uwPlf1Wz51+Zeh/OZfq4WkFa9Beeb
/U/YFrzuDpx/psXk3DGt+3C+/ITXP1e+ewDnv/5+/95Vg0dw/pJXu0/x9T2G
8/lkl79/8uQJnN+TuTVtgcozOP+bw+onGfXP4fwSoyNbxA6/gPPvrzvSfVHx
FZz/O+vKbM2q13C+tiP7v7Tdb+B890WK6RvF3yHCSzZe6WHMezhf500o93Xf
D3C+MP8HjiO/EHyW/bPXK8/5COdnm+y+yen9Cc5f7Zm0YN83BP/raymBZ9M+
w/lbg92Zp7h8gfPrPVrnb3mG4Cve9bqxuPUrnG9l3jJF0ugbnB8jd/4n42UE
/+up3kcFjd/h/BkscSVBKj8Q7r+3dRHTEQSftbYxxLLwJ5zPsDJu/SOhX3B+
0az1vUKHEPy92h0cgnm/4XxBryKdJr4/cP4d3QuXK/cg+Bvm2as8ifsL58eu
NxOU/YfgN7QubLyz6h+cv/aF7Gw+n/9wvlKLiAf7MgR/ujz31///EXwAU4ps
7w==
          "]]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], Thickness[0.007], 
         Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6l2k1Q8geiS/QJR/7YuySn2MH4jx2b1
TsklcH5E5ML1Hz5ugfO5/zfGuMvth/NVA9+9ONx9BM4vP2dpP+PLSThffIvg
PUbG83D+tkfOZ87bXILzD2XNlY58cwXO/6pmy7829zqcz/RztYC06i043+x/
wrbgdXfg/DMtJueOad2H8+UnvP658t0DOP/19/v3rho8gvOXvNp9iq/vMZzP
J7v8/ZMnT+D8nsytaQtUnsH53xxWP8mofw7nlxgd2SJ2+AWcf3/dke6Liq/g
/N9ZV2ZrVr2G87Ud2f+l7X4D57svUkzfKP4OEV6y8UoPY97D+TpvQrmv+36A
84X5P3Ac+YXgs+yfvV55zkc4P9tk901O709w/mrPpAX7viH4X19LCTyb9hnO
3xrszjzF5QucX+/ROn/LMwRf8a7XjcWtX+F8K/OWKZJG3+D8GLnzPxkvI/hf
T/U+Kmj8DufPYIkrCVL5gXD/va2LmI4g+Ky1jSGWhT/hfIaVcesfCf2C84tm
re8VOoTg79Xu4BDM+w3nC3oV6TTx/YHz7+heuFy5B8HfMM9e5UncXzg/dr2Z
oOw/BL+hdWHjnVX/4Py1L2Rn8/n8h/OVWkQ82Jch+NPlub/+/4/gAwCn+3ZH

          "]]}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0, 0},
       Frame->True,
       FrameLabel->{
         FormBox[
          StyleBox[
          "\"Map distance \
\\!\\(\\*\\nStyleBox[\\\"d\\\",\\nFontSlant->\\\"Italic\\\"]\\) [cM]\"", 20, 
           StripOnInput -> False], TraditionalForm], 
         FormBox[
          StyleBox[
          "\"\\!\\(\\*SubscriptBox[\\(H\\), \\(T\\)]\\)\"", 20, StripOnInput -> 
           False], TraditionalForm]},
       FrameStyle->Directive[
         GrayLevel[0], 16],
       Method->{},
       PlotRange->{{0, 2}, {-0.01, 1.01}},
       PlotRangeClipping->True,
       PlotRangePadding->{Automatic, Automatic}], {576., -118.66252583997979`},
       ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}]}, {InsetBox[
      GraphicsBox[{{}, {}, 
        {RGBColor[0, 0, 1], Thickness[0.007], LineBox[CompressedData["
1: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

          "]]}, 
        {RGBColor[1, 0, 0], Thickness[0.007], LineBox[CompressedData["
1:eJwV1Hk01AsbB/CKos0W3SwtYioS6oao7reoEG7XEo2tBUmuqNRFi6vbaGGi
ki1XKnvXEsbOD1nKbhAGQ2MwmBkqS0XmnfeP5zznc873POc85zznUT7nbeW2
bMmSJYSw/t+Pu3HaKsbcftOotBsfreYTokYKPgPyR1Ch6njh8Uo+8euL6Lhc
eRscGhBVpFrxCLOmrpx/5V0R4D7iPzw1Qdi5zpU9kffF+ixXESeHMaLaSKHg
Xdx1hG+/O9VUziG0VQ5mT2/2h9fNaweoJA4hzrrzynbbbQRFHZ2gLowQ/Vr3
jKjyd1FmMj70pYlNRLzYUEFyoIDkGZKsZsomjkumHyiPC0bHpdvk2dohIp/f
qDO5+QHS9k7mLq9nEY8yZHZYbnsEGbcTJlLcQSJB7kTwQ/kI9FjKkZmqvcSN
pqhq2+IIvHxX2M1wZhC2lMFlKg7P0CnHddsV10OsmbkcWBIXCdfiu5WBW7oJ
v44IP+7mGASO2JlmWHQSlk8ZF3/fFo9W5tmJCvVWQsNMJU2hLh5xviFmo1tb
CHGRP0dH3F9A1nj9BsZ0E3G6aPEtYZOA3wprvJYmNxByauGapyJf4r1hXn6u
QR0RJJ67/YF8IqSqeQr2OuWEuvHj+zk+iWi/d3png0opQad4j/XWJWLw6Dbf
bvliQlVE443m9SRkxQev26qUT9T+TNTsoCfD4MaCvc34f8Sar5E6m0PTUPe4
Y8PREFuCtvtapMlQGjyLlRrCeL5w9rGeu2yQjn0iV1RJT+8hiydZVM1JR5wW
U3MgKRpWnPsHLh79D3bPwp+8yUtFdH+AEW0xE30KpTX6vQU4rEROZJ7MQm2W
pRFTrwjj9nrLxTOyUPGsdMQ7vBibuP4uGbuyYWS1auiVThm8PXRJS/qyQQ4f
s5dTq4SMa1Zq0r4cjBek+rRO1eAU+WXW1Oc8HEvw+mjq2IzJXptVrxRoiOp1
7X3Q0oxgZ3E3ayMacrTJd4oPtyDXxVshP4IG1Q93j92WboXEpYOUG3r5iLSO
YuZyW1Fzp8d+xa0CnPhFjusSSofjciqtIKkAu5y0h23L6fhy75CUR3MBVJJz
LPsm6dhCTalp2FyIqtVHFBIt23Ez6pr246pCcDQLtS2kOrDnP+kVSuLFmApp
JSvf6MQHzZozTdrF2GERbtyV3Ikzb/1KbpOLIeX04Nav9E5Q8wd8PqUL83WG
q4a2fwSnIqM32aIEghTjrP0tHxHfafp299NStFTX7s6U6MZqQZCj8SYClx+6
m+XZMhDtYeescYxApeNoipUfA6odGmekLxFY7zy5hhbDwG9pXS69ZQTSz095
ve9loCgtklagWYH5lpOBBk694FlzS82aK3BQurG48WQfTqZGNVxdWwVq38Sn
35WZiHO6Y35euQo362+suH2ACZaMV9MpnSqkTH18GGTHhPctw5aDTlWwrjxn
I0Zl4oEVjy6WUQU5iuRa+VkmyhYMGc/N32FwRYFKesUASJZ8zruQakjNVfh8
ixuEQqCxgfvLang+yM7bmjYIqYyEkFUF1chYVlmiTxvED3FrTUtWNT7cyXyv
2TSI1oqCq8x9NbiyjJ6nvzCIAO2gxW/Dwrtg0z7O2X5Cs6SsrOahOjR0Bqur
LmHh3UEvt7aTdfCa/2W/zioWCj1r83096+DdP9CsJ8vC6zo/cklkHdxp/gvS
O1jwC+yPN+HVQUHb6d3GEyxsnUxWc4l9j+Lo2nv/xbLwV7M+oqc/IPeZqInL
jiFIaNKGP4jXw/DpvqLj2kNIpGqHzivV42jo1j937BtCm/n2Huej9XDY1sqs
NR7CzgbZq6TIenQ0S7Ifnx/CQN1kco5eA6J+eph4vxqCcWWSRFNAI5J21pjm
r2ODuUWZtvioEay4vTkUBTZ8/45z0H7dCHLhsRMWymy8xNPUpw2NcDoa51ij
ycZ82d+G9kpNqFztv8felI2sYofro2VNEMyuGVC+xcYvedLMpUtboMe2Pn5z
gA3H0Hkb9voWaD2+38AZZuOV63BDrUYLfCj0fgsuGxpyRUUhp1owY7tibOl3
Ngyvn3kml92CdyyVeRmZYejG2SVHaLXClSRRMmQ4jLPOyU6pzFasXK+RGPZi
GHePK8bEjLViaLGZREoaRrJueMfD6VZ882Ym5KUPgysRYOa1qg2DV5XSK2nD
uE5Y6O/RbcM/cX/LPmsYRuiWGdlSahv+PBRxTm12GPkso8aWA3T0SBZ8PGI8
go8mQZ+pxnT82GUrJ2s+gtnM8vXmVnTYF3yiMv8Ygd4N/bPv3emIKZE0dbMf
QeE6rdmKJ3QUun1PN/AaQdERhS05HDqMexxXrX4ygtLkqasREe3o37JSzLt7
BFUX/1UkcztwYcuX/RTyKHLHPD2dZztwtricJu00isQLBiUuSzrBn91g9PzM
KCjnu+wvyXYiYB0zOcl9FCbnpGP/OdCJ8k96s1HXRtFCpmzIDO3Eytiaspnw
UfSZeMmJ7PqIRyXZmzJqRjGz7aBkhlcXtHVtrfO2c/Aby7DuoV8Xag/VPO9X
5yD4X5PAC/90ISOFbSOqycF6WZtJlZguKBrFko7v5UB3qWdLbHUXXMyeRBYc
4sCvNzrsvmI3ok6SbZTIHCyETUu6fujG2g+F+sr3OVj2/Y2UIomB4JSYrPQB
DhSbDL9Ci4EXtWI35Fkc7H3Z0+mqz0DSAiM2mM2Bm6nY80wLBr76U5kOYxy8
jzlHMrzOgNKVtKQvXzgIM5A38KhjwM3ucgp9+RiUbga7FHj0gpTw+I27+hh0
BWfyrTP7sMHY8OU+7zE03t3bXKsu/Asu2V+vjY5hc/jE9zT+IILb52mlduOY
mBtgdmqzMMI/vLY8ZxyJ4yX1Eo+GIK6/YXb3yglIbEyZZLPZaBz9smPYegKh
HrTzCaojaL48EbXweAKzh96wLwSOwulscJ1j8wR891TnrX/HAevFdSvlpVwM
ZFaHtCmPQ7yftZu3h4v5ix3P1QImEG38o8TwNBc7D4stni/hwuP3VFE5ChfG
r5Td3/7CB6n77E9aOhd/bTy99ZPjJDQ2ka+ubuBCg3tydZfFFOaUJlIvcrhY
JzklXv1jCu06XeYzy3kQJZ5nqcR9RtIfqpNPNvPgubekZ6XZF6ytzp/30ufh
jem5hPLZL0he8ertOkseZiYUpEYiv2LSTSOxxI0HmrWxSMSRaRgaFeURATwE
mlBe5I1Mw3VPM6FJ5UG5/3j3a8oMZCgeRw/G82CgdzdCfs8swlKrFvKyeHDc
1PJ9afssvNpSrykSwvn1VJZP0Bx4rW0YbeYhWtTZ10r1GybU0r4N9PGwjkl7
taz6G4xdO/jDYzwsvxVko3/5O9J+eB+2nuNhSZpzFkvmBz7PK9pAhI8rsVlU
maofYAyrz4dK8lG287649KV57Ldd3rJGkQ/p41c07kgswEy7xseMxEffrtZ2
/9IFfJ6JCRzT4iM7Hqps558oz9332lWfD6csXemNiz+hXtew5oQhH39TXgb1
pS+C6vfX6WdmfGRwNj6XMBfg3GGtKZY1H/f/pZxh/i5AoIHIMTEbPlyteKRM
SwG21d94tlNopdLSbAs7AWh2Z5V9hX4Y5lAbek4AsXwNnuhJPi7oxnxe5S8A
eVzXlmTLx9a7siZiyQKY+j/yP3uKj8V9N9d2pQoQK0kSowjdwxuiJ78RwCQg
4lGq0OF2uU7H3gpQqikaMim0QN3qKqVUAJ/X1ga3yMJ928LiRdoFKLso5xtl
z0dh8JxLe6cAUwlzL4qFjth/Wu11twBbpxtq+oU2S9LMM2QKkKZtKVBx4KPY
r+lD0JgAtvHf1bKFjtylE2bJFdoxmtQu9GVWnI3ypADlKTqKs0LvMP9zoGJa
AIbslen9jnyILu1IDJ8TwNBctttZ6EHa/otnfghw50AJLUjo0ouvtbR/CrDF
+wI1UeiozatnBAKhvTaerhP6f8UeH7E=
          "]]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], Thickness[0.007], 
         LineBox[CompressedData["
1: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
cP78teSGGTabjZm4U0F7Of4fDaamFw==
          "]]}, 
        {RGBColor[0, 0, 1], Thickness[0.007], Dashing[{Small, Small}], 
         LineBox[CompressedData["
1:eJxF0HssFAAcB/DDNco6Tg87wk5UXjFJSaVikUfNo8nympCuF7KVVtO1O8kj
1kzK+5HSjSN31nJi3GzMI44d7dzp3HScZznXkbtqq9/vt3333ee/737UuNsh
CboEAiHoT/62f4J8uHM24STh3xG9zZIlFB+v/z5UUVzaQgkDBwwI35dR4sHh
8ar255Q08KTzE+88CgNcuetCZjalEEw3aNn/lFILvhRRxV5e4YANtfRIX8sO
sG3worw7hw++O+jhVbzaCzblkMU6OkPgVql3/9DxEXAXrcw8Yn4UrNx3wqjh
phCsq2YZm9t+AbtrY1tDG0XgfobbYI+9BGxVoFDXL06BFSqJeMxFCq6da+sj
PZsGkyzeLMlkMnDuNW5ipc0MeO0US5aU8Q2c5srn7O6WgyWN/Jxh6hx4gzZa
YndfAXY4ra9JbJsH+1ZTrzabLuK/LGKsv0YugR3nLxoKg5bBO4yWDfjraGJH
CXtv6Qr4ulvbxNaA72DWubjKT2topcLMeKboB5gb6qtX6LMKzvBjVnBm0NRJ
//EaphJ87AijkOK6Bo60HFLrCNDKvjxpMl0FLiZGp4XY/MT9Ym61Lh+95SE9
zCNFDSbUR7OlJuvg1FfsPJMudLtDlgH51gaY7J/q+Jj0Cyxy+ixI56Gbyr1s
ZNGb4Ci2O9lCg37ErKKL3mnADXKLElKgFpxVxowVn0fHhyzYNgaj9/B4TUHh
6Oz8yz25cegk95cr29LR1oydfvp1aM3RB9uFb9ETC9MjdSx0QXhL1NlmtNY+
5A6ThxYN55frCdAfMlVXBGPoQs8Yu5pxdMDrg5wzYvTHewO99Fl0kdPh/OB5
dIq0NIy6hD4QeEPSuYom6ozWFqjQU1xPWuw6mkercXbZRL+wMlRqtejfswdC
7w==
          "]]}, 
        {RGBColor[1, 0, 0], Thickness[0.007], Dashing[{Small, Small}], 
         LineBox[CompressedData["
1:eJxF0HssFAAcB/DDNco6Tg87wk5UXjFJSaVikUfNo8nympCuF7KVVtO1O8kj
1kzK+5HSjSN31nJi3GzMI44d7dzp3HScZznXkbtqq9/vt3333ee/737UuNsh
CboEAiHoT/62f4J8uHM24STh3xG9zZIlFB+v/z5UUVzaQgkDBwwI35dR4sHh
8ar255Q08KTzE+88CgNcuetCZjalEEw3aNn/lFILvhRRxV5e4YANtfRIX8sO
sG3worw7hw++O+jhVbzaCzblkMU6OkPgVql3/9DxEXAXrcw8Yn4UrNx3wqjh
phCsq2YZm9t+AbtrY1tDG0XgfobbYI+9BGxVoFDXL06BFSqJeMxFCq6da+sj
PZsGkyzeLMlkMnDuNW5ipc0MeO0US5aU8Q2c5srn7O6WgyWN/Jxh6hx4gzZa
YndfAXY4ra9JbJsH+1ZTrzabLuK/LGKsv0YugR3nLxoKg5bBO4yWDfjraGJH
CXtv6Qr4ulvbxNaA72DWubjKT2topcLMeKboB5gb6qtX6LMKzvBjVnBm0NRJ
//EaphJ87AijkOK6Bo60HFLrCNDKvjxpMl0FLiZGp4XY/MT9Ym61Lh+95SE9
zCNFDSbUR7OlJuvg1FfsPJMudLtDlgH51gaY7J/q+Jj0Cyxy+ixI56Gbyr1s
ZNGb4Ci2O9lCg37ErKKL3mnADXKLElKgFpxVxowVn0fHhyzYNgaj9/B4TUHh
6Oz8yz25cegk95cr29LR1oydfvp1aM3RB9uFb9ETC9MjdSx0QXhL1NlmtNY+
5A6ThxYN55frCdAfMlVXBGPoQs8Yu5pxdMDrg5wzYvTHewO99Fl0kdPh/OB5
dIq0NIy6hD4QeEPSuYom6ozWFqjQU1xPWuw6mkercXbZRL+wMlRqtejfswdC
7w==
          "]]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], Thickness[0.007], 
         Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxF0HssFAAcB/DDNco6Tg87wk5UXjFJSaVikUfNo8nympCuF7KVVtO1O8kj
1kzK+5HSjSN31nJi3GzMI44d7dzp3HScZznXkbtqq9/vt3333ee/737UuNsh
CboEAiHoT/62f4J8uHM24STh3xG9zZIlFB+v/z5UUVzaQgkDBwwI35dR4sHh
8ar255Q08KTzE+88CgNcuetCZjalEEw3aNn/lFILvhRRxV5e4YANtfRIX8sO
sG3worw7hw++O+jhVbzaCzblkMU6OkPgVql3/9DxEXAXrcw8Yn4UrNx3wqjh
phCsq2YZm9t+AbtrY1tDG0XgfobbYI+9BGxVoFDXL06BFSqJeMxFCq6da+sj
PZsGkyzeLMlkMnDuNW5ipc0MeO0US5aU8Q2c5srn7O6WgyWN/Jxh6hx4gzZa
YndfAXY4ra9JbJsH+1ZTrzabLuK/LGKsv0YugR3nLxoKg5bBO4yWDfjraGJH
CXtv6Qr4ulvbxNaA72DWubjKT2topcLMeKboB5gb6qtX6LMKzvBjVnBm0NRJ
//EaphJ87AijkOK6Bo60HFLrCNDKvjxpMl0FLiZGp4XY/MT9Ym61Lh+95SE9
zCNFDSbUR7OlJuvg1FfsPJMudLtDlgH51gaY7J/q+Jj0Cyxy+ixI56Gbyr1s
ZNGb4Ci2O9lCg37ErKKL3mnADXKLElKgFpxVxowVn0fHhyzYNgaj9/B4TUHh
6Oz8yz25cegk95cr29LR1oydfvp1aM3RB9uFb9ETC9MjdSx0QXhL1NlmtNY+
5A6ThxYN55frCdAfMlVXBGPoQs8Yu5pxdMDrg5wzYvTHewO99Fl0kdPh/OB5
dIq0NIy6hD4QeEPSuYom6ozWFqjQU1xPWuw6mkercXbZRL+wMlRqtejfswdC
7w==
          "]]}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0, 0},
       Frame->True,
       FrameLabel->{
         FormBox[
          StyleBox[
          "\"Map distance \
\\!\\(\\*\\nStyleBox[\\\"d\\\",\\nFontSlant->\\\"Italic\\\"]\\) [cM]\"", 20, 
           StripOnInput -> False], TraditionalForm], 
         FormBox[
          StyleBox[
          "\"\\!\\(\\*SubscriptBox[\\(F\\), \\(IT\\)]\\)\"", 20, StripOnInput -> 
           False], TraditionalForm]},
       FrameStyle->Directive[
         GrayLevel[0], 16],
       Method->{},
       PlotRange->{{0, 2}, {-1.02, 1.02}},
       PlotRangeClipping->True,
       PlotRangePadding->{Automatic, Automatic}], {192., -355.98757751993935`},
       ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}], InsetBox[
      GraphicsBox[{{}, {}, 
        {RGBColor[0, 0, 1], Thickness[0.007], LineBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[1, 0, 0], Thickness[0.007], LineBox[CompressedData["
1:eJwV1nk8VOsfB/BJm5YrSspShqJEmtstW/GZtFCpKC1KmixFbqJViww1ckNU
ZjALM4w9RmQnc5E1GeJKmCZUlKJCm8zv/P44r/N6vz7n+zzP2b7n6Lie2euh
QCKRmojt//sdHgMt4kEPK3rdSq+rD5IwbbOG7yv1LaAYmj1VnpWGvxJiuXnq
jpC1XTh+jZeBfq3lQZf0XSDpaQiz3PoAO5s6cnnq7rAPCknpcc3C8vAlyXJt
L5Bn2ZasMMjGxA63mOP6PiD7Gf4YfpSN9zfbqo+z/CCZXrKgbpEIB92/ld9T
Pw86b9BD7ixC9WaNwiruRUh8TISUcBEoyyxzRrUvg+qaKk7NEIGrQEvXS7oK
maep2Z9lIij2Bice0L8O8RKP7pgqEUpkrU1VjnSQ/7pIGa0UwdfefYczKwj2
9pbGslIR9MVjNaMdwZBEc2ewRSL0rLm1OUL9JnK8NP/QShAhOmGxWO8IAxRG
XvjqMBF2zMvY+JgbAuXXPl0+50UgBW4oPiC9BfHzDEPXIyIUfHq6flj7H+Sc
Xal2lirC3y4uubeO3wbdGYzxZSLoPhs2JieFIcfO9LzZDBHuZM1f6aB/B8oU
tSfS2mxsXSIUDp6MBIVl6CVIzcb1Grbyv45RsD9wy+p1SDbWmRhFOLHugh9u
/mHPlmzwF+4Jua0eDVnmg3V7y7NwtSmm+kAJ4bvBl+5wsnCAIVNYdoSJnGxZ
g+xyFuaO+QWWclkQ91yKem+SBf+2aP8h7Tj46rr22+Y9gMP9l6d268eD6rnH
+WpRJox2LkvXqI3HyHBg81l2JhSn/v3u7ckE4npemF50LRPHiicfVjjyIWYy
s4ysM7HQIMr4EEuAkf3+Cx9LMhCkmLfiH3UhSL/GR1ZPpGOVzd3QXF8h6E4O
wQ2ydLQyzgx21QohywutKHmSjuVTjTKNLyaDdG7rmntR6aj5LTRua02BbDA0
R26QjrlfWeu1w9Oh7ChKfXcqDfl/XmDZ9qWDVqd5aJNjGlx8933zs8hAjlLF
rx7LNIg+ziuuHsgAdb+DdrdKGvYOhG48RTynI5fGWZKyVMT2XNmcP5kNZZVb
KxqXpGKTlpNQul+EETVt1b7ZqXh/2HS6YpYIEvXXAWu+p2Dp0GW3rNU5ENs7
Jrk+T8EZLxM9UncOZHtPvtcKT8F8d1Faslku7LUP8TfNSMEhJ4Fo5PMjUFxp
6wcWJ2O4y3F2okY+JCGSxavmJiPERdFj3+Z8RB3rKA2VC5HndkajIDofI3OS
6tlvhVDysWRcNS1AlEKAmmKBEE+COw/PCCgEKf6P5DInIZynR+QXJheC7xl9
Q7BbiC+3qMpezwpB4Wi8420WghyR+qRRuwiS5jyN7tVCXIu5QLlbWQT6gFXQ
ialCrH2gMkNLsQTKrlr6l3OTUG/8hNZEKQEtPyCwIC0JtIf+pdedSuBrGG03
MyEJEQWvfF9nEC6OdOkNS8KAOKsrZVcpRo7qOPmfSEJ8+/aHf94vg/JL8vex
pUmYIw9ytllaAXqmhd8wJxGxXgddjLZVgH9ud9Px6EQsbzOiqfhUgHLN8ODr
8ERYpXe4dZVXwPdo8N8zryeiOJ2VX2gshuy2BWmIloiP+4bKdj4Tw15hhfWv
lYnYnxbTeO6PSogDr372+lcA7tFguxM6lSAlB3fZlArQO/9006H1laDmnPZb
ky/AmQDrZsujlaAN392mmS7AP3s/ts7MqgTZJMbI7a4A5RPWLzl2VVAmnTon
cBNAz+HTQFVYNSgNrAR7JQE0Am0sTgqqMTJr+vxmRQGUs/hhswurIfkQrH5g
qgA/FfcZO/RWQxy0JTbgOx8SceE5qdkTUBeuMKH08XGFEjT5/c0TjFiNFC8o
4ePZPFVVY2ot+KPSTufTfFRZnvZo2V8LclXHzUZPPoq8awrOe9dCJvDJprrz
kVTr71TKqoVyQfg2qyN8+Af2xNt+rEWOztX5jO186A6nGLix60Ab8ZKsX8HH
pWfmiB2tB+nZgKKgKQFKxvlv6hUbQPKmmPvVJEAYQQn/pdUAccYU4x0VCWix
W9HpsrUBssIwPbWHCTBsVD2nx2oA/TGPpcpMwKva4ZRc00bQZLp28S4JsPk3
WanpylPQBhe6BX+Lh5Sskz955yn4q3+/2f05Hufp3COUpKcgCXf66X6IhwD3
0+43PgXV5Z6fVBqPX+V068NaTaBlVbSk1cRDVHLk4rvyJlCT9xgFxMRj0SMV
6ZQpzZAV6Kq8tIyHc/gvx341wt7yjknTeCS6v2msMWoG/zn74Kq18TBaWFwc
dqgZ1JK5+5hEH7O+SGMuzGkGzf7GZPG8eJhwD6ZEr5GApK4fs66Ph+MuKUfT
pITn9yxOvcPDzR2acXGDEsh2dfjf+YeHFJOottujEtDVT+++epOHIaUrO0/P
boFsVoipxxUeLlbsMl9r0gLaHWOVyyd4CCePqZZFtIDa1cqOAw8FvZufNm9s
BfXrLvNbY1z8Zxv0OcKmFSQBj6H7mYvx7Mdqdntbwb8wrF85xIXpVfPjdSdb
QVurvkepn4uiBWvGxfeIvKCI0dnKRfEWDXLuAFGfsHG9yUMuylJGzkVHPwd1
/IO5zJeLylM8TaehNtACema2/+Qgb9Db22W8DSRsn2R+40DoaVHqRmoHuYDJ
cxrlgHGi47CPajtIpo31Ax85sHVVYd/Y2A7xtPTr+q85aHZiLM4Obwf95AKO
Vh0H3banF05d/R9IP3+kSGM4GNO3nJd1ugOkNOknshUHVr3Wtbf9O8AnLe3d
sIGDEJ5toOeNDshCIlY5mXGgpuo4vCyuA+R7YhF7LQcmU7yb2dUdEJfXW5qv
4MC/KzYyVPMFZP8dmNWrzMFE5Og89/oXoF4JokresKHwI1NZU+8l6GF9j9hM
NjSbrL9izUtQ39p8PHafjXWCznZ3cyIPGcrUv8uGx/aZnOxdRF5Xkl8UzkZd
nKue9cWXEA9YST7dYCPSQt3Cq/YlaKSdzwRn2dC6FuJW6NUF0ozOfxc7sGEi
pxXsy+4GecJNX67CxtOb657VrHoFukHPw9ykOGhHffiR/kkGmexgdcrGOHz4
9kraTukFyYFmtWgwFsL3pQ1Kd/pAn7xIyY6LhdKS1OH+/n7QQkKls/fHItwr
/wR/+VuQve/a/NCMxTg1s98z8B3Imt9eX+qPwfm11Y/UqgZAjrkyrz4/Bq+y
q8NadN6D3LgjauJWDH6dauMYXPlA9NM5puuOxcBw08zJE6VDINO6dT03xsAm
Uefkw0WfiH54WLdOPQaXlhzTfe08DDJ3zGvGBAtGQ/vndOwaAXlQMfe3jIUF
80YUq3+OgMpmmT99wsK0Co5oGfczaO1qVqbZLHivK+2ctfMLxOelOl4sFjK3
u/Ifj38BlXFGIYnOwtgHDeW3rK8ghdgxeadZyN9nMzV6yyjx/U3+Yn2YhUBb
RsKjt6Pgu1pU2G5nQadnx4skxhio0i9f75mzYGF6M1p97TjEsy0Urhmw4Ly0
+ceU54TTEw7YaRLjN0T0+gZ9A3/ndnLFXBZip7mc37v8O3F82RSZnIkF0vxE
herv4F/zc5V9ZWJ6QJCjud8P0Dtnuga9Y4KU7iLqnf8TtPDIdYxuJs6yRRHz
K3+C/mfDb+MWJsoNQxVVfH5BvE/NgVXDhMqOs0bBShMgd/Yy9MqZ6F4teX65
bAK086Q85zzivyoey/tdfoNuptufkMHEUZGJypJJwsKt7p6JTNAZgqDujEni
fby/pDuOiayBJRwlOzlkhmvnrL/HRCiPQZPuloNU3RGxgLD73o962Q5y0MwO
qX25y4RWWVnOroOEI/vMRIRvRx6pCXeVQ7ziR5UBYU+TuM+zLxP5osYR7Sgm
dG+q2s5MIcb3uM5WvsPEpNm1PzrSiJwf1T4cwUTnx77WlEw5+IJdas2Eow7m
Hd32UA6yRmVaBGH5qr3nGGVy4n54q8wh3N0SGT/1OVG/7drIjHAmikK+uT1v
J9ZbGcZ4G8ZE9IZjBkkviPVUGJNrCO9MNn5kLSXGDzY4wSBc4t9UHzQoB/13
/bpphFmr10c6DBH1brvG+24z4dfLddQZJuZ/cai8ivBKu79fiUeJnKrgfIPw
tCltwqhvRO7M+8uNsCx/wynaT+L8OkuUNxMuO5W0hvKbmG+301ddwjHac8bk
cmL9Dpe6FAj/DwcEPA0=
          "]]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], Thickness[0.007], 
         LineBox[CompressedData["
1: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
pWRQ
          "]]}, 
        {RGBColor[0, 0, 1], Thickness[0.007], Dashing[{Small, Small}], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6l2/hsYfmrrVNsvEPVv65KcYg/jN3Js
Vu+UXALnR0QuXP/h4xY4n/t/Y4y73H44XzXw3YvD3Ufg/PJzlvYzvpyE88W3
CN5jZDwP52975HzmvM0lOP9Q1lzpyDdX4Pyvarb8a3Ovw/lMP1cLSKvegvPN
/idsC153B84/02Jy7pjWfThffsLrnyvfPYDzX3+/f++qwSM4f8mr3af4+h7D
+Xyyy98/efIEzu/J3Jq2QOUZnP/NYfWTjPrncH6J0ZEtYodfwPn31x3pvqj4
Cs7/nXVltmbVazhf25H9X9ruN3C++yLF9I3i7xDhJRuv9DDmPZyv8yaU+7rv
BzhfmP8Dx5FfCD7L/tnrled8hPOzTXbf5PT+BOev9kxasO8bgv/1tZTAs2mf
4fytwe7MU1y+wPn1Hq3ztzxD8BXvet1Y3PoVzrcyb5kiafQNzo+RO/+T8TKC
//VU76OCxu9w/gyWuJIglR8I99/buojpCILPWtsYYln4E85nWBm3/pHQLzi/
aNb6XqFDCP5e7Q4OwbzfcL6gV5FOE98fOP+O7oXLlXsQ/A3z7FWexP2F82PX
mwnK/kPwG1oXNt5Z9Q/OX/tCdjafz384X6lFxIN9GYI/XZ776///CD4A8R11
Dw==
          "]]}, 
        {RGBColor[1, 0, 0], Thickness[0.007], Dashing[{Small, Small}], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6l2B2fFWq1w2mC/QNS/rUtyij2M38ix
Wb1TcgmcHxG5cP2Hj1vgfO7/jTHucvvhfNXAdy8Odx+B88vPWdrP+HISzhff
IniPkfE8nL/tkfOZ8zaX4PxDWXOlI99cgfO/qtnyr829Ducz/VwtIK16C843
+5+wLXjdHTj/TIvJuWNa9+F8+Qmvf6589wDOf/39/r2rBo/g/CWvdp/i63sM
5/PJLn//5MkTOL8nc2vaApVncP43h9VPMuqfw/klRke2iB1+AeffX3ek+6Li
Kzj/d9aV2ZpVr+F8bUf2f2m738D57osU0zeKv0OEl2y80sOY93C+zptQ7uu+
H+B8Yf4PHEd+Ifgs+2evV57zEc7PNtl9k9P7E5y/2jNpwb5vCP7X11ICz6Z9
hvO3BrszT3H5AufXe7TO3/IMwVe863VjcetXON/KvGWKpNE3OD9G7vxPxssI
/tdTvY8KGr/D+TNY4kqCVH4g3H9v6yKmIwg+a21jiGXhTzifYWXc+kdCv+D8
olnre4UOIfh7tTs4BPN+w/mCXkU6TXx/4Pw7uhcuV+5B8DfMs1d5EvcXzo9d
byYo+w/Bb2hd2Hhn1T84f+0L2dl8Pv/hfKUWEQ/2ZQj+dHnur///I/gAlHGc
dw==
          "]]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], Thickness[0.007], 
         Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6l2dzxVQch+gah/W5fkFHsYv5Fjs3qn
5BI4PyJy4foPH7fA+dz/G2Pc5fbD+aqB714c7j4C55efs7Sf8eUknC++RfAe
I+N5OH/bI+cz520uwfmHsuZKR765Aud/VbPlX5t7Hc5n+rlaQFr1Fpxv9j9h
W/C6O3D+mRaTc8e07sP58hNe/1z57gGc//r7/XtXDR7B+Ute7T7F1/cYzueT
Xf7+yZMncH5P5ta0BSrP4PxvDqufZNQ/h/NLjI5sETv8As6/v+5I90XFV3D+
76wrszWrXsP52o7s/9J2v4Hz3Rcppm8Uf4cIL9l4pYcx7+F8nTeh3Nd9P8D5
wvwfOI78QvBZ9s9erzznI5yfbbL7Jqf3Jzh/tWfSgn3fEPyvr6UEnk37DOdv
DXZnnuLyBc6v92idv+UZgq941+vG4tavcL6VecsUSaNvcH6M3PmfjJcR/K+n
eh8VNH6H82ewxJUEqfxAuP/e1kVMRxB81trGEMvCn3A+w8q49Y+EfsH5RbPW
9wodQvD3andwCOb9hvMFvYp0mvj+wPl3dC9crtyD4G+YZ6/yJO4vnB+73kxQ
9h+C39C6sPHOqn9w/toXsrP5fP7D+UotIh7syxD86fLcX///R/ABT2qWxw==

          "]]}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0, 0},
       Frame->True,
       FrameLabel->{
         FormBox[
          StyleBox[
          "\"Map distance \
\\!\\(\\*\\nStyleBox[\\\"d\\\",\\nFontSlant->\\\"Italic\\\"]\\) [cM]\"", 20, 
           StripOnInput -> False], TraditionalForm], 
         FormBox[
          StyleBox[
          "\"\\!\\(\\*SubscriptBox[\\(H\\), \\(G\\)]\\)\"", 20, StripOnInput -> 
           False], TraditionalForm]},
       FrameStyle->Directive[
         GrayLevel[0], 16],
       Method->{},
       PlotRange->{{0, 2}, {-0.01, 1.01}},
       PlotRangeClipping->True,
       PlotRangePadding->{Automatic, Automatic}], {576., -355.98757751993935`},
       ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}]}}, {}},
  ContentSelectable->True,
  ImageSize->{716.796875, Automatic},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.6823300129979763`*^9, 3.682330097979142*^9, 3.682330132866376*^9, 
   3.6823303596145163`*^9, 3.682330419067412*^9, 3.68233046772716*^9, {
   3.682331190450913*^9, 3.6823312437093773`*^9}, 3.6823314980342484`*^9, 
   3.682331605479745*^9, {3.682331641068926*^9, 3.682331646604136*^9}, {
   3.682331676800659*^9, 3.682331705951023*^9}, 3.6824078732490587`*^9, {
   3.682407963610571*^9, 3.682408106971178*^9}, 3.68240831936174*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Comparison to inbreeding populations", "Subsection",
 CellChangeTimes->{{3.682681396601139*^9, 3.6826814125697603`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Sigma]Min", "=", 
   RowBox[{"10", "^", 
    RowBox[{"-", "8"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"plotHIinbreeding", "=", 
  RowBox[{"LogLinearPlot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"1", "-", 
          RowBox[{"Fhat", "[", 
           RowBox[{"\[Sigma]", ",", 
            RowBox[{
            "muvalues", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}], ",", "standardN"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"HIhatinbreeding", "[", 
          RowBox[{"\[Sigma]", ",", 
           RowBox[{
           "muvalues", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
            ",", "standardN"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "3"}], "}"}]}], "]"}]}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Sigma]", ",", "\[Sigma]Min", ",", "1"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Gamma]Min", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.01"}], ",", "1.01"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Red", ",", 
       RowBox[{"Darker", "[", "Green", "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{"Blue", ",", "Dashed"}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{"Red", ",", "Dashed"}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Darker", "[", "Green", "]"}], ",", "Dashed"}], "]"}]}], 
      "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", "16"}], "]"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<\[Sigma]\>\"", ",", "20"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<\!\(\*SubscriptBox[\(H\), \(I\)]\)\>\"", ",", "20"}], 
        "]"}]}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"plotHTinbreeding", "=", 
  RowBox[{"LogLinearPlot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"1", "-", 
          RowBox[{"\[Theta]hat", "[", 
           RowBox[{"\[Sigma]", ",", 
            RowBox[{
            "muvalues", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}], ",", "standardN"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"HIhatinbreeding", "[", 
          RowBox[{"\[Sigma]", ",", 
           RowBox[{
           "muvalues", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
            ",", "standardN"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "3"}], "}"}]}], "]"}]}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Sigma]", ",", "\[Sigma]Min", ",", "1"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "\[Gamma]Min"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.01"}], ",", "1.01"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Red", ",", 
       RowBox[{"Darker", "[", "Green", "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{"Blue", ",", "Dashed"}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{"Red", ",", "Dashed"}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Darker", "[", "Green", "]"}], ",", "Dashed"}], "]"}]}], 
      "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", "16"}], "]"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<\[Sigma]\>\"", ",", "20"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<\!\(\*SubscriptBox[\(H\), \(T\)]\)\>\"", ",", "20"}], 
        "]"}]}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"plotFITinbreeding", "=", 
  RowBox[{"LogLinearPlot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"FIShat", "[", 
          RowBox[{"\[Sigma]", ",", 
           RowBox[{
           "muvalues", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
            ",", "standardN"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"FIThatinbreeding", "[", 
          RowBox[{"\[Sigma]", ",", 
           RowBox[{
           "muvalues", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
            ",", "standardN"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "3"}], "}"}]}], "]"}]}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Sigma]", ",", "\[Sigma]Min", ",", "1"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Gamma]Min", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.02"}], ",", "1.02"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Red", ",", 
       RowBox[{"Darker", "[", "Green", "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{"Blue", ",", "Dashed"}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{"Red", ",", "Dashed"}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Darker", "[", "Green", "]"}], ",", "Dashed"}], "]"}]}], 
      "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", "16"}], "]"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<\[Sigma]\>\"", ",", "20"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<\!\(\*SubscriptBox[\(F\), \(IT\)]\)\>\"", ",", "20"}], 
        "]"}]}], "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.682682402006171*^9, 3.6826824196053743`*^9}, {
  3.682682500650097*^9, 3.682682516786924*^9}, {3.682682558036257*^9, 
  3.682682679570763*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
hHU+7K3F7tmUuaJNQN/Mt2uF+diNp5R1r2yH+GH2Y4fCsddtyJLV3waMaiPN
Glnstq2zSQ0GYLLR6d5ZCWzbYFvLxwbw4GwASUcY23043zDYAMx1kzuyVmPr
u3R/IhtAet5M0FWGMJ4v1fNXvD7svZNV7VSJLbu0x/PgFqj05bVjOGEXOMsX
UXRBsFG+ItsO2zl65IaALhxVMlA4tIvVvx+YxtABkaHDvz8S2NM7ct2e6cCJ
vdX3y5VYuW6nvoYOKBidHL40I4Rt1EPW2wxxG3pOSd7APvFi5LsvFS6J8eyA
WGyxmz1BdlQ4L2ko6HkR2zlmWk2fCqfkUgrygrFjDIo5uKiwX8N9ysAdu8er
wDeDAhqm497OVOzIEeuSd1rQdnre5c5HQbz/3c6f2DSgKVhVtbwFm3SgIqRb
HWhnXef7G7Blib/Oz9ShPLLyrmIlq/8hs91FHdKvRn58mYmdun3mfokanMrk
tu44w8ovCBmGbAKRTjEjATHsdW7cx8kqkCNRGmwryJpPj9LDoQKGh/a+uMnL
ymUGTg6TwY1xU1qYjTWevXDrIzJkc69dFptYj3//9nghMTLob18ul6/EpjSI
pgorg2vW18167thGBh7uWopAp0f4Bbti20Y6hggqwvnN0hllDtgJV5+X/1aA
dOQquNWCle9+WFqpAJN9H6dBmzXeXiDZSgHCBOqfWXBgoyWFhlPy8DAkj3wg
Zx3eb6fffwOyUEDsa5ZLx25T4hCgyUItB2/g9wfYKMCSM08WvicEVBy/gU3K
GvENkgVKLsU6Kgh7KCBCaD3u9746mW2C7b60xvKBNLSduXLuW40A7mv3eNIk
4TfbOM2/BDtygN3kviRIXLfgn8vBNvJSOnJMEjyzeNO4E7Bly4pOi0vC3Kdb
9Rpu2O6Vr9JOSoCk/uP1IQv8rOcnb5IiDt4Lpdm8m7FJy1GpfSLQ0b67ypeM
nWqpfb5cBIjc0Y5GSWz33RPxSSIg6iy0cokDe8jNTc9JBBpLjjksd/HhPr29
+tMGUA1UYmOEYLtv4vAdEAb62C3XD294cX+O3ZlfCJyrVU9ovMRGmwxKfwkC
7S66HJ+NbUQKJ7oF4aEpo2BnAqufY0pLFYTdGRar0SFW/uNOlq4gvHAjFRdw
YJNiRe94r4eTXQF8tyzX4pwpbdwgAAP5qstz27FJe3yd7gjArqhR+j4qK+fd
+NpTABS1DjQriWGjN81+bALQHWMVXz66BudlvIeN+GHbNjWer5HYkVx6Ns28
sDpjnINSyoO96cG42Bo4HZo5ezsPG500mmDywJCN+8jfh6zc30K9gQcqlrrr
6i5hG936dTyIB/wdG6Kc9rBML5vo5oYOnixSxBQ37s+9d85aDSknPJdaFLCN
9uyKP8YJ+q1/KwNEWf57M9yaE7rUEsL51mIjl450dU7gH6tcsfq1GtuG6/Ik
B0QeEGFrRqtZ79fqx34c4GX5jrPpAHakthz99CpQV9QSqL/HhX0ORnPZoPHC
2w+H47FJ2frZ19ng8OC+BM4IbKP9uomn2OBRcsx6U29WP1VvfDsbrFs/LETT
YeWDrhGdJJhdvi1W286J8/1hajwkeN29IPdmLcs1Y4Ubl4lHkfXPtUnYpH0S
zTNLRJTqra3Zsxys5/WufNMSYXlOdW/CF5ZlhS4GLxF90s4xHi+wSToV3F2L
xMLhEgaXPcvxB78kLxCGs8df2ySvwm4SCrWZJ6QfbjWnXceOtL4Yrj5PsJut
7tK/yPINi2KeeaLp3iOGnD+rv1BWSvtDuG5tkZvdzsp7bPm3/yHORm2KSfrK
jvOfG6v05oiKdaMOX1VYHpfdZTVLPCrrer1fCjvSXTdNfZa46F4v3yPAyt2f
q/DNElYF2dOtc2zYRslNrTPEgI3v1Uoay5k8exxmCPYbzLp77tiR4eaaPr8I
C74F7d1JJJxLnFErnCY0Sybuv4tneThG7t40IXjgM8k0guV/hkbh00Tf08rW
rd4sq4TPWUwT/lYRvqo6LOeZRTQxCVlRHhOe1H/VJNIubmkzBvFCSFo+SGAF
m4dP6PQkwbVwNEZkfhm7KnqD1SThNlTCeDXEco/xHsVJgv+Z9es/hSy7kEO7
JohjZuEOoQ4skyJPGU4QmqH9V8LuL2E/eNHB/4N4NpA8GaWwiO05ITz4neB4
+91OgZdl79W0qu/E/nztsrrZBdb4pxkp3wnekKZLHPUsPwiccf1O+K9f2HjF
h+VDVi29o4S6iYtt7LO/2K6hmkMjRH6uaMmNLfPYdh79fN8Ij0diVU9kWRba
kfVrmJBIFH/7modlRdK97mEiLkyya+zzH+xwKj1tmPCxkfkNkSw/PHlQf5hQ
/K2sO904h90RYuj/lXhkpFdi6/ob2/hccf8g4ai7pcp7B8u0ps0vBgm+Tfpv
w9RZbtowe2GQCBMy7MpZmcXOVNNTGSRcv2//TcpgudP2VfAAIXrVVLdwcgab
d8FJ/guR0O1Qsj78F3bQlvqMPsK86XGgrhfL6gsXzvYRbFUTGi67WPbJDbfr
I06mR2alirPMZbyZ1Ec4BDy9p/XqJ3bt06vuvYTYKo6z1sxp7LK+TPUewviA
d7hgHQPbsHSS2UW8NF767XKT5c7d0y1dhKLKrWNpB1k2i1N92kVwzVQdpCxN
sfaXrX+0i2iK2WC8W5flvnw02knYF9O44rInsfOEN49/JLzWKiSwXR3HLt6Z
uK6DmNl43SDlAMt5Bmfm2okoyt9hPS2WhRlh/e1E6t4Puv4dY6z7oC3ltBP9
j899/iTG8gKU7Wgn9up0Kj99MordaDEd0UaYHbhc5Vg9jK3DxanYSnQdn/b+
mcBywenA+RbCK2rfuqseLJ/4JtXSQkRlUz1rOFle56gV3EK8+fmFW93qK3ZI
uX5rM3GMNyCHvWiQtZ9jCdHvCVu3D11Oo73Y+i84lN4Rr9/Uh9WGs5xpf2qp
kVCWeaOgIcLyJT+FzkZiafBpIPvOHtbzamt2qZHIPhTH9yznE3ZzTPxYA7Hi
ZWrK7v8R27a2oryecO0OOuoy+g7byI4zjkZQkg6XaoqwbC477EMjuFwcODl2
NmJPH57dSSMK+6hpz3PqsSOXSrloBPcAvWeVfx32U56iK3VEwLu3CftHy1n3
90cloZYQ25WhvnpnGcuTuidrCVpzZGNhzitWn3rKoZaQattKWu3/EjvhXLh4
LXH7meegx2gu6/enNj6pISYLpEXLcrKwHUptYmsI4+Le3Xz+GdhebzgCaoiv
Zx6HHR+9j1156o9ODZEQtoEu7p/Iuo8bOuI1RBiXaGnMaCzr/XD60TIiCslc
6q9HQ7FN+nWGEZGVkpwQbHj/DT6f8D/1iPgfQuDNVw==
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0, 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], LineBox[CompressedData["
1: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
oP7NSsoejbw4HTX4H6MNdV0=
     "]]}, 
   {RGBColor[0, 0, 1], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwd13c8Ve8fAHB7j+zr2lyulT1K5SlRKCsUQnb2pUJWQ0ooGSXRELKSEdLA
+YhE39JEpEiJMlISifye8/vrvt6v89xznudzPp/Pcx4FH8YufxYmJqaHzExM
5K9eU0BjXYgehP0aHO1wjkDWFe9rgjbpQbCL/f/tW+BUqSCoBxPmlR9JH0nd
xz8/pAuLb1+MkM6LCY7oqtSFfNeuYdIvsq3ZvsfrQtnXKx9Ic1er54nZ6AJb
uvF70sxfDjHocrqgGJb9jvQfGWLb+h86kHw2f4D0T4crpwIIHYgK4uwnPXUy
vjPnrA7Yl315TZptXMtYdJ8OvHzj9YK0lOVo2XkdPN6X/pR0kLUji/eyNtye
uNpJ+jLbaEPeRW0w3DZKkLZdNJ8pNdCG0oy3TaSZpsrojS+1wFWNUk16Zn3j
w6AoLXi2oFBMeijloYespBZoRTPnku55ttDN3bgW/tq+TiZNiKw1mrdfCw1V
3xn/n289H1vKnCbYK/u4kKY6Tb2k5GoCV4bMRtKzm7ct7wzUBBZZM03SnWsL
VY6baMKlt9+o/58vdcm+kU8Tjuv/4iR9gNMp/usHDaA4GM+1k+9ndovA+lsa
YPLixCBpxQHt66fjNSBgcAdBeqlNxuCtlQaUttlcJ/2qkvcxnaIBDJUtx0g/
M5xW/cOkAcNiDQzSXdCT9uSrOsR1+HiSbu3Lsg17oA7SF23Xk77nfbDWtEQd
Ks0PK5NumHISXnNWHQzu31lDupKF0nfbE18ft/j8ELs0fetUloU6rM89+IR0
kSiDJVJTHZgIpxrS+SqdWtpLamBFTB8inVvzw1zgoxrEZh13Jp29Tmbv9GM1
4Gg5ZkA6zfpQys0LamBQHT7dhr0u1++Tc6oauFSNDZL+8tEJMSWqQfDCxGPS
W2INF5z81OCjZGoh6cWy3wH/9NTAiTa0g3Tp3JeH5SpqIJHjY0jaCfXLOlLV
QK/JXZZ0bV9TXxmzGujuvToD2PvZY7c5vFCFXZM/Uki7X74a/qJDFSxHzoST
3qXfkWt3TxV2y553Ir3RW3DcpkgVdswPyJIWbrmRYn1IFY6tHblJYHM6/VfT
HagKKnzxZ0kvf5vtt/RQhVkZ/3DS45SNqtu3qcKfOnEt0s2HXnVtpahCsFls
SSt2E7HQzSGsCgqFbzNJ3+aR+a+bVxXi/ZcSSJcX7n9mt0qHVLkkJ9I5T5df
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
QXbpOf9MSy/nZ8aYXGr1tH3rl9X1wvR/ph9OxQ==
     "]]}, 
   {RGBColor[1, 0, 0], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwd13c8ld8fAHBkRmTveXGvPbJSOg0VMjOijEi+iCghK5LKqFAqWXGvrMoI
KeH5JIRookhLiYZRZubvPL+/vN4vz33Ocz7nnM/nc+S9gvYeZmFiYvrMzMRE
/tWt86mtOqILYyclvdB9BrIo/VDhZ6ILGRLhnqQPZTuUyfPpApvqvYOkTyV5
rJsZ1IHtTpUepDPD/YPby3QgpCLMnfTLyxasE1E64N4h5Eaaq1w1U9hKBxxe
HTlAmvn7iSCqrA58CD7pQvqfNLFr4x9tiBtT2Ef6r13uOR9CG75YCDuQ/n02
qu3KRW148MDDljTriKahkIc2SFrrWpKWNBsqztDWBt2vWrtJ+1nYs3guaUGK
Wv5W0jmsQzWZ17XgPgfDiLT1vOl4kZ4WBI9KaJFm+l1MrX2lCfZXkymk5y5r
hqYyNOF9maM06fGNtc1+oZrg9jVZhPTw503rTXdrwl4pKT7Sg+eb3WTENWHi
wz920r2qHwSFRjQg97j58hbs591zHVy1GjDvmvWXdFuwQNxqvAbEhb/+TpoQ
1DCYsdWA0LGeftKdi4WlNzZqAMtLuzek+75KSW9R0IB7X+K6SP+u5mE9P6UO
9Z++N5Kez04IVxtUBwqryH3SaxKWfr5oUYeaJyN3SUs4/H4ldk0djII9c0if
tRAf0Y1VhyoH7SukJ7fuWrL0VYenmVeS/v99GvnKp43V4T/HNaGkdRS7N2VT
1IFlF5s/6RyJBdtaHnWYjTvnTvo4h0PUj49q0MU6sZN0yWm+gzGv1SCC9fMW
0h8XO03529TAiVFoSNpichvvxrtq0HSgkEZaoV+rIDFKDRoi3DhJO9v/OisV
pAYjXs9WTbAvdRf5V3qpwQ2/NXOkFx5L670zVwPZ6K5vpF+XcT+liqmBTlp2
I2nb4KXwNB41CGkeqSbdrT9G+8ekBteEF0tJt8Pz5M4fquD35dhV0k196daB
j1TBuzzCj/TmnPjV3gpVKHv4zo30Q8+Qyi2FqqCYPWVHuua3g8D6i6rgfMNp
I+kyFrG+e+6qsPUMg5X0j2/0bH9nVWhokF3ejE17quGpsFcVdhskzJAuStnx
O32nKhxsYP1Omi4UxHJMXRXmGe9bSWcpt2lqLajAcWpWHOl+Trvp71MqcEQk
NJy02K/3D/PGVIAus+Eo6WsVf0x5v6jAXp59B0hfNpI+MPYUW1RPj3SyxYnz
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
j9PRo7cL8k3cbBCXnHqp2A7/Pq6tXJeJDbZnF3bQbegoXuXypuJpVtizq10k
24qOLKJUHNM+sALcpvbFm9PRgIxzolcFK9wVcAvW3EZHC4drx9ntWcHg0wGD
v1p0ZDwd9Mgmaw0c1Uzv5OamI5ncTWYtl9bARMyrc/mcdMSyi6PX6MwaeKj4
ldBhp6PO63nj8gFrYHBy4Yo5Mx3t39QtP22yBhxF+3Wt5wpQZLxqYuYXFlAL
ni8pGipA9euHHb7QWIC5MPBx4P0ClPeg95GrFAsEfpp4Y1ZdgM4cbFN4x8cC
XV7Mf2UqC5BlZfHk81lmsFT112koLUAfbfwvNLQwQ/W5hx8f5hQgltSJJ9cP
MkNog3dP/ekCZL5uQdc6kwmOOnmHX99dgDRrf97oSGGCJMGK7ic7CpCA23um
nbFM8CH9rcRPVIAG7jQ83+TDBDt+Hg1RNCpAAZax/ip6TPBmXpDXhlaA5ES5
TLnyV4l7nueNQjgKUIWgjEIY3wqxhbPgdDnkI/YFv0SR+WUi9uaKu2NDPnL/
XDt+//MyET488mamLh/x3rV6NFe1TNwrsHGnVOSjo7tiHCIclolIjckRrdx8
pBkxeC76xhKR3emjy34yH939mPUrnrJIdOr5FHvQ8hFr63c7Cs8ikUefHFOi
5CPX27oPnkwvEC8Lq099k85HPCc7E1jbFohOhxVbC8F8FMC/IH3Od4E4WqY+
cnTxJlI3dbFNuvuPaGYJzJGg30S3S0VrUw3nCc4+vpX8oTzklSfWeEtunrho
2+ph25eHJK6Itz7imifcTAV/jXXkoeRoyd6R93OE9XtRkanKPORrIzuD4uaI
xqCsAYVTeUhxRll/sn2WaN3LEs8knIfythrU2u6fIaL7fRbHN+QiJ33DRp8d
M8SC4FlWTaVctE7VqDVafYaAiIZb+0RyUbSgcW/JyjTxY7lD138+B+3/bjLD
xJgmLO0clhMf5SDRCzv1q35NEWs5/wynmeSgtLcOtfwxf4kU2XKHQa1sZNZ5
85i+919C7JOVzh2pbMTc+FPDZc9fYmrKsN2NKxsdp8cV5Yv/JX5Qtx46PJSF
HALvXNe6/4cQiVn3h+lKFhJbwxppNTFJ0IJdT5qM30Db3XxiBJ6ME9cm6jcd
SMlE1duXZlzSxwnnIf5jKyGZSJF2+WiBxzjRRp+rinbNROxTjR7aS2NExNlO
Xy6NTNSZKLzdWn+M4PkbIezWdR3Z17SwJxf/Itgnn4bXrbmOvLkpacwXRomp
aSPDEPuraEr60sYct1HCT9C1a9joKorX/jdkoDVK3F93VkBH5irKd3yhH/B6
hGAJorfYjmagwZtR7/vERojIpW7N8sgM5KjXo3zn1jCx8cZrl9vXr6Bdbmcb
nYghovXqrse/K9NRb9Ckz5+0IeK7VrDXYlo68o4/sP6C1xBxP9H20kBwOoov
1jn0mG2ImNJ8dJhLOx01/fnAqW75hZgTeCcifycNHeUJLGG594nISLJA4/qp
yNb9Re++4X5ibvVT6AZ6MnrU1BbdHNNPrOuKZ7GzTEbKsk0UDZF+wqAp48Sn
mSS09OnOMZbd74g6tz36e3YnoWLP5HV3S/qIja/9V7Z/PY9WvHfuZAl4Q0TI
lKT2rCSg/W/D/FyGO4hciSdTFpExSDvzcJ2mSAdB++f9obUoGrG7OLCx7m4n
lLW1zT6+ikJVAzoF5SVteLzvaz9SIhHnx9/v1gQ8IZ7mXNbpvR+GAjta01yH
HxIRXNXqw+pBSGwPQ51j9wPi+EFp6437AlFLV1x7Vcl9YnOIUUH4qSNI6uUm
Jo6AamKi9b5r7pP/UMbdQ5+8hkuJ+qTIyGnqQfSrUkb0QUkRsYvrwak1x13R
9pp+63UBDGJBifNg1kVn9CX0ZnTQ8A2ijq0om6/KFqVFC/8WD7hChOtrTd89
Zo6i2UXrEoeTiIQsnuD+kG2oisqu/mg4gjjM8f6c0CtdVJSTlRZufKPJ6fHK
vYsLrOh/7JC6yQ==
     "]]}, 
   {RGBColor[0, 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], Dashing[{Small, Small}], 
    LineBox[CompressedData["
1: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
LKV//7jOfdtmdMJaZhpdmqVK564VzCg1I8Vp5fUTDTOUvKj1Z9+379D9rXrF
NvunqTlfnaWBVe/Q3vUbKt2Mp6l15ySzRRbfIm7VjbWB6tOUtf+hwI3jb1Gg
gEFH7r8pau0eSQ3Djrdo//ct00wZU9QBJb9Z+7S3SCTGdH3B8CRl2HJd5q7u
WxTXZVfMF/SH0ug5F+Fl1oR2ND3wXu/6hwoJOaOYsL4JMVf+0nDc+YfK8uyb
vaPYhM6mX8pOE/tDVTEqvCxZmpCd5+M7Wi9/UzHTHMW7KxqR6ArWi1bjE9Rp
Tv3MDNVGtM3JLYj/zRgl0a8n8HKsHhVtW5x2jB+jmMMnD7R21yNFlYTTDw+P
UW8eJ5vU1NQj9snKw9qLo9SjloRelFyPmiKEtu1aP0qZTF309jOuR3te1LBH
5QxTTHqfvqXdqEOunApxzDFDVHWJHqpjq0WTUjf0U52GqJjHMX+DR2tQqPbf
AT2tISrglsI+3o4alGbfut6j/QdVX2fUWpxRg3oeBHzuFP1BGVnJ2fOhGmS/
7oPy46xB6sb7UwmVnm+QmdPVyr3UAJVgp8CUmluFOrwm3H7HDVDp0UJmeVFV
yDX0wJoYlwHKazz55FWPKhSao3O0im2A4mHrhzStKvT695dV6pb91LfvKZFH
igCd5vLMZSn8jyq1drWxdaaQzaHWjn2D3VSL38D3mH9lqPx1XWB1UDfF659+
PCa/DCnLvFbQEO6mJjKGvIf2laHF/x57s2z/SLH/3Lz9+dNSlOMcxf0kt5MS
iqhfbW9Xgv65mpqyeLynDE1ZfG8FFyP32s0jHqzvqRnvKxOZssXog9K6xK7U
dur7UeOY2aoXKO+7fP/jZgb17MkHpcMsL9DeE0xB+7TaKMbKrka2i4Vof5ef
u+NgI/XvblOj5LWnSDvp2CtN4UbqTe3xhcHnTxC7ox0b6/YGStwxOXyu+zEq
+KTz8GluHaXgqftpSDkfreod+bjC4w3FZKFRFpSfgzwba+MODpZS558kb7t2
IA2J7sxQX7m9hFqusz2axriPat5daijIfUmhsyFta4dSkWTbJqaVHkUUZ8GH
C9ocd9HNJ0f/cxl8RKVtP1ZyQCweDT+XFinJzabeDG/aEKt0A2170b2L2yOD
cnJd+7acNwr1+z4I9Bq8S72NklwsabyM4gKFRsQ8Eqkr11YffqUbgALZRV5F
DEZSdQ7/iseos6iAxq5ePniB+skZosrwdUXZqclx/gZ3X+eUXbpgvcEA/Q9R
brv5
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{-18.420680743952367`, -0.01},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& )},
  Frame->True,
  FrameLabel->{
    FormBox[
     StyleBox["\"\[Sigma]\"", 20, StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox[
     "\"\\!\\(\\*SubscriptBox[\\(H\\), \\(I\\)]\\)\"", 20, StripOnInput -> 
      False], TraditionalForm]},
  FrameStyle->Directive[
    GrayLevel[0], 16],
  FrameTicks->{{Automatic, Automatic}, {{{-18.420680743952367`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-13.815510557964274`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-9.210340371976182, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm]}, {0., 
       FormBox["1", TraditionalForm]}, {-15.935774094164366`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-15.285186528023216`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.894320219336205`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.614018254182046`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.395329053217216`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.215988124561399`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.063971917262773`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.932044374220226`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.330603908176274`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.680016342035124`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.289150033348113`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.008848068193954`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.790158867229126, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.610817938573309, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.458801731274683, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.326874188232134, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.725433722188183, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.074846156047033, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.683979847360021, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.403677882205863, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.184988681241033, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.005647752585217, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.853631545286591, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.721704002244043, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.120263536200091, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.4696759700589417`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.07880966137193, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.7985076962177716, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.579818495252942, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.40047756659712525`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2484613592984996, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.11653381625595151`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-18.420680743952367`, 
       FormBox["\"\"", TraditionalForm]}, {-13.815510557964274`, 
       FormBox["\"\"", TraditionalForm]}, {-9.210340371976182, 
       FormBox["\"\"", TraditionalForm]}, {-4.605170185988091, 
       FormBox["\"\"", TraditionalForm]}, {0., 
       FormBox["\"\"", TraditionalForm]}, {-15.935774094164366`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-15.285186528023216`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.894320219336205`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.614018254182046`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.395329053217216`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.215988124561399`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.063971917262773`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.932044374220226`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.330603908176274`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.680016342035124`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.289150033348113`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.008848068193954`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.790158867229126, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.610817938573309, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.458801731274683, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.326874188232134, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.725433722188183, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.074846156047033, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.683979847360021, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.403677882205863, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.184988681241033, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.005647752585217, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.853631545286591, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.721704002244043, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.120263536200091, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.4696759700589417`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.07880966137193, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.7985076962177716, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.579818495252942, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.40047756659712525`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2484613592984996, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.11653381625595151`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}},
  GridLines->{None, None},
  Method->{},
  PlotRange->{{-18.420680743952367`, 0.}, {-0.01, 1.01}},
  PlotRangeClipping->True,
  PlotRangePadding->{{None, None}, {None, None}},
  Ticks->{{{-18.420680743952367`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-13.815510557964274`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-9.210340371976182, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-4.605170185988091, 
      FormBox["0.01`", TraditionalForm]}, {0., 
      FormBox["1", TraditionalForm]}, {-15.935774094164366`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-15.285186528023216`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.894320219336205`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.614018254182046`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.395329053217216`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.215988124561399`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.063971917262773`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-13.932044374220226`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.330603908176274`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-10.680016342035124`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-10.289150033348113`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-10.008848068193954`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.790158867229126, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.610817938573309, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.458801731274683, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.326874188232134, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-6.725433722188183, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-6.074846156047033, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.683979847360021, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.403677882205863, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.184988681241033, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.005647752585217, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.853631545286591, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.721704002244043, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.120263536200091, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.4696759700589417`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.07880966137193, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.7985076962177716, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.579818495252942, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.40047756659712525`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.2484613592984996, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.11653381625595151`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}, Automatic}]], "Output",
 CellChangeTimes->{3.682682680615163*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
O3SCQ0UUui1E52ekJ/prX6qnVtTMm4/+DwaOvJ8=
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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

     "]]}, 
   {RGBColor[0, 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], LineBox[CompressedData["
1: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
Xa+Jf41dmJOdFKSX1RjLvHkrgf1/Caajyg==
     "]]}, 
   {RGBColor[0, 0, 1], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwd13c8Ve8fAHB7j+zr2lyulT1K5SlRKCsUQnb2pUJWQ0ooGSXRELKSEdLA
+YhE39JEpEiJMlISifye8/vrvt6v89xznudzPp/Pcx4FH8YufxYmJqaHzExM
5K9eU0BjXYgehP0aHO1wjkDWFe9rgjbpQbCL/f/tW+BUqSCoBxPmlR9JH0nd
xz8/pAuLb1+MkM6LCY7oqtSFfNeuYdIvsq3ZvsfrQtnXKx9Ic1er54nZ6AJb
uvF70sxfDjHocrqgGJb9jvQfGWLb+h86kHw2f4D0T4crpwIIHYgK4uwnPXUy
vjPnrA7Yl315TZptXMtYdJ8OvHzj9YK0lOVo2XkdPN6X/pR0kLUji/eyNtye
uNpJ+jLbaEPeRW0w3DZKkLZdNJ8pNdCG0oy3TaSZpsrojS+1wFWNUk16Zn3j
w6AoLXi2oFBMeijloYespBZoRTPnku55ttDN3bgW/tq+TiZNiKw1mrdfCw1V
3xn/n289H1vKnCbYK/u4kKY6Tb2k5GoCV4bMRtKzm7ct7wzUBBZZM03SnWsL
VY6baMKlt9+o/58vdcm+kU8Tjuv/4iR9gNMp/usHDaA4GM+1k+9ndovA+lsa
YPLixCBpxQHt66fjNSBgcAdBeqlNxuCtlQaUttlcJ/2qkvcxnaIBDJUtx0g/
M5xW/cOkAcNiDQzSXdCT9uSrOsR1+HiSbu3Lsg17oA7SF23Xk77nfbDWtEQd
Ks0PK5NumHISXnNWHQzu31lDupKF0nfbE18ft/j8ELs0fetUloU6rM89+IR0
kSiDJVJTHZgIpxrS+SqdWtpLamBFTB8inVvzw1zgoxrEZh13Jp29Tmbv9GM1
4Gg5ZkA6zfpQys0LamBQHT7dhr0u1++Tc6oauFSNDZL+8tEJMSWqQfDCxGPS
W2INF5z81OCjZGoh6cWy3wH/9NTAiTa0g3Tp3JeH5SpqIJHjY0jaCfXLOlLV
QK/JXZZ0bV9TXxmzGujuvToD2PvZY7c5vFCFXZM/Uki7X74a/qJDFSxHzoST
3qXfkWt3TxV2y553Ir3RW3DcpkgVdswPyJIWbrmRYn1IFY6tHblJYHM6/VfT
HagKKnzxZ0kvf5vtt/RQhVkZ/3DS45SNqtu3qcKfOnEt0s2HXnVtpahCsFls
SSt2E7HQzSGsCgqFbzNJ3+aR+a+bVxXi/ZcSSJcX7n9mt0qHVLkkJ9I5T5df
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
QXbpOf9MSy/nZ8aYXGr1tH3rl9X1wvR/ph9OxQ==
     "]]}, 
   {RGBColor[1, 0, 0], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwd13c8ld8fAHBkRmTveXGvPbJSOg0VMjOijEi+iCghK5LKqFAqWXGvrMoI
KeH5JIRookhLiYZRZubvPL+/vN4vz33Ocz7nnM/nc+S9gvYeZmFiYvrMzMRE
/tWt86mtOqILYyclvdB9BrIo/VDhZ6ILGRLhnqQPZTuUyfPpApvqvYOkTyV5
rJsZ1IHtTpUepDPD/YPby3QgpCLMnfTLyxasE1E64N4h5Eaaq1w1U9hKBxxe
HTlAmvn7iSCqrA58CD7pQvqfNLFr4x9tiBtT2Ef6r13uOR9CG75YCDuQ/n02
qu3KRW148MDDljTriKahkIc2SFrrWpKWNBsqztDWBt2vWrtJ+1nYs3guaUGK
Wv5W0jmsQzWZ17XgPgfDiLT1vOl4kZ4WBI9KaJFm+l1MrX2lCfZXkymk5y5r
hqYyNOF9maM06fGNtc1+oZrg9jVZhPTw503rTXdrwl4pKT7Sg+eb3WTENWHi
wz920r2qHwSFRjQg97j58hbs591zHVy1GjDvmvWXdFuwQNxqvAbEhb/+TpoQ
1DCYsdWA0LGeftKdi4WlNzZqAMtLuzek+75KSW9R0IB7X+K6SP+u5mE9P6UO
9Z++N5Kez04IVxtUBwqryH3SaxKWfr5oUYeaJyN3SUs4/H4ldk0djII9c0if
tRAf0Y1VhyoH7SukJ7fuWrL0VYenmVeS/v99GvnKp43V4T/HNaGkdRS7N2VT
1IFlF5s/6RyJBdtaHnWYjTvnTvo4h0PUj49q0MU6sZN0yWm+gzGv1SCC9fMW
0h8XO03529TAiVFoSNpichvvxrtq0HSgkEZaoV+rIDFKDRoi3DhJO9v/OisV
pAYjXs9WTbAvdRf5V3qpwQ2/NXOkFx5L670zVwPZ6K5vpF+XcT+liqmBTlp2
I2nb4KXwNB41CGkeqSbdrT9G+8ekBteEF0tJt8Pz5M4fquD35dhV0k196daB
j1TBuzzCj/TmnPjV3gpVKHv4zo30Q8+Qyi2FqqCYPWVHuua3g8D6i6rgfMNp
I+kyFrG+e+6qsPUMg5X0j2/0bH9nVWhokF3ejE17quGpsFcVdhskzJAuStnx
O32nKhxsYP1Omi4UxHJMXRXmGe9bSWcpt2lqLajAcWpWHOl+Trvp71MqcEQk
NJy02K/3D/PGVIAus+Eo6WsVf0x5v6jAXp59B0hfNpI+MPYUW1RPj3SyxYnz
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
j9PRo7cL8k3cbBCXnHqp2A7/Pq6tXJeJDbZnF3bQbegoXuXypuJpVtizq10k
24qOLKJUHNM+sALcpvbFm9PRgIxzolcFK9wVcAvW3EZHC4drx9ntWcHg0wGD
v1p0ZDwd9Mgmaw0c1Uzv5OamI5ncTWYtl9bARMyrc/mcdMSyi6PX6MwaeKj4
ldBhp6PO63nj8gFrYHBy4Yo5Mx3t39QtP22yBhxF+3Wt5wpQZLxqYuYXFlAL
ni8pGipA9euHHb7QWIC5MPBx4P0ClPeg95GrFAsEfpp4Y1ZdgM4cbFN4x8cC
XV7Mf2UqC5BlZfHk81lmsFT112koLUAfbfwvNLQwQ/W5hx8f5hQgltSJJ9cP
MkNog3dP/ekCZL5uQdc6kwmOOnmHX99dgDRrf97oSGGCJMGK7ic7CpCA23um
nbFM8CH9rcRPVIAG7jQ83+TDBDt+Hg1RNCpAAZax/ip6TPBmXpDXhlaA5ES5
TLnyV4l7nueNQjgKUIWgjEIY3wqxhbPgdDnkI/YFv0SR+WUi9uaKu2NDPnL/
XDt+//MyET488mamLh/x3rV6NFe1TNwrsHGnVOSjo7tiHCIclolIjckRrdx8
pBkxeC76xhKR3emjy34yH939mPUrnrJIdOr5FHvQ8hFr63c7Cs8ikUefHFOi
5CPX27oPnkwvEC8Lq099k85HPCc7E1jbFohOhxVbC8F8FMC/IH3Od4E4WqY+
cnTxJlI3dbFNuvuPaGYJzJGg30S3S0VrUw3nCc4+vpX8oTzklSfWeEtunrho
2+ph25eHJK6Itz7imifcTAV/jXXkoeRoyd6R93OE9XtRkanKPORrIzuD4uaI
xqCsAYVTeUhxRll/sn2WaN3LEs8knIfythrU2u6fIaL7fRbHN+QiJ33DRp8d
M8SC4FlWTaVctE7VqDVafYaAiIZb+0RyUbSgcW/JyjTxY7lD138+B+3/bjLD
xJgmLO0clhMf5SDRCzv1q35NEWs5/wynmeSgtLcOtfwxf4kU2XKHQa1sZNZ5
85i+919C7JOVzh2pbMTc+FPDZc9fYmrKsN2NKxsdp8cV5Yv/JX5Qtx46PJSF
HALvXNe6/4cQiVn3h+lKFhJbwxppNTFJ0IJdT5qM30Db3XxiBJ6ME9cm6jcd
SMlE1duXZlzSxwnnIf5jKyGZSJF2+WiBxzjRRp+rinbNROxTjR7aS2NExNlO
Xy6NTNSZKLzdWn+M4PkbIezWdR3Z17SwJxf/Itgnn4bXrbmOvLkpacwXRomp
aSPDEPuraEr60sYct1HCT9C1a9joKorX/jdkoDVK3F93VkBH5irKd3yhH/B6
hGAJorfYjmagwZtR7/vERojIpW7N8sgM5KjXo3zn1jCx8cZrl9vXr6Bdbmcb
nYghovXqrse/K9NRb9Ckz5+0IeK7VrDXYlo68o4/sP6C1xBxP9H20kBwOoov
1jn0mG2ImNJ8dJhLOx01/fnAqW75hZgTeCcifycNHeUJLGG594nISLJA4/qp
yNb9Re++4X5ibvVT6AZ6MnrU1BbdHNNPrOuKZ7GzTEbKsk0UDZF+wqAp48Sn
mSS09OnOMZbd74g6tz36e3YnoWLP5HV3S/qIja/9V7Z/PY9WvHfuZAl4Q0TI
lKT2rCSg/W/D/FyGO4hciSdTFpExSDvzcJ2mSAdB++f9obUoGrG7OLCx7m4n
lLW1zT6+ikJVAzoF5SVteLzvaz9SIhHnx9/v1gQ8IZ7mXNbpvR+GAjta01yH
HxIRXNXqw+pBSGwPQ51j9wPi+EFp6437AlFLV1x7Vcl9YnOIUUH4qSNI6uUm
Jo6AamKi9b5r7pP/UMbdQ5+8hkuJ+qTIyGnqQfSrUkb0QUkRsYvrwak1x13R
9pp+63UBDGJBifNg1kVn9CX0ZnTQ8A2ijq0om6/KFqVFC/8WD7hChOtrTd89
Zo6i2UXrEoeTiIQsnuD+kG2oisqu/mg4gjjM8f6c0CtdVJSTlRZufKPJ6fHK
vYsLrOh/7JC6yQ==
     "]]}, 
   {RGBColor[0, 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], Dashing[{Small, Small}], 
    LineBox[CompressedData["
1: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
LKV//7jOfdtmdMJaZhpdmqVK564VzCg1I8Vp5fUTDTOUvKj1Z9+379D9rXrF
NvunqTlfnaWBVe/Q3vUbKt2Mp6l15ySzRRbfIm7VjbWB6tOUtf+hwI3jb1Gg
gEFH7r8pau0eSQ3Djrdo//ct00wZU9QBJb9Z+7S3SCTGdH3B8CRl2HJd5q7u
WxTXZVfMF/SH0ug5F+Fl1oR2ND3wXu/6hwoJOaOYsL4JMVf+0nDc+YfK8uyb
vaPYhM6mX8pOE/tDVTEqvCxZmpCd5+M7Wi9/UzHTHMW7KxqR6ArWi1bjE9Rp
Tv3MDNVGtM3JLYj/zRgl0a8n8HKsHhVtW5x2jB+jmMMnD7R21yNFlYTTDw+P
UW8eJ5vU1NQj9snKw9qLo9SjloRelFyPmiKEtu1aP0qZTF309jOuR3te1LBH
5QxTTHqfvqXdqEOunApxzDFDVHWJHqpjq0WTUjf0U52GqJjHMX+DR2tQqPbf
AT2tISrglsI+3o4alGbfut6j/QdVX2fUWpxRg3oeBHzuFP1BGVnJ2fOhGmS/
7oPy46xB6sb7UwmVnm+QmdPVyr3UAJVgp8CUmluFOrwm3H7HDVDp0UJmeVFV
yDX0wJoYlwHKazz55FWPKhSao3O0im2A4mHrhzStKvT695dV6pb91LfvKZFH
igCd5vLMZSn8jyq1drWxdaaQzaHWjn2D3VSL38D3mH9lqPx1XWB1UDfF659+
PCa/DCnLvFbQEO6mJjKGvIf2laHF/x57s2z/SLH/3Lz9+dNSlOMcxf0kt5MS
iqhfbW9Xgv65mpqyeLynDE1ZfG8FFyP32s0jHqzvqRnvKxOZssXog9K6xK7U
dur7UeOY2aoXKO+7fP/jZgb17MkHpcMsL9DeE0xB+7TaKMbKrka2i4Vof5ef
u+NgI/XvblOj5LWnSDvp2CtN4UbqTe3xhcHnTxC7ox0b6/YGStwxOXyu+zEq
+KTz8GluHaXgqftpSDkfreod+bjC4w3FZKFRFpSfgzwba+MODpZS558kb7t2
IA2J7sxQX7m9hFqusz2axriPat5daijIfUmhsyFta4dSkWTbJqaVHkUUZ8GH
C9ocd9HNJ0f/cxl8RKVtP1ZyQCweDT+XFinJzabeDG/aEKt0A2170b2L2yOD
cnJd+7acNwr1+z4I9Bq8S72NklwsabyM4gKFRsQ8Eqkr11YffqUbgALZRV5F
DEZSdQ7/iseos6iAxq5ePniB+skZosrwdUXZqclx/gZ3X+eUXbpgvcEA/Q9R
brv5
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{-18.420680743952367`, -0.01},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& )},
  Frame->True,
  FrameLabel->{
    FormBox[
     StyleBox["\"\[Sigma]\"", 20, StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox[
     "\"\\!\\(\\*SubscriptBox[\\(H\\), \\(T\\)]\\)\"", 20, StripOnInput -> 
      False], TraditionalForm]},
  FrameStyle->Directive[
    GrayLevel[0], 16],
  FrameTicks->{{Automatic, Automatic}, {{{-18.420680743952367`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-13.815510557964274`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-9.210340371976182, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm]}, {0., 
       FormBox["1", TraditionalForm]}, {-15.935774094164366`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-15.285186528023216`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.894320219336205`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.614018254182046`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.395329053217216`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.215988124561399`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.063971917262773`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.932044374220226`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.330603908176274`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.680016342035124`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.289150033348113`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.008848068193954`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.790158867229126, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.610817938573309, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.458801731274683, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.326874188232134, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.725433722188183, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.074846156047033, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.683979847360021, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.403677882205863, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.184988681241033, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.005647752585217, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.853631545286591, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.721704002244043, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.120263536200091, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.4696759700589417`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.07880966137193, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.7985076962177716, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.579818495252942, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.40047756659712525`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2484613592984996, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.11653381625595151`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-18.420680743952367`, 
       FormBox["\"\"", TraditionalForm]}, {-13.815510557964274`, 
       FormBox["\"\"", TraditionalForm]}, {-9.210340371976182, 
       FormBox["\"\"", TraditionalForm]}, {-4.605170185988091, 
       FormBox["\"\"", TraditionalForm]}, {0., 
       FormBox["\"\"", TraditionalForm]}, {-15.935774094164366`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-15.285186528023216`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.894320219336205`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.614018254182046`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.395329053217216`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.215988124561399`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.063971917262773`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.932044374220226`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.330603908176274`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.680016342035124`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.289150033348113`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.008848068193954`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.790158867229126, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.610817938573309, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.458801731274683, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.326874188232134, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.725433722188183, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.074846156047033, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.683979847360021, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.403677882205863, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.184988681241033, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.005647752585217, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.853631545286591, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.721704002244043, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.120263536200091, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.4696759700589417`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.07880966137193, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.7985076962177716, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.579818495252942, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.40047756659712525`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2484613592984996, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.11653381625595151`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}},
  GridLines->{None, None},
  Method->{},
  PlotRange->{{-18.420680743952367`, 0.}, {-0.01, 1.01}},
  PlotRangeClipping->True,
  PlotRangePadding->{{None, None}, {None, None}},
  Ticks->{{{-18.420680743952367`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-13.815510557964274`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-9.210340371976182, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-4.605170185988091, 
      FormBox["0.01`", TraditionalForm]}, {0., 
      FormBox["1", TraditionalForm]}, {-15.935774094164366`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-15.285186528023216`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.894320219336205`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.614018254182046`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.395329053217216`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.215988124561399`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.063971917262773`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-13.932044374220226`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.330603908176274`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-10.680016342035124`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-10.289150033348113`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-10.008848068193954`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.790158867229126, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.610817938573309, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.458801731274683, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.326874188232134, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-6.725433722188183, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-6.074846156047033, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.683979847360021, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.403677882205863, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.184988681241033, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.005647752585217, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.853631545286591, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.721704002244043, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.120263536200091, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.4696759700589417`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.07880966137193, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.7985076962177716, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.579818495252942, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.40047756659712525`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.2484613592984996, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.11653381625595151`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}, Automatic}]], "Output",
 CellChangeTimes->{3.682682680810236*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
k/bT
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0, 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], LineBox[CompressedData["
1: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
x4nR3rqPysRWdkuoYv8P2inV8g==
     "]]}, 
   {RGBColor[0, 0, 1], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[1, 0, 0], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0, 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], Dashing[{Small, Small}], 
    LineBox[CompressedData["
1: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
cO5sYq8NnC/vTz1y9wWn9sW2gbUf3I07egVM66I1gq2OTd0U9ACXFWpicFRj
5vlcR7CtqEwaeOXDDuUuQzL+8OAZcMsLtk+SfOABI+lhazjP+w7N798Gjryw
tw8csylU2JYbrPxXqQ1s5rl6NZodLCvOXgVu3Dcj9YdC5k/sSQfXEk136id2
w3xOqJ8GV3TEmLiXgmuXchutqFiIpck/rAgsHiBRBQ5S35j1tBCcvDOqBKyV
HPKv/Q2YK2xvFrjYwStXJwPM59d2DVwwbcHNdResVW4rD35Bz9eRfwocenP2
2glYz17/FUWdBOeGhXuBJ4bTks5bgbPpOM+CpT7JOYgeBRcMDhiDMyMOTsfo
gbvG4wXAaVs96C/Jgo+IieZawn6XqJFXWJGG+3HPWP1xKi55GLGZbQlsX9xc
Cu5mMf89Oi9Nvg+l5YD5pnqLn8yADQTX74IfvPmpyzEIdsuIMQXHqu04OfMJ
HN7C3GRBxXeMvMNe3gcvf9ry/hgV+9h5Cj2IBTvnb3oGdvB0K6TdA1PLp2LB
ag+cvx+/DU4OO3YRPDpogShBYF/JRjHwfr99SxbO4Nyr+28fhf2XteiyvofM
b2pUy5yKh0t+rY0rkP3xs0uCvzTOxrfKggcCODeDM+dHP2ZLkPmx5g6bUbEF
6hQ6JgAeph29A87teN+RRQfO8ZppMqXis4x++ubNUnAfO8xqmlCx+IUQrkuN
YLcONTHwUHNET3Q9uOj56Y1g2+QnF5urwANP9ncZU/HRvVUPTIvBOdzml8Fa
DpxjxmlgaqpHyhG478qfhRl5g/lUJfuMIF/RN+bnL4FlReMrwJHhRdvvXART
XDtSwcwWn9/UuYKzN/U4g1cn5zoN7MDiPzsmDal4jE9L6pA+eNzTY9aAisu8
W2oP8oHNPhu16MN9J3DGcNc2cPLY95fg93ipjokbLPiTehOcv3HH5zo2sPIx
PVVwdurZRtN/ktD+uFuCHhXHNax+PTkKPsIyZKIL94+4ZK9XAdg5OfH2fjjf
6opPHs8D/86atQGf8TjSp/Ia7J2/IgO2L7n0358scNHKvkYqfG+YlX27lgQO
fy3LDt4faD4cEQLWWskP0IH11hYwk24Gbm6q2KEJ89Gw/WmJMbjMqmVcg4rf
VZVafDUi80lNeAs+Xvi3dF0XTGRoGoBjHwTcsVYHUxi+uKvD+5l1gCSnKJnf
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{-18.420680743952367`, -1.02},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& )},
  Frame->True,
  FrameLabel->{
    FormBox[
     StyleBox["\"\[Sigma]\"", 20, StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox[
     "\"\\!\\(\\*SubscriptBox[\\(F\\), \\(IT\\)]\\)\"", 20, StripOnInput -> 
      False], TraditionalForm]},
  FrameStyle->Directive[
    GrayLevel[0], 16],
  FrameTicks->{{Automatic, Automatic}, {{{-18.420680743952367`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-13.815510557964274`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-9.210340371976182, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm]}, {0., 
       FormBox["1", TraditionalForm]}, {-15.935774094164366`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-15.285186528023216`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.894320219336205`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.614018254182046`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.395329053217216`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.215988124561399`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.063971917262773`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.932044374220226`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.330603908176274`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.680016342035124`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.289150033348113`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.008848068193954`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.790158867229126, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.610817938573309, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.458801731274683, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.326874188232134, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.725433722188183, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.074846156047033, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.683979847360021, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.403677882205863, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.184988681241033, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.005647752585217, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.853631545286591, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.721704002244043, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.120263536200091, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.4696759700589417`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.07880966137193, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.7985076962177716, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.579818495252942, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.40047756659712525`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2484613592984996, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.11653381625595151`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-18.420680743952367`, 
       FormBox["\"\"", TraditionalForm]}, {-13.815510557964274`, 
       FormBox["\"\"", TraditionalForm]}, {-9.210340371976182, 
       FormBox["\"\"", TraditionalForm]}, {-4.605170185988091, 
       FormBox["\"\"", TraditionalForm]}, {0., 
       FormBox["\"\"", TraditionalForm]}, {-15.935774094164366`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-15.285186528023216`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.894320219336205`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.614018254182046`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.395329053217216`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.215988124561399`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.063971917262773`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.932044374220226`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.330603908176274`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.680016342035124`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.289150033348113`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.008848068193954`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.790158867229126, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.610817938573309, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.458801731274683, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.326874188232134, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.725433722188183, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.074846156047033, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.683979847360021, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.403677882205863, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.184988681241033, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.005647752585217, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.853631545286591, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.721704002244043, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.120263536200091, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.4696759700589417`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.07880966137193, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.7985076962177716, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.579818495252942, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.40047756659712525`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2484613592984996, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.11653381625595151`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}},
  GridLines->{None, None},
  Method->{},
  PlotRange->{{-18.420680743952367`, 0.}, {-1.02, 1.02}},
  PlotRangeClipping->True,
  PlotRangePadding->{{None, None}, {None, None}},
  Ticks->{{{-18.420680743952367`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-13.815510557964274`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-9.210340371976182, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-4.605170185988091, 
      FormBox["0.01`", TraditionalForm]}, {0., 
      FormBox["1", TraditionalForm]}, {-15.935774094164366`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-15.285186528023216`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.894320219336205`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.614018254182046`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.395329053217216`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.215988124561399`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.063971917262773`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-13.932044374220226`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.330603908176274`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-10.680016342035124`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-10.289150033348113`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-10.008848068193954`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.790158867229126, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.610817938573309, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.458801731274683, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.326874188232134, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-6.725433722188183, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-6.074846156047033, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.683979847360021, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.403677882205863, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.184988681241033, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.005647752585217, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.853631545286591, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.721704002244043, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.120263536200091, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.4696759700589417`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.07880966137193, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.7985076962177716, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.579818495252942, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.40047756659712525`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.2484613592984996, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.11653381625595151`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}, Automatic}]], "Output",
 CellChangeTimes->{3.68268268124762*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["One-locus model", "Section",
 CellChangeTimes->{{3.5973745191396227`*^9, 3.597374546575028*^9}, {
  3.644557671565703*^9, 3.6445577018538017`*^9}, {3.685626828681841*^9, 
  3.685626834039462*^9}}],

Cell[CellGroupData[{

Cell["Recursion equation with only locus A considered", "Subsection",
 CellChangeTimes->{{3.5973892015571947`*^9, 3.597389236827207*^9}, {
  3.597615517738021*^9, 3.597615555092223*^9}, {3.5976207740629263`*^9, 
  3.5976207783563967`*^9}}],

Cell[CellGroupData[{

Cell["Derivation", "Subsubsection",
 CellChangeTimes->{{3.6033563243307858`*^9, 3.6033563338431883`*^9}, 
   3.603356772963236*^9, 3.6856269277508583`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MutationStep1L", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"paa_", ",", "pAa_", ",", "pAA_"}], "}"}], ",", "muA_"}], "]"}],
    ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"paa", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "muA"}], ")"}], "^", "2"}]}], "+", 
      RowBox[{"pAa", " ", "muA", 
       RowBox[{"(", 
        RowBox[{"1", "-", "muA"}], ")"}]}], "+", 
      RowBox[{"pAA", " ", 
       RowBox[{"muA", "^", "2"}]}]}], ",", 
     RowBox[{
      RowBox[{"paa", " ", 
       RowBox[{"(", 
        RowBox[{"2", " ", "muA", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muA"}], ")"}]}], ")"}]}], "+", 
      RowBox[{"pAa", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "muA"}], ")"}], "^", "2"}], "+", 
         RowBox[{"muA", "^", "2"}]}], ")"}]}], "+", 
      RowBox[{"pAA", " ", 
       RowBox[{"(", 
        RowBox[{"2", " ", "muA", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muA"}], ")"}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"paa", " ", 
       RowBox[{"muA", "^", "2"}]}], "+", 
      RowBox[{"pAa", 
       RowBox[{"(", 
        RowBox[{"muA", 
         RowBox[{"(", 
          RowBox[{"1", "-", "muA"}], ")"}]}], ")"}]}], "+", 
      RowBox[{"pAA", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "muA"}], ")"}], "^", "2"}]}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AutomixisStep1L", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"paa_", ",", "pAa_", ",", "pAA_"}], "}"}], ",", "\[Gamma]A_"}], 
    "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"paa", "+", 
      RowBox[{"pAa", " ", 
       RowBox[{"\[Gamma]A", "/", "2"}]}]}], ",", 
     RowBox[{"pAa", 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Gamma]A"}], ")"}]}], ",", 
     RowBox[{"pAA", "+", 
      RowBox[{"pAa", " ", 
       RowBox[{"\[Gamma]A", "/", "2"}]}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SelectionStep1L", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"paa_", ",", "pAa_", ",", "pAA_"}], "}"}], ",", "hA_", ",", 
     "sA_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"paa", ",", 
      RowBox[{"pAa", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"hA", " ", "sA"}]}], ")"}]}], ",", 
      RowBox[{"pAA", 
       RowBox[{"(", 
        RowBox[{"1", "+", "sA"}], ")"}]}]}], "}"}], "/", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"pAa", " ", "hA", " ", "sA"}], "+", 
      RowBox[{"pAA", " ", "sA"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Recursion1L", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pAa_", ",", "pAA_"}], "}"}], ",", "\[Gamma]A_", ",", "muA_", 
     ",", "sA_", ",", "hA_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"AutomixisStep1L", "[", 
     RowBox[{
      RowBox[{"MutationStep1L", "[", 
       RowBox[{
        RowBox[{"SelectionStep1L", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "-", "pAa", "-", "pAA"}], ",", "pAa", ",", "pAA"}], 
           "}"}], ",", "hA", ",", "sA"}], "]"}], ",", "muA"}], "]"}], ",", 
      "\[Gamma]A"}], "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"2", ";;", "3"}], "\[RightDoubleBracket]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.605469864796365*^9, 3.6054701163630753`*^9}, {
  3.6054702151220007`*^9, 3.605470237960981*^9}, {3.6054710179151363`*^9, 
  3.6054710884791393`*^9}, {3.605472027806011*^9, 3.6054720282383413`*^9}, {
  3.6445577274434433`*^9, 3.644557736865242*^9}, {3.644557961269207*^9, 
  3.6445580166396103`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Final formula", "Subsubsection",
 CellChangeTimes->{{3.603357926415814*^9, 3.603357946472661*^9}, 
   3.685626926342718*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Recursion1L", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pAa", ",", "pAA"}], "}"}], ",", "\[Gamma]", ",", "mu", ",", "s",
     ",", "h"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.644557751652712*^9, 3.644557777142096*^9}, {
  3.644558098112762*^9, 3.64455810116658*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"pAa", "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "mu", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "pAa"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"h", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "mu"}]}], ")"}],
             " ", "pAa"}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "mu", " ", 
            "pAA"}]}], ")"}], " ", "s"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], 
     RowBox[{"1", "+", 
      RowBox[{"h", " ", "pAa", " ", "s"}], "+", 
      RowBox[{"pAA", " ", "s"}]}]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"2", " ", "pAA", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "s"}], ")"}]}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["mu", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        RowBox[{"pAA", " ", "s"}], "+", 
        RowBox[{"pAa", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{"h", " ", "s"}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", 
     RowBox[{"pAa", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"h", " ", "s"}]}], ")"}], " ", "\[Gamma]"}], "+", 
     RowBox[{"2", " ", "mu", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"pAA", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{"s", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}]}], "+", 
        "\[Gamma]", "+", 
        RowBox[{"pAa", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"h", " ", "s"}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "+", 
              RowBox[{"h", " ", "s"}]}], ")"}], " ", "\[Gamma]"}]}], 
          ")"}]}]}], ")"}]}]}], 
    RowBox[{"2", "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"h", " ", "pAa"}], "+", "pAA"}], ")"}], " ", "s"}]}]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.644557780299906*^9, 3.644557964603651*^9, 
  3.644558020195677*^9, 3.644558107313531*^9, 3.670109246865871*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Recursion1L", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pAa", ",", "pAA"}], "}"}], ",", "\[Gamma]", ",", "mu", ",", 
     "s", ",", "h"}], "]"}], "==", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"pAa", "+", 
         RowBox[{"2", "mu", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "mu"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", " ", "pAa"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"h", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"1", "-", "mu"}], ")"}], " ", "mu"}]}], ")"}], " ", 
             "pAa"}], "+", 
            RowBox[{"2", " ", "mu", 
             RowBox[{"(", 
              RowBox[{"1", "-", "mu"}], ")"}], "  ", "pAA"}]}], ")"}], " ", 
          "s"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Gamma]"}], ")"}]}], 
      RowBox[{"1", "+", 
       RowBox[{"h", " ", "pAa", " ", "s"}], "+", 
       RowBox[{"pAA", " ", "s"}]}]], ",", "\[IndentingNewLine]", 
     FractionBox[
      RowBox[{
       RowBox[{"2", " ", "pAA", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "s"}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["mu", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          RowBox[{"pAA", " ", "s"}], "+", 
          RowBox[{"pAa", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{"h", " ", "s"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", 
       RowBox[{"pAa", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"h", " ", "s"}]}], ")"}], " ", "\[Gamma]"}], "+", 
       RowBox[{"2", " ", "mu", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"pAA", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"s", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}]}], 
          "+", "\[Gamma]", "+", 
          RowBox[{"pAa", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"h", " ", "s"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "+", 
                RowBox[{"h", " ", "s"}]}], ")"}], " ", "\[Gamma]"}]}], 
            ")"}]}]}], ")"}]}]}], 
      RowBox[{"2", "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h", " ", "pAa"}], "+", "pAA"}], ")"}], " ", "s"}]}]]}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.644558060972661*^9, 3.644558069570775*^9}, {
  3.6445581159579697`*^9, 3.644558206742526*^9}, {3.670109282249483*^9, 
  3.670109294716174*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.6445580796524143`*^9, {3.64455812443638*^9, 3.6445582077564507`*^9}, 
   3.670109258293095*^9, 3.670109296314639*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Recursion1L", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pAa", ",", "pAA"}], "}"}], ",", "\[Gamma]", ",", "mu", ",", 
     "s", ",", "h"}], "]"}], "==", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"pAa", "+", 
         RowBox[{"2", "mu", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "mu"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", " ", "pAa"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"h", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"1", "-", "mu"}], ")"}], " ", "mu"}]}], ")"}], " ", 
             "pAa"}], "+", 
            RowBox[{"2", " ", "mu", 
             RowBox[{"(", 
              RowBox[{"1", "-", "mu"}], ")"}], "  ", "pAA"}]}], ")"}], " ", 
          "s"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Gamma]"}], ")"}]}], ",", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"pAA", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "s"}], ")"}]}], "+", " ", 
        RowBox[{
         SuperscriptBox["mu", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"pAA", " ", "s"}], "-", 
           RowBox[{"pAa", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", 
              RowBox[{"h", " ", "s"}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Gamma]"}], ")"}]}], "+", 
        RowBox[{"pAa", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"h", " ", "s"}]}], ")"}], " ", 
         RowBox[{"\[Gamma]", "/", "2"}]}], "-", 
        RowBox[{"mu", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"pAA", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", 
              RowBox[{"s", " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", "\[Gamma]"}], ")"}]}]}], ")"}]}], "-", 
           "\[Gamma]", "-", 
           RowBox[{"pAa", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"h", " ", "s"}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"2", "+", 
                 RowBox[{"h", " ", "s"}]}], ")"}], " ", "\[Gamma]"}]}], 
             ")"}]}]}], ")"}]}]}], ")"}]}], "}"}], "/", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"h", " ", "pAa", " ", "s"}], "+", 
      RowBox[{"pAA", " ", "s"}]}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.644558060972661*^9, 3.644558069570775*^9}, {
  3.6445581159579697`*^9, 3.644558206742526*^9}, {3.644558251057582*^9, 
  3.644558294203561*^9}, {3.644558469792165*^9, 3.644558494909088*^9}, {
  3.644558603883718*^9, 3.644558621516632*^9}, {3.644558712398307*^9, 
  3.644558716681241*^9}, {3.6701093736644783`*^9, 3.670109391040276*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.6445580796524143`*^9, {3.64455812443638*^9, 3.6445582077564507`*^9}, {
   3.644558283869254*^9, 3.644558298473748*^9}, {3.644558484676219*^9, 
   3.644558496440627*^9}, 3.644558622821257*^9, 3.644558718048864*^9, 
   3.670109310322919*^9, {3.6701093774517403`*^9, 3.670109393059677*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Recursion equation for sexual population", "Subsubsection",
 CellChangeTimes->{{3.6034436707477617`*^9, 3.603443697940624*^9}, {
   3.603443768170134*^9, 3.603443771150896*^9}, 3.685626924366997*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SexStep1L", "[", 
    RowBox[{"{", 
     RowBox[{"paa_", ",", "pAa_", ",", "pAA_"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"paa", "^", "2"}], "+", 
      RowBox[{"paa", " ", "pAa"}], "+", 
      RowBox[{
       RowBox[{"pAa", "^", "2"}], "/", "4"}]}], ",", 
     RowBox[{
      RowBox[{"paa", " ", "pAa"}], "+", 
      RowBox[{"2", "paa", " ", "pAA"}], "+", 
      RowBox[{
       RowBox[{"pAa", "^", "2"}], "/", "2"}], "+", 
      RowBox[{"pAa", " ", "pAA"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"pAa", "^", "2"}], "/", "4"}], "+", 
      RowBox[{"pAa", " ", "pAA"}], "+", 
      RowBox[{"pAA", "^", "2"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Recursion1LSexual", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pAa_", ",", "pAA_"}], "}"}], ",", "muA_", ",", "sA_", ",", 
     "hA_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"SexStep1L", "[", 
     RowBox[{"MutationStep1L", "[", 
      RowBox[{
       RowBox[{"SelectionStep1L", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "-", "pAa", "-", "pAA"}], ",", "pAa", ",", "pAA"}], 
          "}"}], ",", "hA", ",", "sA"}], "]"}], ",", "muA"}], "]"}], "]"}], 
    "\[LeftDoubleBracket]", 
    RowBox[{"2", ";;", "3"}], "\[RightDoubleBracket]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.644558872941086*^9, 3.644558893385655*^9}, {
   3.644558993337201*^9, 3.644559060793445*^9}, {3.644559109760913*^9, 
   3.6445591258166447`*^9}, {3.644559172843564*^9, 3.6445592108660793`*^9}, {
   3.644559259704647*^9, 3.6445594535540113`*^9}, 3.6445596679876738`*^9, {
   3.644559700776791*^9, 3.64455970977698*^9}, {3.644559749848271*^9, 
   3.644559760510635*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Recursion1LSexual", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pAa", ",", "pAA"}], "}"}], ",", "mu", ",", "s", ",", "h"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.644559715228581*^9, 3.64455974638212*^9}, {
   3.670718943588236*^9, 3.670719019916152*^9}, {3.670719453851655*^9, 
   3.670719454466733*^9}, 3.6707194935842123`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "4"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "pAA"}], ")"}], " ", "pAA", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "s"}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["pAa", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         SuperscriptBox["h", "2"], " ", 
         SuperscriptBox["s", "2"]}]}], ")"}]}], "+", 
     RowBox[{"2", " ", "pAa", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"h", " ", "s"}], "+", 
        RowBox[{"pAA", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "-", "s", "+", 
           RowBox[{"h", " ", 
            SuperscriptBox["s", "2"]}]}], ")"}]}]}], ")"}]}]}], 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"h", " ", "pAa", " ", "s"}], "+", 
        RowBox[{"pAA", " ", "s"}]}], ")"}], "2"]}]], ",", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"pAa", "+", 
       RowBox[{"h", " ", "pAa", " ", "s"}], "+", 
       RowBox[{"2", " ", "pAA", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "s"}], ")"}]}]}], ")"}], "2"], 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"h", " ", "pAa", " ", "s"}], "+", 
        RowBox[{"pAA", " ", "s"}]}], ")"}], "2"]}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.64455976652531*^9, 3.6446186963020077`*^9, 3.670109773816915*^9, 
   3.6707189452431726`*^9, {3.670718986817292*^9, 3.670719020767275*^9}, 
   3.670719494278824*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Plotting the evolutionary dynamics", "Subsection",
 CellChangeTimes->{{3.6035302482457867`*^9, 3.6035302728390427`*^9}, {
  3.6035308602183037`*^9, 3.6035308624328814`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"meannCA", "=", "0"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Gamma]", "=", 
     RowBox[{
      FractionBox["1", "3"], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "3"}], 
          RowBox[{"meannCA", "/", "2"}]}], "]"}]}], ")"}]}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu", "=", "0.00001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gens", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ps", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"gens", "+", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ps", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "=", 
   
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psSexual", "=", "ps"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"g", "=", "1"}], ",", 
    RowBox[{"g", "\[LessEqual]", "gens"}], ",", 
    RowBox[{"g", "++"}], ",", 
    RowBox[{
     RowBox[{"ps", "\[LeftDoubleBracket]", 
      RowBox[{"g", "+", "1"}], "\[RightDoubleBracket]"}], "=", 
     RowBox[{"Recursion1L", "[", 
      RowBox[{
       RowBox[{"ps", "\[LeftDoubleBracket]", "g", "\[RightDoubleBracket]"}], 
       ",", "\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"g", "=", "1"}], ",", 
    RowBox[{"g", "\[LessEqual]", "gens"}], ",", 
    RowBox[{"g", "++"}], ",", 
    RowBox[{
     RowBox[{"psSexual", "\[LeftDoubleBracket]", 
      RowBox[{"g", "+", "1"}], "\[RightDoubleBracket]"}], "=", 
     RowBox[{"pnextAonlySexual", "[", 
      RowBox[{
       RowBox[{
       "psSexual", "\[LeftDoubleBracket]", "g", "\[RightDoubleBracket]"}], 
       ",", "mu", ",", "s", ",", "h"}], "]"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "ps", "]"}], ",", 
     RowBox[{"Transpose", "[", "psSexual", "]"}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Thick", ",", "Black", ",", "Dashed"}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{"Thick", ",", "Black"}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{"Blue", ",", "Dashed"}], "]"}], ",", 
      RowBox[{"Directive", "[", "Blue", "]"}]}], "}"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", "16"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<generation\>\"", ",", "20"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[OverscriptBox[\(p\), \(^\)], \(Aa\)]\), \
\!\(\*SubscriptBox[OverscriptBox[\(p\), \(^\)], \(AA\)]\)\>\"", ",", "20"}], 
       "]"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.60353089187535*^9, 3.603530983226058*^9}, {
   3.603531040739498*^9, 3.6035311977091427`*^9}, {3.603531307406088*^9, 
   3.603531435528841*^9}, {3.603531676554263*^9, 3.603531696127338*^9}, {
   3.605415235804308*^9, 3.605415280166595*^9}, {3.6054720772453213`*^9, 
   3.605472080329034*^9}, {3.605847987769926*^9, 3.6058480898733473`*^9}, {
   3.605848121543867*^9, 3.60584812169101*^9}, {3.6058481872460737`*^9, 
   3.60584821840021*^9}, {3.605848296064774*^9, 3.605848297884615*^9}, {
   3.605848343970476*^9, 3.605848415682418*^9}, {3.605848450236123*^9, 
   3.6058484859469757`*^9}, {3.60584853306234*^9, 3.605848603413519*^9}, {
   3.612305591958434*^9, 3.612305739259891*^9}, {3.612305835677887*^9, 
   3.6123058863044243`*^9}, {3.6123059306407013`*^9, 3.612305996958992*^9}, {
   3.612306040420314*^9, 3.612306148890725*^9}, {3.612306243369668*^9, 
   3.612306305461809*^9}, {3.612306392599679*^9, 3.612306394643214*^9}, {
   3.612306770066884*^9, 3.612306868426386*^9}, {3.612313013659856*^9, 
   3.612313019500046*^9}, {3.6123144128562927`*^9, 3.612314454609961*^9}, 
   3.612314765533387*^9, {3.612314831864304*^9, 3.612314836400137*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {GrayLevel[0], Thickness[Large], Dashing[{Small, Small}], 
     LineBox[CompressedData["
1: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
eNloPuP9QrI4C1pJrytiF5DlWbgZGe7Qz4acl4WWabq7z80kK7Jwon7+vkgr
pv9ZsJnca6r1RKb/WTj8aq+ljgXT/ywYCI9ENo1h+p8F41PG9Q9GMP3Pwg2n
hQ53hjL9z8LSNbVbHgxk+p+F5PhTBY0GTP+z0PXibA/tPkz/szBUW088pSfT
/yx4GpkMWqfJ9D8L4VfPvj/+l/n+XDZWjIh51vUXWTsbLiUz7nm1k/Wy0feA
bVHlF7JRNrRb+9vPbiazslFUIJWebySbZSO/31V3xzdky2yY9JwkU78gW2eD
1U/eT/SUjGxknH5zw/IR2SEbS0v5m5vukdnZ2L3wj/vRarJnNnIi8S3hJpmT
DQvLiKXLrpGDstH1bnf36ZfJ3GwUzCp5aXqBzMtGn1mJT1lnyPxsHLmebzaq
lCzOhrf70WMTT5Dl2Rj1T+hSx2PkvGxEl77/HVJEVmRDWpW0YUsBuTAb4waV
fb+1l6zMhl1Q2IBee8hl2ZjQtbR26Q6yqvN8ab0ZVLCVXJkNqxtZt7tsJtdk
Y98E0aMAObkuG3L9OuMHWWR1Nv5seyxbJCE3ZsO+yKD37TRySzZOzHESuQvJ
HdnIrhU+aUxm+i/D47s/fokSmP7LEP1pzF1THtN/Ge7sPmtXG8X0X4be/L2z
JeFM/2Uoq/hTuCCM6b8MDwrNubqhTP87j1d3NulJINN/GUo/8M4p/Zj+yzD6
gc/AHG+m/zLkeBTHRa9h+i8DEm9U+65k+i+DRMel6wpPpv8ynNYYrOG5jOm/
DP59LEpWuzL97/x99S7rhC5h+i+DdpZjS8oipv8yVFn6uOx0ZPovQ4zbs8Gq
BUz/ZSiIPj/9gx3Tfxnyzk/dMcyG6b8MfNEhC485TP9lmHD38NOtM5n+y/Ck
8U/uC2um/zJYV21y/MeK6b8MN65K3ogmM/2Xwa55/DK1JdP/ztd/7qfE7h+m
/zIYyLeGHzVn+i/DxZl1P4eNZfovg3HuOcPcMUz/ZTDV5B4zGMX0XwaXfo6n
t4xg+p+D/l1uDB9hzPQ/B1tcd9QeH8r0PwfOgbmVDoOZ/ufgee/S928HMv3P
wftBo80l/Zn+56DXr0nxk/ox/c+Bys2z8qUe0/8cxGydqrW1D9P/HOzYvnGU
qy7T/xwUTFtj2E/He+7/AA4RQCo=
      "]]}, 
    {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1:eJxV1Xk0FO77PnDttPJpoVJUkopol6SrCGlTIpUYZMu+74x1jGGsiVatKIVW
tCGKUlGSViKFUtKClL5+5/3czvn1T+d17rnnnuu5TqcZFs7brAaLiIi0DhER
+X9///enY7XI//8HUjITbC4sC9D4j6I4J1nVbVq5n1kcQ/UzJPQ9zjBPQPu9
SL9j2peYpbDkwrqp8RU3maVxRanH5ZR/GbMsigSVnnfCHjLPROXoUyb7Yp8y
y8Hqcek8NZUXzPK4zVf9NOt6PbMCYsc7LRqR3sQ8Dzn3xTC49SOzIrKbLs8+
WfKZeQEKj4vfqJ36jVkFleskWsvn/mBeiB8ai1pXJnQxL8LKIcJtp4x7mRdD
60yo+JvIf8xL8Dr4+bEUicHs3ZYifdh1pYyDQ5mXQebUcU6BxQjm5Rjf9E9b
3mkksyrcOMqO0cVjmFegJyG/9n2uOLMa/k5TOih29n/MK+Eqpfi289EEZnUU
5scOip4pybwKGY2fbr7PmMysgVWjr6XrWEgzr8aEx69OKxjKMAPekjW/pdbO
+M9cYFneC8sTPTPZfA3ML29ZpvFUjs3XYIuvfpFUtTybr8XTsbangn4qsPla
TDly/ujbtfPZXBPf5azNH1xXYnNNGEbOKwtaqMLmWkjM+1l39shCNtcC536F
3tdZi9l8HZLUF+V8LFvC5uuwXOL+YJ2IZWyuDZXtop/rLFXZXBs1J3eOCbNU
Y3MdfNbRtdWOVGdzHfwL8H+CRxpsrgvpYTkaz4+CzXWR+fJ4ueenNWy+Hvt3
en1R26zJ5usxpVF+k3e5FpvrQeZImZxwtzab68HNQLj1l6gum29AmNKorSuf
rGfzDdib+MigL38Dm2+EY7OOSdetTWy+EcG66va/mrew+SZoNC7f0ym5lc03
4YnMiCGWW7ax+WbMWX6p0+SgAZtvRmFuWVpfz3Y234Lw/BWlns5GbL4Fs7xT
zEX+7GBzfUyb9m5be/rO/wx9PLt5ac0Rs93s8/qwG3+XG7Ziz38u0sfid0t+
yauYsf2tQHsrL+EEh+1vxfTtbZwJN83Z/lZcbh1WHtxiwfa3IunH6K13Zu9l
+9vgNML020tPK7a/DSXn1+x//MKa7W/Dv/JJ169ts2X722AjuW9C/js7tm+A
H0PElYZG2bN9AyzvNJCq13Zk+wbIP7tB7rCMM9s3wBL57IrHfBe2vx2u//t8
XjnRle1vx4E/g7vystzY/nbM1vobLFftzva34/Lct8pmYp5s3xAZ349ZaRl4
sX1D7P8haVOc4832DfH818knj2R82b4hDO8Gj3c95cf2jWA45mBdvkYA2zdC
hOO12DtfA9m+EaqPZtVezw9m+0YoUZo/3PEhl+3vQKX3sT0XH4Sw/R1Ym5WS
UPc8lO3vQIHJ41cJnWFsfwf0itT0U6Uj2L4xWgXLpl0wimT7xpglu+fBkeM8
tm+M+3NTA9T6oti+MdxuSc3jOEaz/Z148Pphw/evAra/E0cTPvY2Rcay/Z2Y
k99qorA4ju3vRM1FC/13fvFsfxcGV+Qp1NsksP1dOLMmmC9lnsj2d6G4Z6P1
NJsktr8Lwu+OzaF+yWx/N/qa1Z2aDu1n+7vxv305l94+SGH7u6H8sqpw8qhU
tr8bGfGZrzV2pbF9E4g0jLjzt+Ag2zfBkp7LZqPmH2b7JpgnZf5mxoUjbN8E
Wa+q+SJax9j+Hmg1b3l9xSud7e9BteP3zSmGx9n+HkTck40XXX2C7e+Bd29e
lefik2zfFJETDU3XLz7F9k1x4YRXYIfGabZviivXfFe9NDrD9k3x069V29s/
g+2bYZWowckV5zPZvhnUsvyCkj9nsX0zFLadauhdcY7tm+HWwkvm7/dns30O
0tRf15SIXPjPshwcSHz6eZR/Dvs+DiIuynxOC839zxwO/rot/VS7JY99Pwff
aic3es6++J/TOci+dbzqwpBL7B4H9hpvI/PbmBs4eBGhxyl/eZndN0dNYkCv
RM0Vdt8c/2YkfLlbe5XdN4fSoTSfSU3X2H1zvC4yV1HqyWf3zTEyujN3yeRC
dt8ca5N1tAw0r7P75lCrvhFzzvsGu2+O7UvvK5lcvcnuW+Bb50WP4H+32H0L
OLh/4e6fW8TuW+CnV0XBtTpmjgU673LFFGOL2X0LzJ0tt/andgm7b4GavWtW
jR9+h923gM7Bnfmh95kbLJC8edWSVcml7L4lni6++1zVsozdt0TzXEsj2+V3
2X1LDHn28WWh+D123xL1QaO6pn5l5lpirn3vAfcn5ey+Ja4p7RY5U1jB7ltC
68eg8qSM++y+JQ4pXX03Oe0Bu78XozImZ0jEVbL7e1G+5WObPv8hu78X/NgE
ibO8R+z+XlRfU1f5zH/M7u9FxZG+1G86Vez+XlirpQzKrmQu2gtFx/XmogbV
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
LbZjFvdC4RaRmN/OlN8LXzWnQc6L8nthUu7rHo0Ayu+FiTKr6/VCKb8XxE5f
n6gbRfm98OiNZskyIeX3QtdtHTHJZMrvBXntgrGtaZTfC+kd435lH6P8XmiS
3dhocZrye6FZ//fPkecovxduzVlmcDqX8nthtuP5qYuuUn4vbHlzwiXvOuX3
wv63HW6ziim/N7ZNGa0ZdZfye2PO72GDGh5Qfm98HxlXOa+a8nvjhnZPqW0t
5feGUFtN7OAryu8N/p72a7caKL83RI8afq1tpvze+FVh9rCxjfJ7Y5XyKefG
r5TfG/Ndbb8/+0H5vfFg9XHPmz2U3xsv/n7/X1of5feGplH+R9shX1h+bzQW
94xTEmVu8IZyn09G82jmDm8c9jxfkSjBLOID9YN3E5ZMYhb3gdni81MeTGGW
9cHto0ODjWSYVXxwaZjii9pZzPDBPN5qzY0KzPo+uGE0+flVRWaODwKrt12Y
tJDZxQdNUesa7Zcyc31gpDU65uoK5ngfVPSElf5axZzug9KbG08prmXO9cG6
c/c1jbWZi3zQeEf+uq8e5feBT/mWmQmbKb8Pqkb2xh/dRvl94KZ6evoJI8rv
i1kySY2HdlF+X8jaP/kuMKX8vkg2U7Nzs6D8vrDnO+zcYk35ffHY4dnLmfso
vy/2K50f0u5I+X3xcFF363lXyu+Lk2W8k1aelN8Xjed+r5vgS/l9oXHr5oeC
AMrvi2i/0YeMuJTfF/KJ37zbwii/Ly566CR68ii/L9Y8z+/riqb8vtBULa52
FVL+/n3OeZmmBMrvh763h/5s2E/5/aDICwzITqX8ftjUPPHS0MOU3w/BV3ov
bT9G+f0gZpSWePgE5ffDqeVKFq9PU34/uG64v3RCFuX3wwknY1mtbMrvh/E1
yUsccii/H57b/y8i5iLl98NjXTW501covx9Mhm6Uu5pP+f1gJGt64PZ1yu+H
lTamccW3KL8fSvX+N/1GMeX3wwdIGuaUUn5/rJdpWnfoHuX3x3bP0kHc+5Tf
H0/eN6bteUj5/aHhu1pmSRXl90fF38snhjyl/P6Yta17SeUzyu+P8bdSP8TW
UX5/fNIUKdd9Rfn90fbNvfXPG8rvj9BFE3afbaD8/jg+9Y3i1ibK74/uG2ec
vjVTfn/sdpytImih/P6YK9nGnf6J8vvjRZiFy7l2yu+PjDMvxizqoPwB8Png
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
hKwbh2Uum6qX9fv/ACE6Quc=
      "]]}, 
    {RGBColor[0, 0, 1], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxV23k4VP8bN/Bp/WrXrk2TFG1MoqToXRHaSELZBtmyjX3sw8wwGGNK3yiq
aVephkrS5luS0kIopWXSpl2LQtvjuX73ea7r6Z+u13Wft8+cc8+cOedzPjPJ
M8TOuyeLxXrTi8X6v///71/bItb//w/517Qnj+zz3ex/VMPO+Av8Z5v70nbq
yE/tzRVvGEoegXK1A20lZ0eTNTCtsl7DaZMmeTyer5jvsaRMi8xG28wDS8z8
ppK1IOns2u5iOZ2sjZBgy8rvjnrkqcgXHfy1ePVssi7i13z2uJU5hzwdCk+L
ZZ0vjcgzYXBQlm/gZkzWw8CxczZ1tJuQOWhmrT316LgpeTb6pXcVL7EA2QAn
Imz2OlxdTJ6DNQUhoi1OS8mGOL1mut7bv+ZkI3xp4ia7nl9GnovmTo+enTIr
8jycG+sdeY+/nGyMiTcihRPiVpLn47/dk317564mm2DN6YO2rT625AVIfMxp
DpCvIS/E3J/GXZeq7cim+Ku9cI9C3Z5shsCu7b/u+q0jL0KqRY/nU+46kIE+
HUNWhq1y+p8FwNiPLjfzm9dTfTEWeE0evTnBmeqL4RR/XbzS0JXqS9DzVPyB
BpY71ZcgZ4rcWzOMS/WliJC/vHc3xIPqSzH4fL/eE2M9qW6OXmMNFXs2e1Hd
HDc6nAf2OLOR6hawk9SXvHvrTXULxI2v8dHQ86X6MuyXP762LNmP6svgfLjq
8KKX/lS3hK/WRkHjhgCqW2JJ+aTaFy2BVLdCbtenvfaJwVS3goXTF8GA0Tyq
W6Mpru7s1k6ywBpayvpLy1+HUn05pout88tUYVRfjuLF156GvAqn+goEuQe1
q3VGUH0FRDfrNk4eE0X1ldBv3zzFxzKa6isxuyDnU5KIT/VV8DHrkOnUxVB9
FVrHVZqM14uj+mo8Zc37OKUgnuqr8SixrnLk+ESq2+BewG+nquNJVLfByaEH
h8mOCKhui+Jh47/1lCT/z7DFh3HTxGa8FNreFopBbr2ueAn/5wpbrB/0apOG
l4jya9BDca/oZrCY8mtQf9frVXhaKuXXYGnBg7zCY2mUX4MFW+e2DGiRUN4O
kwrMSi2mZFDeDhY9743uw8+kvB2mDg2xYzVLKW8H5fWVc9pXyyi/Fg2l65Yc
bsim/Fo8LBzxO6JUTvm16L1fnrRMupnya+E5KGS6ceAWyttD0tVpdcEhh/L2
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
      "]]}, 
    {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxV13dcDfz7x/HMipCsilKIMlNGQt5SFNFQadAymtp7nk7rnE6nMkoiQsiI
qOxRZgihbCojm7gjI3z7PVzXHz//3I/n4+PqOtd5PW73TdMjwGZlZxkZmTdd
ZGT+75//frXMkvn/v7Dnv4r/Kh4/nvmPcugbE3cj1+YPWRHCAeqY+qGv0T/3
R4W0+z7VKg2yMn6JBX/GiseQhyBYcfnIoseTyBp4W+Q9Z9CLmeRh8Nm5zTc7
04Q8ApX3zt4847WAPBJlCdedbtVZk7XxSU/aLfSsPXk0nllP3rhfupQ8FiEJ
BbselriTx8O5RX5qWNFKsi6e9Is90meGD3kiVD2D3P+kBZD18G34mucPbgST
9WEXkfszdn44eRL+NBheUjaJJk/GLPX3+xdcjSdPgc6nafOKviWSp+L8U4VM
QUMy2QDTVjrP3asjIk9D4X/aWZqNErIhFi9Yd0wsm02ejtZegRva3deSZ8Ak
33nlk+455JmQhP9J9/mzgWyEt97et6usN5FnoTGoLqWtx1YyUNPV6uuG/G3/
LAB87K/uXfZxB73Pxumco9L8tF30PhuKkcfv3F69h96NUaWc2tV2z356N8b6
8hV1RZql9D4HK4d3kX877DC9z8Hx4QXHFF3K6d0EI/4UnzR5cITeTfCh24hG
u03H6d0U32WUiqv3naJ3U0yplFkaKl9J73Pxfs+M7I/vq+h9LsRjDzq4drtA
7/MwWyPS1MHhEr3Pg8+o2LW/31XTuxnODRvSbcDla/Ruhp5Pe80d+PkGvZvj
Uv4Cf/Vpt+jdHMWi9h/Xde7Q+3zI93jUM9+ynt7nY8T8Gkm30nv0vgBzHkaN
GG79kN4XoKr9+sEd057QuwWSJm2TDTFopHcLeJ0IN0/+20TvC1Ha5ViP+G/P
6X0h5uyfGGMxrJneF8F/v72is+g1vS/CRpHaqG3j39G7JXr4pDUcHPyR3i1h
U5i7221fC71bIUTqkfMi5Ms/wwqLX5Qkn/dtpd9vhchbCfrXN3z750or/Pr9
Zp7F7+80b43PQ/9YKm3/RfPWsEwzfpGc8YfmrVFzx6nL3SaZf3+uVFpj2M95
Hwp3d6Y/Z2wwTHvTm6ZNXf8ZNlB32nTa+Hz3fxbY4GSuU8yzYfI0b4Pd20rL
3Cp70vxi+ImCSt5s603zi9F2/+0jzVeKNL8YT0Jq7vnvUqL5xagw+uX5aW1/
mrfFz8ixXwcfGkjztnhVXKz4qJsKzdviyueN2yW5g2neFic2mfzo461O83YQ
6Q18+b5Kg+btoDQkfdOv8GE0bwcV2Xuh2UtG0LwdxF4P9r/wHEnz9siR+VGc
u1+b5u2xYOCDF4dHj6F5e2SaGKw//Woczdtj1by9wqehujS/BLXlhz23D9aj
+SWQexb8vvKdPs0vgV3FycLhbybT/BIsHilV661sQPMOeHR7aIBWnCHNO6CX
7ZdOkWozad4BPTfrKKf+mUXzDtBao7xKa91smnfEmw3C29sXzqF5R2gKvroa
65nSvCOEG02v3DOZR/OOSJlbNlwsNqd5J7wyOfqwrqsFzTvB4J3Sjw0nF9G8
E2xaOrumP7CieSc09Fl4JjbShuad8bfTl8aymbY074xTrh+fxo21p3ln6Khl
t3qbOdC8M5R8dAItcpxofikipcOPGA9aRvNLcXR3P/ujt11pfin21hkO0F/l
TvNL0X6tdmZp1+U0vwy3W49kii6voPllCDveaFR4aBXNL0NrrNRC4ZIXzS/D
25ueK/rL+dK8CyYZnzowKWY1zbtAZkLp6ay+gTTvAhVbTY+GxCCad8Fcw85n
8xVDaN4Vs3set285G0rzrlghrzJk7NpwmneF5pFFZUfFkTTvCpki/VTVPdE0
74ZZMy/v+vEl9p813FD2NDV6kE8C/Tw3JE8/vn6PXOI/u7lhXo9HL++ECenn
uyEwfFPxgD9J/1zoho03bLK670ihfW64cnjI+Pmr0v650Q3lSqt/ZJqLab87
hlcUqkoXSWi/O+zun1HpFiGl/e6YFjxs6ZkLWbTfHY9F2qfODVlD+93xq7ll
Qo7vWtrvDqv2eN2zN9fRfnf09nooozM/h/a7Y1kvuaXHH+XSfg/ceDd3tm1K
Hu33gCBr3+EH8/Jpvwcib2/2GjFiM+33wPRH3eLkBm+h/R4461Yit2dgIe33
QKD/qh9N47bRfg/kHBmqIVm8nfZ7YHDug/SfaTto/3K8/RBdmHCtiPYvx9Tl
5Yke6rto/3L4XrcJfi7YTfuXY8OtegvD/4pp/3LkDZDrnBu2l/Yvx9a5U0YO
kdtP+5dj+sco6eu9JbR/OYyFy74ruByk/Svgmt/qVZ1dSvtXoCXyW8Kx6EO0
fwWM43o/v+l3mPavwOCU0S6dPcto/wrklsn7GXmX0/4V0BXHmawOqaD9KzD1
19f/glOO0P6O37+8U+z4rUdp/0rEn7Roj6o8RvtX4lNz7vPRb47T/pUwsP1v
lJLKSdq/EgK9nSntlqdo/0qo4vr5w9LTtH8lKmuV//y4dYb2r0TPjRY/zHtX
0v6VWBMZsmfrEbLMKqyb+7DnY/cq2r8Ks2/+evuozznavwp7evr2iKkku63C
BPvL1utDztP+Vbi83bKtk84F2r8Kmkqn9xQ0kitXYdnr/seRf5H2r8KiKaON
Lthdov2eOD8mG536Xab9nsh/dulh7S0yPHHNMmypwtpq2u+J4HMSH+niK7Tf
E+Ov66mNH3iV9ntib1rw4CsPyJWeEO9LKZ+25Rrt94ThoDvfnJfX0H4vTNqf
eUFB5zrt98LNOXLNOp/I8ILC2nKVtRU3aL8XtIxkhmnF3qT9XnhUKHjtrllL
+73Q+Vlv+eJkcqUXhMpNkXdfkRu98Fdjm3XD/Fu03xvVvRONK0rIGt7YfUe4
ZoHibdrvjZ4LOw/JDSa7eSOz3xp7cR1Z4I2AhfoWqlPu0H5vJAgVCow2kCu9
sbGXJPZ9G7nRGy3zNQ6qOtTRfh8867MurfIoWcMHhXY/ntcPrKf9PjhvuXL0
4jCymw8e+1ubTrxDFvggS/HuVm/du7TfB4eeHNb8lkGu9EHFgMljbr0mN/rg
/bwua77OuUf7faGCuxtctpA1fLF9ysgW2e9k+OLcztuHPljdp/2+WBl/dYnC
HrLAF0vvHz/pJvOA9vviy46qvq/tyZW+6G4/88XW/eRGX6zvmt8ntdND2u+H
MZ9mn8mzI2v44fPvLSvuFpPhh/eOU07P/EV288PLpqcXrls8ov1+yH7d72hK
AbnQDwWOK3us/ECu9IP/kO6rfWc8pv1+GLQgqiovnSyzGkabXAZ/uEfWWI3V
w11OeY14QvtXozVav69CINltNRJ63D9w7wRZsBoxs2ssa7o+pf2rkTM34dbb
heTK1VArrJs4KZfcuBrW0y9n7HlClvHHwVE6qhYjGmi/P6wtEsao+ZDhD3vr
7zrqB8lu/mj4ELfe6j+ywB+vmj79cRrcSPv9cSZc0q14BrnSH/IHaw2yl5Eb
/XFK5Wd0/3iyTAAsFDpXTN5C1gjAdt/P9a2nyQjA2gKD2zZPyG4BeDpJaYdV
O1kQgPJ3H00/qTbR/gCsE749OWEauTIATwaby/dbQm4MwNCD7ZPyQ8kygTg+
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
y7m/GNlqI6uHVHB/Me79Es78yG4Rw9B1S9ezR7h/x/0NxupZR7l/OnIbpklc
jnH/dBRnLrAYd5z7pyPvnZHHL7ZyOrZfenC9+gT3T0f5+casnJPcPx07lg7a
436K+6fD8fks1XGnuX86uiQPftHGRjomzPORPXeG+6fjR793yZKz3D8dqoed
l9lWcv909KiJXDOkivuno9fn35ov2F7pmLNhZ59957h/OsrUdJyDznP/dFjd
QLepF7h/x76GHb3b2aJ0BEXKRVZe5P7pcDsw3Dj5EvdPh4lkz+p5l7l/x329
Fv6Sr+b+6cjUqXx3jV2aDs/rZbOkV7h/Opoa77UtvMr9Oz6P2aP+va9x/3RM
b/bdcJ1d2/H9FEwRZNRw/3Rssn51c/517p+OnHfaaXI3uH86djrs3HWR3ZKO
ddJuE4Q3uX86NEWfNYxqub8EdVaKcT/YchKUtMualN/i/hI8PhAX7n+b+0sQ
lj9ggPYd7i/BiK4hGk1sbQkezjHYuLGO+0sQeKm7wLqe+0vg0CehXu4u95dA
7wTyz7LNOn5/7NsbYfe4vwRtI1VDx9zn/hIc3O2X3sh2k0C9Z7xSzgPuL8Hn
uDcK5g+5vwRZi8yj29mREhR/nOJ88BH3l6CsdX6p+2Pu33Gfmlp0vyfcX4K0
hSbHL7DzJLi51t4/7Cn3l+Cb1puNWg3cX4LXvtkz6tmlEsxva7BPbuT+EjwT
+7zRa+L+EnQfeK61kV0tgVJlRFTmM+4vwaWGwZHTn3N/CfZ1Mvr8it0oQcJr
v5frXnB/CbIzp9jNesn9Jeg/Snv2W/Z3CVKH3tizvpn7Z6CzZnmW0Svun4H1
fVf+94qtmAHJAN/67NfcPwMXsy2nTHvD/TPQSXvTwCa2dgZ0ztWHi95y/wxk
i1OXTHjH/TNg9EH/eD0bGdDfvnxzzHvun4GtRfmdND9w/wxoT1v25iLbIQOD
P4639fnI/TOwe/Na496fuH8GBvr0qDjEDszAj+pB+21buH8GXKKna7exBR3v
mV91Nn7m/hmw8bp4yPAL98/Al+M6lY/YeRkQpBfaxf7H/TPwedLu4CGt3D8D
27xPDDrFLs1A2AR7U+ev3D8Dv158/fWDXZmBlNn9Z+R94/4d34/9mO5T2rh/
BuZnlTvdYd/PQG25tmHgd+6fAaX3f4sUfnD/DMQdO7SpmN2SgaPt5eomP7l/
Bkp+JYxvYMtIscVRdC3qF/eXYojanG/92rm/FANKRxwsYStL0dBY+G3ub+4v
hd7z0dcb2NpSaFtP1o/8w/2lmDVWT0fxL/eXwubp2oO72ZBirWH1JSOZj9Rf
CmG8cUA920qKtzZBe3w7kR2kqKs5H9apM9lNilD/4rpctpcUg7Sll8Z0IQdK
oe7YsKCSHSnF89qeK227kgVSFN2MV3rNFkkRLFtkG9ONnC2FYkHzmN7dyXlS
PNM+lFfILpTiytHVm/RkycXSjv8+pUy6wC6VYpKLxwo7OfIxKb4+8R3TzK6U
4o9ej/RweXK1FPdOFwm69yDXSnHJYXufXPZ9KQocvKdq9SQ3SrFe6vq9jP1a
isEmb22MFcgtUpSZ+s+rZX+XouqB5d1lvcgymXC69OXvW7ZcJhStT1yI6E1W
zMSFWfJaXfuQlTMR8mC2ZjZbIxPfmy8eH6xI1s7E07JvH3exdTOh1Wdy1cS+
ZINMdLNo0j3FRiaOGDsbzVXi/pkYZ9357U22VSZeOE+e5NiP+2ci/4aN2jO2
WyZ6FRzb6dOf+2fixJwL17+wAzORW307J3oA98/EzZP402kg989EgoGPrJgt
ysSql3sP9RnE/TOx/euy3znsvEy46jx9O1iZ+2di7Y2U6G3s4kzsqjqwf6QK
98+Erv/hxH3sYx2f/+abHxNUuX8mHgWVDChnV2diSLBd/dTB3D8TKxOmTTvJ
vp+JRY9KZxsN4f6Z2Oak9KmS/ToTsqvKZ89R4/6ZKPn5ftpF9vdMfNjb9/5c
de6fhZYtEUOq2XJZsMwJkTUfyv2zcPq548YrbOUsFEXE3zbX4P5ZOHd3UtkV
tnYWrg+tnW6uyf2z0KfnDr9qtkEW/r79azpvGPfPwov9BtUX2WZZ8H+w5b85
wz/O+h9EHGDs
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  Frame->True,
  FrameLabel->{
    FormBox[
     StyleBox["\"generation\"", 20, StripOnInput -> False], TraditionalForm], 
    
    FormBox[
     StyleBox[
     "\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(p\\), \\(^\\)], \\(Aa\\)]\\), \
\\!\\(\\*SubscriptBox[OverscriptBox[\\(p\\), \\(^\\)], \\(AA\\)]\\)\"", 20, 
      StripOnInput -> False], TraditionalForm]},
  FrameStyle->16,
  ImageSize->400,
  Method->{},
  PlotRange->{{0, 1001.}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{20.02, 20.02}, {0., 0.}}]], "Output",
 CellChangeTimes->{{3.605848361249523*^9, 3.605848417116027*^9}, {
   3.6058484513286877`*^9, 3.605848486651805*^9}, {3.605848533922573*^9, 
   3.605848553077237*^9}, {3.605848583852087*^9, 3.60584860421669*^9}, 
   3.612305512329747*^9, 3.6123055640790253`*^9, {3.612305601337175*^9, 
   3.612305703233056*^9}, {3.612305733822186*^9, 3.6123057402171783`*^9}, {
   3.612305837434331*^9, 3.612305887192361*^9}, {3.612305931464843*^9, 
   3.6123059606864433`*^9}, {3.612305990700274*^9, 3.612305997875948*^9}, {
   3.612306046196184*^9, 3.61230614995177*^9}, {3.612306259213539*^9, 
   3.61230630644777*^9}, 3.6123063955358047`*^9, 3.612306701441329*^9, 
   3.612306840204885*^9, 3.6123068783985033`*^9, 3.612313020307032*^9, 
   3.612314455815412*^9, 3.612314768104464*^9, 3.612314837982872*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Overdominance", "Subsection",
 CellChangeTimes->{{3.59737463840327*^9, 3.597374650865423*^9}, {
  3.6325253596226587`*^9, 3.632525379772748*^9}, {3.643688376619981*^9, 
  3.6436883775244017`*^9}, {3.644562513188119*^9, 3.644562513346222*^9}}],

Cell[CellGroupData[{

Cell["Recursion equation without mutation:", "Subsubsection",
 CellChangeTimes->{{3.597614722247882*^9, 3.597614749702929*^9}, {
  3.597619417224444*^9, 3.597619421871076*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Recursion1L", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pAa", ",", "pAA"}], "}"}], ",", "\[Gamma]", ",", "0", ",", "s",
      ",", "h"}], "]"}], "==", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"pAa", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"h", " ", "s"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Gamma]"}], ")"}]}], 
      RowBox[{"1", "+", 
       RowBox[{"h", " ", "s", " ", "pAa"}], " ", "+", 
       RowBox[{"pAA", " ", "s"}]}]], ",", 
     FractionBox[
      RowBox[{" ", 
       RowBox[{
        RowBox[{"pAA", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "s"}], ")"}]}], "+", 
        RowBox[{"pAa", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"h", " ", "s"}]}], ")"}], " ", 
         RowBox[{"\[Gamma]", "/", "2"}]}]}]}], 
      RowBox[{"1", "+", 
       RowBox[{"h", " ", "s", " ", "pAa"}], "+", 
       RowBox[{"pAA", " ", "s"}]}]]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.644560382004559*^9, 3.644560466726647*^9}, {
  3.6445606338412333`*^9, 3.644560656351157*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.644560418473097*^9, {3.6445604502059727`*^9, 3.644560467375505*^9}, {
   3.644560645072564*^9, 3.644560657362891*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pnextAonlyNoMutation", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"pAa_", ",", "pAA_"}], "}"}], ",", "\[Gamma]_", ",", "saa_", 
      ",", "sAA_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{"pAa", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Gamma]"}], ")"}]}], 
       RowBox[{"1", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "pAa", "-", "pAA"}], ")"}], " ", "saa"}], "-", 
        RowBox[{"pAA", " ", "sAA"}]}]], ",", 
      FractionBox[
       RowBox[{" ", 
        RowBox[{
         RowBox[{"pAA", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "sAA"}], ")"}]}], "+", 
         RowBox[{"pAa", " ", 
          RowBox[{"\[Gamma]", "/", "2"}]}]}]}], 
       RowBox[{"1", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "pAa", "-", "pAA"}], ")"}], " ", "saa"}], "-", 
        RowBox[{"pAA", " ", "sAA"}]}]]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.597393209322425*^9, 3.597393276311586*^9}, {
   3.597452640775079*^9, 3.59745264548629*^9}, {3.597452698527608*^9, 
   3.5974527444607983`*^9}, {3.597558955113776*^9, 3.5975590293645363`*^9}, {
   3.597559071292392*^9, 3.597559099754333*^9}, {3.597559154357782*^9, 
   3.597559177744997*^9}, {3.5975592347235928`*^9, 3.597559262037298*^9}, {
   3.5975593426032877`*^9, 3.59755942421471*^9}, 3.5975594904291573`*^9, {
   3.597559545731635*^9, 3.597559602560536*^9}, {3.5975643870351067`*^9, 
   3.5975644429587917`*^9}, {3.597615767363003*^9, 3.597615781355441*^9}, {
   3.597619461433137*^9, 3.5976195156193733`*^9}, 3.5976195514800386`*^9, {
   3.632521052862227*^9, 3.6325211988782663`*^9}, {3.6325212960710497`*^9, 
   3.6325213984404297`*^9}, {3.632522477845591*^9, 3.6325224835407543`*^9}, {
   3.632522536380247*^9, 3.632522539469417*^9}, {3.632522978149431*^9, 
   3.632522991024357*^9}, {3.63252320259121*^9, 3.632523220976412*^9}, {
   3.6325234590713997`*^9, 3.632523464513184*^9}, {3.644560505884882*^9, 
   3.644560534934795*^9}, {3.644560688290213*^9, 3.644560688532798*^9}, {
   3.6445607227353153`*^9, 3.64456075043719*^9}, {3.644560951957337*^9, 
   3.6445609520348797`*^9}, 3.644561586090272*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Recursion1LSexual", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pAa", ",", "pAA"}], "}"}], ",", "0", ",", "s", ",", "h"}], 
    "]"}], "==", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"pAa", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"h", " ", "s"}]}], ")"}]}], " ", "+", 
         RowBox[{"2", " ", "pAA", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "s"}], ")"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "-", 
         RowBox[{"2", " ", "pAA"}], "-", 
         RowBox[{"pAa", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"h", " ", "s"}]}], ")"}]}]}], ")"}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"h", " ", "pAa", " ", "s"}], "+", 
          RowBox[{"pAA", " ", "s"}]}], ")"}], "2"]}]], ",", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"pAa", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"h", " ", "s"}]}], ")"}]}], "+", 
         RowBox[{"2", " ", "pAA", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "s"}], ")"}]}]}], ")"}], "2"], 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"h", " ", "pAa", " ", "s"}], "+", 
          RowBox[{"pAA", " ", "s"}]}], ")"}], "2"]}]]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.644561601504993*^9, 3.644561750401306*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.644561617189549*^9, 3.644561668430678*^9}, 
   3.644561702782291*^9, {3.644561736268118*^9, 3.644561751167843*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Recursion1LSexual", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pAa", ",", "pAA"}], "}"}], ",", "0", ",", "s", ",", "h"}], 
    "]"}], "==", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "pAa", "-", "pAA"}], ")"}], " ", "pAa", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"h", " ", "s"}]}], ")"}]}], "+", 
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{"1", "-", "pAa", "-", "pAA"}], ")"}], " ", "pAA", 
        RowBox[{"(", 
         RowBox[{"1", "+", "s"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{
         RowBox[{"pAa", "^", "2"}], "/", "2"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"h", " ", "s"}]}], ")"}], "^", "2"}]}], "+", 
       RowBox[{"pAa", " ", "pAA", 
        RowBox[{"(", 
         RowBox[{"1", "+", "s"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"h", " ", "s"}]}], ")"}]}]}], 
      RowBox[{" ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"h", " ", "pAa", " ", "s"}], "+", 
          RowBox[{"pAA", " ", "s"}]}], ")"}], "2"]}]], ",", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"pAa", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"h", " ", "s"}]}], ")"}]}], "+", 
         RowBox[{"2", " ", "pAA", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "s"}], ")"}]}]}], ")"}], "2"], 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"h", " ", "pAa", " ", "s"}], "+", 
          RowBox[{"pAA", " ", "s"}]}], ")"}], "2"]}]]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.644561601504993*^9, 3.644561750401306*^9}, {
  3.644562114103492*^9, 3.644562207045293*^9}, {3.644562288660943*^9, 
  3.644562311511838*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.644561617189549*^9, 3.644561668430678*^9}, 
   3.644561702782291*^9, {3.644561736268118*^9, 3.644561751167843*^9}, {
   3.644562188699864*^9, 3.6445622084563637`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"pnextAonlyNoMutationSexual", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pAa_", ",", "pAA_"}], "}"}], ",", "saa_", ",", "sAA_"}], "]"}],
    ":=", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "pAa", "-", "pAA"}], ")"}], " ", "pAa", 
        RowBox[{"(", 
         RowBox[{"1", "+", "saa"}], ")"}]}], "+", 
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{"1", "-", "pAa", "-", "pAA"}], ")"}], " ", "pAA", 
        RowBox[{"(", 
         RowBox[{"1", "+", "saa"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"1", "+", "sAA"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"pAa", "^", "2"}], "/", "2"}], "+", 
       RowBox[{"pAa", " ", "pAA", 
        RowBox[{"(", 
         RowBox[{"1", "+", "sAA"}], ")"}]}]}], 
      RowBox[{" ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", " ", "pAa", " ", "-", "pAA"}], ")"}], "saa"}], 
          "+", 
          RowBox[{"pAA", " ", "sAA"}]}], ")"}], "2"]}]], ",", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"pAa", "+", 
         RowBox[{"2", " ", "pAA", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "sAA"}], ")"}]}]}], ")"}], "2"], 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", " ", "pAa", " ", "-", "pAA"}], ")"}], "saa"}], 
          "+", 
          RowBox[{"pAA", " ", "sAA"}]}], ")"}], "2"]}]]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.644562274161647*^9, {3.6445623192213097`*^9, 3.6445623810199842`*^9}, {
   3.644562443342924*^9, 3.644562480857299*^9}, {3.64456257553587*^9, 
   3.64456257627036*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Fixed point analysis", "Subsubsection",
 CellChangeTimes->{{3.603359614666695*^9, 3.603359648492208*^9}, 
   3.6057541234486732`*^9, 3.6856300426309958`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fixedPoints", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"pAa", ",", "pAA"}], "}"}], "/.", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"pnextAonlyNoMutation", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"pAa", ",", "pAA"}], "}"}], ",", "\[Gamma]", ",", "saa", 
         ",", "sAA"}], "]"}], "==", 
       RowBox[{"{", 
        RowBox[{"pAa", ",", "pAA"}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"pAa", ",", "pAA"}], "}"}]}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.597393209322425*^9, 3.597393276311586*^9}, {
   3.597452640775079*^9, 3.59745264548629*^9}, {3.597452698527608*^9, 
   3.5974527444607983`*^9}, {3.597558955113776*^9, 3.5975590293645363`*^9}, {
   3.597559071292392*^9, 3.597559099754333*^9}, {3.597559154357782*^9, 
   3.597559177744997*^9}, {3.5975592347235928`*^9, 3.597559262037298*^9}, {
   3.5975593426032877`*^9, 3.59755942421471*^9}, 3.5975594904291573`*^9, {
   3.597559545731635*^9, 3.597559602560536*^9}, {3.597559929404108*^9, 
   3.597560046107353*^9}, {3.597560084465744*^9, 3.597560182211542*^9}, {
   3.597560225978302*^9, 3.597560256382597*^9}, {3.5975611636020412`*^9, 
   3.597561265103848*^9}, {3.59756131943609*^9, 3.597561393210187*^9}, {
   3.597561492511643*^9, 3.59756151538628*^9}, {3.597561548965137*^9, 
   3.597561555891081*^9}, {3.5975615992307053`*^9, 3.597561618047567*^9}, {
   3.597564450269281*^9, 3.597564496336499*^9}, {3.597614614306863*^9, 
   3.597614665670795*^9}, 3.5976196559498043`*^9, {3.632525593041156*^9, 
   3.6325256087711782`*^9}, {3.6325257020053253`*^9, 3.63252570665949*^9}, {
   3.644561556416609*^9, 3.644561566236679*^9}, {3.64456252960013*^9, 
   3.6445625565115967`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"saa", "-", "\[Gamma]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "sAA"}], "+", "\[Gamma]"}], ")"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "saa", " ", "sAA"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"saa", "+", "sAA"}], ")"}], " ", "\[Gamma]"}]}]], ",", 
     FractionBox[
      RowBox[{"\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "saa"}], "+", "\[Gamma]"}], ")"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "saa", " ", "sAA"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"saa", "+", "sAA"}], ")"}], " ", "\[Gamma]"}]}]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.597558981779955*^9, 3.5975590301028013`*^9}, {
   3.5975590755036287`*^9, 3.597559100760572*^9}, 3.597559181801825*^9, 
   3.5975592631716557`*^9, {3.597559370275297*^9, 3.5975593918298893`*^9}, 
   3.597559427235386*^9, 3.5975594913668213`*^9, {3.59755954770842*^9, 
   3.597559603538041*^9}, 3.597559949654394*^9, {3.597559982987894*^9, 
   3.597560047769858*^9}, {3.597560099162897*^9, 3.597560117195868*^9}, 
   3.597560154769902*^9, 3.5975601894988937`*^9, 3.597560258608574*^9, {
   3.5975612105943003`*^9, 3.597561223134452*^9}, {3.59756125406003*^9, 
   3.5975612658026257`*^9}, {3.597561351861391*^9, 3.597561396001809*^9}, {
   3.5975615006959*^9, 3.597561516191099*^9}, 3.597561621145904*^9, {
   3.5975644846415367`*^9, 3.5975644985900373`*^9}, 3.59761466776013*^9, 
   3.597619663674108*^9, {3.632525597924778*^9, 3.632525610928438*^9}, 
   3.6325257071591587`*^9, 3.64456078237962*^9, 3.64456096446216*^9, 
   3.644562493734108*^9, 3.6445625588911324`*^9, 3.6456739911024837`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"saa", "-", "\[Gamma]"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "sAA"}], "+", "\[Gamma]"}], ")"}]}], 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "saa", " ", "sAA"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"saa", "+", "sAA"}], ")"}], " ", "\[Gamma]"}]}]], "\[Equal]", 
   RowBox[{"1", "-", 
    RowBox[{"\[Gamma]", 
     FractionBox[
      RowBox[{"saa", "+", "sAA", "-", 
       RowBox[{"2", "\[Gamma]"}]}], 
      RowBox[{
       RowBox[{"2", " ", "saa", " ", "sAA"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"saa", "+", "sAA"}], ")"}], " ", "\[Gamma]"}]}]]}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6445629229076433`*^9, 3.6445631160396357`*^9}, {
  3.644563761052595*^9, 3.644563763156619*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.6445629378907022`*^9, 3.6445629562576733`*^9}, {
   3.644563019128018*^9, 3.644563059840302*^9}, {3.6445630905311127`*^9, 
   3.644563117688693*^9}, 3.644563774573429*^9, 3.645673998224165*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fixedPointsSexual", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"pAa", ",", "pAA"}], "}"}], "/.", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"pnextAonlyNoMutationSexual", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"pAa", ",", "pAA"}], "}"}], ",", "saa", ",", "sAA"}], "]"}],
        "==", 
       RowBox[{"{", 
        RowBox[{"pAa", ",", "pAA"}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"pAa", ",", "pAA"}], "}"}]}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.644561529745654*^9, 3.644561541960854*^9}, 
   3.644561591142881*^9, {3.644562534380039*^9, 3.6445625491779127`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "saa", " ", "sAA"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"saa", "+", "sAA"}], ")"}], "2"]], ",", 
     FractionBox[
      SuperscriptBox["saa", "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"saa", "+", "sAA"}], ")"}], "2"]]}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.6445625667723303`*^9, 3.644562581219781*^9}}]
}, Open  ]],

Cell["Plotting the result:", "Text",
 CellChangeTimes->{{3.643682030870575*^9, 3.643682037733324*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"pAahat", "[", 
    RowBox[{"\[Gamma]_", ",", "saa_", ",", "sAA_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Gamma]", "<", "saa"}], " ", "&&", " ", 
      RowBox[{"\[Gamma]", "<", "sAA"}]}], ",", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"saa", "-", "\[Gamma]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"sAA", "-", "\[Gamma]"}], ")"}]}], 
      RowBox[{
       RowBox[{"2", " ", "saa", " ", "sAA"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"saa", "+", "sAA"}], ")"}], " ", "\[Gamma]"}]}]], ",", 
     "\"\<NA\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pAAhat", "[", 
    RowBox[{"\[Gamma]_", ",", "saa_", ",", "sAA_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Gamma]", "<", "saa"}], " ", "&&", " ", 
      RowBox[{"\[Gamma]", "<", "sAA"}]}], ",", 
     FractionBox[
      RowBox[{"\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{"saa", "-", "\[Gamma]"}], ")"}]}], 
      RowBox[{
       RowBox[{"2", " ", "saa", " ", "sAA"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"saa", "+", "sAA"}], ")"}], " ", "\[Gamma]"}]}]], ",", 
     "\"\<NA\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pAahatSexual", "[", 
    RowBox[{"\[Gamma]_", ",", "saa_", ",", "sAA_"}], " ", "]"}], ":=", 
   FractionBox[
    RowBox[{"2", " ", "saa", " ", "sAA"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"saa", "+", "sAA"}], ")"}], "2"]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pAAhatSexual", "[", 
    RowBox[{"\[Gamma]_", ",", "saa_", ",", "sAA_"}], "]"}], ":=", 
   FractionBox[
    SuperscriptBox["saa", "2"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"saa", "+", "sAA"}], ")"}], "2"]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.643682551182434*^9, 3.643682561965782*^9}, {
  3.6445610028080482`*^9, 3.644561056632862*^9}, {3.644562622386088*^9, 
  3.644562650390971*^9}, {3.645674920295148*^9, 3.645674950354126*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"overdominancePlot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"pAahat", "[", 
        RowBox[{"\[Gamma]", ",", "0.9", ",", "0.9"}], "]"}], ",", 
       RowBox[{"pAahatSexual", "[", 
        RowBox[{"\[Gamma]", ",", "0.9", ",", "0.9"}], "]"}], ",", 
       RowBox[{"pAahat", "[", 
        RowBox[{"\[Gamma]", ",", "0.5", ",", "0.5"}], "]"}], ",", 
       RowBox[{"pAahatSexual", "[", 
        RowBox[{"\[Gamma]", ",", "0.5", ",", "0.5"}], "]"}], ",", 
       RowBox[{"pAahat", "[", 
        RowBox[{"\[Gamma]", ",", "0.2", ",", "1"}], "]"}], ",", 
       RowBox[{"pAahatSexual", "[", 
        RowBox[{"\[Gamma]", ",", "0.2", ",", "1"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directive", "[", 
         RowBox[{"Thick", ",", "Black"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thin", ",", "Black"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thick", ",", "Black", ",", "Dashed"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thin", ",", "Black", ",", "Dashed"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thick", ",", "Black", ",", "Dotted"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "Dotted"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "16"}], "]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\[Gamma]\>\"", ",", "20"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[OverscriptBox[\(p\), \(^\)], \(Aa\)]\)\>\"", 
          ",", "20"}], "]"}]}], "}"}]}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.64368233013135*^9, 3.643682370521669*^9}, {
  3.643687051005939*^9, 3.643687056067318*^9}, {3.643687915858758*^9, 
  3.643687936755562*^9}, {3.644563818612123*^9, 3.644563837245078*^9}, {
  3.644563953698853*^9, 3.644564012401174*^9}, {3.6445640544063807`*^9, 
  3.644564075450059*^9}, {3.644565151422496*^9, 3.644565152180653*^9}, {
  3.645674959976861*^9, 3.645674975464769*^9}, {3.6824232757742357`*^9, 
  3.68242330729784*^9}, {3.682423398723155*^9, 3.6824234204472103`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1:eJwVknk0FHgAx13tssqRVMMrxjEqxHNUJN9Erxxtu4bcaiciLYatZZNQ6Jhs
2iwWLYtHrmxGUshiNjkypKIwNA3m+DEUQq9s+8fnfd77/P2hMiLdg+VkZGTc
vvC/XYKFff+IPO2Zsf3vV1akUHDUYo5SrADrQlfrT1JY5mfnsSlOUH7HLApb
lsL16UDNLYoHyk6p0F/MSeEV9KHpN0oQxgOda8pFUoyYXXJMo5xGwP5mpme/
FAWah1OvUpLhvLZiqrxEiiRFttEVSgaMKi9Meh6Swtvnr+qZ2WJ0+cT+Wcya
hvJKkv+BzdUI1rR36ng5BcPvp4VtrFq8kyvROWs4hZgeG2TPPUBEmMcj/WCC
DbXqPFnZZoyOPnMtuitBHd+xm2vXCnCz8rSlYrSG3dL2IRzcmPmsp2suxjxt
j2pVeDte6ezIXo4XQW6pQk3bsBOrO9i9TxuF2LFyrI5+pxs2ibKLPysK0Z1s
1fN4GxdHTs56VHpNQiddslQ23QtGt9GZ11kTkHwY5b0wfwbGnu3JPME4isUN
nSq/9uO7LXFHhvTGobKpVCoQPIfF/rDAoCABrp28d6LA4CUUmVs922reYmFv
hSA0YQDd68xUtd/xcdqCU7u+bRCp7Qr1B+35GL3DYfVRX8NsTtcgMu4NPoY9
z916dggd7qP/UhvHYOzw9ecTDcPwbQ4/Uq40hgOF1JC7G3j42zXFwyudh5hN
R/Xe+I8iy4r7apXRCEyIp/LAoTEEJwV0dnOGoKE6o8hZHoNKa6xDitNrKDTn
VuvnvUHRZqtM0cggTlk1vFJy5UMj8lwUfAZQ4cwoeLTAR4i+Un3V0AvMS7TU
JjLfouS99XB7zHPcox+Qz3ASoO2+NLV//hkSDqbk104I0JHlrMpK6wN1xGWw
KGUcdUOTcn4mvbDdmZxBsZjAZxpteZfvU/hv5i7J9k8gtKexTON6J+Y70/jM
pEmkBoSf6LvUjmyFwNPuBkLEGATyJtgcaPDuFcpxhLBlD5iYTrdgVXySh02U
CEH0l2pVg02QKQus5q8V41N1vH317npE51SnrW0VY/Wwd2oMrQZNxpcV1SMk
8DZjLezzuw11l2iTCyoEw8pdOZLwHBS0qCrbqhPc0Da8uX9NDsxtqkSzGgRG
xgms/Mo/8O0WYckPFIIMF8tzdEk2rn4VSHUwIHC4khvQEJoFhTbn9TK25Ev/
UZd1PAMLu6ky5798WyWn5eZZcw0p7Ec861CCjXo9dkqzLKwz9m+aCiNIdbhg
2mTGgqVW1tkAJsGmRLGKYdUVMBdXz9vFEdh9etg3V5oKUe2i6GM6gdKin1fG
rUTEmmQ+Yd8kkGzXTU+vT4BisWXpqUwCx/DLUYvW50G7GRE0lEswI/a2emIe
B0aUgPewhMBtYulBCO0MZoVJTdFlBCkGjFxu0U9IPKaTt62SwO9457md1Gjk
H/b1yblLoNlinaCyKwLDpr39vzQS9NXFXD2kz0C+RD1evplAZlBNXVwYCEYZ
nZbWQnB0n8UamxVv0EJ+567nELSV05Uu+9EhMhiILXhMsMNM/M2dSFdU8jfq
besgeC9vKu+2ZS+YBb5d7C6CBffmqdKL+riuc/v2/W6CUr9+zfPxk/b/AUV2
We0=
     "]]}, 
   {GrayLevel[0], Thickness[Tiny], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6F2DGDwwH6BqH9bl2SLPYzfyLFZvVNy
CpwfEblw/YePS+B87v+NMe5y6+F81cB3Lw53b4Hzy89Z2s/4shPOF98ieI+R
cT+cv+2R85nzNofg/ENZc6Uj3xyB87+q2fKvzT0O5zP9XC0grXoKzjf7n7At
eN0ZOP9Mi8m5Y1rn4Xz5Ca9/rnx3Ac5//f3+vasGl+D8Ja92n+Lruwzn88ku
f//kyRU4vydza9oClWtw/jeH1U8y6q/D+SVGR7aIHb4B599fd6T7ouItOP93
1pXZmlW34XxtR/Z/abvvwPnuixTTN4rfQ4SXbLzSw5j7cL7Om1Du674P4Hxh
/g8cR34h+Cz7Z69XnvMQzs822X2T0/sRnL/aM2nBvm8I/tfXUgLPpj2G87cG
uzNPcXkC59d7tM7f8gzBV7zrdWNx61M438q8ZYqk0TM4P0bu/E/Gywj+11O9
jwoan8P5M1jiSoJUXiDcf2/rIqYjCD5rbWOIZeFLOJ9hZdz6R0Kv4PyiWet7
hQ4h+Hu1OzgE817D+YJeRTpNfG/g/Du6Fy5X7kHwN8yzV3kS9xbOj11vJij7
D8FvaF3YeGfVOzh/7QvZ2Xw+7+F8pRYRD/ZlCP50ee6v//8j+ABr5w5H
     "]]}, 
   {GrayLevel[0], Thickness[Large], Dashing[{Small, Small}], 
    LineBox[CompressedData["
1:eJwVy30wlAkABnCrbjKnWcyJ2UMo9nBG62MYSs86box0ai/qnEo2X20ZO07D
dTf5aE8ICXXO+eowxwnJnkNXu7G4Y9fnomy9b9bHLOLNSQ5p770/nnnmN888
1vz4L6N0dXR0DtL5v49EaYal8yGHnWCyoNVS2On7sZBkuSF+Y3/mxiYF14ri
0haWH5panNmraxQCFRMPyljBcLX7gj+3SOFU5PqjAlYkPIxEk/IJCi8OXPfN
ZSXCZ3ql76cmCpV7jmVks0Q4cV1R7xpOIU2v5ZMsVhGSBkVxMY+X8VXo3abX
K9UYU+ovPIlYgr427bT/3iZYSuONPcxfwZa3rOm6IUbrRdkHBi8WkDTgieI3
7eDnOL9+lj4PU7ERwWBIsFnwXaYEGrSqfeWDhzpRwyRYxVNz6BSUmYW+kqHi
iHPCaNYs1tjeBg1xvci4FJFsHzAD3Y16QzPbPqTs+C0pYUkNd+251hONckSl
DtqM105BLnIb6HEYRMmj2eJSwUtY5i9u1C0P4Qlpt/vePgKL6yQxxhmBvSH3
s+ByFaoXHvYx80bR5pApUE8/BdPiV2pmRonp7mYrd/dx5Fz4PbrSZhwax9su
ktZRvOXWz8SmTMD4ap27E2MYiS4ysUnXU3DcKceaVTnIRtmNYetJiPyWhtqT
e7ElUP5sf0UF4+DG/FDTTnzqs+t99MPnqH3bbfCXTQf8f7GOaTYlkK+azZ0X
NcKtmMnuMScg+d6kosy1EVZ5WzOT1gS0Fv73eeoGbH47xt/pSCD8XO1IOxrQ
wMs6e4pLgDMrMM3erMdHjJWQ7VgCQ8tUpYOwDmS41C+gg4Ch7mbLxbBqyEMa
dpyVEOBWOXRbfliNtsCSzgQZgVS/sPHRtioUeCRySwcIvMz489+DJlX43MDu
EKUmcF8/xXv38F3UP77pelufRKWDXl5objmSLML3TZ0mYcUzF6vOF4F/nHPy
eQQJ6eqa52VZIYKuMbInoklw7wxKmLaFYM9XrSiEtFXp/T5zt6AUa6QdIhI6
/SPdx4bzwDmaEF50j/abS/s1kyKYp/gW3mym7Wl1wKz0GnY9MO7NbqX/V0e9
gs6kgzD9wylNSu9GidWxkhTkTG9txylpezF1GX9fRrKJwvnCM9qyRFZM4Dc4
H1AeFUmQSA1ScRQKIbyauIqvNfTec1ziUhMDttqIcXKJ9qTF8vs6Poz2TLvx
/qFNjHneOROGd/7i2KPrtPWEPzrF8KC58kOp/zvaUjulWZc3cvb2c2VaElpt
u7CE3D78H+1o2pY=
     "]]}, 
   {GrayLevel[0], Thickness[Tiny], Dashing[{Small, Small}], 
    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6F2DGDwwH6BqH9bl2SLPYzfyLFZvVNy
CpwfEblw/YePS+B87v+NMe5y6+F81cB3Lw53b4Hzy89Z2s/4shPOF98ieI+R
cT+cv+2R85nzNofg/ENZc6Uj3xyB87+q2fKvzT0O5zP9XC0grXoKzjf7n7At
eN0ZOP9Mi8m5Y1rn4Xz5Ca9/rnx3Ac5//f3+vasGl+D8Ja92n+Lruwzn88ku
f//kyRU4vydza9oClWtw/jeH1U8y6q/D+SVGR7aIHb4B599fd6T7ouItOP93
1pXZmlW34XxtR/Z/abvvwPnuixTTN4rfQ4SXbLzSw5j7cL7Om1Du674P4Hxh
/g8cR34h+Cz7Z69XnvMQzs822X2T0/sRnL/aM2nBvm8I/tfXUgLPpj2G87cG
uzNPcXkC59d7tM7f8gzBV7zrdWNx61M438q8ZYqk0TM4P0bu/E/Gywj+11O9
jwoan8P5M1jiSoJUXiDcf2/rIqYjCD5rbWOIZeFLOJ9hZdz6R0Kv4PyiWet7
hQ4h+Hu1OzgE817D+YJeRTpNfG/g/Du6Fy5X7kHwN8yzV3kS9xbOj11vJij7
D8FvaF3YeGfVOzh/7QvZ2Xw+7+F8pRYRD/ZlCP50ee6v//8j+ABr5w5H
     "]]}, 
   {GrayLevel[0], Thickness[Large], Dashing[{0, Small}], 
    LineBox[CompressedData["
1:eJwVxXsw2wcAB/CoXqu1zqP1SNHSldp6qboqzTy+VK7Syh0yhq3TUUqZcann
nNMUoaoNZq2oV3GadsgW5Wg6cgnJ73cVVNtkpGOybmTrJHaos67Z9sfnPm5J
WeyULRQKhf6f/z+TsvREqo8JGkhwmzeZDNgaujd7nuqD9hoTN3fDgGOtDU19
VAZUuhG+3mhAuEojbqZGg9d4cXF8wYDY5Nc/1FGTsVY7mHpZbsBPXhWh16k5
UNM53wp4BrTZRfCqqGWoKGO/rbY0gGvRd+gqtR6577j9ftR6GXHxd0TGlU6c
uJM25PrsD1iauGfD9ongoBM2nb6ph3vU8pL82gPUS1xKvjm+iPwJOhpWh+Cx
Wxzh/flLODywmTMzG8Ghqxrl0BcLGNCFjk8GyJBRkD3vUquFmslduR4mw22R
oC+Mo8V677A9iy3Db+Icv4SPtPAroicSqTJsTWxbjLTTYnC317q0ToZiaabN
mYZZDDH2uoqXZCgiC2g5jTN41GW8VF8vh88xcbruhgay9Gan+FejmPF1KArz
foo+fUZGwvoozu0oa/O0eorOtA8l5ylj6LgYbFh5NY3yC5pPvtwzhuDXL0oD
hNNgJtk0lgaMoWVb2WyPyzQm48sde6vH8C5/4C+d+RO8YGbamdMUYG2mv08r
VEGl9E+x8FOg4U1fatYRFYZP7ezfFaLA8w31vYJfxtHKuBvtGKNArnfv0hxr
HEnBC1/TihVwNzqvGZ0fY8kvxjZOpYB5TZLv3PcE1jwCrXoylRA/enkgoluO
IN1JZVWBEiMyH66SLQevmVmSVqpEqPV59fKGDPZ7og3vCZTgO5/wZzJk8DXL
mGwcVeK0p9sVe40UBdoGfqUTgfiqSOLkjATSmy1hFzwIVGo5PtecJLBgd5pC
vQmQEx1W+z97CAEhyjKdIuA/NWt7cG4QD/sVEXkcApwmn44STT/e8FetkkkC
k/eDDPdZIjDCN5UhzwgMRwXNZw/1oHob5fL+eQJnu5vU7Qe74VJsaZxdJfCY
dyQQ60IEpR+YinIlIT8n3LKd1w6eu2el12ESkc2H82d/bcPEz7TgXb4kAt/m
rZhXtiAhlv4dEU6i9c+jNO76LXTZIq3rYxLPQ3aK24X1WFYxXMsSSZSEOOrZ
sbUoYUTWIJ/E1PF/7lVFl4MwxTBdrpAY3ZcdqacXw1ryKeXvahIfqL8ady7M
Qlxe4uCPt0gwiuq2sypCcImdtFkoIBFlf9siWW6OfwGZW7+I
     "]]}, 
   {GrayLevel[0], Dashing[{0, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6F2RTLHC2WOX7RfIOrf1iXZYg/jN3Js
Vu+UnALnR0QuXP/h4xI4n/t/Y4y73Ho4XzXw3YvD3Vvg/PJzlvYzvuyE88W3
CN5jZNwP52975HzmvM0hOP9Q1lzpyDdH4Pyvarb8a3OPw/lMP1cLSKuegvPN
/idsC153Bs4/02Jy7pjWeThffsLrnyvfXYDzX3+/f++qwSU4f8mr3af4+i7D
+Xyyy98/eXIFzu/J3Jq2QOUanP/NYfWTjPrrcH6J0ZEtYodvwPn31x3pvqh4
C87/nXVltmbVbThf25H9X9ruO3C++yLF9I3i9xDhJRuv9DDmPpyv8yaU+7rv
AzhfmP8Dx5FfCD7L/tnrlec8hPOzTXbf5PR+BOev9kxasO8bgv/1tZTAs2mP
4fytwe7MU1yewPn1Hq3ztzxD8BXvet1Y3PoUzrcyb5kiafQMzo+RO/+T8TKC
//VU76OCxudw/gyWuJIglRcI99/buojpCILPWtsYYln4Es5nWBm3/pHQKzi/
aNb6XqFDCP5e7Q4OwbzXcL6gV5FOE98bOP+O7oXLlXsQ/A3z7FWexL2F82PX
mwnK/kPwG1oXNt5Z9Q7OX/tCdjafz3s4X6lFxIN9GYI/XZ776///CD4A47WV
jw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  Frame->True,
  FrameLabel->{
    FormBox[
     StyleBox["\"\[Gamma]\"", 20, StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox[
     "\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(p\\), \\(^\\)], \
\\(Aa\\)]\\)\"", 20, StripOnInput -> False], TraditionalForm]},
  FrameStyle->Directive[
    GrayLevel[0], 16],
  ImageSize->400,
  Method->{},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.643682389533594*^9, 3.643682573021029*^9, 3.6436870592716103`*^9, 
   3.643687942149784*^9, 3.6445610647314253`*^9, 3.644562656407796*^9, {
   3.6445638242807293`*^9, 3.644563837998209*^9}, {3.644563958618853*^9, 
   3.644563978001458*^9}, 3.644564013333166*^9, {3.6445640619536858`*^9, 
   3.6445640761596327`*^9}, 3.644565152854352*^9, 3.6456754018429747`*^9, 
   3.682423169130045*^9, {3.682423278464769*^9, 3.682423308777493*^9}, {
   3.682423403959951*^9, 3.682423421344472*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Stability analysis", "Subsubsection",
 CellChangeTimes->{{3.605753972268881*^9, 3.605753981744924*^9}, 
   3.605754125325824*^9, 3.6856300408476458`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Jacob", "[", 
    RowBox[{"{", 
     RowBox[{"pAa_", ",", "pAA_"}], "}"}], "]"}], "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"pnextAonlyNoMutation", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"pAa", ",", "pAA"}], "}"}], ",", "\[Gamma]", ",", "saa", ",",
         "sAA"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"pAa", ",", "pAA"}], "}"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Jacob", "[", 
   RowBox[{"{", 
    RowBox[{"pAa", ",", "pAA"}], "}"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.597614814297071*^9, 3.597614934757167*^9}, 
   3.597619668771687*^9, {3.632525651809053*^9, 3.6325256724115458`*^9}, {
   3.644564093167775*^9, 3.644564103820011*^9}, 3.64567498073238*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "pAA"}], ")"}], " ", "saa"}], "-", 
           RowBox[{"pAA", " ", "sAA"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "pAa", "+", "pAA"}], ")"}], " ", 
            "saa"}], "-", 
           RowBox[{"pAA", " ", "sAA"}]}], ")"}], "2"]]}], 
      FractionBox[
       RowBox[{"pAa", " ", 
        RowBox[{"(", 
         RowBox[{"saa", "-", "sAA"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "pAa", "+", "pAA"}], ")"}], " ", 
           "saa"}], "-", 
          RowBox[{"pAA", " ", "sAA"}]}], ")"}], "2"]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"2", " ", "pAA", " ", "saa", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "sAA"}], ")"}]}], "+", "\[Gamma]", "-", 
        RowBox[{"saa", " ", "\[Gamma]"}], "+", 
        RowBox[{"pAA", " ", 
         RowBox[{"(", 
          RowBox[{"saa", "-", "sAA"}], ")"}], " ", "\[Gamma]"}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "pAa", "+", "pAA"}], ")"}], " ", 
            "saa"}], "-", 
           RowBox[{"pAA", " ", "sAA"}]}], ")"}], "2"]}]], 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "pAa"}], ")"}], " ", "saa"}]}], ")"}], 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "sAA"}], ")"}]}], "+", 
        RowBox[{"pAa", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "saa"}], "+", "sAA"}], ")"}], " ", "\[Gamma]"}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "pAa", "+", "pAA"}], ")"}], " ", 
            "saa"}], "-", 
           RowBox[{"pAA", " ", "sAA"}]}], ")"}], "2"]}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.5976148747678833`*^9, {3.597614915331649*^9, 3.5976149361927958`*^9}, 
   3.597619670949697*^9, 3.6325257142683992`*^9, 3.6445608507971087`*^9, 
   3.64456113939388*^9, 3.644564105111969*^9, 3.6456741990394163`*^9, 
   3.645674982708724*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "fixedPoints", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"MatrixForm", "[", 
       RowBox[{"FullSimplify", "[", 
        RowBox[{
         RowBox[{"Jacob", "[", 
          RowBox[{
          "fixedPoints", "\[LeftDoubleBracket]", "i", 
           "\[RightDoubleBracket]"}], "]"}], ",", 
         RowBox[{"Assumptions", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Gamma]", ">", "0"}], "&&", 
            RowBox[{"\[Gamma]", "<", "1"}], "&&", 
            RowBox[{"sAA", ">", "0"}], "&&", 
            RowBox[{"sAA", "<", "1"}], "&&", 
            RowBox[{"saa", ">", "0"}], "&&", 
            RowBox[{"saa", "<", "1"}]}], "}"}]}]}], "]"}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        RowBox[{"Eigenvalues", "[", 
         RowBox[{"Jacob", "[", 
          RowBox[{
          "fixedPoints", "\[LeftDoubleBracket]", "i", 
           "\[RightDoubleBracket]"}], "]"}], "]"}], ",", 
        RowBox[{"Assumptions", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Gamma]", ">", "0"}], "&&", 
           RowBox[{"\[Gamma]", "<", "1"}], "&&", 
           RowBox[{"sAA", ">", "0"}], "&&", 
           RowBox[{"sAA", "<", "1"}], "&&", 
           RowBox[{"saa", ">", "0"}], "&&", 
           RowBox[{"saa", "<", "1"}]}], "}"}]}]}], "]"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.597614950220978*^9, 3.597615079930204*^9}, {
  3.64567433909962*^9, 3.645674424055982*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Gamma]"}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", "saa"}]], "0"},
     {
      FractionBox["\[Gamma]", 
       RowBox[{"2", "-", 
        RowBox[{"2", " ", "saa"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "sAA"}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", "saa"}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.597615000705209*^9, 3.597615035626989*^9, 
  3.5976150811568203`*^9, 3.597619677329155*^9, 3.6325257204449673`*^9, 
  3.6445608577802267`*^9, 3.644561144491252*^9, 3.644564107992455*^9, 
  3.645674203952924*^9, 3.64567443059267*^9, 3.6456749884521923`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "sAA"}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "saa"}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Gamma]"}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "saa"}]]}], "}"}]], "Print",
 CellChangeTimes->{3.597615000705209*^9, 3.597615035626989*^9, 
  3.5976150811568203`*^9, 3.597619677329155*^9, 3.6325257204449673`*^9, 
  3.6445608577802267`*^9, 3.644561144491252*^9, 3.644564107992455*^9, 
  3.645674203952924*^9, 3.64567443059267*^9, 3.6456749884569683`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Gamma]"}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", "sAA"}]], "0"},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "saa"}], "+", "\[Gamma]"}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "sAA"}], ")"}]}]]}], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "saa"}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", "sAA"}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.597615000705209*^9, 3.597615035626989*^9, 
  3.5976150811568203`*^9, 3.597619677329155*^9, 3.6325257204449673`*^9, 
  3.6445608577802267`*^9, 3.644561144491252*^9, 3.644564107992455*^9, 
  3.645674203952924*^9, 3.64567443059267*^9, 3.6456749885031633`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "saa"}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "sAA"}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Gamma]"}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "sAA"}]]}], "}"}]], "Print",
 CellChangeTimes->{3.597615000705209*^9, 3.597615035626989*^9, 
  3.5976150811568203`*^9, 3.597619677329155*^9, 3.6325257204449673`*^9, 
  3.6445608577802267`*^9, 3.644561144491252*^9, 3.644564107992455*^9, 
  3.645674203952924*^9, 3.64567443059267*^9, 3.645674988506196*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        RowBox[{"sAA", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]"}], 
        "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["saa", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "sAA"}], "+", "\[Gamma]"}], ")"}]}], "+", 
        RowBox[{"saa", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "sAA"}], "-", 
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "\[Gamma]"}], ")"}]}]}], ")"}]}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "saa", " ", "sAA"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"saa", "+", "sAA"}], ")"}], " ", "\[Gamma]"}]}], ")"}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"saa", "-", "sAA"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"saa", "-", "\[Gamma]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"sAA", "-", "\[Gamma]"}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "saa", " ", "sAA"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"saa", "+", "sAA"}], ")"}], " ", "\[Gamma]"}]}], 
          ")"}]}]]}]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"saa", "-", "sAA"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "saa"}], "-", "\[Gamma]"}], ")"}], " ", 
         "\[Gamma]"}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "saa", " ", "sAA"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"saa", "+", "sAA"}], ")"}], " ", "\[Gamma]"}]}], 
          ")"}]}]]}], 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["saa", "2"]}], " ", "\[Gamma]"}], "+", 
        RowBox[{"sAA", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "sAA", "-", "\[Gamma]"}], ")"}], " ", 
         "\[Gamma]"}], "+", 
        RowBox[{"saa", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            SuperscriptBox["sAA", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]"}],
            "+", 
           RowBox[{"2", " ", "sAA", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "\[Gamma]"}], ")"}]}]}], ")"}]}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "saa", " ", "sAA"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"saa", "+", "sAA"}], ")"}], " ", "\[Gamma]"}]}], 
         ")"}]}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.597615000705209*^9, 3.597615035626989*^9, 
  3.5976150811568203`*^9, 3.597619677329155*^9, 3.6325257204449673`*^9, 
  3.6445608577802267`*^9, 3.644561144491252*^9, 3.644564107992455*^9, 
  3.645674203952924*^9, 3.64567443059267*^9, 3.645674988721875*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "saa"}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Gamma]"}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "sAA"}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Gamma]"}]]}], "}"}]], "Print",
 CellChangeTimes->{3.597615000705209*^9, 3.597615035626989*^9, 
  3.5976150811568203`*^9, 3.597619677329155*^9, 3.6325257204449673`*^9, 
  3.6445608577802267`*^9, 3.644561144491252*^9, 3.644564107992455*^9, 
  3.645674203952924*^9, 3.64567443059267*^9, 3.645674988908741*^9}]
}, Open  ]]
}, Open  ]],

Cell["\<\
This stability analysis shows that:
  1) fixation of the aa genotype is unstable if sAA<saa or saa>\[Gamma]A,
  2) fixation of the AA genotype is unstable if saa>sAA or sAA>\[Gamma]A,
  3) genotype Aa is stably maintained in the population if \[Gamma]A<saa and \
\[Gamma]A<sAA\
\>", "Text",
 CellChangeTimes->{{3.597623729658022*^9, 3.597623872364965*^9}, {
  3.597623912268045*^9, 3.597623968225684*^9}, {3.5976240019578333`*^9, 
  3.5976240476038313`*^9}, {3.6325258158160763`*^9, 3.632525826086317*^9}, {
  3.632525865974955*^9, 3.632525907551174*^9}, {3.6325259536546288`*^9, 
  3.632525973815102*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Segregation load", "Subsubsection",
 CellChangeTimes->{{3.605753928949026*^9, 3.605753948333571*^9}, 
   3.605754127363327*^9, 3.685630039000009*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SegregationLoad", "[", 
    RowBox[{"\[Gamma]_", ",", "saa_", ",", "sAA_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"pAahat", "[", 
        RowBox[{"\[Gamma]", ",", " ", "saa", ",", "sAA"}], "]"}], "-", 
       RowBox[{"pAAhat", "[", 
        RowBox[{"\[Gamma]", ",", " ", "saa", ",", "sAA"}], "]"}]}], ")"}], 
     "saa"}], "+", 
    RowBox[{
     RowBox[{"pAAhat", "[", 
      RowBox[{"\[Gamma]", ",", " ", "saa", ",", "sAA"}], "]"}], "sAA"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SegregationLoadSexual", "[", 
    RowBox[{"\[Gamma]_", ",", "saa_", ",", "sAA_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"pAahatSexual", "[", 
        RowBox[{"\[Gamma]", ",", " ", "saa", ",", "sAA"}], "]"}], "-", 
       RowBox[{"pAAhatSexual", "[", 
        RowBox[{"\[Gamma]", ",", " ", "saa", ",", "sAA"}], "]"}]}], ")"}], 
     "saa"}], "+", 
    RowBox[{
     RowBox[{"pAAhatSexual", "[", 
      RowBox[{"\[Gamma]", ",", " ", "saa", ",", "sAA"}], "]"}], "sAA"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.643681591484107*^9, 3.643681598066771*^9}, {
  3.6436824510469427`*^9, 3.643682451549952*^9}, {3.644564131537099*^9, 
  3.64456417203946*^9}, {3.644564228448748*^9, 3.6445642331909027`*^9}, {
  3.6445643198152647`*^9, 3.644564345601819*^9}, {3.645675373355545*^9, 
  3.645675389747424*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{"SegregationLoadSexual", "[", 
    RowBox[{"\[Gamma]", ",", "saa", ",", "sAA"}], "]"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"formula", " ", "in", " ", "Crow"}], " ", "&"}], " ", "Kimura", 
     " ", "textbook", " ", "p", ".304"}], ":", " ", 
    FractionBox[
     RowBox[{"saa", " ", "sAA"}], 
     RowBox[{"saa", "+", "sAA"}]]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.644564237418201*^9, 3.644564246867812*^9}, {
   3.644564291547574*^9, 3.644564296468191*^9}, {3.644564341713328*^9, 
   3.644564342040057*^9}, 3.645675478591385*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"saa", " ", "sAA"}], 
  RowBox[{"saa", "+", "sAA"}]]], "Output",
 CellChangeTimes->{{3.644564297689414*^9, 3.6445643240741043`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"SegregationLoad", "[", 
   RowBox[{"\[Gamma]", ",", "saa", ",", "sAA"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.643681383330531*^9, 3.64368139457339*^9}, 
   3.645675482816197*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{"saa", "-", 
         RowBox[{"2", " ", "\<\"NA\"\>", " ", "saa"}], "+", 
         RowBox[{"\<\"NA\"\>", " ", "sAA"}]}], 
        RowBox[{
         RowBox[{"saa", "\[LessEqual]", "\[Gamma]"}], "||", 
         RowBox[{"sAA", "\[LessEqual]", "\[Gamma]"}]}]},
       {"\[Gamma]", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6436813959908123`*^9, 3.6436816042365007`*^9, 
  3.643682455168466*^9, 3.644561251587453*^9, 3.644564352667576*^9, 
  3.645675483981121*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"segregationLoadPlot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SegregationLoad", "[", 
        RowBox[{"\[Gamma]A", ",", "0.9", ",", "0.9"}], "]"}], ",", 
       RowBox[{"SegregationLoadSexual", "[", 
        RowBox[{"\[Gamma]A", ",", "0.9", ",", "0.9"}], "]"}], ",", 
       RowBox[{"SegregationLoad", "[", 
        RowBox[{"\[Gamma]A", ",", "0.5", ",", "0.5"}], "]"}], ",", 
       RowBox[{"SegregationLoadSexual", "[", 
        RowBox[{"\[Gamma]A", ",", "0.5", ",", "0.5"}], "]"}], ",", 
       RowBox[{"SegregationLoad", "[", 
        RowBox[{"\[Gamma]A", ",", "0.2", ",", "1"}], "]"}], ",", 
       RowBox[{"SegregationLoadSexual", "[", 
        RowBox[{"\[Gamma]A", ",", "0.2", ",", "1"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]A", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directive", "[", 
         RowBox[{"Thick", ",", "Black"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thin", ",", "Black"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thick", ",", "Black", ",", "Dashed"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thin", ",", "Black", ",", "Dashed"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thick", ",", "Black", ",", "Dotted"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thin", ",", "Black", ",", "Dotted"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\[Gamma]\>\"", ",", "20"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Genetic load \!\(\*
StyleBox[\"L\",
FontSlant->\"Italic\"]\)\>\"", ",", "20"}], "]"}]}], "}"}]}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.605825911772387*^9, 3.6058259666767683`*^9}, 
   3.6058264334553423`*^9, {3.6436814230590763`*^9, 3.6436814731331053`*^9}, {
   3.64368185431229*^9, 3.643681885367035*^9}, {3.643681927794557*^9, 
   3.6436819394323683`*^9}, 3.643682483204425*^9, {3.6436826187094603`*^9, 
   3.643682627528171*^9}, {3.643686365966393*^9, 3.643686409737266*^9}, {
   3.6436864665637007`*^9, 3.643686473074574*^9}, {3.6436865826726418`*^9, 
   3.643686598256341*^9}, {3.643686663339484*^9, 3.6436867655190287`*^9}, {
   3.643686908159*^9, 3.6436869984501133`*^9}, {3.643687068358121*^9, 
   3.6436870730142307`*^9}, {3.6436872370930862`*^9, 3.643687287215423*^9}, {
   3.6436874932571898`*^9, 3.643687496319333*^9}, {3.643687866880506*^9, 
   3.643687895898963*^9}, {3.644564369992202*^9, 3.644564405852838*^9}, {
   3.644565138352404*^9, 3.6445651387491083`*^9}, {3.6456753332984247`*^9, 
   3.645675364985021*^9}, {3.645675437890295*^9, 3.645675442297233*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1:eJxF0H8s1HEcx/Hzo7rG6CL6KuzkR6FlqEbqXdPmV2X5sWJS3fzqrDpmkSad
oR9SLZKhuSQycdOdWvkZt35wOaLo1+G6dOeuovIrLTHvfT9/vPZ4/f1kc04G
ResyGIw981vQP1rV06oO3TF/uxfU97bgDVLuEOO5qFtpYYmI2g3udxcNeNX/
4BYVAlLZogeippquU1FgEb3op03nvXOpJGhFBasCsy9RmfAH5TNFDhepfOCi
B8NuC8fGy4GDGszxI3yshGCF2u3/rmrPEYMrmtzlAYW/H0MGai5myXV0WoCN
PlR4S2VebfAIbePeWhOmlUA7OmG/3bjm+HP4herOVK9YY9cBTHTL3JGHwbVS
cEOlme5dzxxl0IFaX9PMVH3vhrWoZmpQ/sblNYyi5aMNHUZXemmNLCt/KJV9
YIhePlYfI7B9Czno5M5qZVx6P0yjSa4SsVn7AJxCB2slOT3s97Sz3L7iDakf
4C/qtGvZv5iGj7Q+ZezYOnM5+KLJlodthiMGaZ21oQb9e4dgI2piPMaU/BkC
U1S/pVi4rmQY9NB494Z3ywMUwEWr/TiC5knihMZixUjBZ9r6YB+9/N1K2nTf
rFLxiBLOoexP/gN3sr6ADeq5NTOfch2hjbCSzej0Eic6chU8/lfaQv3IpCBb
Fa2JvL5MV6ICU3RJGj/EI0FNy6iKFCpWjtImFglzV7YRm5wuMFknNNCIsvwT
nTOMtLSCp8YGniyii0eNetyEuG+9quIoRby0NJK9y5ao3+5nxvAkTm5jM85G
E7NEzfLNcVrIRk2dIpq+cYluFjdTD/GIvGnDCa8zRLV4Wj17TQujaIpzwQtR
HpFZ7lYZX0C0zzsR9aGYyElQyp9UEMdV/KbEKi38RM8dsS5xvE8sDQwPK6qb
74F+3Njde7qRWKphpem1EDlVwfa5T4n2sTdkZhItOKBq2/4UwTMtqND7itU2
ji+JPEF4p6iTeNX63r1HUuJ/giVjDA==
     "]]}, 
   {GrayLevel[0], Thickness[Tiny], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6F2Z8+AwB37BaL+bV2SLfYwfiPHZvVO
ySlwfkTkwvUfPi6B87n/N8a4y62H81UD37043L0Fzi8/Z2k/48tOOF98i+A9
Rsb9cP62R85nztscgvMPZc2VjnxzBM7/qmbLvzb3OJzP9HO1gLTqKTjf7H/C
tuB1Z+D8My0m545pnYfz5Se8/rny3QU4//X3+/euGlyC85e82n2Kr+8ynM8n
u/z9kydX4PyezK1pC1SuwfnfHFY/yai/DueXGB3ZInb4Bpx/f92R7ouKt+D8
31lXZmtW3YbztR3Z/6XtvgPnuy9STN8ofg8RXrLxSg9j7sP5Om9Cua/7PoDz
hfk/cBz5heCz7J+9XnnOQzg/22T3TU7vR3D+as+kBfu+IfhfX0sJPJv2GM7f
GuzOPMXlCZxf79E6f8szBF/xrteNxa1P4Xwr85YpkkbP4PwYufM/GS8j+F9P
9T4qaHwO589giSsJUnmBcP+9rYuYjiD4rLWNIZaFL+F8hpVx6x8JvYLzi2at
7xU6hODv1e7gEMx7DecLehXpNPG9gfPv6F64XLkHwd8wz17lSdxbOD92vZmg
7D8Ev6F1YeOdVe/g/LUvZGfz+byH85VaRDzYlyH40+W5v/7/j+ADACE2Blo=

     "]]}, 
   {GrayLevel[0], Thickness[Large], Dashing[{Small, Small}], 
    LineBox[CompressedData["
1:eJxFxl1MkmEYgGEwN93cMFZKX/4kLcl+VpSsVlkvDRozXUWFZnNSBIRuLufY
NE+MRTWR1JltrLDU3FozZCpR6UqGTDcDTMMoM1jIAaZpNIsZGun89j4H966b
Kbl2VhZFoVCOrLTqSVlg1DItOrayY6tG8zaXeQkOovDXzHys0/cQfERpWzPH
4e5uJs4jCmm+NPSmkZCiG6Rf997h3SWUyELaknD6toZQY1WxPdtriCbUQHqh
oNX4M9iOjYuoCgWpRhRLmi6cCwzUmlAGaYXzENItvEaVpAwT3UOl9qNNpGYf
zz6SZcVaS5qTCmZt2N+so/GG0iG0QBq12LE+KX0YeyByyXyu0461qznOwZ0j
2C0NM4vP5t6jNNKZkNczzh5Ds6Tt3/uGaXUfsLSUp/N+vwurLX4hb9n2EfuH
2+FXVLuxyv02U+LAJ6y301Y7ypzAhktcD3dUfcHuOh7zT943iRW0Ma92MTxY
jo7GGkwG0+rC/gkm+Pf6uCR6N2gQ1hTlc8EN1KBoWQF6xRZ+di9oFxnWFfWD
r3IeWMttYONBJVfvBE/EZ2TN+8COt/WZ9+O82IoU8dZvhaDkDDtv8jJ46iZV
45aDrOknQUcZ6DIFLL1qkJ1bLm56DiZX8+7Vd4Ex3RuHNGbQw3i5R2UBtVPh
5VIXWJno2Ff8GbyS/Ugm9YCHjVzHxQDI8tGpeT9AesIUR/gLXBKYFLkhMFB1
Sy9YArWp77i2CPgfTyrf9g==
     "]]}, 
   {GrayLevel[0], Thickness[Tiny], Dashing[{Small, Small}], 
    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6F2DGBwwX6BqH9bl2SLPYzfyLFZvVNy
CpwfEblw/YePS+B87v+NMe5y6+F81cB3Lw53b4Hzy89Z2s/4shPOF98ieI+R
cT+cv+2R85nzNofg/ENZc6Uj3xyB87+q2fKvzT0O5zP9XC0grXoKzjf7n7At
eN0ZOP9Mi8m5Y1rn4Xz5Ca9/rnx3Ac5//f3+vasGl+D8Ja92n+Lruwzn88ku
f//kyRU4vydza9oClWtw/jeH1U8y6q/D+SVGR7aIHb4B599fd6T7ouItOP93
1pXZmlW34XxtR/Z/abvvwPnuixTTN4rfQ4SXbLzSw5j7cL7Om1Du674P4Hxh
/g8cR34h+Cz7Z69XnvMQzs822X2T0/sRnL/aM2nBvm8I/tfXUgLPpj2G87cG
uzNPcXkC59d7tM7f8gzBV7zrdWNx61M438q8ZYqk0TM4P0bu/E/Gywj+11O9
jwoan8P5M1jiSoJUXiDcf2/rIqYjCD5rbWOIZeFLOJ9hZdz6R0Kv4PyiWet7
hQ4h+Hu1OzgE817D+YJeRTpNfG/g/Du6Fy5X7kHwN8yzV3kS9xbOj11vJij7
D8FvaF3YeGfVOzh/7QvZ2Xw+7+F8pRYRD/ZlCP50ee6v//8j+AA3HAsH
     "]]}, 
   {GrayLevel[0], Thickness[Large], Dashing[{0, Small}], 
    LineBox[CompressedData["
1:eJxFxV1IU2EYAOCzihiJ2URrJ7WscAUxJAzFtL3qTm60C3NsuVUIrk2Gw4wS
nRei5lxmC6OiNmlqOOyqFk6jkkptnh9orkAwKrO8aUKYwfzBgvX3su/i4dlj
qtNaNlAUlfPH349bIm/HFvSKkrXlf29S7jw/Rx8GBs/pc98N0AxM9/5fE5oZ
8tI6KMArzKvPb9BmSMdnsy8rr9H1wOL9qWXOLtoBbrxNHNh/hb4FDtxgvOdf
+uGLnxBrO6Pa5YeteFb5YuTV1WGQ4Y1T+eCOPgU7vmNY8kkkeglS/PG88nW4
cCL+RI03zfgtCON4YMFmq1wJwhDusx4ZPUtNwgDeUT1z6lwKWW2S9LQXToIK
Dxs7pA9d5I/q2tSNchZm8RBXYBHnkV+UbhlJLCb3Mfd1Uj0L/bip6MtNeTM5
kqdPNoRY+Iovy44mPajlYAVXzJdwXXay06tusbaTt6fovu/zkHNFtnBPkGz/
4O7uTOOhCR+73auqlvEwjou1vpjyENnD++tipeRnI2xZwwXyr+5oklkgM5p1
rniah2O4azPVunuOnNGcsPQ+ykM6rqjZ+6Y8U4jvzDrQmX2QPPVZXpSYS66s
yH/Ea8iDyWAdPEleDDGZjipyC3PiOjQK0IrzMb0645IAHL5t9DT10yWABDc0
VD15d4d8UWtab/IIUI//Bjp7f78=
     "]]}, 
   {GrayLevel[0], Thickness[Tiny], Dashing[{0, Small}], 
    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6F2YaEgcNR+gah/W5dkiz2M38ixWb1T
cgqcHxG5cP2Hj0vgfO7/jTHucuvhfNXAdy8Od2+B88vPWdrP+LITzhffIniP
kXE/nL/tkfOZ8zaH4PxDWXOlI98cgfO/qtnyr809Ducz/VwtIK16Cs43+5+w
LXjdGTj/TIvJuWNa5+F8+Qmvf658dwHOf/39/r2rBpfg/CWvdp/i67sM5/PJ
Ln//5MkVOL8nc2vaApVrcP43h9VPMuqvw/klRke2iB2+AeffX3ek+6LiLTj/
d9aV2ZpVt+F8bUf2f2m778D57osU0zeK30OEl2y80sOY+3C+zptQ7uu+D+B8
Yf4PHEd+Ifgs+2evV57zEM7PNtl9k9P7EZy/2jNpwb5vCP7X11ICz6Y9hvO3
BrszT3F5AufXe7TO3/IMwVe863VjcetTON/KvGWKpNEzOD9G7vxPxssI/tdT
vY8KGp/D+TNY4kqCVF4g3H9v6yKmIwg+a21jiGXhSzifYWXc+kdCr+D8olnr
e4UOIfh7tTs4BPNew/mCXkU6TXxv4Pw7uhcuV+5B8DfMs1d5EvcWzo9dbyYo
+w/Bb2hd2Hhn1Ts4f+0L2dl8Pu/hfKUWEQ/2ZQj+dHnur///I/gAVSRwlw==

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  Frame->True,
  FrameLabel->{
    FormBox[
     StyleBox["\"\[Gamma]\"", 20, StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox[
     "\"Genetic load \
\\!\\(\\*\\nStyleBox[\\\"L\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", 20, 
      StripOnInput -> False], TraditionalForm]},
  FrameStyle->Directive[16, 
    GrayLevel[0]],
  ImageSize->400,
  Method->{},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.605825968004962*^9, 3.605826176317626*^9, 3.605826277540337*^9, 
   3.605826434603403*^9, 3.643681477493032*^9, 3.64368160600428*^9, {
   3.6436818604608803`*^9, 3.6436818862033787`*^9}, 3.643681940271983*^9, {
   3.643682475472686*^9, 3.643682484730165*^9}, 3.643682579376666*^9, 
   3.6436826286305227`*^9, 3.6436864119035263`*^9, {3.643686467783968*^9, 
   3.643686475305965*^9}, 3.643686599171379*^9, 3.6436866698051558`*^9, {
   3.643686715744711*^9, 3.643686766371974*^9}, 3.643686912822633*^9, {
   3.6436869445310287`*^9, 3.643686965571067*^9}, 3.6436870016348124`*^9, 
   3.6436870741034803`*^9, {3.643687252015786*^9, 3.6436872881240683`*^9}, {
   3.64368786817372*^9, 3.6436878968132687`*^9}, 3.64368794807591*^9, 
   3.644561267253902*^9, {3.644564378739979*^9, 3.6445644068976517`*^9}, 
   3.644565139687223*^9, 3.645675414429344*^9, 3.645675444974684*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "overdominancePlot", "]"}]], "Input",
 CellChangeTimes->{{3.643686059016858*^9, 3.643686076788694*^9}, {
  3.643687992133513*^9, 3.643688053503735*^9}, {3.6445651142260933`*^9, 
  3.6445651262685547`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1:eJwVknk0FHgAx13tssqRVMMrxjEqxHNUJN9Erxxtu4bcaiciLYatZZNQ6Jhs
2iwWLYtHrmxGUshiNjkypKIwNA3m+DEUQq9s+8fnfd77/P2hMiLdg+VkZGTc
vvC/XYKFff+IPO2Zsf3vV1akUHDUYo5SrADrQlfrT1JY5mfnsSlOUH7HLApb
lsL16UDNLYoHyk6p0F/MSeEV9KHpN0oQxgOda8pFUoyYXXJMo5xGwP5mpme/
FAWah1OvUpLhvLZiqrxEiiRFttEVSgaMKi9Meh6Swtvnr+qZ2WJ0+cT+Wcya
hvJKkv+BzdUI1rR36ng5BcPvp4VtrFq8kyvROWs4hZgeG2TPPUBEmMcj/WCC
DbXqPFnZZoyOPnMtuitBHd+xm2vXCnCz8rSlYrSG3dL2IRzcmPmsp2suxjxt
j2pVeDte6ezIXo4XQW6pQk3bsBOrO9i9TxuF2LFyrI5+pxs2ibKLPysK0Z1s
1fN4GxdHTs56VHpNQiddslQ23QtGt9GZ11kTkHwY5b0wfwbGnu3JPME4isUN
nSq/9uO7LXFHhvTGobKpVCoQPIfF/rDAoCABrp28d6LA4CUUmVs922reYmFv
hSA0YQDd68xUtd/xcdqCU7u+bRCp7Qr1B+35GL3DYfVRX8NsTtcgMu4NPoY9
z916dggd7qP/UhvHYOzw9ecTDcPwbQ4/Uq40hgOF1JC7G3j42zXFwyudh5hN
R/Xe+I8iy4r7apXRCEyIp/LAoTEEJwV0dnOGoKE6o8hZHoNKa6xDitNrKDTn
VuvnvUHRZqtM0cggTlk1vFJy5UMj8lwUfAZQ4cwoeLTAR4i+Un3V0AvMS7TU
JjLfouS99XB7zHPcox+Qz3ASoO2+NLV//hkSDqbk104I0JHlrMpK6wN1xGWw
KGUcdUOTcn4mvbDdmZxBsZjAZxpteZfvU/hv5i7J9k8gtKexTON6J+Y70/jM
pEmkBoSf6LvUjmyFwNPuBkLEGATyJtgcaPDuFcpxhLBlD5iYTrdgVXySh02U
CEH0l2pVg02QKQus5q8V41N1vH317npE51SnrW0VY/Wwd2oMrQZNxpcV1SMk
8DZjLezzuw11l2iTCyoEw8pdOZLwHBS0qCrbqhPc0Da8uX9NDsxtqkSzGgRG
xgms/Mo/8O0WYckPFIIMF8tzdEk2rn4VSHUwIHC4khvQEJoFhTbn9TK25Ev/
UZd1PAMLu6ky5798WyWn5eZZcw0p7Ec861CCjXo9dkqzLKwz9m+aCiNIdbhg
2mTGgqVW1tkAJsGmRLGKYdUVMBdXz9vFEdh9etg3V5oKUe2i6GM6gdKin1fG
rUTEmmQ+Yd8kkGzXTU+vT4BisWXpqUwCx/DLUYvW50G7GRE0lEswI/a2emIe
B0aUgPewhMBtYulBCO0MZoVJTdFlBCkGjFxu0U9IPKaTt62SwO9457md1Gjk
H/b1yblLoNlinaCyKwLDpr39vzQS9NXFXD2kz0C+RD1evplAZlBNXVwYCEYZ
nZbWQnB0n8UamxVv0EJ+567nELSV05Uu+9EhMhiILXhMsMNM/M2dSFdU8jfq
besgeC9vKu+2ZS+YBb5d7C6CBffmqdKL+riuc/v2/W6CUr9+zfPxk/b/AUV2
We0=
     "]]}, 
   {GrayLevel[0], Thickness[Tiny], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6F2DGDwwH6BqH9bl2SLPYzfyLFZvVNy
CpwfEblw/YePS+B87v+NMe5y6+F81cB3Lw53b4Hzy89Z2s/4shPOF98ieI+R
cT+cv+2R85nzNofg/ENZc6Uj3xyB87+q2fKvzT0O5zP9XC0grXoKzjf7n7At
eN0ZOP9Mi8m5Y1rn4Xz5Ca9/rnx3Ac5//f3+vasGl+D8Ja92n+Lruwzn88ku
f//kyRU4vydza9oClWtw/jeH1U8y6q/D+SVGR7aIHb4B599fd6T7ouItOP93
1pXZmlW34XxtR/Z/abvvwPnuixTTN4rfQ4SXbLzSw5j7cL7Om1Du674P4Hxh
/g8cR34h+Cz7Z69XnvMQzs822X2T0/sRnL/aM2nBvm8I/tfXUgLPpj2G87cG
uzNPcXkC59d7tM7f8gzBV7zrdWNx61M438q8ZYqk0TM4P0bu/E/Gywj+11O9
jwoan8P5M1jiSoJUXiDcf2/rIqYjCD5rbWOIZeFLOJ9hZdz6R0Kv4PyiWet7
hQ4h+Hu1OzgE817D+YJeRTpNfG/g/Du6Fy5X7kHwN8yzV3kS9xbOj11vJij7
D8FvaF3YeGfVOzh/7QvZ2Xw+7+F8pRYRD/ZlCP50ee6v//8j+ABr5w5H
     "]]}, 
   {GrayLevel[0], Thickness[Large], Dashing[{Small, Small}], 
    LineBox[CompressedData["
1:eJwVy30wlAkABnCrbjKnWcyJ2UMo9nBG62MYSs86box0ai/qnEo2X20ZO07D
dTf5aE8ICXXO+eowxwnJnkNXu7G4Y9fnomy9b9bHLOLNSQ5p770/nnnmN888
1vz4L6N0dXR0DtL5v49EaYal8yGHnWCyoNVS2On7sZBkuSF+Y3/mxiYF14ri
0haWH5panNmraxQCFRMPyljBcLX7gj+3SOFU5PqjAlYkPIxEk/IJCi8OXPfN
ZSXCZ3ql76cmCpV7jmVks0Q4cV1R7xpOIU2v5ZMsVhGSBkVxMY+X8VXo3abX
K9UYU+ovPIlYgr427bT/3iZYSuONPcxfwZa3rOm6IUbrRdkHBi8WkDTgieI3
7eDnOL9+lj4PU7ERwWBIsFnwXaYEGrSqfeWDhzpRwyRYxVNz6BSUmYW+kqHi
iHPCaNYs1tjeBg1xvci4FJFsHzAD3Y16QzPbPqTs+C0pYUkNd+251hONckSl
DtqM105BLnIb6HEYRMmj2eJSwUtY5i9u1C0P4Qlpt/vePgKL6yQxxhmBvSH3
s+ByFaoXHvYx80bR5pApUE8/BdPiV2pmRonp7mYrd/dx5Fz4PbrSZhwax9su
ktZRvOXWz8SmTMD4ap27E2MYiS4ysUnXU3DcKceaVTnIRtmNYetJiPyWhtqT
e7ElUP5sf0UF4+DG/FDTTnzqs+t99MPnqH3bbfCXTQf8f7GOaTYlkK+azZ0X
NcKtmMnuMScg+d6kosy1EVZ5WzOT1gS0Fv73eeoGbH47xt/pSCD8XO1IOxrQ
wMs6e4pLgDMrMM3erMdHjJWQ7VgCQ8tUpYOwDmS41C+gg4Ch7mbLxbBqyEMa
dpyVEOBWOXRbfliNtsCSzgQZgVS/sPHRtioUeCRySwcIvMz489+DJlX43MDu
EKUmcF8/xXv38F3UP77pelufRKWDXl5objmSLML3TZ0mYcUzF6vOF4F/nHPy
eQQJ6eqa52VZIYKuMbInoklw7wxKmLaFYM9XrSiEtFXp/T5zt6AUa6QdIhI6
/SPdx4bzwDmaEF50j/abS/s1kyKYp/gW3mym7Wl1wKz0GnY9MO7NbqX/V0e9
gs6kgzD9wylNSu9GidWxkhTkTG9txylpezF1GX9fRrKJwvnCM9qyRFZM4Dc4
H1AeFUmQSA1ScRQKIbyauIqvNfTec1ziUhMDttqIcXKJ9qTF8vs6Poz2TLvx
/qFNjHneOROGd/7i2KPrtPWEPzrF8KC58kOp/zvaUjulWZc3cvb2c2VaElpt
u7CE3D78H+1o2pY=
     "]]}, 
   {GrayLevel[0], Thickness[Tiny], Dashing[{Small, Small}], 
    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6F2DGDwwH6BqH9bl2SLPYzfyLFZvVNy
CpwfEblw/YePS+B87v+NMe5y6+F81cB3Lw53b4Hzy89Z2s/4shPOF98ieI+R
cT+cv+2R85nzNofg/ENZc6Uj3xyB87+q2fKvzT0O5zP9XC0grXoKzjf7n7At
eN0ZOP9Mi8m5Y1rn4Xz5Ca9/rnx3Ac5//f3+vasGl+D8Ja92n+Lruwzn88ku
f//kyRU4vydza9oClWtw/jeH1U8y6q/D+SVGR7aIHb4B599fd6T7ouItOP93
1pXZmlW34XxtR/Z/abvvwPnuixTTN4rfQ4SXbLzSw5j7cL7Om1Du674P4Hxh
/g8cR34h+Cz7Z69XnvMQzs822X2T0/sRnL/aM2nBvm8I/tfXUgLPpj2G87cG
uzNPcXkC59d7tM7f8gzBV7zrdWNx61M438q8ZYqk0TM4P0bu/E/Gywj+11O9
jwoan8P5M1jiSoJUXiDcf2/rIqYjCD5rbWOIZeFLOJ9hZdz6R0Kv4PyiWet7
hQ4h+Hu1OzgE817D+YJeRTpNfG/g/Du6Fy5X7kHwN8yzV3kS9xbOj11vJij7
D8FvaF3YeGfVOzh/7QvZ2Xw+7+F8pRYRD/ZlCP50ee6v//8j+ABr5w5H
     "]]}, 
   {GrayLevel[0], Thickness[Large], Dashing[{0, Small}], 
    LineBox[CompressedData["
1:eJwVxXsw2wcAB/CoXqu1zqP1SNHSldp6qboqzTy+VK7Syh0yhq3TUUqZcann
nNMUoaoNZq2oV3GadsgW5Wg6cgnJ73cVVNtkpGOybmTrJHaos67Z9sfnPm5J
WeyULRQKhf6f/z+TsvREqo8JGkhwmzeZDNgaujd7nuqD9hoTN3fDgGOtDU19
VAZUuhG+3mhAuEojbqZGg9d4cXF8wYDY5Nc/1FGTsVY7mHpZbsBPXhWh16k5
UNM53wp4BrTZRfCqqGWoKGO/rbY0gGvRd+gqtR6577j9ftR6GXHxd0TGlU6c
uJM25PrsD1iauGfD9ongoBM2nb6ph3vU8pL82gPUS1xKvjm+iPwJOhpWh+Cx
Wxzh/flLODywmTMzG8Ghqxrl0BcLGNCFjk8GyJBRkD3vUquFmslduR4mw22R
oC+Mo8V677A9iy3Db+Icv4SPtPAroicSqTJsTWxbjLTTYnC317q0ToZiaabN
mYZZDDH2uoqXZCgiC2g5jTN41GW8VF8vh88xcbruhgay9Gan+FejmPF1KArz
foo+fUZGwvoozu0oa/O0eorOtA8l5ylj6LgYbFh5NY3yC5pPvtwzhuDXL0oD
hNNgJtk0lgaMoWVb2WyPyzQm48sde6vH8C5/4C+d+RO8YGbamdMUYG2mv08r
VEGl9E+x8FOg4U1fatYRFYZP7ezfFaLA8w31vYJfxtHKuBvtGKNArnfv0hxr
HEnBC1/TihVwNzqvGZ0fY8kvxjZOpYB5TZLv3PcE1jwCrXoylRA/enkgoluO
IN1JZVWBEiMyH66SLQevmVmSVqpEqPV59fKGDPZ7og3vCZTgO5/wZzJk8DXL
mGwcVeK0p9sVe40UBdoGfqUTgfiqSOLkjATSmy1hFzwIVGo5PtecJLBgd5pC
vQmQEx1W+z97CAEhyjKdIuA/NWt7cG4QD/sVEXkcApwmn44STT/e8FetkkkC
k/eDDPdZIjDCN5UhzwgMRwXNZw/1oHob5fL+eQJnu5vU7Qe74VJsaZxdJfCY
dyQQ60IEpR+YinIlIT8n3LKd1w6eu2el12ESkc2H82d/bcPEz7TgXb4kAt/m
rZhXtiAhlv4dEU6i9c+jNO76LXTZIq3rYxLPQ3aK24X1WFYxXMsSSZSEOOrZ
sbUoYUTWIJ/E1PF/7lVFl4MwxTBdrpAY3ZcdqacXw1ryKeXvahIfqL8ady7M
Qlxe4uCPt0gwiuq2sypCcImdtFkoIBFlf9siWW6OfwGZW7+I
     "]]}, 
   {GrayLevel[0], Thickness[Tiny], Dashing[{0, Small}], 
    LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6F2RTLHC2WOX7RfIOrf1iXZYg/jN3Js
Vu+UnALnR0QuXP/h4xI4n/t/Y4y73Ho4XzXw3YvD3Vvg/PJzlvYzvuyE88W3
CN5jZNwP52975HzmvM0hOP9Q1lzpyDdH4Pyvarb8a3OPw/lMP1cLSKuegvPN
/idsC153Bs4/02Jy7pjWeThffsLrnyvfXYDzX3+/f++qwSU4f8mr3af4+i7D
+Xyyy98/eXIFzu/J3Jq2QOUanP/NYfWTjPrrcH6J0ZEtYodvwPn31x3pvqh4
C87/nXVltmbVbThf25H9X9ruO3C++yLF9I3i9xDhJRuv9DDmPpyv8yaU+7rv
AzhfmP8Dx5FfCD7L/tnrlec8hPOzTXbf5PR+BOev9kxasO8bgv/1tZTAs2mP
4fytwe7MU1yewPn1Hq3ztzxD8BXvet1Y3PoUzrcyb5kiafQMzo+RO/+T8TKC
//VU76OCxudw/gyWuJIglRcI99/buojpCILPWtsYYln4Es5nWBm3/pHQKzi/
aNb6XqFDCP5e7Q4OwbzXcL6gV5FOE98bOP+O7oXLlXsQ/A3z7FWexL2F82PX
mwnK/kPwG1oXNt5Z9Q7OX/tCdjafz3s4X6lFxIN9GYI/XZ776///CD4A47WV
jw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  Frame->True,
  FrameLabel->{
    FormBox[
     StyleBox["\"\[Gamma]\"", 20, StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox[
     "\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(p\\), \\(^\\)], \
\\(Aa\\)]\\)\"", 20, StripOnInput -> False], TraditionalForm]},
  FrameStyle->Directive[
    GrayLevel[0], 16],
  ImageSize->400,
  Method->{},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.643688088163158*^9, 3.6445644267664347`*^9, 
  3.64456512721059*^9, 3.644565207247376*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Comparison with sexual populations", "Subsubsection",
 CellChangeTimes->{{3.6824208028472433`*^9, 3.682420836015729*^9}}],

Cell["\<\
Value of \[Gamma] where there are the same frequencies of heterozygotes in \
the sexual and asexual population:\
\>", "Text",
 CellChangeTimes->{{3.68242186147456*^9, 3.682421894249235*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"s", "-", "\[Gamma]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"s", "-", "\[Gamma]"}], ")"}]}], 
      RowBox[{
       RowBox[{"2", " ", "s", " ", "s"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"s", "+", "s"}], ")"}], " ", "\[Gamma]"}]}]], "==", 
     RowBox[{"2", 
      FractionBox[
       RowBox[{"s", " ", "s"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"s", "+", "s"}], ")"}], "2"]]}]}], ",", 
    RowBox[{"{", "\[Gamma]", "}"}]}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"saa", "-", "\[Gamma]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"sAA", "-", "\[Gamma]"}], ")"}]}], 
      RowBox[{
       RowBox[{"2", " ", "saa", " ", "sAA"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"saa", "+", "sAA"}], ")"}], " ", "\[Gamma]"}]}]], "==", 
     RowBox[{"2", 
      FractionBox[
       RowBox[{"saa", " ", "sAA"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"sAA", "+", "saa"}], ")"}], "2"]]}]}], ",", 
    RowBox[{"{", "\[Gamma]", "}"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.682420959475564*^9, 3.6824209615679827`*^9}, {
  3.6824210264621563`*^9, 3.682421035895159*^9}, {3.6824210786834106`*^9, 
  3.682421085365788*^9}, {3.682421227787187*^9, 3.682421249596108*^9}, {
  3.6824214071071987`*^9, 3.682421437921224*^9}, {3.6824214798672857`*^9, 
  3.682421497803741*^9}, {3.682422278800943*^9, 3.6824223071222363`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Gamma]", "\[Rule]", 
    FractionBox["s", "2"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6824210871775627`*^9, {3.682421244130314*^9, 3.682421250796957*^9}, {
   3.682421428000383*^9, 3.682421440033166*^9}, 3.682421500935528*^9, 
   3.682422049247147*^9, 3.682422309069024*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Gamma]", "\[Rule]", 
     FractionBox[
      RowBox[{"saa", " ", "sAA"}], 
      RowBox[{"saa", "+", "sAA"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Gamma]", "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["saa", "2"], "+", 
       SuperscriptBox["sAA", "2"]}], 
      RowBox[{"saa", "+", "sAA"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6824210871775627`*^9, {3.682421244130314*^9, 3.682421250796957*^9}, {
   3.682421428000383*^9, 3.682421440033166*^9}, 3.682421500935528*^9, 
   3.682422049247147*^9, 3.682422309119871*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Gamma]", "\[Rule]", 
      FractionBox[
       RowBox[{"saa", " ", "sAA"}], 
       RowBox[{"saa", "+", "sAA"}]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Gamma]", "\[Rule]", 
      FractionBox[
       RowBox[{
        SuperscriptBox["saa", "2"], "+", 
        SuperscriptBox["sAA", "2"]}], 
       RowBox[{"saa", "+", "sAA"}]]}], "}"}]}], "}"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"saa", "\[Rule]", "0.1"}], ",", 
    RowBox[{"sAA", "\[Rule]", "1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.682422932626355*^9, 3.682422948488755*^9}, 
   3.682423024113759*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Gamma]", "\[Rule]", "0.09090909090909091`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Gamma]", "\[Rule]", "0.9181818181818182`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.682422949860918*^9, 3.6824230254997*^9}]
}, Open  ]],

Cell["\<\
Value of \[Gamma] where there the genetic load is the same in the sexual and \
asexual population:\
\>", "Text",
 CellChangeTimes->{{3.68242186147456*^9, 3.682421894249235*^9}, {
  3.6824220700975037`*^9, 3.682422077175004*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"\[Gamma]", "==", 
     FractionBox[
      RowBox[{"s", " ", "s"}], 
      RowBox[{"s", "+", "s"}]]}], ",", 
    RowBox[{"{", "\[Gamma]", "}"}]}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"\[Gamma]", "==", 
     FractionBox[
      RowBox[{"saa", " ", "sAA"}], 
      RowBox[{"saa", "+", "sAA"}]]}], ",", 
    RowBox[{"{", "\[Gamma]", "}"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.682420959475564*^9, 3.6824209615679827`*^9}, {
  3.6824210264621563`*^9, 3.682421035895159*^9}, {3.6824210786834106`*^9, 
  3.682421085365788*^9}, {3.682421227787187*^9, 3.682421249596108*^9}, {
  3.6824214071071987`*^9, 3.682421437921224*^9}, {3.6824214798672857`*^9, 
  3.682421497803741*^9}, {3.682422361337183*^9, 3.682422401120913*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Gamma]", "\[Rule]", 
    FractionBox["s", "2"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.682422389582555*^9, 3.6824224021243*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Gamma]", "\[Rule]", 
    FractionBox[
     RowBox[{"saa", " ", "sAA"}], 
     RowBox[{"saa", "+", "sAA"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.682422389582555*^9, 3.682422402136091*^9}}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Mutation-selection balance", "Subsection",
 CellChangeTimes->{{3.597374567102643*^9, 3.59737463538491*^9}}],

Cell[CellGroupData[{

Cell["Trying to analytically solve the original recursion equation", \
"Subsubsection",
 CellChangeTimes->{{3.597699384576067*^9, 3.59769940626372*^9}, {
  3.597699529929681*^9, 3.597699532144679*^9}, {3.644609488804009*^9, 
  3.644609516053383*^9}}],

Cell[BoxData[
 RowBox[{"solutionRecessive", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"pAa", ",", "pAA"}], "}"}], "/.", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pAa", ",", "pAA"}], "}"}], "\[Equal]", 
       RowBox[{"Recursion1L", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"pAa", ",", "pAA"}], "}"}], ",", "\[Gamma]A", ",", "muA", 
         ",", "sA", ",", "hA"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"pAa", ",", "pAA"}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
    "3", "\[RightDoubleBracket]"}]}]}]], "Input",
 CellChangeTimes->{{3.597699419945277*^9, 3.5976994218720837`*^9}, 
   3.597715813002029*^9, {3.5977253297119703`*^9, 3.597725364824634*^9}, {
   3.6054721623350058`*^9, 3.605472164969421*^9}, 3.644565502481475*^9, {
   3.644609520062438*^9, 3.644609521342463*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "solutionRecessive", "]"}]], "Input",
 CellChangeTimes->{{3.597725642667507*^9, 3.597725646142107*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.605472631135879*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Gamma]A", "\[Rule]", "0"}], ",", 
    RowBox[{"muA", "\[Rule]", "0.000001"}], ",", 
    RowBox[{"sA", "\[Rule]", 
     RowBox[{"-", "0.01"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.59772433572752*^9, 3.597724383939905*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pAa", "\[Rule]", 
      RowBox[{"3.4136394978812783`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.0269562977782698`*^-15", " ", "\[ImaginaryI]"}]}]}], ",", 
     RowBox[{"pAA", "\[Rule]", 
      RowBox[{"0.000337998206104832`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.4521467641618001`*^-15", " ", "\[ImaginaryI]"}]}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pAa", "\[Rule]", 
      RowBox[{
       RowBox[{"-", "0.00020004020410024914`"}], "+", 
       RowBox[{"4.773959005888173`*^-15", " ", "\[ImaginaryI]"}]}]}], ",", 
     RowBox[{"pAA", "\[Rule]", 
      RowBox[{"1.0002000203000805`", "\[VeryThinSpace]", "-", 
       RowBox[{"9.54696102206583`*^-15", " ", "\[ImaginaryI]"}]}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pAa", "\[Rule]", 
      RowBox[{"0.5857695399468155`", "\[VeryThinSpace]", "-", 
       RowBox[{"5.88418203051333`*^-15", " ", "\[ImaginaryI]"}]}]}], ",", 
     RowBox[{"pAA", "\[Rule]", 
      RowBox[{"0.00005798308281736915`", "\[VeryThinSpace]", "+", 
       RowBox[{"8.319243185469626`*^-15", " ", "\[ImaginaryI]"}]}]}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.597724361372622*^9, 3.597724384590279*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Approximation of recursion equations assuming that mu is small and that there \
is no back mutation\
\>", "Subsubsection",
 CellChangeTimes->{{3.64402286624597*^9, 3.644022895131063*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MutationStep1LApprox", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"paa_", ",", "pAa_", ",", "pAA_"}], "}"}], ",", "muA_"}], "]"}],
    ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"paa", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"2", "muA"}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"paa", " ", "2", " ", "muA"}], "+", 
      RowBox[{"pAa", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "muA"}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"pAa", " ", "muA"}], "+", "pAA"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"AutomixisStep1L", "[", 
    RowBox[{
     RowBox[{"MutationStep1LApprox", "[", 
      RowBox[{
       RowBox[{"SelectionStep1L", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "-", "pAa", "-", "pAA"}], ",", "pAa", ",", "pAA"}], 
          "}"}], ",", "hA", ",", 
         RowBox[{"-", "sA"}]}], "]"}], ",", "muA"}], "]"}], ",", 
     "\[Gamma]A"}], "]"}], "\[LeftDoubleBracket]", 
   RowBox[{"2", ";;", "3"}], "\[RightDoubleBracket]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.644566267696126*^9, 3.6445662981743593`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"pAa", "-", 
       RowBox[{"hA", " ", "pAa", " ", "sA"}], "+", 
       RowBox[{"muA", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "pAA"}], "+", 
          RowBox[{"pAa", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", 
             RowBox[{"hA", " ", "sA"}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Gamma]A"}], ")"}]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"hA", " ", "pAa", " ", "sA"}], "+", 
     RowBox[{"pAA", " ", "sA"}]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"2", " ", "pAA", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "sA"}], ")"}]}], "+", 
     RowBox[{"pAa", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"hA", " ", "sA"}]}], ")"}], " ", "\[Gamma]A"}], "+", 
     RowBox[{"muA", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "pAA"}], ")"}], " ", "\[Gamma]A"}], "+", 
        RowBox[{"pAa", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "-", 
           RowBox[{"hA", " ", "sA", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "\[Gamma]A"}], ")"}]}], "+", 
           RowBox[{"3", " ", "\[Gamma]A"}]}], ")"}]}]}], ")"}]}]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"hA", " ", "pAa", " ", "sA"}], "+", 
       RowBox[{"pAA", " ", "sA"}]}], ")"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.644566276828537*^9, 3.6445662996115513`*^9}, 
   3.644610435618754*^9, 3.644618712087368*^9, 3.6701097246821413`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Recursion1LApprox", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pAa_", ",", "pAA_"}], "}"}], ",", "\[Gamma]_", ",", "mu_", ",",
      "s_", ",", "h_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"h", " ", "s"}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{"1", "-", "mu"}], ")"}], "pAa"}], "+", 
         RowBox[{"2", "mu", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", " ", "pAA", "-", "pAa"}], ")"}]}]}], ")"}], " ", 
       
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Gamma]"}], ")"}]}], 
      RowBox[{"1", "-", 
       RowBox[{"h", " ", "s", " ", "pAa"}], " ", "-", 
       RowBox[{"pAA", " ", "s"}]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "pAA", " ", "-", "pAa"}], " ", ")"}], "mu", " ", 
        "\[Gamma]"}], "+", 
       RowBox[{"pAa", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"h", " ", "s"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Gamma]", "/", "2"}], "+", 
          RowBox[{"mu", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"\[Gamma]", "/", "2"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"pAA", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "s"}], ")"}]}]}], 
      RowBox[{"1", "-", 
       RowBox[{"h", " ", "s", " ", "pAa"}], " ", "-", 
       RowBox[{"pAA", " ", "s"}]}]]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.644022900847012*^9, 3.644023094552506*^9}, {
   3.644023235592803*^9, 3.644023275960465*^9}, {3.644023326576833*^9, 
   3.644023334921775*^9}, {3.644023510693136*^9, 3.644023513482847*^9}, {
   3.6440235529741697`*^9, 3.644023622847746*^9}, {3.6440240858212757`*^9, 
   3.6440241005988607`*^9}, {3.6440241622765503`*^9, 
   3.6440241919565887`*^9}, {3.644566329780134*^9, 3.644566331177375*^9}, {
   3.6445664029454603`*^9, 3.644566497038609*^9}, {3.644566531892021*^9, 
   3.644566562796886*^9}, {3.644566652541294*^9, 3.644566656390107*^9}, {
   3.644566799961976*^9, 3.644566865225775*^9}, {3.644566898448941*^9, 
   3.644566902966552*^9}, {3.64456708938827*^9, 3.6445671329254827`*^9}, {
   3.6445671785263863`*^9, 3.644567179334695*^9}, {3.644567772192814*^9, 
   3.644567773410337*^9}, {3.6445687865943327`*^9, 3.6445687989630833`*^9}, {
   3.644568864260214*^9, 3.6445688654587193`*^9}, {3.644568962205718*^9, 
   3.644568971339764*^9}, {3.64456900474625*^9, 3.644569041260891*^9}, {
   3.644569337201539*^9, 3.644569341105134*^9}, {3.6445696098934393`*^9, 
   3.644569618788558*^9}, {3.644569912207107*^9, 3.644569920902409*^9}, {
   3.644569983573791*^9, 3.644570005387281*^9}, 3.6445700646532717`*^9, {
   3.64457028221881*^9, 3.644570327814844*^9}, {3.6445703775022373`*^9, 
   3.644570384578171*^9}, {3.644570423386854*^9, 3.644570459253325*^9}, {
   3.64457051890878*^9, 3.644570531181362*^9}, {3.6445705993207197`*^9, 
   3.644570636443274*^9}, {3.6445707295855513`*^9, 3.644570738277526*^9}, 
   3.644609862830929*^9}],

Cell["\<\
Checking that this is in line with the recursion equation using the \
approximate mutation step:\
\>", "Text",
 CellChangeTimes->{{3.644024253931035*^9, 3.64402427938743*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Recursion1LApprox", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pAa", ",", "pAA"}], "}"}], ",", "\[Gamma]A", ",", "muA", ",", 
     "sA", ",", "hA"}], "]"}], "==", 
   RowBox[{
    RowBox[{"AutomixisStep1L", "[", 
     RowBox[{
      RowBox[{"MutationStep1LApprox", "[", 
       RowBox[{
        RowBox[{"SelectionStep1L", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "-", "pAa", "-", "pAA"}], ",", "pAa", ",", "pAA"}], 
           "}"}], ",", "hA", ",", 
          RowBox[{"-", "sA"}]}], "]"}], ",", "muA"}], "]"}], ",", 
      "\[Gamma]A"}], "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"2", ";;", "3"}], "\[RightDoubleBracket]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.644023278756301*^9, 3.644023388557782*^9}, {
   3.644023447480195*^9, 3.644023464264709*^9}, {3.644023633255213*^9, 
   3.644023643033373*^9}, 3.6440236923081083`*^9, {3.6440238404930563`*^9, 
   3.644023884619676*^9}, {3.644023947821794*^9, 3.644023978383582*^9}, {
   3.644024112238675*^9, 3.644024112635048*^9}, {3.6440241962908163`*^9, 
   3.644024196753613*^9}, {3.644024790972539*^9, 3.64402479140028*^9}, {
   3.644566164663835*^9, 3.644566198081315*^9}, {3.644566340455344*^9, 
   3.6445663552279873`*^9}, 3.644609870896448*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.644023633626946*^9, {3.644023673347384*^9, 3.6440236931454363`*^9}, {
   3.644023842845456*^9, 3.644023867772807*^9}, {3.644023952192924*^9, 
   3.644023979586226*^9}, {3.644024108980625*^9, 3.644024113469808*^9}, {
   3.6440241716177607`*^9, 3.644024198176416*^9}, 3.6440247921308603`*^9, 
   3.644566380163867*^9, 3.644566500952364*^9, 3.644566659900457*^9, 
   3.644566819349985*^9, {3.644566850257473*^9, 3.644566868090276*^9}, 
   3.6445669095323067`*^9, 3.6445671364037123`*^9, 3.644567182795332*^9, 
   3.6445677772038813`*^9, 3.644568805405531*^9, 3.6445689772128677`*^9, 
   3.644569045147677*^9, 3.64456962159129*^9, {3.644570285389036*^9, 
   3.644570331044385*^9}, 3.64457038830471*^9, 3.644570463017762*^9, 
   3.644570606735956*^9, 3.644570750951618*^9, 3.644618717567789*^9, 
   3.6447959672819567`*^9, 3.6701097417556677`*^9}]
}, Open  ]],

Cell["Approximation for sexual evolution:", "Text",
 CellChangeTimes->{{3.6446103657882*^9, 3.64461038584584*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"SexStep1L", "[", 
    RowBox[{"MutationStep1LApprox", "[", 
     RowBox[{
      RowBox[{"SelectionStep1L", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", "pAa", "-", "pAA"}], ",", "pAa", ",", "pAA"}], 
         "}"}], ",", "hA", ",", 
        RowBox[{"-", "sA"}]}], "]"}], ",", "muA"}], "]"}], "]"}], 
   "\[LeftDoubleBracket]", 
   RowBox[{"2", ";;", "3"}], "\[RightDoubleBracket]"}], "]"}]], "Input",
 CellChangeTimes->{{3.644610425684865*^9, 3.644610457921521*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "muA"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "pAa", "+", 
        RowBox[{"2", " ", "pAA"}], "+", 
        RowBox[{"hA", " ", "pAa", " ", "sA"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "pAA", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "sA"}], ")"}]}], "+", 
        RowBox[{"pAa", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"hA", " ", "sA"}]}], ")"}]}], "+", 
        RowBox[{"muA", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "pAa", "+", 
           RowBox[{"2", " ", "pAA"}], "+", 
           RowBox[{"hA", " ", "pAa", " ", "sA"}]}], ")"}]}]}], ")"}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"hA", " ", "pAa", " ", "sA"}], "+", 
         RowBox[{"pAA", " ", "sA"}]}], ")"}], "2"]}]]}], ",", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "pAA", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "sA"}], ")"}]}], "+", 
       RowBox[{"pAa", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"hA", " ", "sA"}]}], ")"}]}], "+", 
       RowBox[{"muA", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "pAa", "+", 
          RowBox[{"2", " ", "pAA"}], "+", 
          RowBox[{"hA", " ", "pAa", " ", "sA"}]}], ")"}]}]}], ")"}], "2"], 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"hA", " ", "pAa", " ", "sA"}], "+", 
        RowBox[{"pAA", " ", "sA"}]}], ")"}], "2"]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.6446104529188337`*^9, 3.6446104587446117`*^9}, 
   3.644618720264683*^9, 3.670109750567895*^9, 3.670109786550786*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Recursion1LSexualApprox", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pAa_", ",", "pAA_"}], "}"}], ",", "mu_", ",", "s_", ",", 
     "h_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "pAa", "+", 
          RowBox[{"2", " ", "pAA"}], "+", 
          RowBox[{"h", " ", "pAa", " ", "s"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "pAA", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "s"}], ")"}]}], "+", 
          RowBox[{"pAa", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"h", " ", "s"}]}], ")"}]}], "+", 
          RowBox[{"mu", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "pAa", "+", 
             RowBox[{"2", " ", "pAA"}], "+", 
             RowBox[{"h", " ", "pAa", " ", "s"}]}], ")"}]}]}], ")"}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"h", " ", "pAa", " ", "s"}], "+", 
           RowBox[{"pAA", " ", "s"}]}], ")"}], "2"]}]]}], ",", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "pAA", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "s"}], ")"}]}], "+", 
         RowBox[{"pAa", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"h", " ", "s"}]}], ")"}]}], "+", 
         RowBox[{"mu", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "pAa", "+", 
            RowBox[{"2", " ", "pAA"}], "+", 
            RowBox[{"h", " ", "pAa", " ", "s"}]}], ")"}]}]}], ")"}], "2"], 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"h", " ", "pAa", " ", "s"}], "+", 
          RowBox[{"pAA", " ", "s"}]}], ")"}], "2"]}]]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.644896225362842*^9, 3.6448963136225843`*^9}, {
  3.6448964709541807`*^9, 3.644896474898471*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"SexStep1L", "[", 
     RowBox[{"MutationStep1LApprox", "[", 
      RowBox[{
       RowBox[{"SelectionStep1L", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "-", "pAa", "-", "pAA"}], ",", "pAa", ",", "pAA"}], 
          "}"}], ",", "h", ",", 
         RowBox[{"-", "s"}]}], "]"}], ",", "mu"}], "]"}], "]"}], 
    "\[LeftDoubleBracket]", 
    RowBox[{"2", ";;", "3"}], "\[RightDoubleBracket]"}], "==", 
   RowBox[{"Recursion1LSexualApprox", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pAa", ",", "pAA"}], "}"}], ",", "mu", ",", "s", ",", "h"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.670109809791093*^9, 3.6701099018480053`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.670109855940723*^9, {3.6701098895336313`*^9, 3.670109903631915*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Deriving the equilibrium of the approximated system", "Subsubsection",
 CellChangeTimes->{{3.644024775325716*^9, 3.644024786025468*^9}, {
   3.644610355880987*^9, 3.644610360927533*^9}, 3.6446218219013844`*^9, {
   3.644885224834032*^9, 3.64488523251334*^9}, 3.6448963849119177`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Recursion1LApprox", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"pAa", ",", "pAA"}], "}"}], ",", "\[Gamma]", ",", "mu", ",", 
        "s", ",", "h"}], "]"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"pAa", ",", "pAA"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"pAa", ",", "pAA"}], "}"}]}], "]"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{"s", ">", "mu"}], "&&", 
     RowBox[{"h", ">", "0"}], "&&", 
     RowBox[{"h", "<", "1"}], "&&", 
     RowBox[{"\[Gamma]", ">", "\[Gamma]CO"}], "&&", 
     RowBox[{"\[Gamma]", "<", "1"}], "&&", 
     RowBox[{"mu", ">", "0"}], "&&", 
     RowBox[{"mu", "<", "0.01"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.644024796449067*^9, 3.6440248200046167`*^9}, {
   3.644024910097275*^9, 3.644024910976694*^9}, 3.6446098751834383`*^9, {
   3.6446187349058533`*^9, 3.64461873742698*^9}, {3.644625584938586*^9, 
   3.6446256015850067`*^9}, {3.6447959796712837`*^9, 3.644795991728187*^9}, {
   3.6448033721177807`*^9, 3.644803374069474*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pAa", "\[Rule]", "0"}], ",", 
     RowBox[{"pAA", "\[Rule]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pAa", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"5", " ", 
          SuperscriptBox["mu", "2"]}], "-", 
         RowBox[{"3", " ", "mu", " ", "s"}], "+", 
         RowBox[{
          SuperscriptBox["h", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "s"}], "+", 
            RowBox[{"mu", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], "+", 
         RowBox[{"4", " ", "mu", " ", "\[Gamma]"}], "-", 
         RowBox[{"11", " ", 
          SuperscriptBox["mu", "2"], " ", "\[Gamma]"}], "-", 
         RowBox[{"s", " ", "\[Gamma]"}], "+", 
         RowBox[{"4", " ", "mu", " ", "s", " ", "\[Gamma]"}], "+", 
         SuperscriptBox["\[Gamma]", "2"], "-", 
         RowBox[{"5", " ", "mu", " ", 
          SuperscriptBox["\[Gamma]", "2"]}], "+", 
         RowBox[{"6", " ", 
          SuperscriptBox["mu", "2"], " ", 
          SuperscriptBox["\[Gamma]", "2"]}], "-", 
         RowBox[{"h", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "s"}], " ", 
             RowBox[{"(", 
              RowBox[{"s", "-", 
               RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
            RowBox[{"mu", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"s", " ", 
                RowBox[{"(", 
                 RowBox[{"6", "+", "s", "-", 
                  RowBox[{"7", " ", "\[Gamma]"}]}], ")"}]}], "-", 
               RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["mu", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"4", " ", "\[Gamma]"}], "+", 
               RowBox[{"s", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", 
                  RowBox[{"5", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}], "-", 
         RowBox[{
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"mu", "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}],
              "2"], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"mu", "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["mu", "2"]}], "+", 
               RowBox[{"h", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], 
               "-", 
               RowBox[{
                SuperscriptBox["h", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
                SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"2", " ", "mu"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], 
               ")"}], "2"], " ", 
             SuperscriptBox["\[Gamma]", "2"]}]}]], " ", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"mu", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3"}], "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", 
            "\[Gamma]", "+", 
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "h", "-", 
               RowBox[{"h", " ", "\[Gamma]"}]}], ")"}]}]}], "]"}]}]}], ")"}], 
       "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", "s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "h"}], " ", "s"}], "+", 
            RowBox[{"mu", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
         
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "h"}]}], ")"}], " ", "s", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"h", " ", "s"}], "+", 
            RowBox[{"mu", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3"}], "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
          "\[Gamma]"}]}], ")"}]}]}], ",", 
     RowBox[{"pAA", "\[Rule]", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"h", " ", "s"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "h"}], " ", "s"}], "+", 
              RowBox[{"mu", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"h", " ", 
                  RowBox[{"(", 
                   RowBox[{"4", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], 
           "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"h", " ", "s", " ", 
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"h", " ", "s"}]}], ")"}]}], "+", 
              RowBox[{
               SuperscriptBox["mu", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "13"}], "+", 
                 RowBox[{"h", " ", 
                  RowBox[{"(", 
                   RowBox[{"14", "+", 
                    RowBox[{"s", " ", 
                    RowBox[{"(", 
                    RowBox[{"12", "-", 
                    RowBox[{"10", " ", "h"}], "-", 
                    RowBox[{"3", " ", "h", " ", "s"}]}], ")"}]}]}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{"mu", " ", 
               RowBox[{"(", 
                RowBox[{"5", "+", 
                 RowBox[{"h", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "4"}], "+", 
                    RowBox[{"s", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "7"}], "+", 
                    RowBox[{"2", " ", "h"}], "+", 
                    RowBox[{"4", " ", "h", " ", "s"}]}], ")"}]}]}], ")"}]}]}],
                 ")"}]}]}], ")"}], " ", "\[Gamma]"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", "mu"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"h", " ", "s"}], "+", 
              RowBox[{"mu", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"h", " ", 
                  RowBox[{"(", 
                   RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
            
            SuperscriptBox["\[Gamma]", "2"]}], "-", 
           RowBox[{
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"mu", "+", 
                 RowBox[{"h", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], 
                ")"}], "2"], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"mu", "-", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["mu", "2"]}], "+", 
                 RowBox[{"h", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], 
                 "-", 
                 RowBox[{
                  SuperscriptBox["h", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
                  SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "mu"}], "+", 
                  RowBox[{"h", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], 
                 ")"}], "2"], " ", 
               SuperscriptBox["\[Gamma]", "2"]}]}]], " ", 
            RowBox[{"(", 
             RowBox[{"\[Gamma]", "-", 
              RowBox[{"h", " ", "s", " ", "\[Gamma]"}], "+", 
              RowBox[{"mu", " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"2", " ", "h", " ", "s"}], "-", 
                 RowBox[{"3", " ", "\[Gamma]"}], "+", 
                 RowBox[{"h", " ", 
                  RowBox[{"(", 
                   RowBox[{"2", "+", "s"}], ")"}], " ", "\[Gamma]"}]}], 
                ")"}]}]}], ")"}], " ", 
            RowBox[{"Sign", "[", 
             RowBox[{
              RowBox[{"mu", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"h", " ", 
                  RowBox[{"(", 
                   RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", 
              "\[Gamma]", "+", 
              RowBox[{"s", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "h", "-", 
                 RowBox[{"h", " ", "\[Gamma]"}]}], ")"}]}]}], "]"}]}]}], 
          ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", " ", "s", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "h"}], " ", "s"}], "+", 
                RowBox[{"mu", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"h", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], 
             "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"2", " ", "h"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"h", " ", "s"}], "+", 
                RowBox[{"mu", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "3"}], "+", 
                   RowBox[{"h", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ",
               "\[Gamma]"}]}], ")"}]}], ")"}]}], ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pAa", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"5", " ", 
          SuperscriptBox["mu", "2"]}], "-", 
         RowBox[{"3", " ", "mu", " ", "s"}], "+", 
         RowBox[{
          SuperscriptBox["h", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "s"}], "+", 
            RowBox[{"mu", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], "+", 
         RowBox[{"4", " ", "mu", " ", "\[Gamma]"}], "-", 
         RowBox[{"11", " ", 
          SuperscriptBox["mu", "2"], " ", "\[Gamma]"}], "-", 
         RowBox[{"s", " ", "\[Gamma]"}], "+", 
         RowBox[{"4", " ", "mu", " ", "s", " ", "\[Gamma]"}], "+", 
         SuperscriptBox["\[Gamma]", "2"], "-", 
         RowBox[{"5", " ", "mu", " ", 
          SuperscriptBox["\[Gamma]", "2"]}], "+", 
         RowBox[{"6", " ", 
          SuperscriptBox["mu", "2"], " ", 
          SuperscriptBox["\[Gamma]", "2"]}], "-", 
         RowBox[{"h", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "s"}], " ", 
             RowBox[{"(", 
              RowBox[{"s", "-", 
               RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
            RowBox[{"mu", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"s", " ", 
                RowBox[{"(", 
                 RowBox[{"6", "+", "s", "-", 
                  RowBox[{"7", " ", "\[Gamma]"}]}], ")"}]}], "-", 
               RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["mu", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"4", " ", "\[Gamma]"}], "+", 
               RowBox[{"s", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", 
                  RowBox[{"5", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"mu", "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}],
              "2"], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"mu", "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["mu", "2"]}], "+", 
               RowBox[{"h", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], 
               "-", 
               RowBox[{
                SuperscriptBox["h", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
                SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"2", " ", "mu"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], 
               ")"}], "2"], " ", 
             SuperscriptBox["\[Gamma]", "2"]}]}]], " ", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"mu", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3"}], "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", 
            "\[Gamma]", "+", 
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "h", "-", 
               RowBox[{"h", " ", "\[Gamma]"}]}], ")"}]}]}], "]"}]}]}], ")"}], 
       "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", "s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "h"}], " ", "s"}], "+", 
            RowBox[{"mu", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
         
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "h"}]}], ")"}], " ", "s", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"h", " ", "s"}], "+", 
            RowBox[{"mu", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3"}], "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
          "\[Gamma]"}]}], ")"}]}]}], ",", 
     RowBox[{"pAA", "\[Rule]", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"h", " ", "s"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "h"}], " ", "s"}], "+", 
              RowBox[{"mu", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"h", " ", 
                  RowBox[{"(", 
                   RowBox[{"4", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], 
           "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"h", " ", "s", " ", 
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"h", " ", "s"}]}], ")"}]}], "+", 
              RowBox[{
               SuperscriptBox["mu", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "13"}], "+", 
                 RowBox[{"h", " ", 
                  RowBox[{"(", 
                   RowBox[{"14", "+", 
                    RowBox[{"s", " ", 
                    RowBox[{"(", 
                    RowBox[{"12", "-", 
                    RowBox[{"10", " ", "h"}], "-", 
                    RowBox[{"3", " ", "h", " ", "s"}]}], ")"}]}]}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{"mu", " ", 
               RowBox[{"(", 
                RowBox[{"5", "+", 
                 RowBox[{"h", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "4"}], "+", 
                    RowBox[{"s", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "7"}], "+", 
                    RowBox[{"2", " ", "h"}], "+", 
                    RowBox[{"4", " ", "h", " ", "s"}]}], ")"}]}]}], ")"}]}]}],
                 ")"}]}]}], ")"}], " ", "\[Gamma]"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", "mu"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"h", " ", "s"}], "+", 
              RowBox[{"mu", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"h", " ", 
                  RowBox[{"(", 
                   RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
            
            SuperscriptBox["\[Gamma]", "2"]}], "+", 
           RowBox[{
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"mu", "+", 
                 RowBox[{"h", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], 
                ")"}], "2"], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"mu", "-", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["mu", "2"]}], "+", 
                 RowBox[{"h", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], 
                 "-", 
                 RowBox[{
                  SuperscriptBox["h", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
                  SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "mu"}], "+", 
                  RowBox[{"h", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], 
                 ")"}], "2"], " ", 
               SuperscriptBox["\[Gamma]", "2"]}]}]], " ", 
            RowBox[{"(", 
             RowBox[{"\[Gamma]", "-", 
              RowBox[{"h", " ", "s", " ", "\[Gamma]"}], "+", 
              RowBox[{"mu", " ", 
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"2", " ", "h", " ", "s"}], "-", 
                 RowBox[{"3", " ", "\[Gamma]"}], "+", 
                 RowBox[{"h", " ", 
                  RowBox[{"(", 
                   RowBox[{"2", "+", "s"}], ")"}], " ", "\[Gamma]"}]}], 
                ")"}]}]}], ")"}], " ", 
            RowBox[{"Sign", "[", 
             RowBox[{
              RowBox[{"mu", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"h", " ", 
                  RowBox[{"(", 
                   RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", 
              "\[Gamma]", "+", 
              RowBox[{"s", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "h", "-", 
                 RowBox[{"h", " ", "\[Gamma]"}]}], ")"}]}]}], "]"}]}]}], 
          ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", " ", "s", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "h"}], " ", "s"}], "+", 
                RowBox[{"mu", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"h", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], 
             "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"2", " ", "h"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"h", " ", "s"}], "+", 
                RowBox[{"mu", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "3"}], "+", 
                   RowBox[{"h", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ",
               "\[Gamma]"}]}], ")"}]}], ")"}]}], ")"}]}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.644024864325892*^9, 3.644025710630974*^9, 
  3.64457072056603*^9, 3.644618741443038*^9, 3.6446214194041147`*^9, 
  3.644629894783412*^9, 3.644802681381896*^9, 3.670110072363019*^9, 
  3.67011239191889*^9, 3.6701154690592747`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{"mu", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "+", 
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", "\[Gamma]", "+", 
     
     RowBox[{"s", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "h", "-", 
        RowBox[{"h", " ", "\[Gamma]"}]}], ")"}]}]}], "]"}], "==", 
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{"mu", " ", 
      RowBox[{"(", 
       RowBox[{"3", "-", 
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Gamma]"}], ")"}]}], "+", "\[Gamma]", "-", 
     RowBox[{"s", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"h", 
         RowBox[{"(", 
          RowBox[{"1", "-", " ", "\[Gamma]"}], ")"}]}]}], ")"}]}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.644802824333667*^9, 3.6448028918799877`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.644802834492481*^9, 3.644802892669216*^9}, 
   3.6701154691318073`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"mu", " ", 
      RowBox[{"(", 
       RowBox[{"3", "-", 
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Gamma]"}], ")"}]}], "+", "\[Gamma]", "-", 
     RowBox[{"s", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"h", 
         RowBox[{"(", 
          RowBox[{"1", "-", " ", "\[Gamma]"}], ")"}]}]}], ")"}]}]}], "==", 
    "0"}], ",", "\[Gamma]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6448029303302927`*^9, 3.6448029593468037`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Gamma]", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], " ", "mu"}], "+", 
      RowBox[{"2", " ", "h", " ", "mu"}], "+", "s", "-", 
      RowBox[{"h", " ", "s"}], "+", 
      RowBox[{"h", " ", "mu", " ", "s"}]}], 
     RowBox[{"1", "-", 
      RowBox[{"3", " ", "mu"}], "+", 
      RowBox[{"2", " ", "h", " ", "mu"}], "-", 
      RowBox[{"h", " ", "s"}], "+", 
      RowBox[{"h", " ", "mu", " ", "s"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.644802940953809*^9, 3.644802960090054*^9}, 
   3.670115469161542*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]CO", "=", 
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{"1", "-", "s"}], 
      RowBox[{"1", "-", 
       RowBox[{"h", " ", "s"}], "-", 
       RowBox[{"mu", " ", 
        RowBox[{"(", 
         RowBox[{"3", "-", 
          RowBox[{"h", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}]]}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "cutoff", " ", "above", " ", "which", " ", "the", " ", "above", " ", 
    "term", " ", "in", " ", "the", " ", 
    RowBox[{"Abs", "[", "...", "]"}], " ", "expression", " ", "is", " ", 
    "positive"}], " ", "*)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6448029954988747`*^9, 3.6448032066376*^9}, {
  3.644803330963168*^9, 3.644803353428173*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Recursion1LApprox", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"pAa", ",", "pAA"}], "}"}], ",", "\[Gamma]", ",", "mu", ",", 
        "s", ",", "h"}], "]"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"pAa", ",", "pAA"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"pAa", ",", "pAA"}], "}"}]}], "]"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{"s", ">", "mu"}], "&&", 
     RowBox[{"h", ">", "0"}], "&&", 
     RowBox[{"h", "<", "1"}], "&&", 
     RowBox[{"\[Gamma]", ">", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{"1", "-", "s"}], 
         RowBox[{"1", "-", 
          RowBox[{"h", " ", "s"}], "-", 
          RowBox[{"mu", " ", 
           RowBox[{"(", 
            RowBox[{"3", "-", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}]]}], ")"}]}], "&&", 
     RowBox[{"\[Gamma]", "<", "1"}], "&&", 
     RowBox[{"mu", ">", "0"}], "&&", 
     RowBox[{"mu", "<", "0.01"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.644803396525688*^9, 3.644803397517963*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pAa", "\[Rule]", "0"}], ",", 
     RowBox[{"pAA", "\[Rule]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pAa", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"5", " ", 
          SuperscriptBox["mu", "2"]}], "-", 
         RowBox[{"3", " ", "mu", " ", "s"}], "+", 
         RowBox[{
          SuperscriptBox["h", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "s"}], "+", 
            RowBox[{"mu", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], "+", 
         RowBox[{"4", " ", "mu", " ", "\[Gamma]"}], "-", 
         RowBox[{"11", " ", 
          SuperscriptBox["mu", "2"], " ", "\[Gamma]"}], "-", 
         RowBox[{"s", " ", "\[Gamma]"}], "+", 
         RowBox[{"4", " ", "mu", " ", "s", " ", "\[Gamma]"}], "+", 
         SuperscriptBox["\[Gamma]", "2"], "-", 
         RowBox[{"5", " ", "mu", " ", 
          SuperscriptBox["\[Gamma]", "2"]}], "+", 
         RowBox[{"6", " ", 
          SuperscriptBox["mu", "2"], " ", 
          SuperscriptBox["\[Gamma]", "2"]}], "-", 
         RowBox[{"h", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "s"}], " ", 
             RowBox[{"(", 
              RowBox[{"s", "-", 
               RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
            RowBox[{"mu", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"s", " ", 
                RowBox[{"(", 
                 RowBox[{"6", "+", "s", "-", 
                  RowBox[{"7", " ", "\[Gamma]"}]}], ")"}]}], "-", 
               RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["mu", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"4", " ", "\[Gamma]"}], "+", 
               RowBox[{"s", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", 
                  RowBox[{"5", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}], "-", 
         RowBox[{
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"mu", "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}],
              "2"], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"mu", "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["mu", "2"]}], "+", 
               RowBox[{"h", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], 
               "-", 
               RowBox[{
                SuperscriptBox["h", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
                SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"2", " ", "mu"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], 
               ")"}], "2"], " ", 
             SuperscriptBox["\[Gamma]", "2"]}]}]], " ", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"mu", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3"}], "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", 
            "\[Gamma]", "+", 
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "h", "-", 
               RowBox[{"h", " ", "\[Gamma]"}]}], ")"}]}]}], "]"}]}]}], ")"}], 
       "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", "s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "h"}], " ", "s"}], "+", 
            RowBox[{"mu", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
         
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "h"}]}], ")"}], " ", "s", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"h", " ", "s"}], "+", 
            RowBox[{"mu", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3"}], "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
          "\[Gamma]"}]}], ")"}]}]}], ",", 
     RowBox[{"pAA", "\[Rule]", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"h", " ", "s"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "h"}], " ", "s"}], "+", 
              RowBox[{"mu", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"h", " ", 
                  RowBox[{"(", 
                   RowBox[{"4", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], 
           "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"h", " ", "s", " ", 
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"h", " ", "s"}]}], ")"}]}], "+", 
              RowBox[{
               SuperscriptBox["mu", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "13"}], "+", 
                 RowBox[{"h", " ", 
                  RowBox[{"(", 
                   RowBox[{"14", "+", 
                    RowBox[{"s", " ", 
                    RowBox[{"(", 
                    RowBox[{"12", "-", 
                    RowBox[{"10", " ", "h"}], "-", 
                    RowBox[{"3", " ", "h", " ", "s"}]}], ")"}]}]}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{"mu", " ", 
               RowBox[{"(", 
                RowBox[{"5", "+", 
                 RowBox[{"h", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "4"}], "+", 
                    RowBox[{"s", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "7"}], "+", 
                    RowBox[{"2", " ", "h"}], "+", 
                    RowBox[{"4", " ", "h", " ", "s"}]}], ")"}]}]}], ")"}]}]}],
                 ")"}]}]}], ")"}], " ", "\[Gamma]"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", "mu"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"h", " ", "s"}], "+", 
              RowBox[{"mu", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"h", " ", 
                  RowBox[{"(", 
                   RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
            
            SuperscriptBox["\[Gamma]", "2"]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"mu", "+", 
                   RowBox[{"h", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], 
                  ")"}], "2"], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"mu", "-", 
                   RowBox[{"2", " ", 
                    SuperscriptBox["mu", "2"]}], "+", 
                   RowBox[{"h", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], 
                   "-", 
                   RowBox[{
                    SuperscriptBox["h", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
                    SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], 
                "+", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"1", "-", 
                    RowBox[{"2", " ", "mu"}], "+", 
                    RowBox[{"h", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], 
                   ")"}], "2"], " ", 
                 SuperscriptBox["\[Gamma]", "2"]}]}]], " ", 
              RowBox[{"(", 
               RowBox[{"\[Gamma]", "-", 
                RowBox[{"h", " ", "s", " ", "\[Gamma]"}], "+", 
                RowBox[{"mu", " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "-", 
                   RowBox[{"2", " ", "h", " ", "s"}], "-", 
                   RowBox[{"3", " ", "\[Gamma]"}], "+", 
                   RowBox[{"h", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", "s"}], ")"}], " ", "\[Gamma]"}]}], 
                  ")"}]}]}], ")"}]}], ")"}], "/", 
            RowBox[{"Sign", "[", 
             RowBox[{
              RowBox[{"mu", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"h", " ", 
                  RowBox[{"(", 
                   RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", 
              "\[Gamma]", "+", 
              RowBox[{"s", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "h", "-", 
                 RowBox[{"h", " ", "\[Gamma]"}]}], ")"}]}]}], "]"}]}]}], 
          ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", " ", "s", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "h"}], " ", "s"}], "+", 
                RowBox[{"mu", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"h", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], 
             "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"2", " ", "h"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"h", " ", "s"}], "+", 
                RowBox[{"mu", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "3"}], "+", 
                   RowBox[{"h", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ",
               "\[Gamma]"}]}], ")"}]}], ")"}]}], ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pAa", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"5", " ", 
          SuperscriptBox["mu", "2"]}], "-", 
         RowBox[{"3", " ", "mu", " ", "s"}], "+", 
         RowBox[{
          SuperscriptBox["h", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "s"}], "+", 
            RowBox[{"mu", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], "+", 
         RowBox[{"4", " ", "mu", " ", "\[Gamma]"}], "-", 
         RowBox[{"11", " ", 
          SuperscriptBox["mu", "2"], " ", "\[Gamma]"}], "-", 
         RowBox[{"s", " ", "\[Gamma]"}], "+", 
         RowBox[{"4", " ", "mu", " ", "s", " ", "\[Gamma]"}], "+", 
         SuperscriptBox["\[Gamma]", "2"], "-", 
         RowBox[{"5", " ", "mu", " ", 
          SuperscriptBox["\[Gamma]", "2"]}], "+", 
         RowBox[{"6", " ", 
          SuperscriptBox["mu", "2"], " ", 
          SuperscriptBox["\[Gamma]", "2"]}], "-", 
         RowBox[{"h", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "s"}], " ", 
             RowBox[{"(", 
              RowBox[{"s", "-", 
               RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
            RowBox[{"mu", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"s", " ", 
                RowBox[{"(", 
                 RowBox[{"6", "+", "s", "-", 
                  RowBox[{"7", " ", "\[Gamma]"}]}], ")"}]}], "-", 
               RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["mu", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"4", " ", "\[Gamma]"}], "+", 
               RowBox[{"s", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", 
                  RowBox[{"5", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"mu", "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}],
              "2"], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"mu", "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["mu", "2"]}], "+", 
               RowBox[{"h", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], 
               "-", 
               RowBox[{
                SuperscriptBox["h", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
                SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"2", " ", "mu"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], 
               ")"}], "2"], " ", 
             SuperscriptBox["\[Gamma]", "2"]}]}]], " ", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"mu", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3"}], "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", 
            "\[Gamma]", "+", 
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "h", "-", 
               RowBox[{"h", " ", "\[Gamma]"}]}], ")"}]}]}], "]"}]}]}], ")"}], 
       "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", "s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "h"}], " ", "s"}], "+", 
            RowBox[{"mu", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
         
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "h"}]}], ")"}], " ", "s", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"h", " ", "s"}], "+", 
            RowBox[{"mu", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3"}], "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
          "\[Gamma]"}]}], ")"}]}]}], ",", 
     RowBox[{"pAA", "\[Rule]", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"h", " ", "s"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "h"}], " ", "s"}], "+", 
              RowBox[{"mu", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"h", " ", 
                  RowBox[{"(", 
                   RowBox[{"4", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], 
           "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"h", " ", "s", " ", 
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"h", " ", "s"}]}], ")"}]}], "+", 
              RowBox[{
               SuperscriptBox["mu", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "13"}], "+", 
                 RowBox[{"h", " ", 
                  RowBox[{"(", 
                   RowBox[{"14", "+", 
                    RowBox[{"s", " ", 
                    RowBox[{"(", 
                    RowBox[{"12", "-", 
                    RowBox[{"10", " ", "h"}], "-", 
                    RowBox[{"3", " ", "h", " ", "s"}]}], ")"}]}]}], ")"}]}]}],
                 ")"}]}], "+", 
              RowBox[{"mu", " ", 
               RowBox[{"(", 
                RowBox[{"5", "+", 
                 RowBox[{"h", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "4"}], "+", 
                    RowBox[{"s", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "7"}], "+", 
                    RowBox[{"2", " ", "h"}], "+", 
                    RowBox[{"4", " ", "h", " ", "s"}]}], ")"}]}]}], ")"}]}]}],
                 ")"}]}]}], ")"}], " ", "\[Gamma]"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", "mu"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"h", " ", "s"}], "+", 
              RowBox[{"mu", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"h", " ", 
                  RowBox[{"(", 
                   RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
            
            SuperscriptBox["\[Gamma]", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"mu", "+", 
                   RowBox[{"h", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], 
                  ")"}], "2"], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"mu", "-", 
                   RowBox[{"2", " ", 
                    SuperscriptBox["mu", "2"]}], "+", 
                   RowBox[{"h", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], 
                   "-", 
                   RowBox[{
                    SuperscriptBox["h", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
                    SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], 
                "+", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"1", "-", 
                    RowBox[{"2", " ", "mu"}], "+", 
                    RowBox[{"h", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], 
                   ")"}], "2"], " ", 
                 SuperscriptBox["\[Gamma]", "2"]}]}]], " ", 
              RowBox[{"(", 
               RowBox[{"\[Gamma]", "-", 
                RowBox[{"h", " ", "s", " ", "\[Gamma]"}], "+", 
                RowBox[{"mu", " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "-", 
                   RowBox[{"2", " ", "h", " ", "s"}], "-", 
                   RowBox[{"3", " ", "\[Gamma]"}], "+", 
                   RowBox[{"h", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", "s"}], ")"}], " ", "\[Gamma]"}]}], 
                  ")"}]}]}], ")"}]}], ")"}], "/", 
            RowBox[{"Sign", "[", 
             RowBox[{
              RowBox[{"mu", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"h", " ", 
                  RowBox[{"(", 
                   RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", 
              "\[Gamma]", "+", 
              RowBox[{"s", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "h", "-", 
                 RowBox[{"h", " ", "\[Gamma]"}]}], ")"}]}]}], "]"}]}]}], 
          ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", " ", "s", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "h"}], " ", "s"}], "+", 
                RowBox[{"mu", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"h", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], 
             "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"2", " ", "h"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"h", " ", "s"}], "+", 
                RowBox[{"mu", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "3"}], "+", 
                   RowBox[{"h", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ",
               "\[Gamma]"}]}], ")"}]}], ")"}]}], ")"}]}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.644804268272378*^9, 3.670119860342544*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Gamma]", "\[Rule]", "0.1"}], ",", 
    RowBox[{"mu", "\[Rule]", "0.00001"}], ",", " ", 
    RowBox[{"s", "\[Rule]", "0.01"}], ",", 
    RowBox[{"h", "\[Rule]", "0.99999"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.644618771358863*^9, 3.6446187750793667`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pAa", "\[Rule]", "0"}], ",", 
     RowBox[{"pAA", "\[Rule]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pAa", "\[Rule]", "0.00016496187804635747`"}], ",", 
     RowBox[{"pAA", "\[Rule]", "0.0009176016296576991`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pAa", "\[Rule]", "21.80403696335355`"}], ",", 
     RowBox[{"pAA", "\[Rule]", 
      RowBox[{"-", "10.902119484752006`"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.644621595708901*^9, 3.644630334799693*^9, 
  3.670119860398426*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"equi1", "[", 
    RowBox[{"\[Gamma]_", ",", "mu_", ",", "s_", ",", "h_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"5", " ", 
         SuperscriptBox["mu", "2"]}], "-", 
        RowBox[{"3", " ", "mu", " ", "s"}], "+", 
        RowBox[{
         SuperscriptBox["h", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "s"}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], "+", 
        RowBox[{"4", " ", "mu", " ", "\[Gamma]"}], "-", 
        RowBox[{"11", " ", 
         SuperscriptBox["mu", "2"], " ", "\[Gamma]"}], "-", 
        RowBox[{"s", " ", "\[Gamma]"}], "+", 
        RowBox[{"4", " ", "mu", " ", "s", " ", "\[Gamma]"}], "+", 
        SuperscriptBox["\[Gamma]", "2"], "-", 
        RowBox[{"5", " ", "mu", " ", 
         SuperscriptBox["\[Gamma]", "2"]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox["mu", "2"], " ", 
         SuperscriptBox["\[Gamma]", "2"]}], "-", 
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "s"}], " ", 
            RowBox[{"(", 
             RowBox[{"s", "-", 
              RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"s", " ", 
               RowBox[{"(", 
                RowBox[{"6", "+", "s", "-", 
                 RowBox[{"7", " ", "\[Gamma]"}]}], ")"}]}], "-", 
              RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["mu", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"4", " ", "\[Gamma]"}], "+", 
              RowBox[{"s", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", 
                 RowBox[{"5", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}], "-", 
        RowBox[{
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"mu", "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
            "2"], "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"mu", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["mu", "2"]}], "+", 
              RowBox[{"h", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], 
              "-", 
              RowBox[{
               SuperscriptBox["h", "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
               SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "mu"}], "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}],
              "2"], " ", 
            SuperscriptBox["\[Gamma]", "2"]}]}]], " ", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", "\[Gamma]",
            "+", 
           RowBox[{"s", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "h", "-", 
              RowBox[{"h", " ", "\[Gamma]"}]}], ")"}]}]}], "]"}]}]}], ")"}], 
      "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", "s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "h"}], " ", "s"}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "h"}]}], ")"}], " ", "s", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"h", " ", "s"}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
         "\[Gamma]"}]}], ")"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "mu", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"h", " ", "s"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "h"}], " ", "s"}], "+", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"4", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"h", " ", "s", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"h", " ", "s"}]}], ")"}]}], "+", 
             RowBox[{
              SuperscriptBox["mu", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "13"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"14", "+", 
                   RowBox[{"s", " ", 
                    RowBox[{"(", 
                    RowBox[{"12", "-", 
                    RowBox[{"10", " ", "h"}], "-", 
                    RowBox[{"3", " ", "h", " ", "s"}]}], ")"}]}]}], ")"}]}]}],
                ")"}]}], "+", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{"5", "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "4"}], "+", 
                   RowBox[{"s", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "7"}], "+", 
                    RowBox[{"2", " ", "h"}], "+", 
                    RowBox[{"4", " ", "h", " ", "s"}]}], ")"}]}]}], ")"}]}]}],
                ")"}]}]}], ")"}], " ", "\[Gamma]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", "mu"}], "+", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
           " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"h", " ", "s"}], "+", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "-", 
          RowBox[{
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"mu", "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], 
               ")"}], "2"], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"mu", "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["mu", "2"]}], "+", 
                RowBox[{"h", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], 
                "-", 
                RowBox[{
                 SuperscriptBox["h", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
                 SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], "+", 
             
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"2", " ", "mu"}], "+", 
                 RowBox[{"h", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], 
                ")"}], "2"], " ", 
              SuperscriptBox["\[Gamma]", "2"]}]}]], " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]", "-", 
             RowBox[{"h", " ", "s", " ", "\[Gamma]"}], "+", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{"2", "-", 
                RowBox[{"2", " ", "h", " ", "s"}], "-", 
                RowBox[{"3", " ", "\[Gamma]"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "+", "s"}], ")"}], " ", "\[Gamma]"}]}], 
               ")"}]}]}], ")"}], " ", 
           RowBox[{"Sign", "[", 
            RowBox[{
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", 
             "\[Gamma]", "+", 
             RowBox[{"s", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "h", "-", 
                RowBox[{"h", " ", "\[Gamma]"}]}], ")"}]}]}], "]"}]}]}], ")"}],
         "/", 
        RowBox[{"(", 
         RowBox[{"2", " ", "s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "h"}], " ", "s"}], "+", 
               RowBox[{"mu", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"h", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"2", " ", "h"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"h", " ", "s"}], "+", 
               RowBox[{"mu", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "3"}], "+", 
                  RowBox[{"h", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ",
              "\[Gamma]"}]}], ")"}]}], ")"}]}], ")"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"equi2", "[", 
   RowBox[{"\[Gamma]_", ",", "mu_", ",", "s_", ",", "h_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"5", " ", 
        SuperscriptBox["mu", "2"]}], "-", 
       RowBox[{"3", " ", "mu", " ", "s"}], "+", 
       RowBox[{
        SuperscriptBox["h", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "s"}], "+", 
          RowBox[{"mu", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], "+", 
       RowBox[{"4", " ", "mu", " ", "\[Gamma]"}], "-", 
       RowBox[{"11", " ", 
        SuperscriptBox["mu", "2"], " ", "\[Gamma]"}], "-", 
       RowBox[{"s", " ", "\[Gamma]"}], "+", 
       RowBox[{"4", " ", "mu", " ", "s", " ", "\[Gamma]"}], "+", 
       SuperscriptBox["\[Gamma]", "2"], "-", 
       RowBox[{"5", " ", "mu", " ", 
        SuperscriptBox["\[Gamma]", "2"]}], "+", 
       RowBox[{"6", " ", 
        SuperscriptBox["mu", "2"], " ", 
        SuperscriptBox["\[Gamma]", "2"]}], "-", 
       RowBox[{"h", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "s"}], " ", 
           RowBox[{"(", 
            RowBox[{"s", "-", 
             RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
          RowBox[{"mu", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"s", " ", 
              RowBox[{"(", 
               RowBox[{"6", "+", "s", "-", 
                RowBox[{"7", " ", "\[Gamma]"}]}], ")"}]}], "-", 
             RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["mu", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"4", " ", "\[Gamma]"}], "+", 
             RowBox[{"s", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", 
                RowBox[{"5", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"mu", "+", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
           "2"], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"mu", "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["mu", "2"]}], "+", 
             RowBox[{"h", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], 
             "-", 
             RowBox[{
              SuperscriptBox["h", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
              SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", "mu"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
            "2"], " ", 
           SuperscriptBox["\[Gamma]", "2"]}]}]], " ", 
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"mu", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", "\[Gamma]", 
          "+", 
          RowBox[{"s", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "h", "-", 
             RowBox[{"h", " ", "\[Gamma]"}]}], ")"}]}]}], "]"}]}]}], ")"}], 
     "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", "s", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "h"}], " ", "s"}], "+", 
          RowBox[{"mu", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "h"}]}], ")"}], " ", "s", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"h", " ", "s"}], "+", 
          RowBox[{"mu", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
        "\[Gamma]"}]}], ")"}]}], ",", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "mu", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"h", " ", "s"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "h"}], " ", "s"}], "+", 
            RowBox[{"mu", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3"}], "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{"4", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
         
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"h", " ", "s", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"h", " ", "s"}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["mu", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "13"}], "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{"14", "+", 
                  RowBox[{"s", " ", 
                   RowBox[{"(", 
                    RowBox[{"12", "-", 
                    RowBox[{"10", " ", "h"}], "-", 
                    RowBox[{"3", " ", "h", " ", "s"}]}], ")"}]}]}], ")"}]}]}],
               ")"}]}], "+", 
            RowBox[{"mu", " ", 
             RowBox[{"(", 
              RowBox[{"5", "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "4"}], "+", 
                  RowBox[{"s", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "7"}], "+", 
                    RowBox[{"2", " ", "h"}], "+", 
                    RowBox[{"4", " ", "h", " ", "s"}]}], ")"}]}]}], ")"}]}]}],
               ")"}]}]}], ")"}], " ", "\[Gamma]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", " ", "mu"}], "+", 
            RowBox[{"h", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
          " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"h", " ", "s"}], "+", 
            RowBox[{"mu", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3"}], "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[Gamma]", "2"]}], "+", 
         RowBox[{
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"mu", "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}],
              "2"], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"mu", "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["mu", "2"]}], "+", 
               RowBox[{"h", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], 
               "-", 
               RowBox[{
                SuperscriptBox["h", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
                SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"2", " ", "mu"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], 
               ")"}], "2"], " ", 
             SuperscriptBox["\[Gamma]", "2"]}]}]], " ", 
          RowBox[{"(", 
           RowBox[{"\[Gamma]", "-", 
            RowBox[{"h", " ", "s", " ", "\[Gamma]"}], "+", 
            RowBox[{"mu", " ", 
             RowBox[{"(", 
              RowBox[{"2", "-", 
               RowBox[{"2", " ", "h", " ", "s"}], "-", 
               RowBox[{"3", " ", "\[Gamma]"}], "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", "s"}], ")"}], " ", "\[Gamma]"}]}], 
              ")"}]}]}], ")"}], " ", 
          RowBox[{"Sign", "[", 
           RowBox[{
            RowBox[{"mu", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3"}], "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", 
            "\[Gamma]", "+", 
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "h", "-", 
               RowBox[{"h", " ", "\[Gamma]"}]}], ")"}]}]}], "]"}]}]}], ")"}], 
       "/", 
       RowBox[{"(", 
        RowBox[{"2", " ", "s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "h"}], " ", "s"}], "+", 
              RowBox[{"mu", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"h", " ", 
                  RowBox[{"(", 
                   RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], 
           "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", "h"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"h", " ", "s"}], "+", 
              RowBox[{"mu", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "3"}], "+", 
                 RowBox[{"h", " ", 
                  RowBox[{"(", 
                   RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
            "\[Gamma]"}]}], ")"}]}], ")"}]}], ")"}]}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.644621612889832*^9, 3.644621618076294*^9}, {
  3.644621676850053*^9, 3.644621729817362*^9}, {3.644804326085734*^9, 
  3.644804358554124*^9}, {3.6448043940509644`*^9, 3.644804397962551*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"equi1", "[", 
    RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{"s", ">", "mu"}], "&&", 
     RowBox[{"h", ">", "0"}], "&&", 
     RowBox[{"h", "<", "1"}], "&&", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"mu", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"h", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", "\[Gamma]", 
        "+", 
        RowBox[{"s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "h", "-", 
           RowBox[{"h", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}], ">", "0"}], "&&", 
     RowBox[{"\[Gamma]", "<", "1"}], "&&", 
     RowBox[{"mu", ">", "0"}], "&&", 
     RowBox[{"mu", "<", "0.01"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.644804311551652*^9, 3.644804314510779*^9}, {
  3.6448043688576603`*^9, 3.644804381520186*^9}, {3.644804436157753*^9, 
  3.644804436764968*^9}, {3.644806810222744*^9, 3.6448068447270193`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"5", " ", 
       SuperscriptBox["mu", "2"]}], "-", 
      RowBox[{"3", " ", "mu", " ", "s"}], "+", 
      RowBox[{
       SuperscriptBox["h", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "s"}], "+", 
         RowBox[{"mu", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], "+", 
      RowBox[{"4", " ", "mu", " ", "\[Gamma]"}], "-", 
      RowBox[{"11", " ", 
       SuperscriptBox["mu", "2"], " ", "\[Gamma]"}], "-", 
      RowBox[{"s", " ", "\[Gamma]"}], "+", 
      RowBox[{"4", " ", "mu", " ", "s", " ", "\[Gamma]"}], "+", 
      SuperscriptBox["\[Gamma]", "2"], "-", 
      RowBox[{"5", " ", "mu", " ", 
       SuperscriptBox["\[Gamma]", "2"]}], "+", 
      RowBox[{"6", " ", 
       SuperscriptBox["mu", "2"], " ", 
       SuperscriptBox["\[Gamma]", "2"]}], "-", 
      RowBox[{
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"mu", "+", 
            RowBox[{"h", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
          "2"], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"mu", "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["mu", "2"]}], "+", 
            RowBox[{"h", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], "-", 
            RowBox[{
             SuperscriptBox["h", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
             SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", "mu"}], "+", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
           "2"], " ", 
          SuperscriptBox["\[Gamma]", "2"]}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"mu", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"h", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", "\[Gamma]", 
         "+", 
         RowBox[{"s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "h", "-", 
            RowBox[{"h", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}], "-", 
      RowBox[{"h", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "s"}], " ", 
          RowBox[{"(", 
           RowBox[{"s", "-", 
            RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
         RowBox[{"mu", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{"6", "+", "s", "-", 
               RowBox[{"7", " ", "\[Gamma]"}]}], ")"}]}], "-", 
            RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["mu", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"4", " ", "\[Gamma]"}], "+", 
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", 
               RowBox[{"5", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}]}], 
        ")"}]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", "s", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "h"}], " ", "s"}], "+", 
         RowBox[{"mu", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"h", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "h"}]}], ")"}], " ", "s", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"h", " ", "s"}], "+", 
         RowBox[{"mu", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"h", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
       "\[Gamma]"}]}], ")"}]}], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "mu", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"h", " ", "s"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "h"}], " ", "s"}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"4", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"h", " ", "s", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"h", " ", "s"}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["mu", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "13"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"14", "+", 
                 RowBox[{"s", " ", 
                  RowBox[{"(", 
                   RowBox[{"12", "-", 
                    RowBox[{"h", " ", 
                    RowBox[{"(", 
                    RowBox[{"10", "+", 
                    RowBox[{"3", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
                ")"}]}]}], ")"}]}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{"5", "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "+", 
                 RowBox[{"s", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "7"}], "+", 
                    RowBox[{"h", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"4", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
                ")"}]}]}], ")"}]}]}], ")"}], " ", "\[Gamma]"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", "mu"}], "+", 
           RowBox[{"h", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
         " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"h", " ", "s"}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
         SuperscriptBox["\[Gamma]", "2"]}], "-", 
        RowBox[{
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"mu", "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
            "2"], "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"mu", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["mu", "2"]}], "+", 
              RowBox[{"h", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], 
              "-", 
              RowBox[{
               SuperscriptBox["h", "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
               SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "mu"}], "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}],
              "2"], " ", 
            SuperscriptBox["\[Gamma]", "2"]}]}]], " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]", "-", 
           RowBox[{"h", " ", "s", " ", "\[Gamma]"}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{"2", " ", "h", " ", "s"}], "-", 
              RowBox[{"3", " ", "\[Gamma]"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "s"}], ")"}], " ", "\[Gamma]"}]}], 
             ")"}]}]}], ")"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", "s", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "h"}], " ", "s"}], "+", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "h"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"h", " ", "s"}], "+", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
           "\[Gamma]"}]}], ")"}]}], ")"}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6448044085329313`*^9, {3.644806823434545*^9, 3.644806829408663*^9}, 
   3.644807220588253*^9, 3.67012022557089*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"equi1gr0", "[", 
    RowBox[{"\[Gamma]_", ",", "mu_", ",", "s_", ",", "h_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"5", " ", 
         SuperscriptBox["mu", "2"]}], "-", 
        RowBox[{"3", " ", "mu", " ", "s"}], "+", 
        RowBox[{
         SuperscriptBox["h", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "s"}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], "+", 
        RowBox[{"4", " ", "mu", " ", "\[Gamma]"}], "-", 
        RowBox[{"11", " ", 
         SuperscriptBox["mu", "2"], " ", "\[Gamma]"}], "-", 
        RowBox[{"s", " ", "\[Gamma]"}], "+", 
        RowBox[{"4", " ", "mu", " ", "s", " ", "\[Gamma]"}], "+", 
        SuperscriptBox["\[Gamma]", "2"], "-", 
        RowBox[{"5", " ", "mu", " ", 
         SuperscriptBox["\[Gamma]", "2"]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox["mu", "2"], " ", 
         SuperscriptBox["\[Gamma]", "2"]}], "-", 
        RowBox[{
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"mu", "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
            "2"], "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"mu", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["mu", "2"]}], "+", 
              RowBox[{"h", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], 
              "-", 
              RowBox[{
               SuperscriptBox["h", "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
               SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "mu"}], "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}],
              "2"], " ", 
            SuperscriptBox["\[Gamma]", "2"]}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", "\[Gamma]",
            "+", 
           RowBox[{"s", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "h", "-", 
              RowBox[{"h", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}], "-", 
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "s"}], " ", 
            RowBox[{"(", 
             RowBox[{"s", "-", 
              RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"s", " ", 
               RowBox[{"(", 
                RowBox[{"6", "+", "s", "-", 
                 RowBox[{"7", " ", "\[Gamma]"}]}], ")"}]}], "-", 
              RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["mu", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"4", " ", "\[Gamma]"}], "+", 
              RowBox[{"s", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", 
                 RowBox[{"5", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", "s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "h"}], " ", "s"}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "h"}]}], ")"}], " ", "s", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"h", " ", "s"}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
         "\[Gamma]"}]}], ")"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "mu", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"h", " ", "s"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "h"}], " ", "s"}], "+", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"4", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"h", " ", "s", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"h", " ", "s"}]}], ")"}]}], "+", 
             RowBox[{
              SuperscriptBox["mu", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "13"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"14", "+", 
                   RowBox[{"s", " ", 
                    RowBox[{"(", 
                    RowBox[{"12", "-", 
                    RowBox[{"h", " ", 
                    RowBox[{"(", 
                    RowBox[{"10", "+", 
                    RowBox[{"3", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
                  ")"}]}]}], ")"}]}], "+", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{"5", "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "4"}], "+", 
                   RowBox[{"s", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "7"}], "+", 
                    RowBox[{"h", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"4", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
                  ")"}]}]}], ")"}]}]}], ")"}], " ", "\[Gamma]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", "mu"}], "+", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
           " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"h", " ", "s"}], "+", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "-", 
          RowBox[{
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"mu", "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], 
               ")"}], "2"], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"mu", "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["mu", "2"]}], "+", 
                RowBox[{"h", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], 
                "-", 
                RowBox[{
                 SuperscriptBox["h", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
                 SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], "+", 
             
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"2", " ", "mu"}], "+", 
                 RowBox[{"h", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], 
                ")"}], "2"], " ", 
              SuperscriptBox["\[Gamma]", "2"]}]}]], " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]", "-", 
             RowBox[{"h", " ", "s", " ", "\[Gamma]"}], "+", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{"2", "-", 
                RowBox[{"2", " ", "h", " ", "s"}], "-", 
                RowBox[{"3", " ", "\[Gamma]"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "+", "s"}], ")"}], " ", "\[Gamma]"}]}], 
               ")"}]}]}], ")"}]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", " ", "s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "h"}], " ", "s"}], "+", 
               RowBox[{"mu", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"h", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"2", " ", "h"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"h", " ", "s"}], "+", 
               RowBox[{"mu", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "3"}], "+", 
                  RowBox[{"h", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ",
              "\[Gamma]"}]}], ")"}]}], ")"}]}], ")"}]}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.644822389358164*^9, 3.644822438275082*^9}, 
   3.64482247368237*^9, {3.644822531085129*^9, 3.644822536785164*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"equi2", "[", 
    RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{"s", ">", "mu"}], "&&", 
     RowBox[{"h", ">", "0"}], "&&", 
     RowBox[{"h", "<", "1"}], "&&", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"mu", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"h", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", "\[Gamma]", 
        "+", 
        RowBox[{"s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "h", "-", 
           RowBox[{"h", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}], ">", "0"}], "&&", 
     RowBox[{"\[Gamma]", "<", "1"}], "&&", 
     RowBox[{"mu", ">", "0"}], "&&", 
     RowBox[{"mu", "<", "0.01"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.644810139744083*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"5", " ", 
       SuperscriptBox["mu", "2"]}], "-", 
      RowBox[{"3", " ", "mu", " ", "s"}], "+", 
      RowBox[{
       SuperscriptBox["h", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "s"}], "+", 
         RowBox[{"mu", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], "+", 
      RowBox[{"4", " ", "mu", " ", "\[Gamma]"}], "-", 
      RowBox[{"11", " ", 
       SuperscriptBox["mu", "2"], " ", "\[Gamma]"}], "-", 
      RowBox[{"s", " ", "\[Gamma]"}], "+", 
      RowBox[{"4", " ", "mu", " ", "s", " ", "\[Gamma]"}], "+", 
      SuperscriptBox["\[Gamma]", "2"], "-", 
      RowBox[{"5", " ", "mu", " ", 
       SuperscriptBox["\[Gamma]", "2"]}], "+", 
      RowBox[{"6", " ", 
       SuperscriptBox["mu", "2"], " ", 
       SuperscriptBox["\[Gamma]", "2"]}], "+", 
      RowBox[{
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"mu", "+", 
            RowBox[{"h", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
          "2"], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"mu", "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["mu", "2"]}], "+", 
            RowBox[{"h", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], "-", 
            RowBox[{
             SuperscriptBox["h", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
             SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", "mu"}], "+", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
           "2"], " ", 
          SuperscriptBox["\[Gamma]", "2"]}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"mu", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"h", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", "\[Gamma]", 
         "+", 
         RowBox[{"s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "h", "-", 
            RowBox[{"h", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}], "-", 
      RowBox[{"h", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "s"}], " ", 
          RowBox[{"(", 
           RowBox[{"s", "-", 
            RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
         RowBox[{"mu", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{"6", "+", "s", "-", 
               RowBox[{"7", " ", "\[Gamma]"}]}], ")"}]}], "-", 
            RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["mu", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"4", " ", "\[Gamma]"}], "+", 
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", 
               RowBox[{"5", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}]}], 
        ")"}]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", "s", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "h"}], " ", "s"}], "+", 
         RowBox[{"mu", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"h", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "h"}]}], ")"}], " ", "s", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"h", " ", "s"}], "+", 
         RowBox[{"mu", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"h", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
       "\[Gamma]"}]}], ")"}]}], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "mu", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"h", " ", "s"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "h"}], " ", "s"}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"4", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"h", " ", "s", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"h", " ", "s"}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["mu", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "13"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"14", "+", 
                 RowBox[{"s", " ", 
                  RowBox[{"(", 
                   RowBox[{"12", "-", 
                    RowBox[{"h", " ", 
                    RowBox[{"(", 
                    RowBox[{"10", "+", 
                    RowBox[{"3", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
                ")"}]}]}], ")"}]}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{"5", "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "+", 
                 RowBox[{"s", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "7"}], "+", 
                    RowBox[{"h", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"4", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
                ")"}]}]}], ")"}]}]}], ")"}], " ", "\[Gamma]"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", "mu"}], "+", 
           RowBox[{"h", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
         " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"h", " ", "s"}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
         SuperscriptBox["\[Gamma]", "2"]}], "+", 
        RowBox[{
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"mu", "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
            "2"], "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"mu", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["mu", "2"]}], "+", 
              RowBox[{"h", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], 
              "-", 
              RowBox[{
               SuperscriptBox["h", "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
               SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "mu"}], "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}],
              "2"], " ", 
            SuperscriptBox["\[Gamma]", "2"]}]}]], " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]", "-", 
           RowBox[{"h", " ", "s", " ", "\[Gamma]"}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{"2", " ", "h", " ", "s"}], "-", 
              RowBox[{"3", " ", "\[Gamma]"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "s"}], ")"}], " ", "\[Gamma]"}]}], 
             ")"}]}]}], ")"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", "s", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "h"}], " ", "s"}], "+", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "h"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"h", " ", "s"}], "+", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
           "\[Gamma]"}]}], ")"}]}], ")"}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.644810401123554*^9, 3.670120517990184*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"equi2gr0", "[", 
    RowBox[{"\[Gamma]_", ",", "mu_", ",", "s_", ",", "h_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"5", " ", 
         SuperscriptBox["mu", "2"]}], "-", 
        RowBox[{"3", " ", "mu", " ", "s"}], "+", 
        RowBox[{
         SuperscriptBox["h", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "s"}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], "+", 
        RowBox[{"4", " ", "mu", " ", "\[Gamma]"}], "-", 
        RowBox[{"11", " ", 
         SuperscriptBox["mu", "2"], " ", "\[Gamma]"}], "-", 
        RowBox[{"s", " ", "\[Gamma]"}], "+", 
        RowBox[{"4", " ", "mu", " ", "s", " ", "\[Gamma]"}], "+", 
        SuperscriptBox["\[Gamma]", "2"], "-", 
        RowBox[{"5", " ", "mu", " ", 
         SuperscriptBox["\[Gamma]", "2"]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox["mu", "2"], " ", 
         SuperscriptBox["\[Gamma]", "2"]}], "+", 
        RowBox[{
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"mu", "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
            "2"], "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"mu", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["mu", "2"]}], "+", 
              RowBox[{"h", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], 
              "-", 
              RowBox[{
               SuperscriptBox["h", "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
               SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "mu"}], "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}],
              "2"], " ", 
            SuperscriptBox["\[Gamma]", "2"]}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", "\[Gamma]",
            "+", 
           RowBox[{"s", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "h", "-", 
              RowBox[{"h", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}], "-", 
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "s"}], " ", 
            RowBox[{"(", 
             RowBox[{"s", "-", 
              RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"s", " ", 
               RowBox[{"(", 
                RowBox[{"6", "+", "s", "-", 
                 RowBox[{"7", " ", "\[Gamma]"}]}], ")"}]}], "-", 
              RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["mu", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"4", " ", "\[Gamma]"}], "+", 
              RowBox[{"s", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", 
                 RowBox[{"5", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", "s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "h"}], " ", "s"}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "h"}]}], ")"}], " ", "s", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"h", " ", "s"}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
         "\[Gamma]"}]}], ")"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "mu", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"h", " ", "s"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "h"}], " ", "s"}], "+", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"4", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"h", " ", "s", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"h", " ", "s"}]}], ")"}]}], "+", 
             RowBox[{
              SuperscriptBox["mu", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "13"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"14", "+", 
                   RowBox[{"s", " ", 
                    RowBox[{"(", 
                    RowBox[{"12", "-", 
                    RowBox[{"h", " ", 
                    RowBox[{"(", 
                    RowBox[{"10", "+", 
                    RowBox[{"3", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
                  ")"}]}]}], ")"}]}], "+", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{"5", "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "4"}], "+", 
                   RowBox[{"s", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "7"}], "+", 
                    RowBox[{"h", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"4", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
                  ")"}]}]}], ")"}]}]}], ")"}], " ", "\[Gamma]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", "mu"}], "+", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
           " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"h", " ", "s"}], "+", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"mu", "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], 
               ")"}], "2"], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"mu", "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["mu", "2"]}], "+", 
                RowBox[{"h", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], 
                "-", 
                RowBox[{
                 SuperscriptBox["h", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
                 SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], "+", 
             
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"2", " ", "mu"}], "+", 
                 RowBox[{"h", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], 
                ")"}], "2"], " ", 
              SuperscriptBox["\[Gamma]", "2"]}]}]], " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]", "-", 
             RowBox[{"h", " ", "s", " ", "\[Gamma]"}], "+", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{"2", "-", 
                RowBox[{"2", " ", "h", " ", "s"}], "-", 
                RowBox[{"3", " ", "\[Gamma]"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "+", "s"}], ")"}], " ", "\[Gamma]"}]}], 
               ")"}]}]}], ")"}]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", " ", "s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "h"}], " ", "s"}], "+", 
               RowBox[{"mu", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"h", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"2", " ", "h"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"h", " ", "s"}], "+", 
               RowBox[{"mu", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "3"}], "+", 
                  RowBox[{"h", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ",
              "\[Gamma]"}]}], ")"}]}], ")"}]}], ")"}]}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6448224522595673`*^9, 3.644822484090288*^9}, {
  3.64482254276337*^9, 3.644822546032587*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"equi1", "[", 
    RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{"s", ">", "mu"}], "&&", 
     RowBox[{"h", ">", "0"}], "&&", 
     RowBox[{"h", "<", "1"}], "&&", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"mu", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"h", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", "\[Gamma]", 
        "+", 
        RowBox[{"s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "h", "-", 
           RowBox[{"h", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}], "<", "0"}], "&&", 
     RowBox[{"\[Gamma]", "<", "1"}], "&&", 
     RowBox[{"mu", ">", "0"}], "&&", 
     RowBox[{"mu", "<", "0.01"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.644804311551652*^9, 3.644804314510779*^9}, {
   3.6448043688576603`*^9, 3.644804381520186*^9}, {3.644804436157753*^9, 
   3.644804436764968*^9}, {3.644806810222744*^9, 3.6448068447270193`*^9}, 
   3.6448755697696*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"5", " ", 
       SuperscriptBox["mu", "2"]}], "-", 
      RowBox[{"3", " ", "mu", " ", "s"}], "+", 
      RowBox[{
       SuperscriptBox["h", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "s"}], "+", 
         RowBox[{"mu", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], "+", 
      RowBox[{"4", " ", "mu", " ", "\[Gamma]"}], "-", 
      RowBox[{"11", " ", 
       SuperscriptBox["mu", "2"], " ", "\[Gamma]"}], "-", 
      RowBox[{"s", " ", "\[Gamma]"}], "+", 
      RowBox[{"4", " ", "mu", " ", "s", " ", "\[Gamma]"}], "+", 
      SuperscriptBox["\[Gamma]", "2"], "-", 
      RowBox[{"5", " ", "mu", " ", 
       SuperscriptBox["\[Gamma]", "2"]}], "+", 
      RowBox[{"6", " ", 
       SuperscriptBox["mu", "2"], " ", 
       SuperscriptBox["\[Gamma]", "2"]}], "-", 
      RowBox[{"h", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "s"}], " ", 
          RowBox[{"(", 
           RowBox[{"s", "-", 
            RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
         RowBox[{"mu", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{"6", "+", "s", "-", 
               RowBox[{"7", " ", "\[Gamma]"}]}], ")"}]}], "-", 
            RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["mu", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"4", " ", "\[Gamma]"}], "+", 
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", 
               RowBox[{"5", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}]}], 
        ")"}]}], "-", 
      RowBox[{
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"mu", "+", 
            RowBox[{"h", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
          "2"], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"mu", "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["mu", "2"]}], "+", 
            RowBox[{"h", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], "-", 
            RowBox[{
             SuperscriptBox["h", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
             SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", "mu"}], "+", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
           "2"], " ", 
          SuperscriptBox["\[Gamma]", "2"]}]}]], " ", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"mu", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"h", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", "\[Gamma]", 
         "+", 
         RowBox[{"s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "h", "-", 
            RowBox[{"h", " ", "\[Gamma]"}]}], ")"}]}]}], "]"}]}]}], ")"}], 
    "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", "s", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "h"}], " ", "s"}], "+", 
         RowBox[{"mu", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"h", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "h"}]}], ")"}], " ", "s", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"h", " ", "s"}], "+", 
         RowBox[{"mu", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"h", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
       "\[Gamma]"}]}], ")"}]}], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "mu", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"h", " ", "s"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "h"}], " ", "s"}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"4", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"h", " ", "s", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"h", " ", "s"}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["mu", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "13"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"14", "+", 
                 RowBox[{"s", " ", 
                  RowBox[{"(", 
                   RowBox[{"12", "-", 
                    RowBox[{"h", " ", 
                    RowBox[{"(", 
                    RowBox[{"10", "+", 
                    RowBox[{"3", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
                ")"}]}]}], ")"}]}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{"5", "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "+", 
                 RowBox[{"s", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "7"}], "+", 
                    RowBox[{"h", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"4", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
                ")"}]}]}], ")"}]}]}], ")"}], " ", "\[Gamma]"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", "mu"}], "+", 
           RowBox[{"h", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
         " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"h", " ", "s"}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
         SuperscriptBox["\[Gamma]", "2"]}], "+", 
        RowBox[{
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"mu", "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
            "2"], "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"mu", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["mu", "2"]}], "+", 
              RowBox[{"h", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], 
              "-", 
              RowBox[{
               SuperscriptBox["h", "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
               SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "mu"}], "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}],
              "2"], " ", 
            SuperscriptBox["\[Gamma]", "2"]}]}]], " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]", "-", 
           RowBox[{"h", " ", "s", " ", "\[Gamma]"}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{"2", " ", "h", " ", "s"}], "-", 
              RowBox[{"3", " ", "\[Gamma]"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "s"}], ")"}], " ", "\[Gamma]"}]}], 
             ")"}]}]}], ")"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", "s", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "h"}], " ", "s"}], "+", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "h"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"h", " ", "s"}], "+", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
           "\[Gamma]"}]}], ")"}]}], ")"}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6448782090415173`*^9, 3.670122871494665*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"equi1ls0", "[", 
    RowBox[{"\[Gamma]_", ",", "mu_", ",", "s_", ",", "h_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"5", " ", 
         SuperscriptBox["mu", "2"]}], "-", 
        RowBox[{"3", " ", "mu", " ", "s"}], "+", 
        RowBox[{
         SuperscriptBox["h", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "s"}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], "+", 
        RowBox[{"4", " ", "mu", " ", "\[Gamma]"}], "-", 
        RowBox[{"11", " ", 
         SuperscriptBox["mu", "2"], " ", "\[Gamma]"}], "-", 
        RowBox[{"s", " ", "\[Gamma]"}], "+", 
        RowBox[{"4", " ", "mu", " ", "s", " ", "\[Gamma]"}], "+", 
        SuperscriptBox["\[Gamma]", "2"], "-", 
        RowBox[{"5", " ", "mu", " ", 
         SuperscriptBox["\[Gamma]", "2"]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox["mu", "2"], " ", 
         SuperscriptBox["\[Gamma]", "2"]}], "-", 
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "s"}], " ", 
            RowBox[{"(", 
             RowBox[{"s", "-", 
              RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"s", " ", 
               RowBox[{"(", 
                RowBox[{"6", "+", "s", "-", 
                 RowBox[{"7", " ", "\[Gamma]"}]}], ")"}]}], "-", 
              RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["mu", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"4", " ", "\[Gamma]"}], "+", 
              RowBox[{"s", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", 
                 RowBox[{"5", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}], "-", 
        RowBox[{
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"mu", "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
            "2"], "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"mu", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["mu", "2"]}], "+", 
              RowBox[{"h", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], 
              "-", 
              RowBox[{
               SuperscriptBox["h", "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
               SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "mu"}], "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}],
              "2"], " ", 
            SuperscriptBox["\[Gamma]", "2"]}]}]], " ", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", "\[Gamma]",
            "+", 
           RowBox[{"s", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "h", "-", 
              RowBox[{"h", " ", "\[Gamma]"}]}], ")"}]}]}], "]"}]}]}], ")"}], 
      "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", "s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "h"}], " ", "s"}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "h"}]}], ")"}], " ", "s", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"h", " ", "s"}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
         "\[Gamma]"}]}], ")"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "mu", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"h", " ", "s"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "h"}], " ", "s"}], "+", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"4", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"h", " ", "s", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"h", " ", "s"}]}], ")"}]}], "+", 
             RowBox[{
              SuperscriptBox["mu", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "13"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"14", "+", 
                   RowBox[{"s", " ", 
                    RowBox[{"(", 
                    RowBox[{"12", "-", 
                    RowBox[{"h", " ", 
                    RowBox[{"(", 
                    RowBox[{"10", "+", 
                    RowBox[{"3", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
                  ")"}]}]}], ")"}]}], "+", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{"5", "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "4"}], "+", 
                   RowBox[{"s", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "7"}], "+", 
                    RowBox[{"h", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"4", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
                  ")"}]}]}], ")"}]}]}], ")"}], " ", "\[Gamma]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", "mu"}], "+", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
           " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"h", " ", "s"}], "+", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"mu", "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], 
               ")"}], "2"], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"mu", "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["mu", "2"]}], "+", 
                RowBox[{"h", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], 
                "-", 
                RowBox[{
                 SuperscriptBox["h", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
                 SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], "+", 
             
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"2", " ", "mu"}], "+", 
                 RowBox[{"h", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], 
                ")"}], "2"], " ", 
              SuperscriptBox["\[Gamma]", "2"]}]}]], " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]", "-", 
             RowBox[{"h", " ", "s", " ", "\[Gamma]"}], "+", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{"2", "-", 
                RowBox[{"2", " ", "h", " ", "s"}], "-", 
                RowBox[{"3", " ", "\[Gamma]"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "+", "s"}], ")"}], " ", "\[Gamma]"}]}], 
               ")"}]}]}], ")"}]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", " ", "s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "h"}], " ", "s"}], "+", 
               RowBox[{"mu", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"h", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"2", " ", "h"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"h", " ", "s"}], "+", 
               RowBox[{"mu", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "3"}], "+", 
                  RowBox[{"h", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ",
              "\[Gamma]"}]}], ")"}]}], ")"}]}], ")"}]}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.644875635644203*^9, 3.644875639699188*^9}, {
  3.6448847908484*^9, 3.644884810346096*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"equi2", "[", 
    RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{"s", ">", "mu"}], "&&", 
     RowBox[{"h", ">", "0"}], "&&", 
     RowBox[{"h", "<", "1"}], "&&", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"mu", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"h", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", "\[Gamma]", 
        "+", 
        RowBox[{"s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "h", "-", 
           RowBox[{"h", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}], "<", "0"}], "&&", 
     RowBox[{"\[Gamma]", "<", "1"}], "&&", 
     RowBox[{"mu", ">", "0"}], "&&", 
     RowBox[{"mu", "<", "0.01"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.644875596274847*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"5", " ", 
       SuperscriptBox["mu", "2"]}], "-", 
      RowBox[{"3", " ", "mu", " ", "s"}], "+", 
      RowBox[{
       SuperscriptBox["h", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "s"}], "+", 
         RowBox[{"mu", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], "+", 
      RowBox[{"4", " ", "mu", " ", "\[Gamma]"}], "-", 
      RowBox[{"11", " ", 
       SuperscriptBox["mu", "2"], " ", "\[Gamma]"}], "-", 
      RowBox[{"s", " ", "\[Gamma]"}], "+", 
      RowBox[{"4", " ", "mu", " ", "s", " ", "\[Gamma]"}], "+", 
      SuperscriptBox["\[Gamma]", "2"], "-", 
      RowBox[{"5", " ", "mu", " ", 
       SuperscriptBox["\[Gamma]", "2"]}], "+", 
      RowBox[{"6", " ", 
       SuperscriptBox["mu", "2"], " ", 
       SuperscriptBox["\[Gamma]", "2"]}], "-", 
      RowBox[{"h", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "s"}], " ", 
          RowBox[{"(", 
           RowBox[{"s", "-", 
            RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
         RowBox[{"mu", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{"6", "+", "s", "-", 
               RowBox[{"7", " ", "\[Gamma]"}]}], ")"}]}], "-", 
            RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["mu", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"4", " ", "\[Gamma]"}], "+", 
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", 
               RowBox[{"5", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"mu", "+", 
            RowBox[{"h", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
          "2"], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"mu", "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["mu", "2"]}], "+", 
            RowBox[{"h", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], "-", 
            RowBox[{
             SuperscriptBox["h", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
             SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", "mu"}], "+", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
           "2"], " ", 
          SuperscriptBox["\[Gamma]", "2"]}]}]], " ", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"mu", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"h", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", "\[Gamma]", 
         "+", 
         RowBox[{"s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "h", "-", 
            RowBox[{"h", " ", "\[Gamma]"}]}], ")"}]}]}], "]"}]}]}], ")"}], 
    "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", "s", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "h"}], " ", "s"}], "+", 
         RowBox[{"mu", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"h", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "h"}]}], ")"}], " ", "s", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"h", " ", "s"}], "+", 
         RowBox[{"mu", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"h", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
       "\[Gamma]"}]}], ")"}]}], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "mu", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"h", " ", "s"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "h"}], " ", "s"}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"4", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"h", " ", "s", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"h", " ", "s"}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["mu", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "13"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"14", "+", 
                 RowBox[{"s", " ", 
                  RowBox[{"(", 
                   RowBox[{"12", "-", 
                    RowBox[{"h", " ", 
                    RowBox[{"(", 
                    RowBox[{"10", "+", 
                    RowBox[{"3", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
                ")"}]}]}], ")"}]}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{"5", "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "+", 
                 RowBox[{"s", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "7"}], "+", 
                    RowBox[{"h", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"4", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
                ")"}]}]}], ")"}]}]}], ")"}], " ", "\[Gamma]"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", "mu"}], "+", 
           RowBox[{"h", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
         " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"h", " ", "s"}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
         SuperscriptBox["\[Gamma]", "2"]}], "-", 
        RowBox[{
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"mu", "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
            "2"], "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"mu", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["mu", "2"]}], "+", 
              RowBox[{"h", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], 
              "-", 
              RowBox[{
               SuperscriptBox["h", "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
               SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "mu"}], "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}],
              "2"], " ", 
            SuperscriptBox["\[Gamma]", "2"]}]}]], " ", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]", "-", 
           RowBox[{"h", " ", "s", " ", "\[Gamma]"}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{"2", " ", "h", " ", "s"}], "-", 
              RowBox[{"3", " ", "\[Gamma]"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "s"}], ")"}], " ", "\[Gamma]"}]}], 
             ")"}]}]}], ")"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", "s", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "h"}], " ", "s"}], "+", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "h"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"h", " ", "s"}], "+", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
           "\[Gamma]"}]}], ")"}]}], ")"}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.644880157289404*^9, 3.670124390733942*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"equi2ls0", "[", 
    RowBox[{"\[Gamma]_", ",", "mu_", ",", "s_", ",", "h_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"5", " ", 
         SuperscriptBox["mu", "2"]}], "-", 
        RowBox[{"3", " ", "mu", " ", "s"}], "+", 
        RowBox[{
         SuperscriptBox["h", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "s"}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], "+", 
        RowBox[{"4", " ", "mu", " ", "\[Gamma]"}], "-", 
        RowBox[{"11", " ", 
         SuperscriptBox["mu", "2"], " ", "\[Gamma]"}], "-", 
        RowBox[{"s", " ", "\[Gamma]"}], "+", 
        RowBox[{"4", " ", "mu", " ", "s", " ", "\[Gamma]"}], "+", 
        SuperscriptBox["\[Gamma]", "2"], "-", 
        RowBox[{"5", " ", "mu", " ", 
         SuperscriptBox["\[Gamma]", "2"]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox["mu", "2"], " ", 
         SuperscriptBox["\[Gamma]", "2"]}], "-", 
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "s"}], " ", 
            RowBox[{"(", 
             RowBox[{"s", "-", 
              RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"s", " ", 
               RowBox[{"(", 
                RowBox[{"6", "+", "s", "-", 
                 RowBox[{"7", " ", "\[Gamma]"}]}], ")"}]}], "-", 
              RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["mu", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"4", " ", "\[Gamma]"}], "+", 
              RowBox[{"s", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", 
                 RowBox[{"5", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}], "+", 
        RowBox[{
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"mu", "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
            "2"], "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"mu", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["mu", "2"]}], "+", 
              RowBox[{"h", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], 
              "-", 
              RowBox[{
               SuperscriptBox["h", "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
               SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "mu"}], "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}],
              "2"], " ", 
            SuperscriptBox["\[Gamma]", "2"]}]}]], " ", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", "\[Gamma]",
            "+", 
           RowBox[{"s", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "h", "-", 
              RowBox[{"h", " ", "\[Gamma]"}]}], ")"}]}]}], "]"}]}]}], ")"}], 
      "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", "s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "h"}], " ", "s"}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "h"}]}], ")"}], " ", "s", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"h", " ", "s"}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
         "\[Gamma]"}]}], ")"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "mu", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"h", " ", "s"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "h"}], " ", "s"}], "+", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"4", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"h", " ", "s", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"h", " ", "s"}]}], ")"}]}], "+", 
             RowBox[{
              SuperscriptBox["mu", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "13"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"14", "+", 
                   RowBox[{"s", " ", 
                    RowBox[{"(", 
                    RowBox[{"12", "-", 
                    RowBox[{"h", " ", 
                    RowBox[{"(", 
                    RowBox[{"10", "+", 
                    RowBox[{"3", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
                  ")"}]}]}], ")"}]}], "+", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{"5", "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "4"}], "+", 
                   RowBox[{"s", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "7"}], "+", 
                    RowBox[{"h", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"4", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
                  ")"}]}]}], ")"}]}]}], ")"}], " ", "\[Gamma]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", "mu"}], "+", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
           " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"h", " ", "s"}], "+", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "-", 
          RowBox[{
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"mu", "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], 
               ")"}], "2"], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"mu", "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["mu", "2"]}], "+", 
                RowBox[{"h", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], 
                "-", 
                RowBox[{
                 SuperscriptBox["h", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
                 SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], "+", 
             
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"2", " ", "mu"}], "+", 
                 RowBox[{"h", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], 
                ")"}], "2"], " ", 
              SuperscriptBox["\[Gamma]", "2"]}]}]], " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]", "-", 
             RowBox[{"h", " ", "s", " ", "\[Gamma]"}], "+", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{"2", "-", 
                RowBox[{"2", " ", "h", " ", "s"}], "-", 
                RowBox[{"3", " ", "\[Gamma]"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "+", "s"}], ")"}], " ", "\[Gamma]"}]}], 
               ")"}]}]}], ")"}]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", " ", "s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "h"}], " ", "s"}], "+", 
               RowBox[{"mu", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"h", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"2", " ", "h"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"h", " ", "s"}], "+", 
               RowBox[{"mu", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "3"}], "+", 
                  RowBox[{"h", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ",
              "\[Gamma]"}]}], ")"}]}], ")"}]}], ")"}]}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.644875643483326*^9, 3.644875643553673*^9}, {
  3.6448848065438013`*^9, 3.644884807914435*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Gamma]CO", "/.", 
  RowBox[{"{", 
   RowBox[{"h", "\[Rule]", "0.5"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.644822647890534*^9, 3.64482269134953*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox[
   RowBox[{"1", "-", "s"}], 
   RowBox[{"1", "-", 
    RowBox[{"0.5`", " ", "s"}], "-", 
    RowBox[{"mu", " ", 
     RowBox[{"(", 
      RowBox[{"3", "-", 
       RowBox[{"0.5`", " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}]]}]], "Output",
 CellChangeTimes->{3.644822659024579*^9, 3.644822692760803*^9, 
  3.670124390798337*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"mu", ",", "s"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"equi1gr0", "[", 
    RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "0"}], "]"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{"s", ">", "mu"}], "&&", 
     RowBox[{"h", ">", "0"}], "&&", 
     RowBox[{"h", "<", "1"}], "&&", 
     RowBox[{"\[Gamma]", ">", "0"}], "&&", 
     RowBox[{"\[Gamma]", "<", "1"}], "&&", 
     RowBox[{"mu", ">", "0"}], "&&", 
     RowBox[{"mu", "<", "0.01"}]}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.644823573367115*^9, 3.6448236315789747`*^9}, {
  3.644823755932411*^9, 3.644823759408396*^9}, {3.6448237944798317`*^9, 
  3.6448237946387453`*^9}, {3.644823857485653*^9, 3.644823857581235*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", "mu", " ", 
      RowBox[{"(", 
       RowBox[{"mu", "-", "s"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], 
     RowBox[{"s", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\[Gamma]"}], "+", 
        RowBox[{"mu", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{"3", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}]]}], ",", 
   FractionBox["mu", "s"]}], "}"}]], "Output",
 CellChangeTimes->{{3.644823589114607*^9, 3.6448235998309813`*^9}, 
   3.644823634432832*^9, 3.644823760490972*^9, 3.644823795756826*^9, 
   3.644823859398759*^9, 3.670124390876563*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"GraphicsGrid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{"Log10", "/@", 
            RowBox[{"{", 
             RowBox[{"equi1ls0", "[", 
              RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}], 
             "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Gamma]", ",", "0", ",", "0.2"}], "}"}], ",", 
          RowBox[{"PlotRange", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "6.2"}], ",", "0.2"}], "}"}]}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], ",", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{"Log10", "/@", 
            RowBox[{"{", 
             RowBox[{"equi1gr0", "[", 
              RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}], 
             "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Gamma]", ",", "0", ",", "0.2"}], "}"}], ",", 
          RowBox[{"PlotRange", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "6.2"}], ",", "0.2"}], "}"}]}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{"Log10", "/@", 
            RowBox[{"{", 
             RowBox[{"equi2ls0", "[", 
              RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}], 
             "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Gamma]", ",", "0", ",", "0.2"}], "}"}], ",", 
          RowBox[{"PlotRange", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "6.2"}], ",", "0.2"}], "}"}]}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], ",", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{"Log10", "/@", 
            RowBox[{"{", 
             RowBox[{"equi2gr0", "[", 
              RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}], 
             "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Gamma]", ",", "0", ",", "0.2"}], "}"}], ",", 
          RowBox[{"PlotRange", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "6.2"}], ",", "0.2"}], "}"}]}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}], "}"}]}], "}"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mu", ",", "0.00001"}], "}"}], ",", "0", ",", "0.001"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s", ",", "0.01"}], "}"}], ",", "0", ",", "0.1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"h", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.64482250980652*^9, 3.6448225138685017`*^9}, {
   3.6448225706995583`*^9, 3.644822610700356*^9}, {3.644822781918804*^9, 
   3.644822791595385*^9}, {3.644822822745058*^9, 3.644822823559781*^9}, {
   3.6448228734522343`*^9, 3.6448229294368553`*^9}, {3.644823555481827*^9, 
   3.644823555658074*^9}, {3.644823809174556*^9, 3.6448238092539873`*^9}, {
   3.644823865239996*^9, 3.644823865646921*^9}, {3.644824591989596*^9, 
   3.6448246939966516`*^9}, 3.644884840690671*^9, {3.6448848904857607`*^9, 
   3.6448850202413397`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`h$$ = 0, $CellContext`mu$$ = 
    0.00001, $CellContext`s$$ = 0.01, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`mu$$], 0.00001}, 0, 0.001}, {{
       Hold[$CellContext`s$$], 0.01}, 0, 0.1}, {
      Hold[$CellContext`h$$], 0, 1}}, Typeset`size$$ = {450., {135., 143.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`mu$21165429$$ = 0, $CellContext`s$21165430$$ = 
    0, $CellContext`h$21165431$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`h$$ = 0, $CellContext`mu$$ = 
        0.00001, $CellContext`s$$ = 0.01}, "ControllerVariables" :> {
        Hold[$CellContext`mu$$, $CellContext`mu$21165429$$, 0], 
        Hold[$CellContext`s$$, $CellContext`s$21165430$$, 0], 
        Hold[$CellContext`h$$, $CellContext`h$21165431$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> GraphicsGrid[{{
          Plot[
           Evaluate[
            Map[Log10, {
              $CellContext`equi1ls0[$CellContext`\[Gamma], $CellContext`mu$$, \
$CellContext`s$$, $CellContext`h$$]}]], {$CellContext`\[Gamma], 0, 0.2}, 
           PlotRange -> {-6.2, 0.2}, Frame -> True], 
          Plot[
           Evaluate[
            Map[Log10, {
              $CellContext`equi1gr0[$CellContext`\[Gamma], $CellContext`mu$$, \
$CellContext`s$$, $CellContext`h$$]}]], {$CellContext`\[Gamma], 0, 0.2}, 
           PlotRange -> {-6.2, 0.2}, Frame -> True]}, {
          Plot[
           Evaluate[
            Map[Log10, {
              $CellContext`equi2ls0[$CellContext`\[Gamma], $CellContext`mu$$, \
$CellContext`s$$, $CellContext`h$$]}]], {$CellContext`\[Gamma], 0, 0.2}, 
           PlotRange -> {-6.2, 0.2}, Frame -> True], 
          Plot[
           Evaluate[
            Map[Log10, {
              $CellContext`equi2gr0[$CellContext`\[Gamma], $CellContext`mu$$, \
$CellContext`s$$, $CellContext`h$$]}]], {$CellContext`\[Gamma], 0, 0.2}, 
           PlotRange -> {-6.2, 0.2}, Frame -> True]}}], 
      "Specifications" :> {{{$CellContext`mu$$, 0.00001}, 0, 
         0.001}, {{$CellContext`s$$, 0.01}, 0, 0.1}, {$CellContext`h$$, 0, 
         1}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{495., {209., 214.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.64488484130301*^9, 3.644885023752637*^9, 
  3.670124390912443*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "exclul"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\({\\(\\(Im[\\(\\(equi1ls0[\\(\\(\[Gamma], \
0.00001`, 0.01`, 0\\)\\)]\\)\\)]\\)\\) - 0}\\)\[NoBreak] must be a list of \
equalities or real-valued functions. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/Plot\\\", ButtonNote -> \
\\\"Plot::exclul\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.67071780238896*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "exclul"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\({\\(\\(Im[\\(\\(equi1gr0[\\(\\(\[Gamma], \
0.00001`, 0.01`, 0\\)\\)]\\)\\)]\\)\\) - 0}\\)\[NoBreak] must be a list of \
equalities or real-valued functions. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/Plot\\\", ButtonNote -> \
\\\"Plot::exclul\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6707178024757442`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Plot", "::", "exclul"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\({\\(\\(Im[\\(\\(equi2ls0[\\(\\(\[Gamma], \
0.00001`, 0.01`, 0\\)\\)]\\)\\)]\\)\\) - 0}\\)\[NoBreak] must be a list of \
equalities or real-valued functions. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/Plot\\\", ButtonNote -> \
\\\"Plot::exclul\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6707178025615892`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Plot :: \
exclul\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.670717802617087*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.644823848806707*^9, 3.644823854725956*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Final equilibrium formula and some approximations", "Subsubsection",
 CellChangeTimes->{{3.644886203178288*^9, 3.644886227109634*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"equilibrium", "[", 
    RowBox[{"\[Gamma]_", ",", "mu_", ",", "s_", ",", "h_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"5", " ", 
         SuperscriptBox["mu", "2"]}], "-", 
        RowBox[{"3", " ", "mu", " ", "s"}], "+", 
        RowBox[{
         SuperscriptBox["h", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "s"}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], "+", 
        RowBox[{"4", " ", "mu", " ", "\[Gamma]"}], "-", 
        RowBox[{"11", " ", 
         SuperscriptBox["mu", "2"], " ", "\[Gamma]"}], "-", 
        RowBox[{"s", " ", "\[Gamma]"}], "+", 
        RowBox[{"4", " ", "mu", " ", "s", " ", "\[Gamma]"}], "+", 
        SuperscriptBox["\[Gamma]", "2"], "-", 
        RowBox[{"5", " ", "mu", " ", 
         SuperscriptBox["\[Gamma]", "2"]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox["mu", "2"], " ", 
         SuperscriptBox["\[Gamma]", "2"]}], "-", 
        RowBox[{
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"mu", "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
            "2"], "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"mu", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["mu", "2"]}], "+", 
              RowBox[{"h", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], 
              "-", 
              RowBox[{
               SuperscriptBox["h", "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
               SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "mu"}], "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}],
              "2"], " ", 
            SuperscriptBox["\[Gamma]", "2"]}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", "\[Gamma]",
            "+", 
           RowBox[{"s", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "h", "-", 
              RowBox[{"h", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}], "-", 
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "s"}], " ", 
            RowBox[{"(", 
             RowBox[{"s", "-", 
              RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"s", " ", 
               RowBox[{"(", 
                RowBox[{"6", "+", "s", "-", 
                 RowBox[{"7", " ", "\[Gamma]"}]}], ")"}]}], "-", 
              RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["mu", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"4", " ", "\[Gamma]"}], "+", 
              RowBox[{"s", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", 
                 RowBox[{"5", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", "s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "h"}], " ", "s"}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "h"}]}], ")"}], " ", "s", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"h", " ", "s"}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
         "\[Gamma]"}]}], ")"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "mu", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"h", " ", "s"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "h"}], " ", "s"}], "+", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"4", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"h", " ", "s", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"h", " ", "s"}]}], ")"}]}], "+", 
             RowBox[{
              SuperscriptBox["mu", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "13"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"14", "+", 
                   RowBox[{"s", " ", 
                    RowBox[{"(", 
                    RowBox[{"12", "-", 
                    RowBox[{"h", " ", 
                    RowBox[{"(", 
                    RowBox[{"10", "+", 
                    RowBox[{"3", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
                  ")"}]}]}], ")"}]}], "+", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{"5", "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "4"}], "+", 
                   RowBox[{"s", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "7"}], "+", 
                    RowBox[{"h", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"4", " ", "s"}]}], ")"}]}]}], ")"}]}]}], 
                  ")"}]}]}], ")"}]}]}], ")"}], " ", "\[Gamma]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", "mu"}], "+", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
           " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"h", " ", "s"}], "+", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "-", 
          RowBox[{
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"mu", "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], 
               ")"}], "2"], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"mu", "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["mu", "2"]}], "+", 
                RowBox[{"h", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], 
                "-", 
                RowBox[{
                 SuperscriptBox["h", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
                 SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], "+", 
             
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 RowBox[{"2", " ", "mu"}], "+", 
                 RowBox[{"h", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], 
                ")"}], "2"], " ", 
              SuperscriptBox["\[Gamma]", "2"]}]}]], " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]", "-", 
             RowBox[{"h", " ", "s", " ", "\[Gamma]"}], "+", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{"2", "-", 
                RowBox[{"2", " ", "h", " ", "s"}], "-", 
                RowBox[{"3", " ", "\[Gamma]"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "+", "s"}], ")"}], " ", "\[Gamma]"}]}], 
               ")"}]}]}], ")"}]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", " ", "s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "h"}], " ", "s"}], "+", 
               RowBox[{"mu", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"h", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], 
            "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"2", " ", "h"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"h", " ", "s"}], "+", 
               RowBox[{"mu", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "3"}], "+", 
                  RowBox[{"h", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ",
              "\[Gamma]"}]}], ")"}]}], ")"}]}], ")"}]}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.64488622995735*^9, 3.6448862936812077`*^9}, {
   3.6448865450223093`*^9, 3.644886571263132*^9}, {3.644886661428274*^9, 
   3.644886662906678*^9}, {3.644887276326474*^9, 3.6448872893819323`*^9}, 
   3.64489355582344*^9, 3.6448935871830177`*^9, {3.644893619769665*^9, 
   3.644893658928335*^9}, 3.644893761630741*^9, {3.644893915339272*^9, 
   3.644893930205076*^9}, 3.644893974694045*^9, {3.644894440815213*^9, 
   3.644894446714011*^9}}],

Cell["Writing the equilibrium using some helper functions:", "Text",
 CellChangeTimes->{{3.6448944205613413`*^9, 3.644894436087113*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HELP1", "[", 
     RowBox[{"\[Gamma]_", ",", "mu_", ",", "s_", ",", "h_"}], "]"}], ":=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"mu", "+", 
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], "2"], 
     "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"mu", "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["mu", "2"]}], "+", 
        RowBox[{"h", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], "-", 
        RowBox[{
         SuperscriptBox["h", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
         SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"2", " ", "mu"}], "+", 
         RowBox[{"h", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], "2"],
       " ", 
      SuperscriptBox["\[Gamma]", "2"]}]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HELP2", "[", 
    RowBox[{"\[Gamma]_", ",", "mu_", ",", "s_", ",", "h_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"5", " ", 
     SuperscriptBox["mu", "2"]}], "-", 
    RowBox[{"3", " ", "mu", " ", "s"}], "+", 
    RowBox[{
     SuperscriptBox["h", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "mu"}], ")"}], " ", "s", " ", 
     RowBox[{"(", 
      RowBox[{"s", "-", 
       RowBox[{"mu", " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Gamma]"}], ")"}], "2"]}], "+", 
    RowBox[{"4", " ", "mu", " ", "\[Gamma]"}], "-", 
    RowBox[{"11", " ", 
     SuperscriptBox["mu", "2"], " ", "\[Gamma]"}], "-", 
    RowBox[{"s", " ", "\[Gamma]"}], "+", 
    RowBox[{"4", " ", "mu", " ", "s", " ", "\[Gamma]"}], "+", 
    SuperscriptBox["\[Gamma]", "2"], "-", 
    RowBox[{"5", " ", "mu", " ", 
     SuperscriptBox["\[Gamma]", "2"]}], "+", 
    RowBox[{"6", " ", 
     SuperscriptBox["mu", "2"], " ", 
     SuperscriptBox["\[Gamma]", "2"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HELP3", "[", 
     RowBox[{"\[Gamma]_", ",", "mu_", ",", "s_", ",", "h_"}], "]"}], ":=", 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", "s", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "h"}], " ", "s"}], "+", 
          RowBox[{"mu", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "h"}]}], ")"}], " ", "s", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"h", " ", "s"}], "-", 
          RowBox[{"mu", " ", 
           RowBox[{"(", 
            RowBox[{"3", "-", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
        "\[Gamma]"}]}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HELP4", "[", 
   RowBox[{"\[Gamma]_", ",", "mu_", ",", "s_", ",", "h_"}], "]"}], ":=", 
  RowBox[{"h", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "s"}], " ", 
      RowBox[{"(", 
       RowBox[{"s", "-", 
        RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
     RowBox[{"mu", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"s", " ", 
         RowBox[{"(", 
          RowBox[{"6", "+", "s", "-", 
           RowBox[{"7", " ", "\[Gamma]"}]}], ")"}]}], "-", 
        RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["mu", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "6"}], "+", 
        RowBox[{"4", " ", "\[Gamma]"}], "+", 
        RowBox[{"s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{"5", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HELP5", "[", 
   RowBox[{"\[Gamma]_", ",", "mu_", ",", "s_", ",", "h_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"2", " ", "mu", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"h", " ", "s"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "h"}], " ", "s"}], "+", 
      RowBox[{"mu", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"h", " ", 
          RowBox[{"(", 
           RowBox[{"4", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"h", " ", "s", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"h", " ", "s"}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["mu", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "13"}], "+", 
         RowBox[{"h", " ", 
          RowBox[{"(", 
           RowBox[{"14", "+", 
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{"12", "-", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{"10", "+", 
                  RowBox[{"3", " ", "s"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"mu", " ", 
       RowBox[{"(", 
        RowBox[{"5", "+", 
         RowBox[{"h", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "4"}], "+", 
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "7"}], "+", 
               RowBox[{"h", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"4", " ", "s"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
        ")"}]}]}], ")"}], " ", "\[Gamma]"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"2", " ", "mu"}], "+", 
      RowBox[{"h", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"h", " ", "s"}], "+", 
      RowBox[{"mu", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"h", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
    SuperscriptBox["\[Gamma]", "2"], 
    RowBox[{"(*", " ", 
     RowBox[{"helpter", " ", "functions"}], " ", "*)"}]}]}]}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"equilibrium", "[", 
    RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}], "==", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"2", 
        RowBox[{"HELP2", "[", 
         RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}]}], "-", 
       RowBox[{"2", 
        SqrtBox[
         RowBox[{"HELP1", "[", 
          RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"mu", " ", 
           RowBox[{"(", 
            RowBox[{"3", "-", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Gamma]"}], ")"}]}], "+", "\[Gamma]", "+", 
          RowBox[{"s", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "h", "-", 
             RowBox[{"h", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"2", 
        RowBox[{"HELP4", "[", 
         RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}]}]}], ",", 
      
      RowBox[{
       RowBox[{
        SqrtBox[
         RowBox[{"HELP1", "[", 
          RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}]], " ", 
        RowBox[{"(", 
         RowBox[{"\[Gamma]", "-", 
          RowBox[{"h", " ", "s", " ", "\[Gamma]"}], "+", 
          RowBox[{"mu", " ", 
           RowBox[{"(", 
            RowBox[{"2", "-", 
             RowBox[{"2", " ", "h", " ", "s"}], "-", 
             RowBox[{"3", " ", "\[Gamma]"}], "+", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "s"}], ")"}], " ", "\[Gamma]"}]}], ")"}]}]}],
          ")"}]}], "-", 
       RowBox[{"HELP5", "[", 
        RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}]}]}], "}"}],
     "/", " ", 
    RowBox[{"HELP3", "[", 
     RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.644886304285246*^9, 3.644886369375087*^9}, {
   3.6448864081860123`*^9, 3.644886413896386*^9}, {3.6448864491469393`*^9, 
   3.644886456307086*^9}, {3.644886486309811*^9, 3.644886490309266*^9}, {
   3.6448866720562353`*^9, 3.644886677995101*^9}, {3.644886710198695*^9, 
   3.644886725714991*^9}, {3.644886761338257*^9, 3.644886782228066*^9}, {
   3.644887308436317*^9, 3.644887319057659*^9}, {3.644887379151527*^9, 
   3.644887389852577*^9}, {3.644893526630258*^9, 3.644893531749776*^9}, {
   3.644893566718669*^9, 3.644893569917089*^9}, {3.644893692530559*^9, 
   3.644893699342936*^9}, {3.644893747166871*^9, 3.644893751846899*^9}, 
   3.6448937955901537`*^9, {3.644893849615749*^9, 3.644893853551732*^9}, {
   3.644893942701593*^9, 3.644893947067041*^9}, {3.644893985430312*^9, 
   3.644894099545541*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.644886331069544*^9, 3.644886370878022*^9}, 
   3.64488641506359*^9, 3.6448864587817707`*^9, 3.644886491846118*^9, {
   3.6448866802681427`*^9, 3.644886728115593*^9}, {3.644886776900921*^9, 
   3.644886784274383*^9}, 3.644887263984303*^9, {3.6448873620482388`*^9, 
   3.644887407630385*^9}, 3.6448935346167097`*^9, 3.6448935714970617`*^9, 
   3.644893623952486*^9, 3.644893700533517*^9, 3.6448937681021547`*^9, 
   3.644893798846706*^9, 3.6448938551660013`*^9, 3.6448939488349648`*^9, {
   3.644893988795953*^9, 3.644894039177555*^9}, {3.644894071209342*^9, 
   3.6448941010626173`*^9}}]
}, Open  ]],

Cell["\<\
Deriving approximations for the helper functions that discard all term in \
mu^2:\
\>", "Text",
 CellChangeTimes->{{3.64489445758879*^9, 3.644894478880949*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{"HELP1", "[", 
    RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}], ",", "mu"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{"HELP2", "[", 
    RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}], ",", "mu"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{"HELP3", "[", 
    RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}], ",", "mu"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{"HELP4", "[", 
    RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}], ",", "mu"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{"HELP5", "[", 
    RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}], ",", "mu"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6448881561400957`*^9, 3.644888178372301*^9}, {
  3.644894138974444*^9, 3.644894166829103*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["h", "2"], " ", 
   SuperscriptBox["s", "2"]}], "+", 
  RowBox[{"2", " ", "h", " ", "s", " ", "\[Gamma]"}], "-", 
  RowBox[{"2", " ", 
   SuperscriptBox["h", "2"], " ", 
   SuperscriptBox["s", "2"], " ", "\[Gamma]"}], "+", 
  SuperscriptBox["\[Gamma]", "2"], "-", 
  RowBox[{"2", " ", "h", " ", "s", " ", 
   SuperscriptBox["\[Gamma]", "2"]}], "+", 
  RowBox[{
   SuperscriptBox["h", "2"], " ", 
   SuperscriptBox["s", "2"], " ", 
   SuperscriptBox["\[Gamma]", "2"]}], "+", 
  RowBox[{"mu", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "h", " ", "s"}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["h", "2"], " ", 
      SuperscriptBox["s", "2"]}], "+", 
     RowBox[{"2", " ", "\[Gamma]"}], "-", 
     RowBox[{"4", " ", "h", " ", "s", " ", "\[Gamma]"}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["h", "2"], " ", 
      SuperscriptBox["s", "2"], " ", "\[Gamma]"}], "-", 
     RowBox[{"4", " ", 
      SuperscriptBox["\[Gamma]", "2"]}], "+", 
     RowBox[{"6", " ", "h", " ", "s", " ", 
      SuperscriptBox["\[Gamma]", "2"]}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["h", "2"], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["mu", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"2", " ", "h", " ", "s"}], "+", 
     RowBox[{
      SuperscriptBox["h", "2"], " ", 
      SuperscriptBox["s", "2"]}], "-", 
     RowBox[{"4", " ", "\[Gamma]"}], "+", 
     RowBox[{"2", " ", "h", " ", "s", " ", "\[Gamma]"}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["h", "2"], " ", 
      SuperscriptBox["s", "2"], " ", "\[Gamma]"}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["\[Gamma]", "2"]}], "-", 
     RowBox[{"4", " ", "h", " ", "s", " ", 
      SuperscriptBox["\[Gamma]", "2"]}], "+", 
     RowBox[{
      SuperscriptBox["h", "2"], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.6448881789726677`*^9, {3.644894144615279*^9, 3.6448941682248297`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["h", "2"], " ", 
   SuperscriptBox["s", "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Gamma]"}], ")"}], "2"]}], "-", 
  RowBox[{"s", " ", "\[Gamma]"}], "+", 
  SuperscriptBox["\[Gamma]", "2"], "+", 
  RowBox[{"mu", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", "s"}], "-", 
     RowBox[{
      SuperscriptBox["h", "2"], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Gamma]"}], ")"}], "2"]}], "-", 
     RowBox[{
      SuperscriptBox["h", "2"], " ", "s", " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", "s"}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Gamma]"}], ")"}], "2"]}], "+", 
     RowBox[{"4", " ", "\[Gamma]"}], "+", 
     RowBox[{"4", " ", "s", " ", "\[Gamma]"}], "-", 
     RowBox[{"5", " ", 
      SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["mu", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"5", "+", 
     RowBox[{
      SuperscriptBox["h", "2"], " ", "s", " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", "s"}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Gamma]"}], ")"}], "2"]}], "-", 
     RowBox[{"11", " ", "\[Gamma]"}], "+", 
     RowBox[{"6", " ", 
      SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.6448881789726677`*^9, {3.644894144615279*^9, 3.644894168231905*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", "h", " ", 
      SuperscriptBox["s", "2"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "h"}]}], ")"}], " ", "s", " ", "\[Gamma]"}], "-", 
     RowBox[{"h", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "h"}]}], ")"}], " ", 
      SuperscriptBox["s", "2"], " ", "\[Gamma]"}]}], ")"}]}], "+", 
  RowBox[{"2", " ", "mu", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", "s", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"2", " ", "h"}]}], ")"}], " ", "s", " ", 
      RowBox[{"(", 
       RowBox[{"3", "-", 
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", "\[Gamma]"}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.6448881789726677`*^9, {3.644894144615279*^9, 3.644894168240571*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "h"}], " ", "s", " ", 
   RowBox[{"(", 
    RowBox[{"s", "-", 
     RowBox[{"2", " ", "\[Gamma]"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", 
  RowBox[{"h", " ", "mu", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"s", " ", 
      RowBox[{"(", 
       RowBox[{"6", "+", "s", "-", 
        RowBox[{"7", " ", "\[Gamma]"}]}], ")"}]}], "-", 
     RowBox[{"2", " ", "\[Gamma]"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", 
  RowBox[{"h", " ", 
   SuperscriptBox["mu", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "6"}], "+", 
     RowBox[{"4", " ", "\[Gamma]"}], "+", 
     RowBox[{"s", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{"5", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.6448881789726677`*^9, {3.644894144615279*^9, 3.644894168249402*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"h", " ", "s", " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"h", " ", "s"}]}], ")"}], " ", "\[Gamma]"}], "+", 
  SuperscriptBox["\[Gamma]", "2"], "-", 
  RowBox[{"2", " ", "h", " ", "s", " ", 
   SuperscriptBox["\[Gamma]", "2"]}], "+", 
  RowBox[{
   SuperscriptBox["h", "2"], " ", 
   SuperscriptBox["s", "2"], " ", 
   SuperscriptBox["\[Gamma]", "2"]}], "+", 
  RowBox[{"mu", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "h", " ", "s", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"h", " ", "s"}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"5", "+", 
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", 
           RowBox[{"s", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "7"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", 
                 RowBox[{"4", " ", "s"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
       ")"}], " ", "\[Gamma]"}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Gamma]", "2"]}], "+", 
     RowBox[{"3", " ", "h", " ", "s", " ", 
      SuperscriptBox["\[Gamma]", "2"]}], "-", 
     RowBox[{
      SuperscriptBox["h", "2"], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["\[Gamma]", "2"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "+", 
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
      SuperscriptBox["\[Gamma]", "2"]}], "-", 
     RowBox[{"h", " ", "s", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "+", 
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
      SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["mu", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"h", " ", "s"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "+", 
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{"4", "+", "s"}], ")"}]}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "13"}], "+", 
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{"14", "+", 
           RowBox[{"s", " ", 
            RowBox[{"(", 
             RowBox[{"12", "-", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"10", "+", 
                 RowBox[{"3", " ", "s"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
       ")"}], " ", "\[Gamma]"}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "+", 
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
      SuperscriptBox["\[Gamma]", "2"]}], "+", 
     RowBox[{"h", " ", "s", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "+", 
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
      SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.6448881789726677`*^9, {3.644894144615279*^9, 3.644894168259541*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HELP1Approx", "[", 
     RowBox[{"\[Gamma]_", ",", "mu_", ",", "s_", ",", "h_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["h", "2"], " ", 
      SuperscriptBox["s", "2"]}], "+", 
     RowBox[{"2", " ", "h", " ", "s", " ", "\[Gamma]"}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["h", "2"], " ", 
      SuperscriptBox["s", "2"], " ", "\[Gamma]"}], "+", 
     SuperscriptBox["\[Gamma]", "2"], "-", 
     RowBox[{"2", " ", "h", " ", "s", " ", 
      SuperscriptBox["\[Gamma]", "2"]}], "+", 
     RowBox[{
      SuperscriptBox["h", "2"], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["\[Gamma]", "2"]}], "+", 
     RowBox[{"mu", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "h", " ", "s"}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["h", "2"], " ", 
         SuperscriptBox["s", "2"]}], "+", 
        RowBox[{"2", " ", "\[Gamma]"}], "-", 
        RowBox[{"4", " ", "h", " ", "s", " ", "\[Gamma]"}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["h", "2"], " ", 
         SuperscriptBox["s", "2"], " ", "\[Gamma]"}], "-", 
        RowBox[{"4", " ", 
         SuperscriptBox["\[Gamma]", "2"]}], "+", 
        RowBox[{"6", " ", "h", " ", "s", " ", 
         SuperscriptBox["\[Gamma]", "2"]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["h", "2"], " ", 
         SuperscriptBox["s", "2"], " ", 
         SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HELP2Approx", "[", 
    RowBox[{"\[Gamma]_", ",", "mu_", ",", "s_", ",", "h_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     SuperscriptBox["h", "2"], " ", 
     SuperscriptBox["s", "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Gamma]"}], ")"}], "2"]}], "-", 
    RowBox[{"s", " ", "\[Gamma]"}], "+", 
    SuperscriptBox["\[Gamma]", "2"], "+", 
    RowBox[{"mu", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "s"}], "-", 
       RowBox[{
        SuperscriptBox["h", "2"], " ", 
        SuperscriptBox["s", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Gamma]"}], ")"}], "2"]}], "-", 
       RowBox[{
        SuperscriptBox["h", "2"], " ", "s", " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", "s"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Gamma]"}], ")"}], "2"]}], "+", 
       RowBox[{"4", " ", "\[Gamma]"}], "+", 
       RowBox[{"4", " ", "s", " ", "\[Gamma]"}], "-", 
       RowBox[{"5", " ", 
        SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HELP3Approx", "[", 
     RowBox[{"\[Gamma]_", ",", "mu_", ",", "s_", ",", "h_"}], "]"}], ":=", 
    RowBox[{"HELP3", "[", 
     RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HELP4Approx", "[", 
    RowBox[{"\[Gamma]_", ",", "mu_", ",", "s_", ",", "h_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "h"}], " ", "s", " ", 
     RowBox[{"(", 
      RowBox[{"s", "-", 
       RowBox[{"2", " ", "\[Gamma]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", 
    RowBox[{"h", " ", "mu", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"s", " ", 
        RowBox[{"(", 
         RowBox[{"6", "+", "s", "-", 
          RowBox[{"7", " ", "\[Gamma]"}]}], ")"}]}], "-", 
       RowBox[{"2", " ", "\[Gamma]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HELP5Approx", "[", 
    RowBox[{"\[Gamma]_", ",", "mu_", ",", "s_", ",", "h_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"h", " ", "s", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"h", " ", "s"}]}], ")"}], " ", "\[Gamma]"}], "+", 
    SuperscriptBox["\[Gamma]", "2"], "-", 
    RowBox[{"2", " ", "h", " ", "s", " ", 
     SuperscriptBox["\[Gamma]", "2"]}], "+", 
    RowBox[{
     SuperscriptBox["h", "2"], " ", 
     SuperscriptBox["s", "2"], " ", 
     SuperscriptBox["\[Gamma]", "2"]}], "+", 
    RowBox[{"mu", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "h", " ", "s", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"h", " ", "s"}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"5", "+", 
          RowBox[{"h", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4"}], "+", 
             RowBox[{"s", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "7"}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "+", 
                   RowBox[{"4", " ", "s"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}],
          ")"}], " ", "\[Gamma]"}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Gamma]", "2"]}], "+", 
       RowBox[{"3", " ", "h", " ", "s", " ", 
        SuperscriptBox["\[Gamma]", "2"]}], "-", 
       RowBox[{
        SuperscriptBox["h", "2"], " ", 
        SuperscriptBox["s", "2"], " ", 
        SuperscriptBox["\[Gamma]", "2"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"h", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
        SuperscriptBox["\[Gamma]", "2"]}], "-", 
       RowBox[{"h", " ", "s", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"h", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
        SuperscriptBox["\[Gamma]", "2"]}]}], ")"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.644894202832199*^9, 3.64489428599487*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"equilibriumApprox", "[", 
    RowBox[{"\[Gamma]_", ",", "mu_", ",", "s_", ",", "h_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"2", 
        RowBox[{"HELP2Approx", "[", 
         RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}]}], "-", 
       RowBox[{"2", 
        SqrtBox[
         RowBox[{"HELP1Approx", "[", 
          RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"mu", " ", 
           RowBox[{"(", 
            RowBox[{"3", "-", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Gamma]"}], ")"}]}], "+", "\[Gamma]", "+", 
          RowBox[{"s", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "h", "-", 
             RowBox[{"h", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"2", 
        RowBox[{"HELP4Approx", "[", 
         RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}]}]}], ",", 
      
      RowBox[{
       RowBox[{
        SqrtBox[
         RowBox[{"HELP1Approx", "[", 
          RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}]], " ", 
        RowBox[{"(", 
         RowBox[{"\[Gamma]", "-", 
          RowBox[{"h", " ", "s", " ", "\[Gamma]"}], "+", 
          RowBox[{"mu", " ", 
           RowBox[{"(", 
            RowBox[{"2", "-", 
             RowBox[{"2", " ", "h", " ", "s"}], "-", 
             RowBox[{"3", " ", "\[Gamma]"}], "+", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "s"}], ")"}], " ", "\[Gamma]"}]}], ")"}]}]}],
          ")"}]}], "-", 
       RowBox[{"HELP5Approx", "[", 
        RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}]}]}], "}"}],
     "/", " ", 
    RowBox[{"HELP3Approx", "[", 
     RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.644894295487961*^9, 3.64489432860715*^9}, {
  3.644894359887496*^9, 3.644894370361121*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"equilibriumApprox", "[", 
   RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}], "]"}]], "Input",\

 CellChangeTimes->{{3.6448943765970287`*^9, 3.644894390182556*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "h"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "s"}], " ", 
          RowBox[{"(", 
           RowBox[{"s", "-", 
            RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
         RowBox[{"mu", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{"6", "+", "s", "-", 
               RowBox[{"7", " ", "\[Gamma]"}]}], ")"}]}], "-", 
            RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["h", "2"], " ", 
       SuperscriptBox["s", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], "+", 
      RowBox[{"\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "s"}], "+", "\[Gamma]"}], ")"}]}], "-", 
      RowBox[{"mu", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"s", " ", 
          RowBox[{"(", 
           RowBox[{"3", "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["h", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], "-", 
            RowBox[{"4", " ", "\[Gamma]"}]}], ")"}]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["h", "2"], " ", 
          SuperscriptBox["s", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], "+", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "4"}], "+", 
            RowBox[{"5", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"mu", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"h", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", "\[Gamma]", 
         "+", 
         RowBox[{"s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "h", "-", 
            RowBox[{"h", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["h", "2"]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "mu"}]}], ")"}], " ", 
          SuperscriptBox["s", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], "+", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"mu", " ", 
             RowBox[{"(", 
              RowBox[{"2", "-", 
               RowBox[{"4", " ", "\[Gamma]"}]}], ")"}]}], "+", "\[Gamma]"}], 
           ")"}]}], "+", 
         RowBox[{"2", " ", "h", " ", "s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"mu", "-", "\[Gamma]", "+", 
            RowBox[{"3", " ", "mu", " ", "\[Gamma]"}]}], ")"}]}]}]]}]}], 
     ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", "s", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "h"}], " ", "s"}], "+", 
         RowBox[{"mu", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"h", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "h"}]}], ")"}], " ", "s", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"h", " ", "s"}], "+", 
         RowBox[{"mu", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"h", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
       "\[Gamma]"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"h", " ", "s", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"h", " ", "s"}]}], ")"}], " ", "\[Gamma]"}], "-", 
      SuperscriptBox["\[Gamma]", "2"], "+", 
      RowBox[{"2", " ", "h", " ", "s", " ", 
       SuperscriptBox["\[Gamma]", "2"]}], "-", 
      RowBox[{
       SuperscriptBox["h", "2"], " ", 
       SuperscriptBox["s", "2"], " ", 
       SuperscriptBox["\[Gamma]", "2"]}], "+", 
      RowBox[{
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["h", "2"]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "mu"}]}], ")"}], " ", 
          SuperscriptBox["s", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], "+", 
         RowBox[{"\[Gamma]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"mu", " ", 
             RowBox[{"(", 
              RowBox[{"2", "-", 
               RowBox[{"4", " ", "\[Gamma]"}]}], ")"}]}], "+", "\[Gamma]"}], 
           ")"}]}], "+", 
         RowBox[{"2", " ", "h", " ", "s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"mu", "-", "\[Gamma]", "+", 
            RowBox[{"3", " ", "mu", " ", "\[Gamma]"}]}], ")"}]}]}]], " ", 
       RowBox[{"(", 
        RowBox[{"\[Gamma]", "-", 
         RowBox[{"h", " ", "s", " ", "\[Gamma]"}], "+", 
         RowBox[{"mu", " ", 
          RowBox[{"(", 
           RowBox[{"2", "-", 
            RowBox[{"2", " ", "h", " ", "s"}], "-", 
            RowBox[{"3", " ", "\[Gamma]"}], "+", 
            RowBox[{"h", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", "s"}], ")"}], " ", "\[Gamma]"}]}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"mu", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"5", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", "\[Gamma]"}], 
         "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["h", "2"], " ", "s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", 
            "\[Gamma]"}], ")"}]}], "+", 
         RowBox[{"h", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "\[Gamma]"}], ")"}], " ", 
             "\[Gamma]"}], "+", 
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "-", 
               RowBox[{"7", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
                "\[Gamma]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", "s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "h"}], " ", "s"}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "h"}]}], ")"}], " ", "s", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"h", " ", "s"}], "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              RowBox[{"h", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
         "\[Gamma]"}]}], ")"}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.644894473964789*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Deriving the equilibrium of the sexual approximated system", \
"Subsubsection",
 CellChangeTimes->{{3.644896406615591*^9, 3.6448964188224173`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Recursion1LSexualApprox", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"pAa", ",", "pAA"}], "}"}], ",", "mu", ",", "s", ",", "h"}], 
       "]"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"pAa", ",", "pAA"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"pAa", ",", "pAA"}], "}"}]}], "]"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{"s", ">", "mu"}], "&&", 
     RowBox[{"h", ">", "0"}], "&&", 
     RowBox[{"h", "<", "1"}], "&&", 
     RowBox[{"mu", ">", "0"}], "&&", 
     RowBox[{"mu", "<", "0.01"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.644896461161442*^9, 3.644896500203264*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pAa", "\[Rule]", "0"}], ",", 
     RowBox[{"pAA", "\[Rule]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pAa", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", "mu"}], "-", 
         RowBox[{"4", " ", "h", " ", "mu"}], "+", 
         RowBox[{"h", " ", "s"}], "-", 
         RowBox[{
          SuperscriptBox["h", "2"], " ", "s"}], "+", 
         RowBox[{"h", " ", "mu", " ", "s"}], "+", 
         RowBox[{
          SuperscriptBox["h", "2"], " ", 
          SuperscriptBox["mu", "2"], " ", "s"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"h", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "mu"}], ")"}]}]}], ")"}], " ", 
          SqrtBox[
           RowBox[{"s", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"4", "-", 
                 RowBox[{"8", " ", "h"}]}], ")"}], " ", "mu"}], "+", 
              RowBox[{
               SuperscriptBox["h", "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "mu"}], ")"}], "2"], " ", "s"}]}], 
             ")"}]}]]}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", " ", "h"}]}], ")"}], "2"], " ", "s"}]]}]}], ",", 
     RowBox[{"pAA", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"4", " ", "h"}]}], ")"}], " ", "mu"}], "+", 
        RowBox[{
         SuperscriptBox["h", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", "mu"}], ")"}], "2"], " ", "s"}], "+", 
        RowBox[{"h", " ", 
         SqrtBox[
          RowBox[{"s", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"4", "-", 
                RowBox[{"8", " ", "h"}]}], ")"}], " ", "mu"}], "+", 
             RowBox[{
              SuperscriptBox["h", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "+", "mu"}], ")"}], "2"], " ", "s"}]}], 
            ")"}]}]]}], "+", 
        RowBox[{"h", " ", "mu", " ", 
         SqrtBox[
          RowBox[{"s", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"4", "-", 
                RowBox[{"8", " ", "h"}]}], ")"}], " ", "mu"}], "+", 
             RowBox[{
              SuperscriptBox["h", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "+", "mu"}], ")"}], "2"], " ", "s"}]}], 
            ")"}]}]]}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", "h"}]}], ")"}], "2"], " ", "s"}]]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pAa", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "mu"}], "+", 
        RowBox[{"4", " ", "h", " ", "mu"}], "-", 
        RowBox[{"h", " ", "s"}], "+", 
        RowBox[{
         SuperscriptBox["h", "2"], " ", "s"}], "-", 
        RowBox[{"h", " ", "mu", " ", "s"}], "-", 
        RowBox[{
         SuperscriptBox["h", "2"], " ", 
         SuperscriptBox["mu", "2"], " ", "s"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"h", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "mu"}], ")"}]}]}], ")"}], " ", 
         SqrtBox[
          RowBox[{"s", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"4", "-", 
                RowBox[{"8", " ", "h"}]}], ")"}], " ", "mu"}], "+", 
             RowBox[{
              SuperscriptBox["h", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "+", "mu"}], ")"}], "2"], " ", "s"}]}], 
            ")"}]}]]}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", "h"}]}], ")"}], "2"], " ", "s"}]]}], ",", 
     RowBox[{"pAA", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"4", " ", "h"}]}], ")"}], " ", "mu"}], "+", 
        RowBox[{
         SuperscriptBox["h", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", "mu"}], ")"}], "2"], " ", "s"}], "-", 
        RowBox[{"h", " ", 
         SqrtBox[
          RowBox[{"s", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"4", "-", 
                RowBox[{"8", " ", "h"}]}], ")"}], " ", "mu"}], "+", 
             RowBox[{
              SuperscriptBox["h", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "+", "mu"}], ")"}], "2"], " ", "s"}]}], 
            ")"}]}]]}], "-", 
        RowBox[{"h", " ", "mu", " ", 
         SqrtBox[
          RowBox[{"s", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"4", "-", 
                RowBox[{"8", " ", "h"}]}], ")"}], " ", "mu"}], "+", 
             RowBox[{
              SuperscriptBox["h", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "+", "mu"}], ")"}], "2"], " ", "s"}]}], 
            ")"}]}]]}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", "h"}]}], ")"}], "2"], " ", "s"}]]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.644896512870034*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"mu", "\[Rule]", "0.00001"}], ",", 
    RowBox[{"s", "\[Rule]", "0.02"}], ",", 
    RowBox[{"h", "\[Rule]", "0.1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6448965358552217`*^9, 3.644896554261512*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pAa", "\[Rule]", "0"}], ",", 
     RowBox[{"pAA", "\[Rule]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pAa", "\[Rule]", 
      RowBox[{"-", "0.29333579666131837`"}]}], ",", 
     RowBox[{"pAA", "\[Rule]", "0.0168521329431459`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pAa", "\[Rule]", "0.009582671658193442`"}], ",", 
     RowBox[{"pAA", "\[Rule]", "0.000023179558416603`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.64489655512799*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"equilibriumSexual", "[", 
    RowBox[{"mu_", ",", "s_", ",", "h_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "mu"}], "+", 
       RowBox[{"4", " ", "h", " ", "mu"}], "-", 
       RowBox[{"h", " ", "s"}], "+", 
       RowBox[{
        SuperscriptBox["h", "2"], " ", "s"}], "-", 
       RowBox[{"h", " ", "mu", " ", "s"}], "-", 
       RowBox[{
        SuperscriptBox["h", "2"], " ", 
        SuperscriptBox["mu", "2"], " ", "s"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"h", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "mu"}], ")"}]}]}], ")"}], " ", 
        SqrtBox[
         RowBox[{"s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"4", "-", 
               RowBox[{"8", " ", "h"}]}], ")"}], " ", "mu"}], "+", 
            RowBox[{
             SuperscriptBox["h", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "mu"}], ")"}], "2"], " ", "s"}]}], 
           ")"}]}]]}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "h"}]}], ")"}], "2"], " ", "s"}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"4", " ", "h"}]}], ")"}], " ", "mu"}], "+", 
       RowBox[{
        SuperscriptBox["h", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "mu"}], ")"}], "2"], " ", "s"}], "-", 
       RowBox[{"h", " ", 
        SqrtBox[
         RowBox[{"s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"4", "-", 
               RowBox[{"8", " ", "h"}]}], ")"}], " ", "mu"}], "+", 
            RowBox[{
             SuperscriptBox["h", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "mu"}], ")"}], "2"], " ", "s"}]}], 
           ")"}]}]]}], "-", 
       RowBox[{"h", " ", "mu", " ", 
        SqrtBox[
         RowBox[{"s", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"4", "-", 
               RowBox[{"8", " ", "h"}]}], ")"}], " ", "mu"}], "+", 
            RowBox[{
             SuperscriptBox["h", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "mu"}], ")"}], "2"], " ", "s"}]}], 
           ")"}]}]]}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "h"}]}], ")"}], "2"], " ", "s"}]]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.64489656327619*^9, 3.644896598128208*^9}, 
   3.644896747440082*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["A few special cases", "Subsubsection",
 CellChangeTimes->{{3.6440260183435287`*^9, 3.644026023161199*^9}, 
   3.6446218561258097`*^9}],

Cell["Recessive mutations:", "Text",
 CellChangeTimes->{{3.644621847307247*^9, 3.644621854822687*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"equilibrium", "[", 
    RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "0"}], "]"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{"h", "\[GreaterEqual]", "0"}], "&&", 
     RowBox[{"h", "\[LessEqual]", "1"}], "&&", 
     RowBox[{"\[Gamma]", "\[GreaterEqual]", "0"}], "&&", 
     RowBox[{"\[Gamma]", "\[LessEqual]", "1"}], "&&", 
     RowBox[{"mu", ">", "0"}], "&&", 
     RowBox[{"mu", "<", "0.01"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.64488768912831*^9, 3.644887719752984*^9}, {
  3.645662067902223*^9, 3.645662111756731*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", "mu", " ", 
      RowBox[{"(", 
       RowBox[{"mu", "-", "s"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], 
     RowBox[{"s", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\[Gamma]"}], "+", 
        RowBox[{"mu", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{"3", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}]]}], ",", 
   FractionBox["mu", "s"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6446218630631113`*^9, {3.644887695463892*^9, 3.644887720417904*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", "mu", " ", 
     RowBox[{"(", 
      RowBox[{"s", "-", "mu"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "\[Gamma]"}], ")"}]}], 
    RowBox[{"s", " ", 
     RowBox[{"(", 
      RowBox[{"\[Gamma]", "+", 
       RowBox[{"mu", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"3", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}]], "==", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", "mu", " ", 
      RowBox[{"(", 
       RowBox[{"mu", "-", "s"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], 
     RowBox[{"s", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\[Gamma]"}], "+", 
        RowBox[{"mu", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{"3", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}]]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.645664363376999*^9, 3.645664402786475*^9}, {
  3.645664571367395*^9, 3.645664586456759*^9}, {3.6456646179578342`*^9, 
  3.645664633946598*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.645664371672504*^9, 3.64566440342395*^9}, 
   3.6456645873715076`*^9, {3.645664626672069*^9, 3.645664634541375*^9}}]
}, Open  ]],

Cell["Dominant mutations:", "Text",
 CellChangeTimes->{{3.644887914605248*^9, 3.6448879209048986`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"equilibrium", "[", 
    RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "1"}], "]"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{"s", ">", "mu"}], "&&", 
     RowBox[{"h", "\[GreaterEqual]", "0"}], "&&", 
     RowBox[{"h", "\[LessEqual]", "1"}], "&&", 
     RowBox[{"\[Gamma]", "\[GreaterEqual]", "0"}], "&&", 
     RowBox[{"\[Gamma]", "\[LessEqual]", "1"}], "&&", 
     RowBox[{"mu", ">", "0"}], "&&", 
     RowBox[{"mu", "<", "0.01"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.644887927706299*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "s"}], ")"}], " ", "s", " ", "\[Gamma]"}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"5", " ", 
       SuperscriptBox["mu", "2"]}], "-", 
      RowBox[{"3", " ", "mu", " ", "s"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "s"}], "+", 
         RowBox[{"mu", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], "+", 
      RowBox[{"4", " ", "mu", " ", "\[Gamma]"}], "-", 
      RowBox[{"11", " ", 
       SuperscriptBox["mu", "2"], " ", "\[Gamma]"}], "-", 
      RowBox[{"s", " ", "\[Gamma]"}], "+", 
      RowBox[{"4", " ", "mu", " ", "s", " ", "\[Gamma]"}], "+", 
      SuperscriptBox["\[Gamma]", "2"], "-", 
      RowBox[{"5", " ", "mu", " ", 
       SuperscriptBox["\[Gamma]", "2"]}], "+", 
      RowBox[{"6", " ", 
       SuperscriptBox["mu", "2"], " ", 
       SuperscriptBox["\[Gamma]", "2"]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "s"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"mu", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "-", "\[Gamma]"}],
         ")"}], " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"mu", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
          "2"], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"mu", "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["mu", "2"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
             SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "s"}], ")"}]}], "-", "s"}], ")"}], 
           "2"], " ", 
          SuperscriptBox["\[Gamma]", "2"]}]}]]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "s"}], " ", 
          RowBox[{"(", 
           RowBox[{"s", "-", 
            RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
         RowBox[{"mu", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{"6", "+", "s", "-", 
               RowBox[{"7", " ", "\[Gamma]"}]}], ")"}]}], "-", 
            RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["mu", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"4", " ", "\[Gamma]"}], "+", 
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", 
               RowBox[{"5", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}]}], 
        ")"}]}]}], ")"}]}], ",", 
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s", " ", "\[Gamma]"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "mu", " ", 
        RowBox[{"(", 
         RowBox[{"mu", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}]}], 
       "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"s", "+", 
          RowBox[{"mu", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "mu", "-", 
             RowBox[{"4", " ", "s"}], "+", 
             RowBox[{"3", " ", "mu", " ", "s"}]}], ")"}]}]}], ")"}], " ", 
        "\[Gamma]"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"mu", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "s"}], ")"}]}], "-", "s"}], ")"}], " ", 
        
        SuperscriptBox["\[Gamma]", "2"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "mu"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "\[Gamma]"}], ")"}]}], "+", 
          "\[Gamma]"}], ")"}], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"mu", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
           "2"], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"mu", "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["mu", "2"]}], "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], 
             "-", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
              SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"mu", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "s"}], ")"}]}], "-", "s"}], ")"}], 
            "2"], " ", 
           SuperscriptBox["\[Gamma]", "2"]}]}]]}]}], ")"}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.644888166407653*^9}]
}, Open  ]],

Cell["Semidominant mutations:", "Text",
 CellChangeTimes->{{3.6448945555415287`*^9, 3.644894567420725*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"equilibrium", "[", 
    RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", 
     RowBox[{"1", "/", "2"}]}], "]"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{"s", ">", "0"}], "&&", 
     RowBox[{"h", "\[GreaterEqual]", "0"}], "&&", 
     RowBox[{"h", "\[LessEqual]", "1"}], "&&", 
     RowBox[{"\[Gamma]", "\[GreaterEqual]", "0"}], "&&", 
     RowBox[{"\[Gamma]", "\[LessEqual]", "1"}], "&&", 
     RowBox[{"mu", ">", "0"}], "&&", 
     RowBox[{"mu", "<", "1"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.644025723089925*^9, {3.644025982849654*^9, 3.6440259874714947`*^9}, {
   3.644026031787168*^9, 3.644026062339015*^9}, {3.644570756613186*^9, 
   3.644570765722987*^9}, {3.6446098780111923`*^9, 3.64460988229452*^9}, {
   3.644894598760251*^9, 3.644894602079054*^9}, {3.645662127532268*^9, 
   3.645662131476202*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", 
      SuperscriptBox["s", "2"]}]], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"5", " ", 
        SuperscriptBox["mu", "2"]}], "-", 
       RowBox[{"3", " ", "mu", " ", "s"}], "+", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "s"}], "+", 
          RowBox[{"mu", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], "2"]}], "+", 
       RowBox[{"4", " ", "mu", " ", "\[Gamma]"}], "-", 
       RowBox[{"11", " ", 
        SuperscriptBox["mu", "2"], " ", "\[Gamma]"}], "-", 
       RowBox[{"s", " ", "\[Gamma]"}], "+", 
       RowBox[{"4", " ", "mu", " ", "s", " ", "\[Gamma]"}], "+", 
       SuperscriptBox["\[Gamma]", "2"], "-", 
       RowBox[{"5", " ", "mu", " ", 
        SuperscriptBox["\[Gamma]", "2"]}], "+", 
       RowBox[{"6", " ", 
        SuperscriptBox["mu", "2"], " ", 
        SuperscriptBox["\[Gamma]", "2"]}], "+", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"s", "-", 
          RowBox[{"mu", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4"}], "+", "s"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "s"}], ")"}], " ", "\[Gamma]"}]}], 
         ")"}], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"s", "-", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], "2"], "-", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", "mu", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"2", " ", "mu"}]}], ")"}]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], 
             "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
              SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"2", "+", 
              RowBox[{"mu", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "+", "s"}], ")"}]}], "-", "s"}], ")"}], 
            "2"], " ", 
           SuperscriptBox["\[Gamma]", "2"]}]}]]}], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "s"}], " ", 
           RowBox[{"(", 
            RowBox[{"s", "-", 
             RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
          RowBox[{"mu", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"s", " ", 
              RowBox[{"(", 
               RowBox[{"6", "+", "s", "-", 
                RowBox[{"7", " ", "\[Gamma]"}]}], ")"}]}], "-", 
             RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["mu", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"4", " ", "\[Gamma]"}], "+", 
             RowBox[{"s", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", 
                RowBox[{"5", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", 
       SuperscriptBox["s", "2"]}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "mu", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"mu", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "s"}], ")"}]}], "-", "s"}], ")"}], " ", 
        
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "s"}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "s"}], ")"}], " ", "s"}], "-", 
          RowBox[{"4", " ", "mu", " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "3"}], "+", "s"}], ")"}], " ", "s"}]}], ")"}]}], 
          "+", 
          RowBox[{
           SuperscriptBox["mu", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"24", "+", 
             RowBox[{"s", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "14"}], "+", 
                RowBox[{"3", " ", "s"}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
        "\[Gamma]"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{"mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "+", "s"}], ")"}]}], "-", "s"}], ")"}], 
         "2"], " ", 
        SuperscriptBox["\[Gamma]", "2"]}], "+", 
       RowBox[{
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"s", "-", 
             RowBox[{"mu", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}], "2"], "-", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", "mu", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"2", " ", "mu"}]}], ")"}]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", "s"}], 
             "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "mu"}], ")"}], "2"], " ", 
              SuperscriptBox["s", "2"]}]}], ")"}], " ", "\[Gamma]"}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"2", "+", 
              RowBox[{"mu", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "+", "s"}], ")"}]}], "-", "s"}], ")"}], 
            "2"], " ", 
           SuperscriptBox["\[Gamma]", "2"]}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "s"}], ")"}], " ", "\[Gamma]"}], "+", 
          RowBox[{"mu", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4"}], "+", 
             RowBox[{"2", " ", "s"}], "+", 
             RowBox[{"4", " ", "\[Gamma]"}], "-", 
             RowBox[{"s", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}]}], 
      ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6440257240043993`*^9, 3.64402576085445*^9, 
  3.644025988651585*^9, 3.644026074169739*^9, 3.644570769667645*^9, 
  3.6448950267332993`*^9}]
}, Open  ]],

Cell["Apomictic reproduction:", "Text",
 CellChangeTimes->{{3.6448945555415287`*^9, 3.644894567420725*^9}, {
  3.6448946271766872`*^9, 3.6448946307835627`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"equilibrium", "[", 
    RowBox[{"0", ",", "mu", ",", "s", ",", "h"}], "]"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{"s", ">", "0"}], "&&", 
     RowBox[{"h", "\[GreaterEqual]", "0"}], "&&", 
     RowBox[{"h", "\[LessEqual]", "1"}], "&&", 
     RowBox[{"mu", ">", "0"}], "&&", 
     RowBox[{"mu", "<", "1"}], "&&", 
     RowBox[{"s", "<", "1"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.644894634008584*^9, 3.644894635720768*^9}, {
   3.644895466175014*^9, 3.6448954724878693`*^9}, 3.644895574803824*^9, {
   3.645662138753804*^9, 3.6456621467999897`*^9}, 3.682743551525276*^9, {
   3.682743781846513*^9, 3.682743811478088*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          FractionBox[
           RowBox[{"mu", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", "s"}], "-", 
            RowBox[{"h", " ", "mu", " ", "s"}]}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", "s"}]], 
          RowBox[{
           RowBox[{"mu", "+", 
            RowBox[{"h", " ", "mu", " ", "s"}]}], "\[GreaterEqual]", 
           RowBox[{"h", " ", "s"}]}]},
         {
          FractionBox[
           RowBox[{"2", " ", "mu", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "mu"}], "-", "s"}], ")"}]}], 
           RowBox[{"s", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "h"}], " ", "s"}], "+", 
              RowBox[{"mu", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"h", " ", 
                  RowBox[{"(", 
                   RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}]], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          FractionBox[
           RowBox[{"mu", "-", 
            RowBox[{"h", " ", "mu", " ", "s"}]}], 
           RowBox[{"s", "-", 
            RowBox[{"h", " ", "s"}]}]], 
          RowBox[{
           RowBox[{"mu", "+", 
            RowBox[{"h", " ", "mu", " ", "s"}]}], "\[GreaterEqual]", 
           RowBox[{"h", " ", "s"}]}]},
         {
          FractionBox[
           RowBox[{"2", " ", 
            SuperscriptBox["mu", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"h", " ", "s"}]}], ")"}]}], 
           RowBox[{"s", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "h"}], " ", "s"}], "+", 
              RowBox[{"mu", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"h", " ", 
                  RowBox[{"(", 
                   RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}]], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.64489503567*^9, 3.644895473953494*^9, 
  3.6448955837587843`*^9, 3.6456621502074947`*^9, 3.682743483935171*^9, 
  3.682743556546425*^9, 3.6827437900771837`*^9}]
}, Open  ]],

Cell[" First part of this result (mu>hs/(1+hs)):", "Text",
 CellChangeTimes->{
  3.644895622581436*^9, {3.645576130138549*^9, 3.64557616893172*^9}, {
   3.6455764161666813`*^9, 3.645576425042355*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"1", "-", 
    FractionBox[
     RowBox[{"mu", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"h", " ", "s"}]}], ")"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "h"}], ")"}], " ", "s"}]]}], "==", 
   FractionBox[
    RowBox[{"mu", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", "s"}], "-", 
     RowBox[{"h", " ", "mu", " ", "s"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", "s"}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.645575584094507*^9, 3.645575624410808*^9}, {
  3.6455757057681017`*^9, 3.645575709336199*^9}, {3.6455757408113813`*^9, 
  3.6455757851000547`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.6455755909009113`*^9, 3.645575626039694*^9, 3.645575710448916*^9, {
   3.645575751187632*^9, 3.645575786950502*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"mu", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"h", " ", "s"}]}], ")"}]}], 
    RowBox[{"s", 
     RowBox[{"(", 
      RowBox[{"1", "-", "h"}], ")"}]}]], "==", 
   FractionBox[
    RowBox[{"mu", "-", 
     RowBox[{"h", " ", "mu", " ", "s"}]}], 
    RowBox[{"s", "-", 
     RowBox[{"h", " ", "s"}]}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.645575808155137*^9, 3.6455758304216747`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.6455758207598352`*^9, 3.64557583189872*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sprime", "=", 
   FractionBox[
    RowBox[{"s", 
     RowBox[{"(", 
      RowBox[{"1", "-", "h"}], " ", ")"}]}], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"s", " ", "h"}]}], ")"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   FractionBox["mu", "sprime"], "==", 
   FractionBox[
    RowBox[{"mu", "-", 
     RowBox[{"h", " ", "mu", " ", "s"}]}], 
    RowBox[{"s", "-", 
     RowBox[{"h", " ", "s"}]}]]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6455759721754293`*^9, 3.645576046942849*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.645576047928483*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"sprime", "\[Equal]", 
   RowBox[{"1", "-", 
    FractionBox[
     RowBox[{"1", "-", "s"}], 
     RowBox[{"1", "-", 
      RowBox[{"h", " ", "s"}]}]]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.645576066587173*^9, 3.645576101824847*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.645576104516884*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"1", "-", 
    FractionBox[
     RowBox[{"mu", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"h", " ", "s"}]}], ")"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "h"}], ")"}], " ", "s"}]]}], "/.", 
   RowBox[{"{", 
    RowBox[{"mu", "\[Rule]", 
     RowBox[{"h", " ", 
      RowBox[{"s", "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"h", " ", "s"}]}], ")"}]}]}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", "mu", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "mu"}], "-", "s"}], ")"}]}], 
    RowBox[{"s", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "h"}], " ", "s"}], "+", 
       RowBox[{"mu", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"h", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}]], "/.", 
   RowBox[{"{", 
    RowBox[{"mu", "\[Rule]", 
     RowBox[{"h", " ", 
      RowBox[{"s", "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"h", " ", "s"}]}], ")"}]}]}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.645599620484187*^9, 3.6455996799082413`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"1", "+", 
    RowBox[{"h", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "s"}], ")"}]}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"h", " ", "s"}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{3.645599645679048*^9, 3.645599681065385*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"1", "+", 
    RowBox[{"h", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "s"}], ")"}]}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"h", " ", "s"}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{3.645599645679048*^9, 3.645599681067437*^9}]
}, Open  ]],

Cell["Second part of this result (mu<hs/(1+hs)):", "Text",
 CellChangeTimes->{
  3.644895622581436*^9, {3.645576130138549*^9, 3.64557616893172*^9}, {
   3.6455764161666813`*^9, 3.645576425042355*^9}, {3.6455765066748343`*^9, 
   3.64557651060083*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"1", "-", 
   FractionBox[
    RowBox[{"2", " ", "mu", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "mu"}], "-", "s"}], ")"}]}], 
    RowBox[{"s", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "h"}], " ", "s"}], "+", 
       RowBox[{"mu", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"h", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}]], "-", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["mu", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"h", " ", "s"}]}], ")"}]}], 
    RowBox[{"s", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "h"}], " ", "s"}], "+", 
       RowBox[{"mu", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"h", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}]]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.64557654235371*^9, 3.645576546499345*^9}, {
  3.645576670200603*^9, 3.645576670955606*^9}, {3.645606065651847*^9, 
  3.645606069720196*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "mu"}], "-", "s"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"mu", "-", 
      RowBox[{"h", " ", "s"}], "+", 
      RowBox[{"h", " ", "mu", " ", "s"}]}], ")"}]}], 
   RowBox[{"s", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "h"}], " ", "s"}], "+", 
      RowBox[{"mu", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"h", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], 
     ")"}]}]]}]], "Output",
 CellChangeTimes->{3.6455765481493998`*^9, 3.645576671970499*^9, 
  3.6456060709432077`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", "mu", " ", 
     RowBox[{"(", 
      RowBox[{"s", "-", 
       RowBox[{"2", " ", "mu"}]}], ")"}]}], 
    RowBox[{"s", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"h", " ", "s"}], "+", 
       RowBox[{"mu", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"h", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}]], "==", 
   FractionBox[
    RowBox[{"2", " ", "mu", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "mu"}], "-", "s"}], ")"}]}], 
    RowBox[{"s", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "h"}], " ", "s"}], "+", 
       RowBox[{"mu", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"h", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}]]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.645606224638588*^9, 3.645606255348463*^9}, {
  3.645606392259602*^9, 3.645606427174458*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.645606272753458*^9, {3.645606402613586*^9, 3.645606430186007*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["mu", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"h", " ", "s"}]}], ")"}]}], 
    RowBox[{"s", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"h", " ", "s"}], "+", 
       RowBox[{"mu", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"h", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}]], "==", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["mu", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"h", " ", "s"}]}], ")"}]}], 
    RowBox[{"s", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "h"}], " ", "s"}], "+", 
       RowBox[{"mu", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"h", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}]]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6456062396576557`*^9, 3.6456062629798603`*^9}, {
  3.645608050250359*^9, 3.645608083892022*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.645606264707898*^9, 3.6456080858537197`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["mu", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"h", " ", "s"}]}], ")"}]}], 
    RowBox[{"s", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "h"}], " ", "s"}], "+", 
       RowBox[{"mu", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"h", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}]], "/.", 
   RowBox[{"{", 
    RowBox[{"mu", "\[Rule]", 
     RowBox[{"s", "/", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.645662222792657*^9, 3.645662247348497*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.645662228530026*^9, 3.645662248447345*^9}}]
}, Open  ]],

Cell["Gamete duplication:", "Text",
 CellChangeTimes->{{3.644894652426338*^9, 3.644894658168591*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"equilibrium", "[", 
    RowBox[{"1", ",", "mu", ",", "s", ",", "h"}], "]"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{"s", ">", "0"}], "&&", 
     RowBox[{"h", "\[GreaterEqual]", "0"}], "&&", 
     RowBox[{"h", "\[LessEqual]", "1"}], "&&", 
     RowBox[{"\[Gamma]", "\[GreaterEqual]", "0"}], "&&", 
     RowBox[{"\[Gamma]", "\[LessEqual]", "1"}], "&&", 
     RowBox[{"mu", ">", "0"}], "&&", 
     RowBox[{"mu", "<", "1"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.6448946660431147`*^9, {3.645664279318838*^9, 3.6456642843925877`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   FractionBox["mu", "s"]}], "}"}]], "Output",
 CellChangeTimes->{3.6448951635319853`*^9, 3.645664285203477*^9}]
}, Open  ]],

Cell["Special cases with sexual reproduction:", "Text",
 CellChangeTimes->{{3.644913076818029*^9, 3.6449131011761837`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FullSimplify", "[", 
  RowBox[{"equilibriumSexual", "[", 
   RowBox[{"mu", ",", "s", ",", "0"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"equilibriumSexual", "[", 
    RowBox[{"mu", ",", "s", ",", 
     RowBox[{"1", "/", "2"}]}], "]"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{"s", ">", "mu"}], "&&", 
     RowBox[{"mu", ">", "0"}], "&&", 
     RowBox[{"mu", "<", "0.01"}]}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"equilibriumSexual", "[", 
    RowBox[{"mu", ",", "s", ",", "1"}], "]"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{"s", ">", "mu"}], "&&", 
     RowBox[{"mu", ">", "0"}], "&&", 
     RowBox[{"mu", "<", "0.01"}]}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.64491312121043*^9, 3.6449131385505047`*^9}, {
  3.644913227402219*^9, 3.6449132665865593`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "mu"}], "+", 
       SqrtBox[
        RowBox[{"mu", " ", "s"}]]}], ")"}]}], "s"], ",", 
   FractionBox["mu", "s"]}], "}"}]], "Output",
 CellChangeTimes->{3.64491313996933*^9, 3.6449132675435534`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], ":", 
  " ", "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.64491314021386*^9, 3.644913267579611*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], ":", 
  " ", "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.64491314021386*^9, 3.644913267631303*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"ComplexInfinity", ",", "ComplexInfinity"}], "}"}]], "Output",
 CellChangeTimes->{3.64491313996933*^9, 3.644913267671275*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"mu", " ", 
     RowBox[{"(", 
      RowBox[{"2", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "mu"}], ")"}], " ", "s"}], "+", 
       SqrtBox[
        RowBox[{"s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", "mu"}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "mu"}], ")"}], "2"], " ", "s"}]}], ")"}]}]]}],
       ")"}]}], "s"], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"2", " ", "mu"}], "-", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "mu"}], ")"}], "2"], " ", "s"}], "+", 
      SqrtBox[
       RowBox[{"s", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", "mu"}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "mu"}], ")"}], "2"], " ", "s"}]}], ")"}]}]], 
      "+", 
      RowBox[{"mu", " ", 
       SqrtBox[
        RowBox[{"s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", "mu"}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "mu"}], ")"}], "2"], " ", "s"}]}], 
          ")"}]}]]}]}], 
     RowBox[{"2", " ", "s"}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.64491313996933*^9, 3.644913268473364*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"2", " ", "mu"}], "-", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "mu"}], ")"}], "2"], " ", "s"}], "+", 
      SqrtBox[
       RowBox[{"s", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", "mu"}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "mu"}], ")"}], "2"], " ", "s"}]}], ")"}]}]], 
      "+", 
      RowBox[{"mu", " ", 
       SqrtBox[
        RowBox[{"s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", "mu"}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "mu"}], ")"}], "2"], " ", "s"}]}], 
          ")"}]}]]}]}], 
     RowBox[{"2", " ", "s"}]]}], "==", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"2", " ", "mu"}], "-", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "mu"}], ")"}], "2"], " ", "s"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "mu"}], ")"}], " ", 
       SqrtBox[
        RowBox[{"s", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", "mu"}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "mu"}], ")"}], "2"], " ", "s"}]}], 
          ")"}]}]]}]}], 
     RowBox[{"2", " ", "s"}]]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6449137047757187`*^9, 3.644913724735188*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.644913710277917*^9, 3.644913726080905*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Recursion1LSexualApprox", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"pAa", ",", "pAA"}], "}"}], ",", "mu", ",", "s", ",", 
        RowBox[{"1", "/", "2"}]}], "]"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"pAa", ",", "pAA"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"pAa", ",", "pAA"}], "}"}]}], "]"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{"s", ">", "mu"}], "&&", 
     RowBox[{"h", ">", "0"}], "&&", 
     RowBox[{"h", "<", "1"}], "&&", 
     RowBox[{"mu", ">", "0"}], "&&", 
     RowBox[{"mu", "<", "0.01"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.644913345732067*^9, 3.644913368317161*^9}, {
  3.644913453330122*^9, 3.644913465249322*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pAa", "\[Rule]", "0"}], ",", 
     RowBox[{"pAA", "\[Rule]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pAa", "\[Rule]", 
      FractionBox[
       RowBox[{"4", " ", "mu", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"mu", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "s"}], ")"}]}], "+", "s"}], ")"}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "mu"}], ")"}], "2"], " ", 
        SuperscriptBox["s", "2"]}]]}], ",", 
     RowBox[{"pAA", "\[Rule]", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["mu", "2"]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "mu"}], ")"}], "2"], " ", 
        SuperscriptBox["s", "2"]}]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.644913369287915*^9, {3.6449134553886213`*^9, 3.64491346583366*^9}}]
}, Open  ]],

Cell["\<\
Apomictic reproduction: starting again from the original recursion equation\
\>", "Text",
 CellChangeTimes->{{3.682743960960471*^9, 3.682743975639566*^9}, 
   3.682744058687663*^9, 3.682744193325417*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Recursion1LApprox", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pAa", ",", "pAA"}], "}"}], ",", "0", ",", "mu", ",", "s", ",", 
    "h"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6827439834216022`*^9, 3.682744023099311*^9}, {
  3.682745265711205*^9, 3.682745267308864*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"pAa", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"h", " ", "s"}]}], ")"}]}], "+", 
     RowBox[{"mu", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{"3", " ", "pAa"}], "+", 
        RowBox[{"2", " ", "pAA"}], "-", 
        RowBox[{"h", " ", "pAa", " ", "s"}]}], ")"}]}]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"h", " ", "pAa", " ", "s"}], "+", 
     RowBox[{"pAA", " ", "s"}]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"pAA", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "s"}], ")"}]}], "+", 
     RowBox[{"mu", " ", "pAa", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"h", " ", "s"}]}], ")"}]}]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"h", " ", "pAa", " ", "s"}], "+", 
     RowBox[{"pAA", " ", "s"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.6827440236076803`*^9, 3.6827440646206713`*^9, 
  3.6827452887943296`*^9, 3.6827453227390747`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Recursion1LClonal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pAa_", ",", "pAA_"}], "}"}], ",", "mu_", ",", "s_", ",", 
     "h_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"pAa", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"h", " ", "s"}]}], ")"}]}], "+", 
       RowBox[{"mu", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"3", " ", "pAa"}], "+", 
          RowBox[{"2", " ", "pAA"}], "-", 
          RowBox[{"h", " ", "pAa", " ", "s"}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"h", " ", "pAa", " ", "s"}], "+", 
       RowBox[{"pAA", " ", "s"}]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"pAA", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "s"}], ")"}]}], "+", 
       RowBox[{"mu", " ", "pAa", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"h", " ", "s"}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"h", " ", "pAa", " ", "s"}], "+", 
       RowBox[{"pAA", " ", "s"}]}]]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fixedPoints", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Recursion1LClonal", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"pAa", ",", "pAA"}], "}"}], ",", "mu", ",", "s", ",", "h"}],
         "]"}], "==", 
       RowBox[{"{", 
        RowBox[{"pAa", ",", "pAA"}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"pAa", ",", "pAA"}], "}"}]}], "]"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{
      RowBox[{"h", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"h", "\[LessEqual]", "1"}], "&&", 
      RowBox[{"s", ">", "0"}], "&&", 
      RowBox[{"s", "<", "1"}], "&&", 
      RowBox[{"mu", ">", "0"}], "&&", 
      RowBox[{"mu", "<", "1"}], "&&", 
      RowBox[{"pAa", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"pAa", "\[LessEqual]", "1"}], "&&", 
      RowBox[{"pAA", "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{"pAA", "\[LessEqual]", "1"}]}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6827440778955517`*^9, 3.6827441292916737`*^9}, {
  3.6827442224106493`*^9, 3.682744275835579*^9}, {3.682745148038485*^9, 
  3.682745181393239*^9}, {3.68274533342689*^9, 3.682745375860808*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pAa", "\[Rule]", "0"}], ",", 
     RowBox[{"pAA", "\[Rule]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pAa", "\[Rule]", 
      FractionBox[
       RowBox[{"mu", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", "s"}], "-", 
        RowBox[{"h", " ", "mu", " ", "s"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "h"}], ")"}], " ", "s"}]]}], ",", 
     RowBox[{"pAA", "\[Rule]", 
      FractionBox[
       RowBox[{"mu", "-", 
        RowBox[{"h", " ", "mu", " ", "s"}]}], 
       RowBox[{"s", "-", 
        RowBox[{"h", " ", "s"}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pAa", "\[Rule]", 
      FractionBox[
       RowBox[{"2", " ", "mu", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "mu"}], "-", "s"}], ")"}]}], 
       RowBox[{"s", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "h"}], " ", "s"}], "+", 
          RowBox[{"mu", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}]]}], ",", 
     RowBox[{"pAA", "\[Rule]", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["mu", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"h", " ", "s"}]}], ")"}]}], 
       RowBox[{"s", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "h"}], " ", "s"}], "+", 
          RowBox[{"mu", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"h", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}]]}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6827441575292683`*^9, 3.682744254117372*^9, 3.682745143920986*^9, 
   3.6827452840352488`*^9, {3.6827453432000732`*^9, 3.6827453766684027`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Jacob", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"Recursion1LClonal", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"pAa", ",", "pAA"}], "}"}], ",", "mu", ",", "s", ",", "h"}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"pAa", ",", "pAA"}], "}"}], "}"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6827455178507223`*^9, 3.682745550609663*^9}, {
  3.682745614890791*^9, 3.6827456307454453`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Eigenvalues", "[", 
   RowBox[{"Jacob", "/.", 
    RowBox[{
    "fixedPoints", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
   "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Eigenvalues", "[", 
   RowBox[{"Jacob", "/.", 
    RowBox[{
    "fixedPoints", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
   "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Eigenvalues", "[", 
   RowBox[{"Jacob", "/.", 
    RowBox[{
    "fixedPoints", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
   "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6827456355878077`*^9, 3.682745713160756*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"2", " ", "mu"}]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "s"}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"h", " ", "s"}]}], ")"}]}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", "s"}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6827456593568583`*^9, 3.682745714567664*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"1", "-", 
     RowBox[{"2", " ", "mu"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"h", " ", "s"}]}], ")"}]}]], ",", 
   FractionBox[
    RowBox[{"1", "-", "s"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"h", " ", "s"}]}], ")"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.6827456593568583`*^9, 3.682745714804515*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "s"}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"2", " ", "mu"}]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"h", " ", "s"}]}], ")"}]}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "mu"}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6827456593568583`*^9, 3.682745715011643*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Plotting the results", "Subsubsection",
 CellChangeTimes->{{3.597699535873247*^9, 3.597699559698368*^9}, 
   3.597718599404254*^9, 3.644896454696889*^9, {3.6448966079589357`*^9, 
   3.644896610478841*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
   "eqFreqsRecessive", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
    "=", 
   RowBox[{"numSol", "[", 
    RowBox[{"0.0001", ",", "mu", ",", "s", ",", "0"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.603496914748246*^9, 3.603496962691414*^9}, 
   3.6034970665727577`*^9, {3.605477305219535*^9, 3.605477309578289*^9}, 
   3.644610014382724*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eqFreqsRecessiveSexualAnalytical", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     SqrtBox[
      RowBox[{"mu", "/", "s"}]], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "0", ",", "\[Gamma]max", ",", "0.001"}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqFreqsAdditiveSexualAnalytical", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"2", 
      RowBox[{"mu", "/", "s"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "0", ",", "\[Gamma]max", ",", "0.001"}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqFreqsDominantSexualAnalytical", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"mu", "/", "s"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "0", ",", "\[Gamma]max", ",", "0.001"}], 
      "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.597722985847125*^9, 3.597723020760921*^9}, {
  3.6054735873700438`*^9, 3.605473606634685*^9}, {3.605477231181594*^9, 
  3.605477270000746*^9}, {3.605477430657036*^9, 3.6054774320482063`*^9}, {
  3.644610018855453*^9, 3.6446100406530733`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"eqFreqsRecessiveAnalytical", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"MutSelAnalyticalApproxRecessive", "[", 
      RowBox[{"\[Gamma]A", ",", "mu", ",", 
       RowBox[{"-", "s"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]A", ",", "0", ",", "\[Gamma]max", ",", "0.001"}], 
      "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.603526665948357*^9, 3.603526701189721*^9}, {
   3.6035267774716377`*^9, 3.603526780488928*^9}, {3.605477276123941*^9, 
   3.6054772798207903`*^9}, 3.6446181701582403`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Gamma]max", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu", "=", "0.00001"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6448968185543737`*^9, 3.6448968278045263`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"h", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotRecessive", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Log10", "/@", 
       RowBox[{"Flatten", "/@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"equilibrium", "[", 
           RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}], ",", 
          RowBox[{"equilibriumSexual", "[", 
           RowBox[{"mu", ",", "s", ",", "h"}], "]"}]}], "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "0", ",", "\[Gamma]max"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "6.2"}], ",", "0.2"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directive", "[", 
         RowBox[{"Thick", ",", "Black"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thick", ",", "Black", ",", "Dashed"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.002", "]"}], ",", "Gray"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.002", "]"}], ",", "Gray", ",", 
          "Dashed"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "16"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\[Gamma]\>\"", ",", "20"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Frequencies \!\(\*SubscriptBox[
StyleBox[OverscriptBox[\"p\", \"^\"],
FontSlant->\"Italic\"], \"Aa\"]\) & \!\(\*SubscriptBox[
StyleBox[OverscriptBox[\"p\", \"^\"],
FontSlant->\"Italic\"], \"AA\"]\)\>\"", ",", "20"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "6"}], ",", 
              "\"\<\!\(\*SuperscriptBox[\(10\), \(-6\)]\)\>\""}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "5"}], ",", 
              "\"\<\!\(\*SuperscriptBox[\(10\), \(-5\)]\)\>\""}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "4"}], ",", 
              "\"\<\!\(\*SuperscriptBox[\(10\), \(-4\)]\)\>\""}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "3"}], ",", "\"\<0.001\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2"}], ",", "0.01"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "\"\<0.1\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", "None"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", " ", "None"}], "}"}]}], "}"}]}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotPRecessive", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Log10", "/@", 
       RowBox[{"Flatten", "/@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"equilibrium", "[", 
           RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}], ",", 
          RowBox[{"equilibriumSexual", "[", 
           RowBox[{"mu", ",", "s", ",", "h"}], "]"}]}], "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "0", ",", "\[Gamma]max"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "6.2"}], ",", "0.2"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directive", "[", 
         RowBox[{"Thick", ",", "Black"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thick", ",", "Black", ",", "Dashed"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.002", "]"}], ",", "Gray"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.002", "]"}], ",", "Gray", ",", 
          "Dashed"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "16"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\[Gamma]\>\"", ",", "20"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Frequencies \!\(\*SubscriptBox[
StyleBox[OverscriptBox[\"p\", \"^\"],
FontSlant->\"Italic\"], \"Aa\"]\) & \!\(\*SubscriptBox[
StyleBox[OverscriptBox[\"p\", \"^\"],
FontSlant->\"Italic\"], \"AA\"]\)\>\"", ",", "20"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "6"}], ",", 
              "\"\<\!\(\*SuperscriptBox[\(10\), \(-6\)]\)\>\""}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "5"}], ",", 
              "\"\<\!\(\*SuperscriptBox[\(10\), \(-5\)]\)\>\""}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "4"}], ",", 
              "\"\<\!\(\*SuperscriptBox[\(10\), \(-4\)]\)\>\""}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "3"}], ",", "\"\<0.001\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2"}], ",", "0.01"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "\"\<0.1\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", "None"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", " ", "None"}], "}"}]}], "}"}]}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", "0.499999"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotAdditive", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Log10", "/@", 
       RowBox[{"Flatten", "/@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"equilibrium", "[", 
           RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}], ",", 
          RowBox[{"equilibriumSexual", "[", 
           RowBox[{"mu", ",", "s", ",", "h"}], "]"}]}], "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "0", ",", "\[Gamma]max"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "6.2"}], ",", "0.2"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directive", "[", 
         RowBox[{"Thick", ",", "Black"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thick", ",", "Black", ",", "Dashed"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.002", "]"}], ",", "Gray"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.002", "]"}], ",", "Gray", ",", 
          "Dashed"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "16"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\[Gamma]\>\"", ",", "20"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Frequencies \!\(\*SubscriptBox[
StyleBox[OverscriptBox[\"p\", \"^\"],
FontSlant->\"Italic\"], \"Aa\"]\) & \!\(\*SubscriptBox[
StyleBox[OverscriptBox[\"p\", \"^\"],
FontSlant->\"Italic\"], \"AA\"]\)\>\"", ",", "20"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "6"}], ",", 
              "\"\<\!\(\*SuperscriptBox[\(10\), \(-6\)]\)\>\""}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "5"}], ",", 
              "\"\<\!\(\*SuperscriptBox[\(10\), \(-5\)]\)\>\""}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "4"}], ",", 
              "\"\<\!\(\*SuperscriptBox[\(10\), \(-4\)]\)\>\""}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "3"}], ",", "\"\<0.001\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2"}], ",", "0.01"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "\"\<0.1\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", "None"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", " ", "None"}], "}"}]}], "}"}]}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotDominant", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Log10", "/@", 
       RowBox[{"Flatten", "/@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"equilibrium", "[", 
           RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}], ",", 
          RowBox[{"equilibriumSexual", "[", 
           RowBox[{"mu", ",", "s", ",", "h"}], "]"}]}], "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "0", ",", "\[Gamma]max"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "6.2"}], ",", "0.2"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directive", "[", 
         RowBox[{"Thick", ",", "Black"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thick", ",", "Black", ",", "Dashed"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.002", "]"}], ",", "Gray"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.002", "]"}], ",", "Gray", ",", 
          "Dashed"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "16"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\[Gamma]\>\"", ",", "20"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Frequencies \!\(\*SubscriptBox[
StyleBox[OverscriptBox[\"p\", \"^\"],
FontSlant->\"Italic\"], \"Aa\"]\) & \!\(\*SubscriptBox[
StyleBox[OverscriptBox[\"p\", \"^\"],
FontSlant->\"Italic\"], \"AA\"]\)\>\"", ",", "20"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "6"}], ",", 
              "\"\<\!\(\*SuperscriptBox[\(10\), \(-6\)]\)\>\""}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "5"}], ",", 
              "\"\<\!\(\*SuperscriptBox[\(10\), \(-5\)]\)\>\""}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "4"}], ",", 
              "\"\<\!\(\*SuperscriptBox[\(10\), \(-4\)]\)\>\""}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "3"}], ",", "\"\<0.001\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2"}], ",", "0.01"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "\"\<0.1\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", "None"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", " ", "None"}], "}"}]}], "}"}]}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"plotRecessive", ",", "plotPRecessive"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"plotAdditive", ",", "plotDominant"}], "}"}]}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdylsoQwEABuBDRNGSMsoy1goN4cml1EmaB7MiywMPFstdTETIWC0eNtdc
kpgptzbNsI0kuWStub64tGWabEeppTXlwfnPw99X//+nSDsqGkIJguDSgSem
ymCiw0fesqoZFbVkOIfWGDUYAR+vFSL4clYmhj91sf1Q4ItQQjufnIWRW5kL
cD32eRUKd4bXoWyqfhMeSZsYiwuNFuiL2z6Gam/gFK68U+eQ7bixMbsnxgUH
HnI/mV7fRkHbxnJl0pOPfE3lVcFzp7sL/gRyuqFWqDuECT0CM5TyL5q5tBmF
CS1Q4m7thI/qy164qRVuQ2P2mh3y8mec0EyYGHe5rbJkWutkWiOcsL11wXal
Rw51ftUQrJn4G4bq3TEVlH9Ea2BpOXuG+VOaWSjrG5nOoi3YE85BfZHVCPOW
Qvdhf4jiQJ1KkcHbMAs0Ge4M7DSK5CeJ76BDk0HB+TkRo+T+6hs2ut7/oHl0
hxVPO+4Xx0G9d+9rMZ0iOSXWX/gP2tQE7A==
  "]],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      GraphicsBox[{{}, {}, 
        {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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
          "]]}, 
        {GrayLevel[0], Thickness[Large], Dashing[{Small, Small}], 
         LineBox[CompressedData["
1:eJw9k3s0m3cYx4lGkbi01CWzHYytdBg941Q7T13aFdOpGce1rXRLOUqyGjsT
w7a6nOqZGOLSVEfbzFgkSkRKiFzEvW2UzqUzatRqGdqtZ2l128lz/PGe93zO
9/l+f8/ved7XMTkj8mOCnp4e9b/n/3fDalfmaJGXv8TicWUu27SP8uD+nXSr
UzCEPGaY0HXOir7NOQ+178iHP4dOZKtfw2MvSfNBhtxfknklRP0N8JAZ3nWL
xKViSEGONo39JXKhFMqRX8u8uDaeUQYGu3RMPp+VJakpBzfU/2Gcftkiq4Cv
kSdGO0nXVFXbfp6rmW3daDXIzXVMYNM9p1/UAhHzYnaoj9p5cGAFdaVJQZdD
VD2Eob+u2MbaqucqJKIe4ue863LP90BF/9+/v012ljTAGtYn35CRIyYa4Q2s
HzsVbcpcvQZsZP7glQ/e+uM6xGI9y3uZNbt+A0wwT+/sPX3Gn1yIQZ3OkTGI
mh/gE9Q5M77L7xr8CJZmOh6ya0nIsmmG91A/Zzhpud+uBaTot9h8OaSh/ARi
1OkrrUUR3jyIQv3O3MlgQUgrJCPPj8fZaN354IL5U/wLpa928uFn7N8k5aIT
wVcANagfcmSJfhMKwHe3jkfmYk9wAtrAEusTa51WPxxpg3rMd/VQNo6E34R4
Ux0/laYkHhm/CcWY5xB3264svh2MsT5sw2dyerkdsrD/bjq9ic3oABvUPTRN
zChtBwyhfzpYQlfnCLf3W1h790zkcyFkYz+sJ03xjUWdYI/+y8cLIp/sFkE3
8kLe/tSdlSKwQP9ewVIBxaYL6kx03KFK5ddXdcEZzAuc1zxwthZv+z2e+1ow
r4phg6RjO9v8ALXbLajG+x4mNX73uPkW6OO8aFuKJaJ7NxxC/9rTZr91UTcM
433Or7G+nQ3ugQjUDw+Hag+M9cAzMv4PTQY0dowEHDDPMom9KZySABf9FMt9
+ZMxvbCF5+ePFJirFnohGPM2A9PGZ3364DP0B5MucIXZfUC10nGFmpNXJuoD
d5yHkbkD9fVnfTBtqWNmaMNRoa8UvkLdwahwXxtTCovIMkWKBU8qBSaev0Mj
JpII/ZCE8zliS9bSAvshwhjnK5Osuxf3Aw37d8lgrGyO9sNHeJ53IUtDMZcB
1QjnwRH8FRAhg+O4D8abB42dymRgjP4GgfwVwm0ZWGM/BEmrZ9geOTzCfqhD
tUEVcXLYwvrTgZs0/zo5qFE/KQ4rXZmRb/9Ppe3ENq2jAhSoi3m9U2ZnFXAX
/ST7RaOZFgVkY31CiaEfd10BXqiHJrNzJryUIEH/gYN7e/Q/VUIYcnQVRa+6
UwmNuI/MdXKQxwsluOI+PEVpVS7+AyDB+69+OfLIPm8A/HA+KlHlsVHJAEQh
czeSuLlbA5CO3MEr2ckOUkH6HtxPajuNX6yCL7Df9PL377sNqiDBEL8f8cNj
140HYQD1XJ+5tPoTg7CAefNt98pqagYhHPV/ARR1DEI=
          "]]}, 
        {GrayLevel[0.5], Thickness[0.002], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvejVzpKz7YZ2cwr73567/2O/1L0bF/NEEuxh/HNs
MTtzRQrgfJGHvpG9Bxvg/EKj2Y9Zn3bA+XIl3W/P50+A838VJv5fc3gKnL9O
k09i9tkZcH44y2U3Sb25cP7sDnExkb0L4Pzvrw14VPYtQrgnIYy35tUSOH+i
0fOJdz4ug/ML5h4uZH2/As4/Jbkmpkx8NZwv8Pn/qfdSa+H8i3fjXTZ6rofz
r29o7ZHdvgHOt1GcuOPZto1wfuwspVfBZzbB+V8PZsa6nt8M53t/Mrt26/kW
OF/v/cqakN9b4fy2WZdSgv5sg/Pn+DUGfRHaAedrbHzaKCW+E853evD+norY
LjhfUqLB8bLWbjg//d/Rp6y6e+D84rcT+++47IXzeVYyp08P3wfnSwlrN1wL
3w/nf3bKOX/H7ACcP+Xy3PoJOxD8Gq9FbtvMD8L5h49mCqw7iOC7SvD8Tnc6
BOer5he++HwWwXeYu/GbY8BhOH/RxiPSTBcQ/ORTs5ynRB2B8+N3efe8uI3g
71q3/zpfxlE4P6aTzWr5RwTf0lpjL2PRMTi/5COPs95fBP9V3ZmXMvXH4fzl
n+KW1/5D8A9nbUnf0HECET67nngs5TwJ59ea3c2ZH4jgP9h0dcLMmQg+APHw
CGg=
          "]]}, 
        {GrayLevel[0.5], Thickness[0.002], Dashing[{Small, Small}], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvejVzpKz7YZ2BwTeTK2dzntA6t6Ni3kiCfYw/jm2
mJ25IgVwvshD38jegw1wfqHR7MesTzvgfLmS7rfn8yfA+b8KE/+vOTwFzl+n
yScx++wMOD+c5bKbpN5cOH92h7iYyN4FcP731wY8KvsWIdyTEMZb82oJnD/R
6PnEOx+XwfkFcw8Xsr5fAeefklwTUya+Gs4X+Pz/1HuptXD+xbvxLhs918P5
1ze09shu3wDn2yhO3PFs20Y4P3aW0qvgM5vg/K8HM2Ndz2+G870/mV279XwL
nK/3fmVNyO+tcH7brEspQX+2wflz/BqDvgjtgPM1Nj5tlBLfCec7PXh/T0Vs
F5wvKdHgeFlrN5yf/u/oU1bdPXB+8duJ/Xdc9sL5PCuZ06eH74PzpYS1G66F
74fzPzvlnL9jdgDOn3J5bv2EHQh+jdcit23mB+H8w0czBdYdRPBdJXh+pzsd
gvNV8wtffD6L4DvM3fjNMeAwnL9o4xFppgsIfvKpWc5Too7A+fG7vHte3Ebw
d63bf50v4yicH9PJZrX8I4Jvaa2xl7HoGJxf8pHHWe8vgv+q7sxLmfrjcP7y
T3HLa/8h+IeztqRv6DiBCJ9dTzyWcp6E82vN7ubMD0TwH2y6OmHmTAQfAHt4
rl0=
          "]]}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0, 0},
       Frame->True,
       FrameLabel->{
         FormBox[
          StyleBox["\"\[Gamma]\"", 20, StripOnInput -> False], 
          TraditionalForm], 
         FormBox[
          StyleBox[
          "\"Frequencies \\!\\(\\*SubscriptBox[\\n \
StyleBox[OverscriptBox[\\\"p\\\", \\\"^\\\"],\\nFontSlant->\\\"Italic\\\"], \
\\\"Aa\\\"]\\) & \\!\\(\\*SubscriptBox[\\n StyleBox[OverscriptBox[\\\"p\\\", \
\\\"^\\\"],\\nFontSlant->\\\"Italic\\\"], \\\"AA\\\"]\\)\"", 20, StripOnInput -> 
           False], TraditionalForm]},
       FrameStyle->Directive[16, 
         GrayLevel[0]],
       FrameTicks->{{{{-6, 
            FormBox[
            "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(-6\\)]\\)\"", 
             TraditionalForm]}, {-5, 
            FormBox[
            "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(-5\\)]\\)\"", 
             TraditionalForm]}, {-4, 
            FormBox[
            "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(-4\\)]\\)\"", 
             TraditionalForm]}, {-3, 
            FormBox["\"0.001\"", TraditionalForm]}, {-2, 
            FormBox["0.01`", TraditionalForm]}, {-1, 
            FormBox["\"0.1\"", TraditionalForm]}, {0, 
            FormBox["1", TraditionalForm]}}, None}, {Automatic, None}},
       ImageSize->400,
       Method->{},
       PlotRange->{{0, 0.2}, {-6.2, 0.2}},
       PlotRangeClipping->True,
       PlotRangePadding->{
         Scaled[0.02], Automatic}], {213.33333333333334`, -131.84725093331087`},
       ImageScaled[{0.5, 0.5}], {400, 247.2135954999579}], InsetBox[
      GraphicsBox[{{}, {}, 
        {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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
F7vv5ou0nBwSWM3r0pvE/g9i8/fv
          "]]}, 
        {GrayLevel[0], Thickness[Large], Dashing[{Small, Small}], 
         LineBox[CompressedData["
1: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
GGH/B6nl2x4=
          "]]}, 
        {GrayLevel[0.5], Thickness[0.002], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvejVzpKz7YZ2++dFfb3PzHhA6t6Ni3kiCfYw/jm2
mJ25IgVwvshD38jegw1wfqHR7MesTzvgfLmS7rfn8yfA+b8KE/+vOTwFzl+n
yScx++wMOD+c5bKbpN5cOH92h7iYyN4FcP731wY8KvsWIdyTEMZb82oJnD/R
6PnEOx+XwfkFcw8Xsr5fAeefklwTUya+Gs4X+Pz/1HuptXD+xbvxLhs918P5
1ze09shu3wDn2yhO3PFs20Y4P3aW0qvgM5vg/K8HM2Ndz2+G870/mV279XwL
nK/3fmVNyO+tcH7brEspQX+2wflz/BqDvgjtgPM1Nj5tlBLfCec7PXh/T0Vs
F5wvKdHgeFlrN5yf/u/oU1bdPXB+8duJ/Xdc9sL5PCuZ06eH74PzpYS1G66F
74fzPzvlnL9jdgDOn3J5bv2EHQh+jdcit23mB+H8w0czBdYdRPBdJXh+pzsd
gvNV8wtffD6L4DvM3fjNMeAwnL9o4xFppgsIfvKpWc5Too7A+fG7vHte3Ebw
d63bf50v4yicH9PJZrX8I4Jvaa2xl7HoGJxf8pHHWe8vgv+q7sxLmfrjcP7y
T3HLa/8h+IeztqRv6DiBCJ9dTzyWcp6E82vN7ubMD0TwH2y6OmHmTAQfAEfW
tEE=
          "]]}, 
        {GrayLevel[0.5], Thickness[0.002], Dashing[{Small, Small}], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvejVzpKz7YZ2nxlYergzhQ9I3btxMU8kwR7GP8cW
szNXpADOF3noG9l7sAHOLzSa/Zj1aQecL1fS/fZ8/gQ4/1dh4v81h6fA+es0
+SRmn50B54ezXHaT1JsL58/uEBcT2bsAzv/+2oBHZd8ihHsSwnhrXi2B8yca
PZ945+MyOL9g7uFC1vcr4PxTkmtiysRXw/kCn/+fei+1Fs6/eDfeZaPnejj/
+obWHtntG+B8G8WJO55t2wjnx85SehV8ZhOc//VgZqzr+c1wvvcns2u3nm+B
8/Xer6wJ+b0Vzm+bdSkl6M82OH+OX2PQF6EdcL7GxqeNUuI74XynB+/vqYjt
gvMlJRocL2vthvPT/x19yqq7B84vfjux/47LXjifZyVz+vTwfXC+lLB2w7Xw
/XD+Z6ec83fMDsD5Uy7PrZ+wA8Gv8Vrkts38IJx/+GimwLqDCL6rBM/vdKdD
cL5qfuGLz2cRfIe5G785BhyG8xdtPCLNdAHBTz41y3lK1BE4P36Xd8+L2wj+
rnX7r/NlHIXzYzrZrJZ/RPAtrTX2MhYdg/NLPvI46/1F8F/VnXkpU38czl/+
KW557T8E/3DWlvQNHScQ4bPricdSzpNwfq3Z3Zz5gQj+g01XJ8ycieADAIuS
ZT0=
          "]]}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0, 0},
       Frame->True,
       FrameLabel->{
         FormBox[
          StyleBox["\"\[Gamma]\"", 20, StripOnInput -> False], 
          TraditionalForm], 
         FormBox[
          StyleBox[
          "\"Frequencies \\!\\(\\*SubscriptBox[\\n \
StyleBox[OverscriptBox[\\\"p\\\", \\\"^\\\"],\\nFontSlant->\\\"Italic\\\"], \
\\\"Aa\\\"]\\) & \\!\\(\\*SubscriptBox[\\n StyleBox[OverscriptBox[\\\"p\\\", \
\\\"^\\\"],\\nFontSlant->\\\"Italic\\\"], \\\"AA\\\"]\\)\"", 20, StripOnInput -> 
           False], TraditionalForm]},
       FrameStyle->Directive[16, 
         GrayLevel[0]],
       FrameTicks->{{{{-6, 
            FormBox[
            "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(-6\\)]\\)\"", 
             TraditionalForm]}, {-5, 
            FormBox[
            "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(-5\\)]\\)\"", 
             TraditionalForm]}, {-4, 
            FormBox[
            "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(-4\\)]\\)\"", 
             TraditionalForm]}, {-3, 
            FormBox["\"0.001\"", TraditionalForm]}, {-2, 
            FormBox["0.01`", TraditionalForm]}, {-1, 
            FormBox["\"0.1\"", TraditionalForm]}, {0, 
            FormBox["1", TraditionalForm]}}, None}, {Automatic, None}},
       ImageSize->400,
       Method->{},
       PlotRange->{{0, 0.2}, {-6.2, 0.2}},
       PlotRangeClipping->True,
       PlotRangePadding->{
         Scaled[0.02], Automatic}], {640., -131.84725093331087`}, 
      ImageScaled[{0.5, 0.5}], {400, 247.2135954999579}]}, {InsetBox[
      GraphicsBox[{{}, {}, 
        {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1:eJwV0Hs0lAkYBnBNsYyZ+T41MYZ0WXYHsWlPlNSL5FRoSzSlqbRqddeULoSi
1NAkilrDtCWlq7BRCO8YI59ckuM2ESUpckulNLTf/vGe5/zO889z3pl/Bnlv
Y2hpaXnR93+m9eQHV5+2WxxpEy2oK9fFnYypmMMlYWVDwrIfFbr4hReadY47
AzpLxaazn+qiU/pdQQR3DjA2jHdF1upi+3vV1oNcZ9iyut/arFkXs6XPGWLu
KhhdIGjiv9dF/svmur1cf+i+baGwZephjY4ofw93H8RNqnmpt1wPua+81p9V
HAcLuys5h8r0UDw3pVO7SwKW31KdGq2YaBZ8pq82KB5qFPNFsmgmjoq3/Lir
TAQNGXrLs52JmZYcXkr13zDjE2Uze7Y+CifVuxvbykET6iKbH6KPKRIjQ27R
FUjMMlx6uEQfR3rnsMyL02BDhQ67QaOPNf5r2WE96SAzMBPuXsjChLndCa1D
N6Bz2OxO0n4W7pMrxdoDN2HeZ7lo8DoLK43vig4Z3YENosbyfjULyeEflQP8
e2Ai9LXkMtlY17bZLXv5fTBPSsVeRzY2ZUVLpz3MgpKv/bFPt7PRaWbCo7d5
2cBOCjd/k8DGjbJZPWuqcuBeVze34jEbPyt2bFxa+y94hN/MFXWy0eOjfaO6
+wHY+PuM5Opz0HbgVpjP91z4kKHu/2LHwVOy51u9NXlQqCqtPuXDwdSVkd6f
Jj+CvpEh7dYjHBRkd0XyjfJh7OnVlopkDrp2DLw0NyyADLv2g3PyOWjMO+5S
b1UIeYRXplDNwcBxVZe2zWNY1PbMPeQrBw/0JZxrdSuChY0LNF48Alm3JgZe
EhZD8OXh2jJ7AvlTrI83Ckvgm5sPFe1N4LDr7tpWewQH06NZg0EEJtbLj8U/
QvAQn2BVxRIYtiLNPc9BATn8gfyL6QQqVTvITIUCSrovHJiABC7lsb4HupaC
68ZSbW4LgRZB4nfD1aWAsTslhcMEOsuzv7isUsLVoxb7p+iQmJZdZsJ4poS+
39ZbNxqQGFApW5LoVwYOPTGyTWYkbi7wkL57UQYrfIPz2yxJLMgsaeJsV4GW
5Oe8afYkimJ0HDOGVGBoXPh90IXEBQsFRRP2l0M0d29vlSeJwUOsJbZj5eBY
x/Tato7Enoiq96bHnkAcY6s7EUBixsdNGeHjT8DvVVzIpj0kKnc+CMySVMCo
f9mEv46QyC94s+y6HgUGb+1qpFEkjoVP4nfpU0DKixryaXe4mPeacyh4fDJH
/Zb2DSrgbPpkCna5Nrc6nyDx95bXdddMKPggNSv9RNvza4dfmg0F9XsYBqJo
EsPt23b/s5qCG7+6KQUSEv1HNYva11AwKFEd8aXtVmxKTF9LAXtisXUUbaa7
KPuyHwW/OE2NfUH7ou+Lz/IACsIqdwniYkjMDG6JSD1Iwawk3oePsSQmzP/2
R+thCtTE4pDpZ+h/aHgzTUPpPfLXEz1pO55cp0yJoMCOyDC4TvvJhaafUk5T
cMbBihBKSbwtHGlWx1DwjOclOUE7zsToNl9KgZbz0Ph92j7X1nrK4il4uAvf
6J4l0SHw0DT1eQq2u/aumUebb32x3ziJgpq8ZNxCe6w/t2T9Jbq3rLKKo92R
0xCfnEzBhblR5wto/wfv/VxB
          "]]}, 
        {GrayLevel[0], Thickness[Large], Dashing[{Small, Small}], 
         LineBox[CompressedData["
1:eJwV03k0lesXB/CSUuK87xk4xxAZkksakKJb2yyhVDLdQiJSSlKuyjyUeShK
OglFhl9RGVKyZTyEolKijClyiEY5+r33WWuvZ33W/mPv77PWo+B6bJe70Lx5
85qp+u/OmlnuNpdHQOvT/w4HvYQk8C6LhDOcC4/6nnDwO+d0cSJrOYjS5v/T
3cTG8uJP8xrkVOGfqsl0TzU2/n2jSDWItRZ8R/Me7SiTRFmfIet0KW2YHlH/
q9JREgWbZAPuy20E2SHmcRVCEt+J2GS1K/0NTmzjmO42CXz/qd7tJEsf5pzJ
eZNpEvisvf+nENsQlloFWwW5SyCWCuKSpIwhIE2kU1NXAoszpBTkZE3hxoUl
alJ0Cbweur60UG4rPFxVpHjmMwuTPHaa6ypsgzmJsG2tzSwMtfLubVCyBLqm
SGR2IQtL4jqEjrOsoeSNKS/mBAsLgvuelkvsBPO8qbPLHFmY7ctPm5PcBYoC
hU51Qxam2Iuqx0nZgP6Cq/XykiyMseB865DeA7k3V5XWz2dh2BaVailZWzD+
ltjlzmeir7Lh7jw5e/C0C4iAZiZ6sa2X8eUdoFr8nymbB0x0FXUa0VZwhBpl
WqxMPhN3TwaceaK0F7ICP2Wfj2Gi9LvXz4+yXGBI0CxZvZuJaV3vdRipLvDU
uy56tRkTGc8/ZJRK7Icvci0iwpuYKFr31X1W0hVkyqLozUpMnMknZ6Kl3GBS
M6NA9xcDT+WwnTWuuEHlI/kqywkGTl2Vq3sm7Q7rUrVnsoYZOJq4KoEtexA6
6heULepk4NuTWxVvynnC0EpN36PFDLQ/tuPc1kxPOB+q6mp6i4EvPG0/j8kf
Aj0Nf67ldQY+/cetTFPBC9T66+/3JDHwkUHINlQ6AmfWRK98d4KBbYv2PvBm
+YABP3jFFn2qv9DAW9XRB2y8s+a36zIwX1hFYTDTB879IC4GaTEwQmjyvL36
cUjbf/Td+pUM1J0Ltzcy9AW1VQa5YwQDVQSeYnPnfMHlkeC4vSgDWbNWWNHq
C2yxbcxeYQbyf7FVVzucADM5awn1GTre+Fb4g+PjB4k/vZybhumY8jWpsLPU
D7S13w7399ExePqkc8JvPyi66H+U1kNHxy/QuODcSbD0Uo+91kFHcrwzjc89
BeXh1VIJSMczQ7/X17X8C+rvIrusM+noOdj3KYgeAMwnuiUeGXS0Hajn6toF
wO85w4Oxl+i4ti9x4Z2BAChZ9rfRz0Q6fnir9DL912nIVWrycgml465OC79j
KwNhh6l37/qDdNTvWKuq5h0IBiVak7OudNR4LtEzdDcQMloFW1qd6bi4/b2R
45YgiD735t15BzpWNZ9gmuwJBn+0jfewoiOr38ohviYEHJf3m2XpUHkk/TfJ
DITA/JOxh9jadMy0uL4sXygU6FPf0i6so6Na2VR/nVEouPuvLeWuoubHXvKa
rQ8Fh7Upgd8V6Xh4ff+Zw81hcHbfx5o8ko7FXqJOv0bDIOqnjocfjY7fM7X0
zy0NBx7/dLuJGB1DRKOEcyzDYa38+xvfReiY9l4tvrstHDQy76Un/CHxSbTf
NfPOCPh4sN41ZoLExdXckK7pCFh9OHI4Y5xEq68Nru6sSMjY4LalZIzE105S
K0P3RILZUJL+yAiJfK3Hdyq6IuG2UO764D6S+i8iNSt7oqDW2n/xng4Sj2tm
DC4cPg8Mp5bJXRUkblUIsJgUjoampiV7O8pIXE7a3etWjoa6tYZWNqUkto0z
wu+4RcPSbq1c57skquXHKDoMRUNZX4f/hSISh+RP7y8ajIHCghUcrywSbcUd
3u8aiAP2yh3lhXEkaszqmG0Wiged2qjtPrEkCo+x7qxUjIebb10rdWJIvNf0
LGh2fzxELb0613SORDJiq1xufzw0PjJ6IhROIm9mw75ffQmg4v+yqDGARDm/
2PH2Y0kwc0/PItCTRMmnHfvlQ5Ng9ZLqm04eJIorS786mpIE+58fyDQ4SOJs
563H4qWUz67YL+ZGYrdWQ6LFTBK0GddU3HcmMXV6nmZjRDLkC8vcsbIjUezE
qVOP01OguNHjXIwZtW9L1ah4YQo4OnPs001J/K240HnfoxQ4b2fplm9C4mjH
BbPZdyng1sRa0WpEYpNmCUdP+QLwtdKFlPRJDJ8aqyy9fQHsX2azF+mSOHN8
/5+i2osgnxVqdkWdxDfKdeUvOi+CScTyF2/USKzoUvGZHbwIHSLHNkhTPrn5
c5+FcCo8FGw+y1UlcXKx/5NR41RYLe/06n8rSBzJjItUbUiFcdWrqV/lSXzR
Wr70RlMa3BcoadAlqPcNka5reZ0GawQ+3z1ZJKZoBZ6d/pgGmy2SvGuYJO5I
Nxw3XHIJGr2GXfwYJDa7tbb1m18C/qm2zQMEiTW/B5LlWy7BcQevkR5REm//
ReNktF6GArUWRbP5JHI288hl7y/D5Wp7i9x5VF7riCWZk5fhZDjKLKJs7z8z
k81MBzSvck4UELig/kNvgUM6pKZqkzd/EmjvUp1TOZwOUb27V4lNECh0yWdN
t+AKHKj+vORRD4F2wp2mUqu5YCo96WD8kMAYP88wc+CCh0/BnGUlgY+HBFUB
1lz47tkTYvuAQOV61fXdvlx4QfZxjpQTOBUZpJRRzoVRR99TWfcITBBRm7fM
4Br4MM1HtIoIbBANfbDcJhN6xiZEJrkEZpxnS7KqrkNx1+ekhHACVfkTezj1
10Hi+WxXZxiBZbubUmVbrwNZJ1MgRfmZXIDEit7roDMkOp4bQuCi0m6WjuA6
7Dsc2tMYSKBvP5dpvzkL8rihbxX/JdBcT5l+tSoLUq962Op6E/hjbK2Y8uNs
8Hgg3NlsT2Bz6PojLxuywexqlaMC5WtsvadR7dlQQPQ6/WtHoLGRUdynvmwo
tVHoXmlLYMqVPWJ3FuTAU5tb8XG7CVxlflpMzzwHNK9d9z2ynUDX3Fox6xc5
kO1sUBRmTGCbi6342dEbsMh7kM9fR2Cy5khyz5dcoFcvypdlEujDrT2+cOIW
ODWEEpM/adgsVbT3FLsQ1rXWOa/poyE5/ad5Qvp/ULKm/NVgCw2f9zobl5jf
AeGa0XbPChp2FUfGLSsvhiPhsr2H8mj4t0JyxYeyEmBuaK1SS6fhviuKo7uf
3oUPHyZmtWNp+K3m0D6T9nswZPLA3zWYhhZTOq+6R+6DVOAC67ITNFw9kX/W
5ncpyOX+MDU4RMOoKx1uu2bLIGFjcNdWFxpe3R666yujAvg26jut7WioWjIc
Ks1+AHv3ixxM3kFDw76Jd8qSlfA7r8YhZCsNpTghBp1qD+F5RY7ZPgMaeszV
Dy/UeAR+sSqNKptoeGI8ObHHuAos9V8ffatNQ7H8BR6X7B6DNc/8MGsNDaWZ
6iGv7KpBesp4u7AaDacNj7T36CBcKdmZ9EaZhhc7ucFJFQisQ7e+WC2n4dlt
2aZlG2rAvUzGXVKWhrX1h8jbNTXgOubys4ZNQxOO2G8PwyfQd/uFFZ9JwxXH
jn+cbn0ChcKKrD8EDfW5Jd8NrGuhee34X2FiNMwuqZMRelYL6yJuLddfQsMD
zVeMLjrWQavL5dMDC2noXGkR9/FtHYjd5HwYFKJh5e3qLppnPagl6+1s+SOO
e6MX6eV9qQfBQIjK8Kw46m5SrZrv2wAh93JebJ8RR78vYkarBQ3Q9tJya+YP
cRwNevpJNrgR2mQb7Td+E8e8Kae8wLlGCJCs3/RtShxrve57FJ9vgkQh4fH0
SXGUrhzaenMJD7rGFeiBfHEUBApLDy/lQbDwjWcnKPcZKI8p03hg8qos2Yty
Lu9A/A0GDyrXxXHsKWu9GXieI8ODQ+njG7UoW/7sc8zW4MGlLRp1n8bFMVCn
90jmTh5oTHycb0/ZZWZ28/vdPJja83BqO2Xjx7KEvC0PwlrowyaURU33llxz
5IFMi3mbFuW0PW+/cQ/wYN2HN3cJyrf93gRdPcmDEvm/6ho/i2Pyxl87evx5
sJ0gWx9T9pvlKMie5oFKjl9XKWW9CPvajCAeiNwun8yh3HihSyTjHJV3WmJ9
COUCux+vu6N5sIo9aO5POUGGXSAdxwP0V3c5Stkmx9byShIPdn1RT95LeYPH
qWXdKVTe4MHC3ZSl1dP4Uqk8uGzBatpGWcAvrXa4RPWrHw8bUO67+zIpPZ2a
t3xAWJfy/wFVcAbn
          "]]}, 
        {GrayLevel[0.5], Thickness[0.002], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvejVzpKz7YZ2YVzvvxdd4jggde/GxTyRBHsY/xxb
zM5ckQI4X+Shb2TvwQY4v9Bo9mPWpx1wvlxJ99vz+RPg/F+Fif/XHJ4C56/T
5JOYfXYGnB/OctlNUm8unD+7Q1xMZO8COP/7awMelX2LEO5JCOOtebUEzp9o
9HzinY/L4PyCuYcLWd+vgPNPSa6JKRNfDecLfP5/6r3UWjj/4t14l42e6+H8
6xtae2S3b4DzbRQn7ni2bSOcHztL6VXwmU1w/teDmbGu5zfD+d6fzK7der4F
ztd7v7Im5PdWOL9t1qWUoD/b4Pw5fo1BX4R2wPkaG582SonvhPOdHry/pyK2
C86XlGhwvKy1G85P/3f0KavuHji/+O3E/jsue+F8npXM6dPD98H5UsLaDdfC
98P5n51yzt8xOwDnT7k8t37CDgS/xmuR2zbzg3D+4aOZAusOIviuEjy/050O
wfmq+YUvPp9F8B3mbvzmGHAYzl+08Yg00wUEP/nULOcpUUfg/Phd3j0vbiP4
u9btv86XcRTOj+lks1r+EcG3tNbYy1h0DM4v+cjjrPcXwX9Vd+alTP1xOH/5
p7jltf8Q/MNZW9I3dJxAhM+uJx5LOU/C+bVmd3PmByL4DzZdnTBzJoIPAKNy
tN0=
          "]]}, 
        {GrayLevel[0.5], Thickness[0.002], Dashing[{Small, Small}], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvejVzpKz7YZ2z2fFL+4sFj0gde/GxTyRBHsY/xxb
zM5ckQI4X+Shb2TvwQY4v9Bo9mPWpx1wvlxJ99vz+RPg/F+Fif/XHJ4C56/T
5JOYfXYGnB/OctlNUm8unD+7Q1xMZO8COP/7awMelX2LEO5JCOOtebUEzp9o
9HzinY/L4PyCuYcLWd+vgPNPSa6JKRNfDecLfP5/6r3UWjj/4t14l42e6+H8
6xtae2S3b4DzbRQn7ni2bSOcHztL6VXwmU1w/teDmbGu5zfD+d6fzK7der4F
ztd7v7Im5PdWOL9t1qWUoD/b4Pw5fo1BX4R2wPkaG582SonvhPOdHry/pyK2
C86XlGhwvKy1G85P/3f0KavuHji/+O3E/jsue+F8npXM6dPD98H5UsLaDdfC
98P5n51yzt8xOwDnT7k8t37CDgS/xmuR2zbzg3D+4aOZAusOIviuEjy/050O
wfmq+YUvPp9F8B3mbvzmGHAYzl+08Yg00wUEP/nULOcpUUfg/Phd3j0vbiP4
u9btv86XcRTOj+lks1r+EcG3tNbYy1h0DM4v+cjjrPcXwX9Vd+alTP1xOH/5
p7jltf8Q/MNZW9I3dJxAhM+uJx5LOU/C+bVmd3PmByL4DzZdnTBzJoIPANrl
tUU=
          "]]}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0, 0},
       Frame->True,
       FrameLabel->{
         FormBox[
          StyleBox["\"\[Gamma]\"", 20, StripOnInput -> False], 
          TraditionalForm], 
         FormBox[
          StyleBox[
          "\"Frequencies \\!\\(\\*SubscriptBox[\\n \
StyleBox[OverscriptBox[\\\"p\\\", \\\"^\\\"],\\nFontSlant->\\\"Italic\\\"], \
\\\"Aa\\\"]\\) & \\!\\(\\*SubscriptBox[\\n StyleBox[OverscriptBox[\\\"p\\\", \
\\\"^\\\"],\\nFontSlant->\\\"Italic\\\"], \\\"AA\\\"]\\)\"", 20, StripOnInput -> 
           False], TraditionalForm]},
       FrameStyle->Directive[16, 
         GrayLevel[0]],
       FrameTicks->{{{{-6, 
            FormBox[
            "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(-6\\)]\\)\"", 
             TraditionalForm]}, {-5, 
            FormBox[
            "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(-5\\)]\\)\"", 
             TraditionalForm]}, {-4, 
            FormBox[
            "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(-4\\)]\\)\"", 
             TraditionalForm]}, {-3, 
            FormBox["\"0.001\"", TraditionalForm]}, {-2, 
            FormBox["0.01`", TraditionalForm]}, {-1, 
            FormBox["\"0.1\"", TraditionalForm]}, {0, 
            FormBox["1", TraditionalForm]}}, None}, {Automatic, None}},
       ImageSize->400,
       Method->{},
       PlotRange->{{0, 0.2}, {-6.2, 0.2}},
       PlotRangeClipping->True,
       PlotRangePadding->{
         Scaled[0.02], Automatic}], {213.33333333333334`, -395.5417527999326},
       ImageScaled[{0.5, 0.5}], {400, 247.2135954999579}], InsetBox[
      GraphicsBox[{{}, {}, 
        {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1:eJwV0Hs0lAkYBnBLdJnbd2o2Y6K0jZY6VNpccnnDaCusGtY0HV0Wu6qtjDIq
uWtTuywSGZOSdCHGDNGgzKtx+yxKFypE2xLakpSkof32j+c85/fn8ywOCBH8
rKujo+NF5f/OG64Ma01c5XxT+n7rtytouFf3ayxlE7AkQ1PqtJKG45wIRQrb
FPQmCi74rqKhY36ReTR7JURaFCfHraZh71B9kIS9DlT8MnWnLQ2VSfd1Q9mb
ob3JLl+yjobcZ4/bD7B3wXcOZMGRLTRsM/Cv3M8WQxyv8Ev+QRqyn3uJkmtj
oWaWQDBdQcNQa9kL/f6TsFRqatT7joYLw/54fTckFcazPiX6LqPjZOhPX4o0
Z0A2W3DPPZCOcgsmR9aaBT3xCQ9VGXQUzniw3sgqB9a29mvrSDrKThrOZ9/O
hd/5ZVYRk3T8+GolnVeTBw5R6veTZgxs2+XHiBzOByNLuylHHwamWb9M6x69
ArbSS2seH2OgOEcTqj9yDapPe1Q65jGw2ajIP9zwOki6L38+0MxAYuxL8wi3
GPSl8l+K3jCwvWcnX7mxBDzaglqK2UzsVPyWZHJTAXfm5Qqb7ZjouDhNNVCh
hPGLwdojIiZuz/5m2KelFC56zzQbPMbED7V7trvfLYPqaSeeuYyJHu9sOp6+
vAERWaUC41tMtBopiPT9XA7STf/uzO5i4ons+0ECbQU4z+QFuU4w8dwPcYL3
c1Vg+0pkkjmfhebK/jiuYSWcX90rcrZmoWvfyDPe/CoYzDZxbvBkoREn1uXB
smrQX1O89O1uFgZP1/frW96CF13Vx6/Hs/DQ67SUbv5tsG6r+3Uqh4X0Ar3g
s8IasBa9eOimYiF33vLYDqEaVHZZTO97LBxz3Xe32wbByq11YmCIhWce5MSk
qhCSbezFch0CIzflra+wrQXPmP0ftTQCNfV7CHltLRz+oOYwOAS6c+ifg13v
QElxEGvREgLNQkIHx1rvAPgOjr62InBdjnLcZbMGvBKX+jTZE5inrFuge08D
euKyQ3w+gYHN2W5nttXBW9qo/VFvAndWeSQNdtWB1qzTrklEYJVc3cncXQ/p
Anj4VxCB/qcM1l4drYfxhbVzJCEE2juY3/7qYAOYGu2IdT9KYNgo3c1qqgHE
nhsqGxIIHI5uGTKOaQQrvwGVJJnAq+92XI2aboQAjTakM5Pas/dGsOJkE8zI
bgscyCWQW/XPhsuzSdgYm77ZspDAqagZ3H4aCcYJGXF+lPtceK94TBLsn6Ur
YihfIQOT8+eS4LDwxKz7lFc/+bv90gIShCKP3PDrBHpO9G3LsyQh3v1CiLqI
wCibnn0XtpBQuUqe4l1C4K5JrVOvDwnflz+KPUKZX2PMWuRHgnmonvgi5Tnr
/ZXnt5FAKg5tGKOc+WPXh5xAEqY9Sp5nKgiUhz2JPichIdzpSXmPksA0u0/e
3YdJ6A5ITjQopf7QchYbR5DAnOMlXEF57fGtGlk0CQZtI29jKTemd86UJZKQ
+qiFzisjsFD48fHTUyQcde9v86T85wLDQm4SCWbDtBQJZd9Lfp7ZqSQMdSTM
bqRsGxxu8vQ0CWKLDs0IZe7yzDdGGSQ8T7WN5Nyg/ntTrhadJSEg/pq1C+W+
0kepUikJXW4WL/dQ/g+qI130
          "]]}, 
        {GrayLevel[0], Thickness[Large], Dashing[{Small, Small}], 
         LineBox[CompressedData["
1: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
XAgyjnmdxPP/AXqCGIQ=
          "]]}, 
        {GrayLevel[0.5], Thickness[0.002], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvejVzpKz7YZ2SzfcLvqrx31A6t6Ni3kiCfYw/jm2
mJ25IgVwvshD38jegw1wfqHR7MesTzvgfLmS7rfn8yfA+b8KE/+vOTwFzl+n
yScx++wMOD+c5bKbpN5cOH92h7iYyN4FcP731wY8KvsWIdyTEMZb82oJnD/R
6PnEOx+XwfkFcw8Xsr5fAeefklwTUya+Gs4X+Pz/1HuptXD+xbvxLhs918P5
1ze09shu3wDn2yhO3PFs20Y4P3aW0qvgM5vg/K8HM2Ndz2+G870/mV279XwL
nK/3fmVNyO+tcH7brEspQX+2wflz/BqDvgjtgPM1Nj5tlBLfCec7PXh/T0Vs
F5wvKdHgeFlrN5yf/u/oU1bdPXB+8duJ/Xdc9sL5PCuZ06eH74PzpYS1G66F
74fzPzvlnL9jdgDOn3J5bv2EHQh+jdcit23mB+H8w0czBdYdRPBdJXh+pzsd
gvNV8wtffD6L4DvM3fjNMeAwnL9o4xFppgsIfvKpWc5Too7A+fG7vHte3Ebw
d63bf50v4yicH9PJZrX8I4Jvaa2xl7HoGJxf8pHHWe8vgv+q7sxLmfrjcP7y
T3HLa/8h+IeztqRv6DiBCJ9dTzyWcp6E82vN7ubMD0TwH2y6OmHmTAQfAClG
wxU=
          "]]}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0, 0},
       Frame->True,
       FrameLabel->{
         FormBox[
          StyleBox["\"\[Gamma]\"", 20, StripOnInput -> False], 
          TraditionalForm], 
         FormBox[
          StyleBox[
          "\"Frequencies \\!\\(\\*SubscriptBox[\\n \
StyleBox[OverscriptBox[\\\"p\\\", \\\"^\\\"],\\nFontSlant->\\\"Italic\\\"], \
\\\"Aa\\\"]\\) & \\!\\(\\*SubscriptBox[\\n StyleBox[OverscriptBox[\\\"p\\\", \
\\\"^\\\"],\\nFontSlant->\\\"Italic\\\"], \\\"AA\\\"]\\)\"", 20, StripOnInput -> 
           False], TraditionalForm]},
       FrameStyle->Directive[16, 
         GrayLevel[0]],
       FrameTicks->{{{{-6, 
            FormBox[
            "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(-6\\)]\\)\"", 
             TraditionalForm]}, {-5, 
            FormBox[
            "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(-5\\)]\\)\"", 
             TraditionalForm]}, {-4, 
            FormBox[
            "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(-4\\)]\\)\"", 
             TraditionalForm]}, {-3, 
            FormBox["\"0.001\"", TraditionalForm]}, {-2, 
            FormBox["0.01`", TraditionalForm]}, {-1, 
            FormBox["\"0.1\"", TraditionalForm]}, {0, 
            FormBox["1", TraditionalForm]}}, None}, {Automatic, None}},
       ImageSize->400,
       Method->{},
       PlotRange->{{0, 0.2}, {-6.2, 0.2}},
       PlotRangeClipping->True,
       PlotRangePadding->{
         Scaled[0.02], Automatic}], {640., -395.5417527999326}, 
      ImageScaled[{0.5, 0.5}], {400, 247.2135954999579}]}}, {}},
  ContentSelectable->True,
  ImageSize->{865.3333333333334, 539.3890037332435},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.644897115675995*^9, 3.644897256542995*^9}, {
   3.644897404514112*^9, 3.644897452368742*^9}, 3.6456918550518627`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"mu", ",", "s"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"equilibriumSexual", "[", 
  RowBox[{"mu", ",", "s", ",", "0"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6448970526442738`*^9, 3.644897065650935*^9}, {
  3.644897294990986*^9, 3.644897295133748*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "mu"}], "+", 
     RowBox[{"2", " ", 
      SqrtBox[
       RowBox[{"mu", " ", "s"}]]}]}], "s"], ",", 
   FractionBox["mu", "s"]}], "}"}]], "Output",
 CellChangeTimes->{{3.6448970534959517`*^9, 3.644897066230707*^9}, 
   3.6448972959481077`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Genetic load in the population", "Subsubsection",
 CellChangeTimes->{{3.597699535873247*^9, 3.597699559698368*^9}, 
   3.597718599404254*^9, {3.605474556502473*^9, 3.605474562667041*^9}, 
   3.685626921481348*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Load", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pAa_", ",", "pAA_"}], "}"}], ",", "s_", ",", "h_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"pAa", " ", "h", " ", "s"}], "+", 
    RowBox[{"pAA", " ", "s"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.605474594029202*^9, 3.605474717713971*^9}, {
  3.644897576563464*^9, 3.644897590295437*^9}, {3.644897761888377*^9, 
  3.6448977660106707`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"mu", ",", "s", ",", "h", ",", "\[Gamma]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Load", "[", 
   RowBox[{
    RowBox[{"equilibrium", "[", 
     RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "0"}], "]"}], ",", "s", 
    ",", "0"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Load", "[", 
   RowBox[{
    RowBox[{"equilibrium", "[", 
     RowBox[{"0", ",", "mu", ",", "s", ",", "h"}], "]"}], ",", "s", ",", 
    "h"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.645667234401154*^9, 3.645667291792296*^9}, {
  3.645669577353715*^9, 3.645669583661923*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"mu", " ", 
     RowBox[{"(", 
      RowBox[{"3", "-", 
       RowBox[{"2", " ", "\[Gamma]"}]}], ")"}]}], "+", "\[Gamma]", "-", 
    SqrtBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"mu", "+", "\[Gamma]", "-", 
        RowBox[{"2", " ", "mu", " ", "\[Gamma]"}]}], ")"}], "2"]]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.645667270554737*^9, 3.645667292453977*^9}, 
   3.645669584254732*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"h", " ", "s"}], "+", 
    RowBox[{"mu", " ", 
     RowBox[{"(", 
      RowBox[{"3", "-", 
       RowBox[{"h", " ", "s"}]}], ")"}]}], "-", 
    SqrtBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"mu", "+", 
        RowBox[{"h", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "mu"}], ")"}], " ", "s"}]}], ")"}], 
      "2"]]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.645667270554737*^9, 3.645667292453977*^9}, 
   3.645669584489583*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Gamma]max", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu", "=", "0.00001"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6448968185543737`*^9, 3.6448968278045263`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"h", "=", "0.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Load", "[", 
  RowBox[{
   RowBox[{"equilibriumSexual", "[", 
    RowBox[{"mu", ",", "s", ",", "h"}], "]"}], ",", "s", ",", "h"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.644897750274925*^9, 3.6448977504500303`*^9}, {
  3.644897864128675*^9, 3.644897931178319*^9}}],

Cell[BoxData["0.00002000091131566969`"], "Output",
 CellChangeTimes->{
  3.644897751021819*^9, {3.6448978698367653`*^9, 3.6448979316719437`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"h", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotLoadRecessive", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Load", "[", 
         RowBox[{
          RowBox[{"equilibrium", "[", 
           RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}], ",", 
          "s", ",", "h"}], "]"}], ",", 
        RowBox[{"Load", "[", 
         RowBox[{
          RowBox[{"equilibriumSexual", "[", 
           RowBox[{"mu", ",", "s", ",", "h"}], "]"}], ",", "s", ",", "h"}], 
         "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "0", ",", "\[Gamma]max"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.000021"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directive", "[", 
         RowBox[{"Thick", ",", "Black"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.002", "]"}], ",", "Gray"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "16"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\[Gamma]\>\"", ",", "20"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Mutational load\>\"", ",", "20"}], "]"}]}], "}"}]}], 
     ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", " ", "None"}], "}"}]}], "}"}]}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotLoadPRecessive", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Load", "[", 
         RowBox[{
          RowBox[{"equilibrium", "[", 
           RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}], ",", 
          "s", ",", "h"}], "]"}], ",", 
        RowBox[{"Load", "[", 
         RowBox[{
          RowBox[{"equilibriumSexual", "[", 
           RowBox[{"mu", ",", "s", ",", "h"}], "]"}], ",", "s", ",", "h"}], 
         "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "0", ",", "\[Gamma]max"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.000021"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directive", "[", 
         RowBox[{"Thick", ",", "Black"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.002", "]"}], ",", "Gray"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "16"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\[Gamma]\>\"", ",", "20"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Mutational load\>\"", ",", "20"}], "]"}]}], "}"}]}], 
     ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", " ", "None"}], "}"}]}], "}"}]}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", "0.499999"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotLoadAdditive", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Load", "[", 
         RowBox[{
          RowBox[{"equilibrium", "[", 
           RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}], ",", 
          "s", ",", "h"}], "]"}], ",", 
        RowBox[{"Load", "[", 
         RowBox[{
          RowBox[{"equilibriumSexual", "[", 
           RowBox[{"mu", ",", "s", ",", "h"}], "]"}], ",", "s", ",", "h"}], 
         "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "0", ",", "\[Gamma]max"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.000021"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directive", "[", 
         RowBox[{"Thick", ",", "Black"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.002", "]"}], ",", "Gray"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "16"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\[Gamma]\>\"", ",", "20"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Mutational load\>\"", ",", "20"}], "]"}]}], "}"}]}], 
     ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", " ", "None"}], "}"}]}], "}"}]}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotLoadDominant", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Load", "[", 
         RowBox[{
          RowBox[{"equilibrium", "[", 
           RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "h"}], "]"}], ",", 
          "s", ",", "h"}], "]"}], ",", 
        RowBox[{"Load", "[", 
         RowBox[{
          RowBox[{"equilibriumSexual", "[", 
           RowBox[{"mu", ",", "s", ",", "h"}], "]"}], ",", "s", ",", "h"}], 
         "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "0", ",", "\[Gamma]max"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.000021"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directive", "[", 
         RowBox[{"Thick", ",", "Black"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.002", "]"}], ",", "Gray"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "16"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\[Gamma]\>\"", ",", "20"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Mutational load\>\"", ",", "20"}], "]"}]}], "}"}]}], 
     ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", " ", "None"}], "}"}]}], "}"}]}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"plotLoadRecessive", ",", "plotLoadPRecessive"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"plotLoadAdditive", ",", "plotLoadDominant"}], "}"}]}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.644897493322937*^9, 3.6448977015013933`*^9}, {
  3.6448978093695593`*^9, 3.6448978237206087`*^9}, {3.644897940247137*^9, 
  3.644897960733233*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      GraphicsBox[{{}, {}, 
        {GrayLevel[0], Thickness[Large], Opacity[1.], LineBox[CompressedData["

1:eJw903tQlFUYBnAubqS1jK1f7UBQmtQgM+wo5qUyHlJpJhgQwVxZuuwgqGkr
C+yyssRFLC6ZwzcNicSqRIrrKojogiLKZZH1zLTiaLnDZaNRkGSSm1gUFNmc
1/745pvfnNsz533PosSU2GQPNze3qMfff/+q4Ys6R+Gy0Ikdd4usUwOhBa/K
rPXCfIyRZWsMx0uEhZgib7Gf9M8RlmKEPP2sLV4vhP0/7jjT9YdWiMEj8kr3
2527BTWGyMNL4ms1ghbGT7g1GT9GHWjLQz6NfywtuSkZLIJrJ3eNR8SdrhQR
VnKrasn4aVspUndxi1KZV4XjEKJovd7kDPFRHEbCbu7R4O/mCZcroSJ7vJUw
u/hKFdK3ci9s8JzNGj4GZwq36eel+X3j1dhD+yccrVNLRs24nsQdcP2liAz5
KehpfqTlucZR3xocSOXOnpxQnH3vDPopT+auBXv9G+tQk82deC7l9L2Gs9Bp
uGNC1rnifqiHcg/3A6/uDeFd5yDS/ZQI9+w9Q+cxP507TmPSbJq2wlfH3en3
/PuxMw2QUt5QT8naSdkFjJGTwxq1vvKLmDTQfTKZI+CFJvjQ/tPFg4pbQZdw
/1PuqUrjTUlwMzRG7r9GCrL61l/GajrPv3hNbJnyCvozuccyz++8rWzB3u3c
Azc2dvStbEViKXegGKQTL7TiWgLdzyPnmw2r2hAezb3p97A5tW1tcFLefa/s
H9m+th1JydyvD4u9Dx3tmKLxt12G++/E2NBUwK3MWO7tccOG1XruhxbLilJV
B9ZpuYfmeeb82tuBshzuD5+SM+8dV6F/kvfEbNCJ8av4IJ7bpmM17mmdWLaf
6u2KXq74uxN/0vkurbXbL9eObZXc1Zaxg9n/2KGgfpjIHdpcV3QNn1G9Dua1
rDo+l0H8iPq7e/HcwWcYnqZ8gSFFPQHeDEoLd9PdmOxjMgZzLHf/u3fav3/x
8XraP1Aqia4KZkjP475UHpF0dCNDIdXj84naFf1xDPYvuaMjF3i9vJnBRHl+
mek9eUTFYKX+m6PWjB7eyhD2ZP5rotGkZziVxi3PnYzsMzA499F65xZ/PyPD
DNU3rXhRa0UOw4Nt3GW/1UsqChneoHqrw+XOnmIGLc0POpJl9v2KwUDvoXnD
+shvRYZD1J9fmM1+PV8zVKspj7t0xOcbhmZ6X3JVakt8GcOtfMpT/5NYXs4w
QPX5F0C8wHo=
          "]]}, 
        {GrayLevel[0.5], Thickness[0.002], Opacity[1.], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvejVzpKz7YZ2HzMed2z98cTOjPHasTyRBHsY/5Vm
5LpckQI4P7fsim/vwQY4P563/xLr0w44fy2T16Pz+RPg/ANRmh/XHJ4C50/g
FWKffXYGnF8657qRpN5cOP+97kIukb0L4Hwm6+j/yvsWwfkK25j/V79aAufP
uWfQdOfjMjg/ev6GBNb3K+B8lXNyXmXiq+F871WC299LrYXza7980tvouR7O
r8wWbpTdvgHOT9qcv+bZto1wfoCR893gM5vg/LfsN/1dz2+G8/tFnh2/9XwL
nB+cOyc35PdWOP+YjGho0J9tcL4dM6vTF6EdcH6qw/YCKfGdiPA8KXRWRWwX
nP+786neZa3dcP6PBVWXWHX3wPm/3rVV33HZC+fLdtoETQ/fB+d/qNySdS18
P5z/5ELgkTtmB+B8jQlaJRN2IPi1X69bbTM/COeHfHNgWXcQwW9W6n6X7nQI
zjd5NeH257MIvu3d8peOAYfh/PAyYz6mCwj+51WrTKdEHYHzn3Mx1724jeDH
somf5Ms4inDv8v9ayz8i+IdLTq5lLDqGiO+7fsZ6fxH8uwVbb8rUH4fzl636
MK32H4L/qf552IaOE3D+tIb95ks5T8L5u2d6pcwPRPAfbLo6YeZMBB8AAfHz
UQ==
          "]]}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           StyleBox["\"Mutational load\"", 20, StripOnInput -> False], 
           TraditionalForm], None}, {
          FormBox[
           StyleBox["\"\[Gamma]\"", 20, StripOnInput -> False], 
           TraditionalForm], None}},
       FrameStyle->Directive[16, 
         GrayLevel[0]],
       FrameTicks->{{Automatic, None}, {Automatic, None}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageSize->400,
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
       PlotRange->{{0., 0.19999999591836737`}, {0, 0.000021}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {213.33333333333334`, -131.84725093331087`},
       ImageScaled[{0.5, 0.5}], {400, 247.2135954999579}], InsetBox[
      GraphicsBox[{{}, {}, 
        {GrayLevel[0], Thickness[Large], Opacity[1.], LineBox[CompressedData["

1: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
JdFwZ9H4hz6m/w/WBVgh
          "]]}, 
        {GrayLevel[0.5], Thickness[0.002], Opacity[1.], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvejVzpKz7YZ2SlXd27n8v9iZMV47lieSYA/jv9KM
XJcrUgDn55Zd8e092ADnx/P2X2J92gHnr2XyenQ+fwKcfyBK8+Oaw1Pg/Am8
Quyzz86A80vnXDeS1JsL57/XXcglsncBnM9kHf1fed8iOF9hG/P/6ldL4Pw5
9wya7nxcBudHz9+QwPp+BZyvck7Oq0x8NZzvvUpw+3uptXB+7ZdPehs918P5
ldnCjbLbN8D5SZvz1zzbthHODzByvht8ZhOc/5b9pr/r+c1wfr/Is+O3nm+B
84Nz5+SG/N4K5x+TEQ0N+rMNzrdjZnX6IrQDzk912F4gJb4TEZ4nhc6qiO2C
8393PtW7rLUbzv+xoOoSq+4eOP/Xu7bqOy574XzZTpug6eH74PwPlVuyroXv
h/OfXAg8csfsAJyvMUGrZMIOBL/263WrbeYH4fyQbw4s6w4i+M1K3e/SnQ7B
+SavJtz+fBbBt71b/tIx4DCcH15mzMd0AcH/vGqV6ZSoI3D+cy7muhe3EfxY
NvGTfBlHEe5d/l9r+UcE/3DJybWMRccQ8X3Xz1jvL4J/t2DrTZn643D+slUf
ptX+Q/A/1T8P29BxAs6f1rDffCnnSTh/90yvlPmBCP6DTVcnzJyJ4AMAQM+C
yQ==
          "]]}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           StyleBox["\"Mutational load\"", 20, StripOnInput -> False], 
           TraditionalForm], None}, {
          FormBox[
           StyleBox["\"\[Gamma]\"", 20, StripOnInput -> False], 
           TraditionalForm], None}},
       FrameStyle->Directive[16, 
         GrayLevel[0]],
       FrameTicks->{{Automatic, None}, {Automatic, None}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageSize->400,
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
       PlotRange->{{0., 0.19999999591836737`}, {0, 0.000021}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {640., -131.84725093331087`}, 
      ImageScaled[{0.5, 0.5}], {400, 247.2135954999579}]}, {InsetBox[
      GraphicsBox[{{}, {}, 
        {GrayLevel[0], Thickness[Large], Opacity[1.], LineBox[CompressedData["

1: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
0UQnWmX+P5Xlhds=
          "]]}, 
        {GrayLevel[0.5], Thickness[0.002], Opacity[1.], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvejVzpKz7YZ2B/P05CRef7EzY7x2LE8kwR7Gf6UZ
uS5XpADOzy274tt7sAHOj+ftv8T6tAPOX8vk9eh8/gQ4/0CU5sc1h6fA+RN4
hdhnn50B55fOuW4kqTcXzn+vu5BLZO8COJ/JOvq/8r5FcL7CNub/1a+WwPlz
7hk03fm4DM6Pnr8hgfX9Cjhf5ZycV5n4ajjfe5Xg9vdSa+H82i+f9DZ6rofz
K7OFG2W3b4Dzkzbnr3m2bSOcH2DkfDf4zCY4/y37TX/X85vh/H6RZ8dvPd8C
5wfnzskN+b0Vzj8mIxoa9GcbnG/HzOr0RWgHnJ/qsL1ASnwnIjxPCp1VEdsF
5//ufKp3WWs3nP9jQdUlVt09cP6vd23Vd1z2wvmynTZB08P3wfkfKrdkXQvf
D+c/uRB45I7ZAThfY4JWyYQdCH7t1+tW28wPwvkh3xxY1h1E8JuVut+lOx2C
801eTbj9+SyCb3u3/KVjwGE4P7zMmI/pAoL/edUq0ylRR+D851zMdS9uI/ix
bOIn+TKOIty7/L/W8o8I/uGSk2sZi44h4vuun7HeXwT/bsHWmzL1x+H8Zas+
TKv9h+B/qn8etqHjBJw/rWG/+VLOk3D+7pleKfMDEfwHm65OmDkTwQcAjUyR
NQ==
          "]]}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           StyleBox["\"Mutational load\"", 20, StripOnInput -> False], 
           TraditionalForm], None}, {
          FormBox[
           StyleBox["\"\[Gamma]\"", 20, StripOnInput -> False], 
           TraditionalForm], None}},
       FrameStyle->Directive[16, 
         GrayLevel[0]],
       FrameTicks->{{Automatic, None}, {Automatic, None}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageSize->400,
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
       PlotRange->{{0., 0.19999999591836737`}, {0, 0.000021}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {213.33333333333334`, -395.5417527999326},
       ImageScaled[{0.5, 0.5}], {400, 247.2135954999579}], InsetBox[
      GraphicsBox[{{}, {}, 
        {GrayLevel[0], Thickness[Large], Opacity[1.], LineBox[CompressedData["

1:eJwVzns0lAkYBvBS2OyyNU0mIpVLsZtmKfaU3jdWWhTTJKGjsDp1Kpc6yriM
SyFij2kphcpaNCnSyDVqNKKvzaJEBrGEb8a4zJhcIvbbP97znt85z3nOs9Ev
iH1CZcmSJQeo+//nSqtCmq78BHCKublkRgkJxrQyAX0l7r7cYHvmsxJoNqH5
qfQNWFqTv7BJoQSPxvv6UXQmxnkvHrw5ooS570SeF+h7cKU4fVvmRyU0PWqe
Dqaz0Nch79fZeiVYLW1vCKT7IKfy7DmdNCVITT2LA+jBaLm5NC15uxICLrYd
+L0uBgdENcdiIifhuGbqW9XBRCyUNO3kDimgSMWpvzmIh8ePKd0d/BUg9DKV
PxSlI6dFiyYakgNPk6ae1XQTGzVMY+hRcriQ3WGhY34bQ/iGtRvWymF8658a
9NocDB720ZmtnQCVXUcXDZ/l4nanA5Hx5yZgQ/myxQhpHkIkc2eX8QRkf2Re
6pYXoELS4eL+ehyO3i3xUR3nY4tVva3b4XEw+me900XGAzz1LoWxvm8MnAtX
VYzrFuH11i/XBsLHgKtUmD92fIRubLHrqjVjEHZmdax+RQkKWkFuXzkKfqVB
D4fKHyPzw/fBnJOjwLL4pefQGwFamU4NcteMwqh6p+ve5lJUidUtft0kg1T6
UKN4+Am2Sb0ru+NkcCggO8BtrgynrU0L8m1l0KC35jB7vhyVuvz+ODUZwDJV
OyWtEq3VgubniBE4saciWJdRhfsMvKtS0kegiKA1GWlXo8mrduc2vxGYSxo0
f2f2FKdmHa/mbxuBmZzwt6pba7DTNo67T2UEvowlRHTb1+JLf7PJhHdS0E+y
YWcceYaz2oZtg/ekMBH25HT7kee430rdQTtWCp9aDtZ3Wwkxhy/2lXhIYQvP
LIRXKcS1pTo07R1S4H7u2FluXYd5dix50GopuE3tWV5cV4dWMvXJ0AkJXN6U
PHbS7gX6VLsKLFslsF3K65pseoELlxZyBSUS2N0TKrFliZB/MlUzLU0CRy5a
aqm0iPCMTavhOo4EJgsLd6R71WODzCQx5KgEhjWWRZFd9bjey6So2lYC3moM
QuvUS1R9CsJPJhL4dG/R7J78Jb7VfvBDsqYERCFE0dLzDfhjc8hMzRQJRj0u
luZfGzDR+Lbxvx9J6Aku69SLbsT3wjAzX4KEgsKJG9yFRiyzZ/Z8fUKCInrY
vSTxFX74uUoz6y4JN2KeW+evIFAjYdTQJYWE452GKwa/JXDBPNxzNpmELRaJ
YiMtAs8aqWXlUa4eYHHzaAQGMml2c1dJ6HXof/HXOgJlHx4b3E+i8pqqLrlb
Caxo69VWv0LC01tO/ncPEpiT4TfwdywJcYriHb2HCAx1mEvjUHZxXq1u4E5g
Wrwdy5hy33zX/TteBK6LeT8SFUPCcp+A8du/EfhV0VhsEU3lTXjh2RcIzMqs
9M2OJIERrXTuDiWwet7gjSPlvg4Pfb1wAreVrLSbjiDhfNJGYVYUgfurolls
yhkygWrWFQIL2R7T34ST4LOX0SFOInDXzLPa8jASzO5E8HVTCLyWn5nqT7nG
1d45k0ftQ/5hIYeEeD5fT/wHgQW9bY6BlF2Wao7pXCewv++sox5lhte5554Z
VB870O11KLVH8J536xaBW2zaT3Mo/wcksHG4
          "]]}, 
        {GrayLevel[0.5], Thickness[0.002], Opacity[1.], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvejVzpKz7YZ2nm/b3Q1/frEzY7x2LE8kwR7Gf6UZ
uS5XpADOzy274tt7sAHOj+ftv8T6tAPOX8vk9eh8/gQ4/0CU5sc1h6fA+RN4
hdhnn50B55fOuW4kqTcXzn+vu5BLZO8COJ/JOvq/8r5FcL7CNub/1a+WwPlz
7hk03fm4DM6Pnr8hgfX9Cjhf5ZycV5n4ajjfe5Xg9vdSa+H82i+f9DZ6rofz
K7OFG2W3b4Dzkzbnr3m2bSOcH2DkfDf4zCY4/y37TX/X85vh/H6RZ8dvPd8C
5wfnzskN+b0Vzj8mIxoa9GcbnG/HzOr0RWgHnJ/qsL1ASnwnIjxPCp1VEdsF
5//ufKp3WWs3nP9jQdUlVt09cP6vd23Vd1z2wvmynTZB08P3wfkfKrdkXQvf
D+c/uRB45I7ZAThfY4JWyYQdCH7t1+tW28wPwvkh3xxY1h1E8JuVut+lOx2C
801eTbj9+SyCb3u3/KVjwGE4P7zMmI/pAoL/edUq0ylRR+D851zMdS9uI/ix
bOIn+TKOIty7/L/W8o8I/uGSk2sZi44h4vuun7HeXwT/bsHWmzL1x+H8Zas+
TKv9h+B/qn8etqHjBJw/rWG/+VLOk3D+7pleKfMDEfwHm65OmDkTwQcALzq0
9Q==
          "]]}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox[
           StyleBox["\"Mutational load\"", 20, StripOnInput -> False], 
           TraditionalForm], None}, {
          FormBox[
           StyleBox["\"\[Gamma]\"", 20, StripOnInput -> False], 
           TraditionalForm], None}},
       FrameStyle->Directive[16, 
         GrayLevel[0]],
       FrameTicks->{{Automatic, None}, {Automatic, None}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageSize->400,
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
       PlotRange->{{0., 0.19999999591836737`}, {0, 0.000021}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}], {640., -395.5417527999326}, 
      ImageScaled[{0.5, 0.5}], {400, 247.2135954999579}]}}, {}},
  ContentSelectable->True,
  ImageSize->{865.3333333333334, 539.3890037332435},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.644897661747033*^9, 3.644897703227146*^9, 3.644897769637741*^9, {
   3.644897812643446*^9, 3.644897824694767*^9}, {3.644897945419024*^9, 
   3.6448979617868977`*^9}}]
}, Open  ]],

Cell["All in a single plot:", "Text",
 CellChangeTimes->{{3.645666576224121*^9, 3.645666589720368*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"colours", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Hue", "[", 
     RowBox[{"0", ",", "0.8", ",", "1"}], "]"}], ",", 
    RowBox[{"Hue", "[", 
     RowBox[{"0.3", ",", "0.8", ",", "1"}], "]"}], ",", 
    RowBox[{"Hue", "[", 
     RowBox[{"0.66", ",", "0.8", ",", "1"}], "]"}], ",", 
    RowBox[{"Hue", "[", 
     RowBox[{"0.8", ",", "0.8", ",", "1"}], "]"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Load", "[", 
       RowBox[{
        RowBox[{"equilibrium", "[", 
         RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "0"}], "]"}], ",", "s",
         ",", "0"}], "]"}], ",", 
      RowBox[{"Load", "[", 
       RowBox[{
        RowBox[{"equilibriumSexual", "[", 
         RowBox[{"mu", ",", "s", ",", "0"}], "]"}], ",", "s", ",", "0"}], 
       "]"}], ",", 
      RowBox[{"Load", "[", 
       RowBox[{
        RowBox[{"equilibrium", "[", 
         RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "0.05"}], "]"}], ",", 
        "s", ",", "0.05"}], "]"}], ",", 
      RowBox[{"Load", "[", 
       RowBox[{
        RowBox[{"equilibriumSexual", "[", 
         RowBox[{"mu", ",", "s", ",", "0.05"}], "]"}], ",", "s", ",", 
        "0.05"}], "]"}], ",", 
      RowBox[{"Load", "[", 
       RowBox[{
        RowBox[{"equilibrium", "[", 
         RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "0.4999"}], "]"}], ",",
         "s", ",", "0.4999"}], "]"}], ",", 
      RowBox[{"Load", "[", 
       RowBox[{
        RowBox[{"equilibriumSexual", "[", 
         RowBox[{"mu", ",", "s", ",", "0.4999"}], "]"}], ",", "s", ",", 
        "0.4999"}], "]"}], ",", 
      RowBox[{"Load", "[", 
       RowBox[{
        RowBox[{"equilibrium", "[", 
         RowBox[{"\[Gamma]", ",", "mu", ",", "s", ",", "1"}], "]"}], ",", "s",
         ",", "1"}], "]"}], ",", 
      RowBox[{"Load", "[", 
       RowBox[{
        RowBox[{"equilibriumSexual", "[", 
         RowBox[{"mu", ",", "s", ",", "1"}], "]"}], ",", "s", ",", "1"}], 
       "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Gamma]", ",", "0", ",", "\[Gamma]max"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.0000095", ",", "0.0000205"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"16", ",", "Black"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
      "colours", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
      
      RowBox[{"Directive", "[", 
       RowBox[{"Dashed", ",", 
        RowBox[{
        "colours", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
       "]"}], ",", 
      RowBox[{
      "colours", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
      
      RowBox[{"Directive", "[", 
       RowBox[{"Dashed", ",", 
        RowBox[{
        "colours", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
       "]"}], ",", 
      RowBox[{
      "colours", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], ",", 
      
      RowBox[{"Directive", "[", 
       RowBox[{"Dashed", ",", 
        RowBox[{
        "colours", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
       "]"}], ",", 
      RowBox[{
      "colours", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], ",", 
      
      RowBox[{"Directive", "[", 
       RowBox[{"Dashed", ",", 
        RowBox[{
        "colours", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", "16"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<\[Gamma]\>\"", ",", "20"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Mutational load \!\(\*
StyleBox[SubscriptBox[\"L\", \"mut\"],
FontSlant->\"Italic\"]\)\>\"", ",", "20"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", " ", "None"}], "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.64566659769179*^9, 3.645666667522901*^9}, {
  3.645666730893711*^9, 3.645666731960088*^9}, {3.645666919779236*^9, 
  3.645667044068302*^9}, {3.645667120395733*^9, 3.64566714467459*^9}, {
  3.6456671790421047`*^9, 3.6456671825950603`*^9}, {3.645691610549596*^9, 
  3.645691637450151*^9}, {3.645691703007291*^9, 3.645691707769875*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Hue", "[", 
    RowBox[{"0", ",", "0.8`", ",", "1"}], "]"}], ",", 
   RowBox[{"Hue", "[", 
    RowBox[{"0.3`", ",", "0.8`", ",", "1"}], "]"}], ",", 
   RowBox[{"Hue", "[", 
    RowBox[{"0.66`", ",", "0.8`", ",", "1"}], "]"}], ",", 
   RowBox[{"Hue", "[", 
    RowBox[{"0.8`", ",", "0.8`", ",", "1"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.645666696961342*^9, 3.6456667322977057`*^9, 3.6456670445832577`*^9, {
   3.645667137185623*^9, 3.645667145373151*^9}, 3.645667183010944*^9, {
   3.6456916417007732`*^9, 3.645691659254842*^9}, {3.64569170418023*^9, 
   3.645691715243389*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0, 0.8, 1], LineBox[CompressedData["
1:eJwt03tQ1FUUB3DaQKckZOwXLAuWODSDmYzZDKaZX0FkTMUHy3tQMbAVQmFz
pTJYccqEAWI3UWPXrWbZRAiJRSEgF1iWFS8DEjLJQxRM8YHpBoSgLJjNPX/8
5jefuXPPPeeec70/SgndLXJwcAh5/v3/1w/XKtqPvrN6dM+trKrJ26uTRK81
VgqusJEfiw9W5AsL8A95laHMVyksxRPywH1rwgFhDXrIxtwrIrmwFXay5EZP
5z4hDkby5VmxtXuFVJSShZsh0XnmTPSS5cu0t5yGsjCexP26IudhR4oK4TLu
p/Jdz8osBYii9fJFLmJt+/fo3ccd6dgV7OGnw8xebm2Wu5tg+glBcu6JB0ud
fer1GKB4l+MiXkkfNuDvFG71srvq/pHTWETrqTqL3Ml2BvYE7laPstg0919w
YTe369izVpvkLGbHc3de3xlk/PBXeH/C3V1xJHf+bxXYRfmt8lbX3Kk2wi2O
e7tm4bC0rRLnErnHzYnb13WcQ0ga98ZR/6t9d8/DQOf72UrSw6aqYFVwf6O5
khBqr0ZJKvepzYdD/51XA0eK52scOixxr8VUHnfgoO2Gj1sdRLTuIc4M6Hrr
d0x+yS2bsQ45LbmAOcnc+x+q8/uDTFBRPc4lL8pORtajkPKXvLo482pkA7K/
4B4LTO7o92+Edgd3QZfukKqmEdKPudM36IOrl5uxjeqxWBNdy81mGNK514md
p2SBTWg7zv1mivzeWHsTQqK51+iMjwO2WlBC/dQbmz1Ff1hwk+LHt2rWFsQ0
48h+7p11G3PvXWvGHZqvuvKGbpc9VuTQ/cVmz1pZPGJF1OfcK973Nb3w6UU0
ZXArRpzX+k1fhDSMe1jZdt/rUAvslE/x6I7ijJkWNERRPUnnZRVZl5BH8ymp
u73+55cYzHT+dIajZGgOw6UN3IMBPg98XBjyldynWXyeYR7D2ybud3v/6izy
ZFhB87NpcjBGv4ThDNWX4X89+cdtDDPh3HFP7R8MSBkY9Seo3mvuGxHP41P/
Xg6ONf4Qw1BD+Z4Ivzaui2do+Yrek6JXeeoAgzib3sN7T7b0f8agof0Ku9jb
6yDDws3cK7+OsmiVDKYc7pZj3bO1RxmCqR+lkRM9fdkMkzSf33q6l0pyGY5J
ucOKIjZpVAwiNfdyWdr8vu8Yzmrp/hafeORxnGEL3c/0o6qG6JMME1TfYOWf
qsJChiLK7z9cMciN
     "]]}, 
   {Hue[0, 0.8, 1], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvejVzpKz7YZ2HzMed2z98cRO6t6Ni3kiCfYw/jm2
mJ25IgVwvshD38jegw1wfqHR7MesTzvgfLmS7rfn8yfA+b8KE/+vOTwFzl+n
yScx++wMOD+c5bKbpN5cOH92h7iYyN4FcP731wY8KvsWIdyTEMZb82oJnD/R
6PnEOx+XwfkFcw8Xsr5fAeefklwTUya+Gs4X+Pz/1HuptXD+xbvxLhs918P5
1ze09shu3wDn2yhO3PFs20Y4P3aW0qvgM5vg/K8HM2Ndz2+G870/mV279XwL
nK/3fmVNyO+tcH7brEspQX+2wflz/BqDvgjtgPM1Nj5tlBLfCec7PXh/T0Vs
F5wvKdHgeFlrN5yf/u/oU1bdPXB+8duJ/Xdc9sL5PCuZ06eH74PzpYS1G66F
74fzPzvlnL9jdgDOn3J5bv2EHQh+jdcit23mB+H8w0czBdYdRPBdJXh+pzsd
gvNV8wtffD6L4DvM3fjNMeAwnL9o4xFppgsIfvKpWc5Too7A+fG7vHte3Ebw
d63bf50v4yicH9PJZrX8I4Jvaa2xl7HoGJxf8pHHWe8vgv+q7sxLmfrjcP7y
T3HLa/8h+IeztqRv6DiBCJ9dTzyWcp6E82vN7ubMD0TwH2y6OmHmTAQfACNE
9hE=
     "]]}, 
   {Hue[0.3, 0.8, 1], LineBox[CompressedData["
1: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
N2ntJWD9OV/GTOcrfFJcr39lNwE7c5792GXdhC1mdOXNpgTkPWtew9vVhC7t
PHq8uwg41U41venQjGUR3UFNQMDJassExudm7r/RntyynYDq4vqPqz1bMK08
sKXSiADHuBVGD6ZbkCaRVtGxlYBtxhq1PH6t2JvMe03akAD/aWFT7cVWbAsi
XtnoE8AK62DKh7eh5mzG8zpdAh5wnB5cWmrDP1S3nyY63Hm8nnuUXH2NlJ87
N1Zt5u6nenTvvZU0lKX2jtv+TcDiJT45YhUNQzs8vllzPbRLdUx1NQ2Ps0U+
7+P6Pu1UYoE4DVPfXu8ErnU/jXTnr6GhOp9jvRrX+38NOeRp0dDq5siHH9oE
XDL44p17iIa64sUdGVw7zy/sGDxMw7SH30dTuDark/9rrS0NNdXNl+K5FjJ3
fHbbgYYqRjx6EVynH/38PecUDQPW9xV5cl3s/yksO4CGI1IdHdu4Ttk6ZzUQ
RMPKzujvulz7L8goy4fQkL5551ptro1ijjVlhdHwilVrgArXbTc+CmRdoSFW
/dFexXWh3c++/jgaFrR+OMnP9fU10oVyCTSce1qc8keLgCP5tvupyTRslfH4
NcO1oUegQn8qDTcZm2tNci23KX1SNo2GjVFqpxhcL06W19tn0DA4QpA6wvVQ
6YfkzEwa2uSMdQ9w/T/YImlB
     "]]}, 
   {Hue[0.3, 0.8, 1], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvejVzpKz7YZ2SlXd27n8v9hJ3btxMU8kwR7GP8cW
szNXpADOF3noG9l7sAHOLzSa/Zj1aQecL1fS/fZ8/gQ4/1dh4v81h6fA+es0
+SRmn50B54ezXHaT1JsL58/uEBcT2bsAzv/+2oBHZd8ihHsSwnhrXi2B8yca
PZ945+MyOL9g7uFC1vcr4PxTkmtiysRXw/kCn/+fei+1Fs6/eDfeZaPnejj/
+obWHtntG+B8G8WJO55t2wjnx85SehV8ZhOc//VgZqzr+c1wvvcns2u3nm+B
8/Xer6wJ+b0Vzm+bdSkl6M82OH+OX2PQF6EdcL7GxqeNUuI74XynB+/vqYjt
gvMlJRocL2vthvPT/x19yqq7B84vfjux/47LXjifZyVz+vTwfXC+lLB2w7Xw
/XD+Z6ec83fMDsD5Uy7PrZ+wA8Gv8Vrkts38IJx/+GimwLqDCL6rBM/vdKdD
cL5qfuGLz2cRfIe5G785BhyG8xdtPCLNdAHBTz41y3lK1BE4P36Xd8+L2wj+
rnX7r/NlHIXzYzrZrJZ/RPAtrTX2MhYdg/NLPvI46/1F8F/VnXkpU38czl/+
KW557T8E/3DWlvQNHScQ4bPricdSzpNwfq3Z3Zz5gQj+g01XJ8ycieADAGIi
hYk=
     "]]}, 
   {Hue[0.66, 0.8, 1], LineBox[CompressedData["
1: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
SgqBFFuZQ77C/wLBVJO6
     "]]}, 
   {Hue[0.66, 0.8, 1], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvejVzpKz7YZ2YlcFNy798cVO6t6Ni3kiCfYw/jm2
mJ25IgVwvshD38jegw1wfqHR7MesTzvgfLmS7rfn8yfA+b8KE/+vOTwFzl+n
yScx++wMOD+c5bKbpN5cOH92h7iYyN4FcP731wY8KvsWIdyTEMZb82oJnD/R
6PnEOx+XwfkFcw8Xsr5fAeefklwTUya+Gs4X+Pz/1HuptXD+xbvxLhs918P5
1ze09shu3wDn2yhO3PFs20Y4P3aW0qvgM5vg/K8HM2Ndz2+G870/mV279XwL
nK/3fmVNyO+tcH7brEspQX+2wflz/BqDvgjtgPM1Nj5tlBLfCec7PXh/T0Vs
F5wvKdHgeFlrN5yf/u/oU1bdPXB+8duJ/Xdc9sL5PCuZ06eH74PzpYS1G66F
74fzPzvlnL9jdgDOn3J5bv2EHQh+jdcit23mB+H8w0czBdYdRPBdJXh+pzsd
gvNV8wtffD6L4DvM3fjNMeAwnL9o4xFppgsIfvKpWc5Too7A+fG7vHte3Ebw
d63bf50v4yicH9PJZrX8I4Jvaa2xl7HoGJxf8pHHWe8vgv+q7sxLmfrjcP7y
T3HLa/8h+IeztqRv6DiBCJ9dTzyWcp6E82vN7ubMD0TwH2y6OmHmTAQfACYQ
vWU=
     "]]}, 
   {Hue[0.8, 0.8, 1], LineBox[CompressedData["
1:eJwV0Gs01AkYBvCyLlskW4MxdOGw2bWp7aL7+xrJsqLSICJEZ8oqFKVZJva4
Ziqa2XKtVmRZZCySEMak/5QkbZchUdR/ZgyDQRJ2+vCe5/zOc87z4TU9HOp2
RG3evHkuqvuaedK7EW1JPwMcXbuq/JMSgtX0Gysoejg0M0X/bVwJE1RW+SXK
SuwvKZ01G1XC9vwSSzZlLc5kTO/LkCnhrUQYFEmxRQE/bk1WjxL4nGdq4ZS9
yNNlO061KIHW86rjBMUffzK3DDfiKuGJps/d45QwVETacFM3KIHS5+J1oSkW
2/q6fGOjxyB8XfZ7jYFkvKZVuCXmwygsj0iVt4emIYfMdHcIGoXP4QFzJQIe
3vI9ryf4MAJlP+hSs9sy0MsriU1hj4CneqeDkXUujhPB91ZSRyA72dCAUn8D
63hXDafqFTApW6tj3pCHnXiWlRCugCf+HouipfkYeISxuctCAenrPqZ3j9zC
580Gzh6iYQjLFYRrDP+NzvqzOxjuwyAyKvE5bfgPapcIly7vHQK9sTnRMK0U
uQMbLr5nDUHHGz97vtNtbHCh7v5Ofwhelidwlt0px/7cP+T2NXLYbppe86Ga
j5f1vUOimHLwzTKT7n9cgYfnHN/F6MthvOmY7672f5GhjCwWtQ2C86jNC/HH
SqTFCiq74wfBergomjFdhRapmXkF9EFIzHoW5PalGkXNZm/jNQchxzXOTbmk
BjPDlJ+mCRlY8gfiaIZ3UfuhvIrDk4Fd73CPuUEtllBPOj4/LAMjaiy988d7
aMRVJBaskQFzVjigsboOxZ0bWb+oyeCUPP1St309+m37OJzYKQWdom+YVz0b
8ATIng4USoG21Cr2hed9LJO9tjOIk8KYXUh7t00jun6+c0hyQAq8ztxzaTWN
eN5SbbHBRilE/5rnUL2pCe017IZCl0pBIDymV9bUhHMb1BVnFBLYRdWZZto1
Y/lqj9vrOyRgERpOjrU1o4vJ4hsV5RKwzeVP0PcKMMG4aCGXK4E8foux2lMB
ik3HVxpHSSBQlLWT592C7bP7EyIOSsCv1plDdrVgWdPB4lq6BGrL7r/UPSpE
1wPs+v7vJeCTorm1cESIx2PGLFMXSWDLNsv6+ScfoIQrHK+bICFiRGen9cwD
TLg3YdbXQ4KU/Vhicq4VOwK6VgUQJBSOHiqMmW3FqdIs8UwlCYLgSmZ58kMM
07LSzr5OAq2237FgAYEh1kxTVw4JMzHqtAFtAtvjZz2mUknopZvLzHUJNMzg
ZeSrfIsIvJC/hEA32yqcPk/C+tfvOm4aE0jK2MuKUkjY/anXO281gYyOOYpW
EgkxNm9Cru8jUFNu/u5RHAn+n7/seLufQNsVrZejVLZvMFm8woPAlDfUPRYq
L3Tw4V/zJlD9r0YpO5aEK+5d47mBBFbWiUvXnSOhLOI1OydS1c83DsiJJiF9
89Se7jMEJj/mPHJSOeIL1dSERaDoWSJ98ncStsYfEGSzCezasXCvm8qt3Jda
2UkEckQLJr9lkVDsOflKnEJg1ClWffVZEi4aGxbTOAT69/ldClKZcdNjd1Ya
gfr74twbo0jYxDy9THxZtZdzx+mEyjSrK0NGfxJoVeDlZKLyzFDVfa+rBNKY
QQzRGdX/Kv5Ly8wkkGvyIjhK5f8BF5l7uA==
     "]]}, 
   {Hue[0.8, 0.8, 1], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvejVzpKz7YZ2nm/b3Q1/frGTunfjYp5Igj2Mf44t
ZmeuSAGcL/LQN7L3YAOcX2g0+zHr0w44X66k++35/Alw/q/CxP9rDk+B89dp
8knMPjsDzg9nuewmqTcXzp/dIS4msncBnP/9tQGPyr5FCPckhPHWvFoC5080
ej7xzsdlcH7B3MOFrO9XwPmnJNfElImvhvMFPv8/9V5qLZx/8W68y0bP9XD+
9Q2tPbLbN8D5NooTdzzbthHOj52l9Cr4zCY4/+vBzFjX85vhfO9PZtduPd8C
5+u9X1kT8nsrnN8261JK0J9tcP4cv8agL0I74HyNjU8bpcR3wvlOD97fUxHb
BedLSjQ4XtbaDeen/zv6lFV3D5xf/HZi/x2XvXA+z0rm9Onh++B8KWHthmvh
++H8z0455++YHYDzp1yeWz9hB4Jf47XIbZv5QTj/8NFMgXUHEXxXCZ7f6U6H
4HzV/MIXn88i+A5zN35zDDgM5y/aeESa6QKCn3xqlvOUqCNwfvwu754XtxH8
Xev2X+fLOArnx3SyWS3/iOBbWmvsZSw6BueXfORx1vuL4L+qO/NSpv44nL/8
U9zy2n8I/uGsLekbOk4gwmfXE4+lnCfh/FqzuznzAxH8B5uuTpg5E8EHAFCN
t7U=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 9.499999999999999*^-6},
  Frame->True,
  FrameLabel->{
    FormBox[
     StyleBox["\"\[Gamma]\"", 20, StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox[
     "\"Mutational load \\!\\(\\*\\nStyleBox[SubscriptBox[\\\"L\\\", \
\\\"mut\\\"],\\nFontSlant->\\\"Italic\\\"]\\)\"", 20, StripOnInput -> False], 
     TraditionalForm]},
  FrameStyle->Directive[16, 
    GrayLevel[0]],
  FrameTicks->{{Automatic, None}, {Automatic, None}},
  ImageSize->400,
  Method->{},
  PlotRange->{{0, 0.2}, {9.5*^-6, 0.0000205}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{
  3.645666696961342*^9, 3.6456667322977057`*^9, 3.6456670445832577`*^9, {
   3.645667137185623*^9, 3.645667145373151*^9}, 3.645667183010944*^9, {
   3.6456916417007732`*^9, 3.645691659254842*^9}, {3.64569170418023*^9, 
   3.645691715298938*^9}}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Speed of adaptation", "Subsection",
 CellChangeTimes->{{3.612305282267881*^9, 3.612305293003202*^9}, {
  3.61231797896896*^9, 3.612317980264039*^9}}],

Cell[CellGroupData[{

Cell["Recursion equation without mutation", "Subsubsection",
 CellChangeTimes->{{3.670717847192192*^9, 3.670717869230134*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Recursion1L", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pAa", ",", "pAA"}], "}"}], ",", "\[Gamma]", ",", "0", ",", "s",
      ",", "h"}], "]"}], "==", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"pAa", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"h", " ", "s"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Gamma]"}], ")"}]}], 
      RowBox[{"1", "+", 
       RowBox[{"pAa", " ", "h", " ", "s"}], "+", 
       RowBox[{"pAA", " ", "s"}]}]], ",", 
     FractionBox[
      RowBox[{" ", 
       RowBox[{
        RowBox[{"pAA", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "s"}], ")"}]}], "+", 
        RowBox[{"pAa", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"h", " ", "s"}]}], ")"}], " ", 
         RowBox[{"\[Gamma]", "/", "2"}]}]}]}], 
      RowBox[{"1", "+", 
       RowBox[{"pAa", " ", "h", " ", "s"}], "+", 
       RowBox[{"pAA", " ", "s"}]}]]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6707179920880747`*^9, 3.670718100370332*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.670718016333276*^9, 3.670718101034637*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Recursion1LSexual", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pAa", ",", "pAA"}], "}"}], ",", "0", ",", "s", ",", "h"}], 
    "]"}], "==", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"pAa", "+", 
         RowBox[{"pAa", " ", "h", " ", "s"}], "+", 
         RowBox[{"2", " ", "pAA", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "s"}], ")"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "-", 
         RowBox[{"2", " ", "pAA"}], "-", "pAa", " ", "+", 
         RowBox[{"pAa", " ", "h", " ", "s"}]}], ")"}]}], 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"pAa", " ", "h", " ", "s"}], "+", 
          RowBox[{"pAA", " ", "s"}]}], ")"}], "2"]}]], ",", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"pAa", "+", 
         RowBox[{"pAa", " ", "h", " ", "s"}], "+", 
         RowBox[{"2", " ", "pAA", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "s"}], ")"}]}]}], ")"}], "2"], 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"pAa", " ", "h", " ", "s"}], "+", 
          RowBox[{"pAA", " ", "s"}]}], ")"}], "2"]}]]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.670718780263563*^9, 3.670718788728825*^9}, {
  3.670719519551167*^9, 3.670719519701585*^9}, {3.670719564178485*^9, 
  3.6707196791872787`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.6707187895950336`*^9, {3.6707195017501507`*^9, 3.670719520544568*^9}, {
   3.670719566279624*^9, 3.670719679937923*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Linearization of model for small pAa and pAA", "Subsubsection",
 CellChangeTimes->{{3.670815176441684*^9, 3.670815192703529*^9}}],

Cell["Writing the approximated model in matrix form:", "Text",
 CellChangeTimes->{{3.670815506194436*^9, 3.6708155213547297`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RecursionLinear", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pAa_", ",", "pAA_"}], "}"}], ",", "\[Gamma]_", ",", "s_", ",", 
     "h_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pAa", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"h", " ", "s"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Gamma]"}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"pAA", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "s"}], ")"}]}], "+", 
      RowBox[{"pAa", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"h", " ", "s"}]}], ")"}], " ", 
       RowBox[{"\[Gamma]", "/", "2"}]}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.670815213577471*^9, 3.670815266204178*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"M", "[", 
    RowBox[{"\[Gamma]_", ",", "s_", ",", "h_"}], "]"}], ":=", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"h", " ", "s"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Gamma]"}], ")"}]}], "0"},
      {
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"h", " ", "s"}]}], ")"}], " ", 
        RowBox[{"\[Gamma]", "/", "2"}]}], 
       RowBox[{"(", 
        RowBox[{"1", "+", "s"}], ")"}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"RecursionLinear", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pAa", ",", "pAA"}], "}"}], ",", "\[Gamma]", ",", "s", ",", 
     "h"}], "]"}], "==", 
   RowBox[{
    RowBox[{"M", "[", 
     RowBox[{"\[Gamma]", ",", "s", ",", "h"}], "]"}], ".", 
    RowBox[{"{", 
     RowBox[{"pAa", ",", "pAA"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.67081531453428*^9, 3.6708153439001503`*^9}, {
  3.670815378051498*^9, 3.670815403182417*^9}, {3.670817347031348*^9, 
  3.670817347255642*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.6708173564818163`*^9, 3.670829787115636*^9, 
  3.674522781125573*^9}]
}, Open  ]],

Cell[TextData[{
 "Diagonalisation of M as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"M", "=", 
    RowBox[{
     SuperscriptBox["B", 
      RowBox[{"-", "1"}]], "Mdiag", " ", "B"}]}], TraditionalForm]]],
 ":"
}], "Text",
 CellChangeTimes->{{3.670815497192156*^9, 3.67081550222676*^9}, {
  3.670815571489703*^9, 3.670815575553678*^9}, {3.670815606513582*^9, 
  3.6708156620814953`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MDiag", "[", 
    RowBox[{"\[Gamma]_", ",", "s_", ",", "h_"}], "]"}], ":=", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"Eigenvalues", "[", 
     RowBox[{"M", "[", 
      RowBox[{"\[Gamma]", ",", "s", ",", "h"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B", "[", 
    RowBox[{"\[Gamma]_", ",", "s_", ",", "h_"}], "]"}], ":=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Eigenvectors", "[", 
     RowBox[{"M", "[", 
      RowBox[{"\[Gamma]", ",", "s", ",", "h"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"M", "[", 
    RowBox[{"\[Gamma]", ",", "s", ",", "h"}], "]"}], "\[Equal]", 
   RowBox[{
    RowBox[{"B", "[", 
     RowBox[{"\[Gamma]", ",", "s", ",", "h"}], "]"}], ".", 
    RowBox[{"MDiag", "[", 
     RowBox[{"\[Gamma]", ",", "s", ",", "h"}], "]"}], ".", 
    RowBox[{"Inverse", "[", 
     RowBox[{"B", "[", 
      RowBox[{"\[Gamma]", ",", "s", ",", "h"}], "]"}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.670815528597807*^9, 3.670815600738409*^9}, {
   3.670815665714313*^9, 3.6708157253062563`*^9}, {3.6708168356243553`*^9, 
   3.670816872834136*^9}, {3.670816981816341*^9, 3.670816982479642*^9}, {
   3.670817070298366*^9, 3.670817071495697*^9}, {3.670817171689069*^9, 
   3.670817191054467*^9}, {3.670817230823646*^9, 3.6708172657901287`*^9}, 
   3.6708173623760433`*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.670816831434678*^9, 3.670816838149638*^9}, 
   3.6708168770118237`*^9, 3.670816937448522*^9, {3.6708169687085667`*^9, 
   3.6708169835125437`*^9}, {3.670817074057*^9, 3.670817090809588*^9}, {
   3.6708171809609127`*^9, 3.6708172121432333`*^9}, {3.670817242498786*^9, 
   3.6708172604894543`*^9}, {3.670817358605743*^9, 3.670817364645088*^9}, 
   3.670829790141056*^9, 3.67452278280799*^9}]
}, Open  ]],

Cell["\<\
Using this to come up with a solution for the linear difference equation:\
\>", "Text",
 CellChangeTimes->{{3.6708310310301447`*^9, 3.67083106351969*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"solutionLinear", "[", 
    RowBox[{"t_", ",", 
     RowBox[{"{", 
      RowBox[{"pAa0_", ",", "pAA0_"}], "}"}], ",", "\[Gamma]_", ",", "s_", 
     ",", "h_"}], "]"}], ":=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"B", "[", 
      RowBox[{"\[Gamma]", ",", "s", ",", "h"}], "]"}], ".", 
     RowBox[{"MatrixPower", "[", 
      RowBox[{
       RowBox[{"MDiag", "[", 
        RowBox[{"\[Gamma]", ",", "s", ",", "h"}], "]"}], ",", "t"}], "]"}], 
     ".", 
     RowBox[{"Inverse", "[", 
      RowBox[{"B", "[", 
       RowBox[{"\[Gamma]", ",", "s", ",", "h"}], "]"}], "]"}], ".", 
     RowBox[{"{", 
      RowBox[{"pAa0", ",", "pAA0"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Kappa]", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"h", " ", "s"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Gamma]"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"solutionLinear", "[", 
    RowBox[{"t", ",", 
     RowBox[{"{", 
      RowBox[{"pAa0", ",", "pAA0"}], "}"}], ",", "\[Gamma]", ",", "s", ",", 
     "h"}], "]"}], "==", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pAa0", " ", 
      SuperscriptBox["\[Kappa]", "t"]}], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"pAa0", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"h", " ", "s"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "s"}], ")"}], "t"], "-", 
          SuperscriptBox["\[Kappa]", "t"]}], ")"}], " ", "\[Gamma]"}], "+", 
       RowBox[{"2", " ", "pAA0", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "s"}], ")"}], "t"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "s", "-", "\[Kappa]"}], ")"}]}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "s", "-", "\[Kappa]"}], ")"}]}]]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"solutionLinear", "[", 
    RowBox[{"t", ",", 
     RowBox[{"{", 
      RowBox[{"pAa0", ",", "0"}], "}"}], ",", "\[Gamma]", ",", "s", ",", 
     "h"}], "]"}], "==", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pAa0", " ", 
      SuperscriptBox["\[Kappa]", "t"]}], ",", 
     FractionBox[
      RowBox[{"pAa0", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"h", " ", "s"}]}], ")"}], " ", "\[Gamma]", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", "s"}], ")"}], "t"], "-", 
         SuperscriptBox["\[Kappa]", "t"]}], ")"}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "s", "-", "\[Kappa]"}], ")"}]}]]}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.670827708690917*^9, 3.670827724116322*^9}, {
   3.670829735063527*^9, 3.670829956944026*^9}, {3.6708300912725897`*^9, 
   3.670830190132867*^9}, {3.670830232382861*^9, 3.670830283627966*^9}, {
   3.670830335227331*^9, 3.670830377691245*^9}, 3.6708304218769083`*^9, {
   3.670830499721733*^9, 3.670830523953299*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.6708298614930573`*^9, 3.6708299118348103`*^9}, 
   3.670829957812459*^9, {3.670830142025319*^9, 3.6708301506520576`*^9}, {
   3.6708301811072483`*^9, 3.670830284540861*^9}, 3.670830317914084*^9, {
   3.670830350518915*^9, 3.670830378457535*^9}, 3.6708304227091084`*^9, {
   3.670830511334181*^9, 3.670830524957863*^9}, {3.674522774652584*^9, 
   3.6745227844268923`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.6708298614930573`*^9, 3.6708299118348103`*^9}, 
   3.670829957812459*^9, {3.670830142025319*^9, 3.6708301506520576`*^9}, {
   3.6708301811072483`*^9, 3.670830284540861*^9}, 3.670830317914084*^9, {
   3.670830350518915*^9, 3.670830378457535*^9}, 3.6708304227091084`*^9, {
   3.670830511334181*^9, 3.670830524957863*^9}, {3.674522774652584*^9, 
   3.67452278444118*^9}}]
}, Open  ]],

Cell["More direct way of obtaining the solution using RSolve:", "Text",
 CellChangeTimes->{{3.674521371945204*^9, 3.674521387369721*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"RSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"pAa", "[", 
        RowBox[{"t", "+", "1"}], "]"}], "==", 
       RowBox[{
        RowBox[{"pAa", "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"h", " ", "s"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Gamma]"}], ")"}]}]}], ",", 
      RowBox[{
       RowBox[{"pAA", "[", 
        RowBox[{"t", "+", "1"}], "]"}], "==", 
       RowBox[{
        RowBox[{
         RowBox[{"pAA", "[", "t", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "s"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"pAa", "[", "t", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"h", " ", "s"}]}], ")"}], " ", 
         RowBox[{"\[Gamma]", "/", "2"}]}]}]}], ",", 
      RowBox[{
       RowBox[{"pAa", "[", "0", "]"}], "\[Equal]", "pAa0"}], ",", 
      RowBox[{
       RowBox[{"pAA", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"pAa", "[", "t", "]"}], ",", 
      RowBox[{"pAA", "[", "t", "]"}]}], "}"}], ",", "t"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.674521389871718*^9, 3.6745215090113297`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"pAa", "[", "t", "]"}], "\[Rule]", 
     RowBox[{"pAa0", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"h", " ", "s"}]}], ")"}]}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], ")"}], "t"]}]}], 
    ",", 
    RowBox[{
     RowBox[{"pAA", "[", "t", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{"pAa0", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"h", " ", "s"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", "s"}], ")"}], "t"], "-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"h", " ", "s"}]}], ")"}]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}], ")"}], "t"]}], 
        ")"}], " ", "\[Gamma]", " ", 
       RowBox[{"UnitStep", "[", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "t"}], "]"}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"s", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"h", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Gamma]"}], ")"}]}]}], ")"}]}], "+",
          "\[Gamma]"}], ")"}]}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.67452145867566*^9, 3.674521470121174*^9}, 
   3.674521510139752*^9}]
}, Open  ]],

Cell["Checking if this is indeed the solution:", "Text",
 CellChangeTimes->{{3.670831116826497*^9, 3.670831146428746*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"t", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Nest", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"RecursionLinear", "[", 
       RowBox[{"#", ",", "\[Gamma]", ",", "s", ",", "h"}], "]"}], "&"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"pAa0", ",", "pAA0"}], "}"}], ",", "t"}], "]"}], "==", 
   RowBox[{"solutionLinear", "[", 
    RowBox[{"t", ",", 
     RowBox[{"{", 
      RowBox[{"pAa0", ",", "pAA0"}], "}"}], ",", "\[Gamma]", ",", "s", ",", 
     "h"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.670831519491922*^9, 3.670831538176716*^9}, {
  3.6708315872376757`*^9, 3.6708316196883707`*^9}, {3.6708316746729593`*^9, 
  3.67083172776786*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.670831718078422*^9, 3.6708317294775887`*^9}}]
}, Open  ]],

Cell["Plotting the solution:", "Text",
 CellChangeTimes->{{3.6708938609626637`*^9, 3.67089387215315*^9}, {
  3.67089398887177*^9, 3.670893992159368*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"solutionLinear", "[", 
         RowBox[{"t", ",", 
          RowBox[{"{", 
           RowBox[{"0.000001", ",", "0"}], "}"}], ",", "\[Gamma]", ",", "s", 
          ",", "h"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "5000"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Gamma]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", "0", ",", "0.1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"h", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.67452419756672*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`h$$ = 0.01, $CellContext`s$$ = 
    0.002, $CellContext`\[Gamma]$$ = 0.001, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Gamma]$$], 0, 1}, {
      Hold[$CellContext`s$$], 0, 0.1}, {
      Hold[$CellContext`h$$], 0, 1}}, Typeset`size$$ = {450., {131., 138.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Gamma]$1352185$$ = 0, $CellContext`s$1352186$$ = 
    0, $CellContext`h$1352187$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`h$$ = 0, $CellContext`s$$ = 
        0, $CellContext`\[Gamma]$$ = 0}, "ControllerVariables" :> {
        Hold[$CellContext`\[Gamma]$$, $CellContext`\[Gamma]$1352185$$, 0], 
        Hold[$CellContext`s$$, $CellContext`s$1352186$$, 0], 
        Hold[$CellContext`h$$, $CellContext`h$1352187$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot[
        Transpose[
         Table[
          $CellContext`solutionLinear[$CellContext`t, {
           1.*^-6, 0}, $CellContext`\[Gamma]$$, $CellContext`s$$, \
$CellContext`h$$], {$CellContext`t, 0, 5000}]], PlotRange -> All], 
      "Specifications" :> {{$CellContext`\[Gamma]$$, 0, 1}, {$CellContext`s$$,
          0, 0.1}, {$CellContext`h$$, 0, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{495., {204., 209.}},
     SingleEvaluation->True],
    UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$},
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.674524151175087*^9, 3.6745242013307734`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Transpose", "::", "nmtx"}], "MessageName"], ":", 
  " ", "\<\"The first two levels of \[NoBreak]\\!\\({\\(\\(solutionLinear[\\(\
\\(0, \\(\\({1.`*^-6, 0}\\)\\), 0.001`, 0.002`, 0.01`\\)\\)]\\)\\), \
\\(\\(solutionLinear[\\(\\(1, \\(\\({1.`*^-6, 0}\\)\\), 0.001`, 0.002`, 0.01`\
\\)\\)]\\)\\), \\(\\(solutionLinear[\\(\\(2, \\(\\({1.`*^-6, 0}\\)\\), \
0.001`, 0.002`, 0.01`\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 45 \[RightSkeleton]\
\\)\\), \\(\\(solutionLinear[\\(\\(48, \\(\\({1.`*^-6, 0}\\)\\), 0.001`, \
0.002`, 0.01`\\)\\)]\\)\\), \\(\\(solutionLinear[\\(\\(49, \\(\\({1.`*^-6, 0}\
\\)\\), 0.001`, 0.002`, 0.01`\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 4951 \
\[RightSkeleton]\\)\\)}\\)\[NoBreak] cannot be transposed. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Transpose/nmtx\\\", \
ButtonNote -> \\\"Transpose::nmtx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.676082076512928*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Transpose", "::", "nmtx"}], "MessageName"], ":", 
  " ", "\<\"The first two levels of \[NoBreak]\\!\\({\\(\\(solutionLinear[\\(\
\\(0, \\(\\({1.`*^-6, 0}\\)\\), 0.001`, 0.002`, 0.01`\\)\\)]\\)\\), \
\\(\\(solutionLinear[\\(\\(1.`16., \\(\\({1.`*^-6, 0}\\)\\), 0.001`, 0.002`, \
0.01`\\)\\)]\\)\\), \\(\\(solutionLinear[\\(\\(2.`16., \\(\\({1.`*^-6, \
0}\\)\\), 0.001`, 0.002`, 0.01`\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 45 \
\[RightSkeleton]\\)\\), \\(\\(solutionLinear[\\(\\(48.`16., \\(\\({1.`*^-6, \
0}\\)\\), 0.001`, 0.002`, 0.01`\\)\\)]\\)\\), \
\\(\\(solutionLinear[\\(\\(49.`16., \\(\\({1.`*^-6, 0}\\)\\), 0.001`, 0.002`, \
0.01`\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 4951 \[RightSkeleton]\\)\\)}\\)\
\[NoBreak] cannot be transposed. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Transpose/nmtx\\\", ButtonNote -> \
\\\"Transpose::nmtx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.676082076706958*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Transpose", "::", "nmtx"}], "MessageName"], ":", 
  " ", "\<\"The first two levels of \[NoBreak]\\!\\({\\(\\(solutionLinear[\\(\
\\(0.`, \\(\\({1.`*^-6, 0.`}\\)\\), 0.001`, 0.002`, 0.01`\\)\\)]\\)\\), \
\\(\\(solutionLinear[\\(\\(1.`, \\(\\({1.`*^-6, 0.`}\\)\\), 0.001`, 0.002`, \
0.01`\\)\\)]\\)\\), \\(\\(solutionLinear[\\(\\(2.`, \\(\\({1.`*^-6, \
0.`}\\)\\), 0.001`, 0.002`, 0.01`\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 45 \
\[RightSkeleton]\\)\\), \\(\\(solutionLinear[\\(\\(48.`, \\(\\({1.`*^-6, 0.`}\
\\)\\), 0.001`, 0.002`, 0.01`\\)\\)]\\)\\), \\(\\(solutionLinear[\\(\\(49.`, \
\\(\\({1.`*^-6, 0.`}\\)\\), 0.001`, 0.002`, 0.01`\\)\\)]\\)\\), \\(\\(\
\[LeftSkeleton] 4951 \[RightSkeleton]\\)\\)}\\)\[NoBreak] cannot be \
transposed. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Transpose/nmtx\\\", ButtonNote -> \
\\\"Transpose::nmtx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.676082076760694*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Transpose :: \
nmtx\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6760820767973747`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(Transpose[\\(\\({\\(\\(solutionLinear[\\(\\(0.`, \
\\(\\({1.`*^-6, 0.`}\\)\\), 0.001`, 0.002`, 0.01`\\)\\)]\\)\\), \
\\(\\(solutionLinear[\\(\\(1.`, \\(\\({1.`*^-6, 0.`}\\)\\), 0.001`, 0.002`, \
0.01`\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 47 \[RightSkeleton]\\)\\), \
\\(\\(solutionLinear[\\(\\(49.`, \\(\\({1.`*^-6, 0.`}\\)\\), 0.001`, 0.002`, \
0.01`\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 4951 \[RightSkeleton]\\)\\)}\\)\\)]\
\\)\[NoBreak] is not a list of numbers or pairs of numbers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.676082076963903*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(Transpose[\\(\\({\\(\\(solutionLinear[\\(\\(0.`, \
\\(\\({1.`*^-6, 0.`}\\)\\), 0.001`, 0.002`, 0.01`\\)\\)]\\)\\), \
\\(\\(solutionLinear[\\(\\(1.`, \\(\\({1.`*^-6, 0.`}\\)\\), 0.001`, 0.002`, \
0.01`\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 47 \[RightSkeleton]\\)\\), \
\\(\\(solutionLinear[\\(\\(49.`, \\(\\({1.`*^-6, 0.`}\\)\\), 0.001`, 0.002`, \
0.01`\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 4951 \[RightSkeleton]\\)\\)}\\)\\)]\
\\)\[NoBreak] is not a list of numbers or pairs of numbers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.676082077189478*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(Transpose[\\(\\({\\(\\(solutionLinear[\\(\\(0.`, \
\\(\\({1.`*^-6, 0.`}\\)\\), 0.001`, 0.002`, 0.01`\\)\\)]\\)\\), \
\\(\\(solutionLinear[\\(\\(1.`, \\(\\({1.`*^-6, 0.`}\\)\\), 0.001`, 0.002`, \
0.01`\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 47 \[RightSkeleton]\\)\\), \
\\(\\(solutionLinear[\\(\\(49.`, \\(\\({1.`*^-6, 0.`}\\)\\), 0.001`, 0.002`, \
0.01`\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 4951 \[RightSkeleton]\\)\\)}\\)\\)]\
\\)\[NoBreak] is not a list of numbers or pairs of numbers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.67608208287719*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot :: \
lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6760820828847837`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Transpose", "::", "nmtx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The first two levels of \
\[NoBreak]\\!\\({\\(\\(solutionLinear[\\(\\(0, \\(\\({1.`*^-6, 0}\\)\\), \
0.001`, 0.002`, 0.01`\\)\\)]\\)\\), \\(\\(solutionLinear[\\(\\(1, \
\\(\\({1.`*^-6, 0}\\)\\), 0.001`, 0.002`, 0.01`\\)\\)]\\)\\), \
\\(\\(solutionLinear[\\(\\(2, \\(\\({1.`*^-6, 0}\\)\\), 0.001`, 0.002`, 0.01`\
\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 46 \[RightSkeleton]\\)\\), \
\\(\\(solutionLinear[\\(\\(49, \\(\\({1.`*^-6, 0}\\)\\), 0.001`, 0.002`, \
0.01`\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 4951 \[RightSkeleton]\\)\\)}\\)\
\[NoBreak] cannot be transposed. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Transpose/nmtx\\\", ButtonNote -> \
\\\"Transpose::nmtx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.678070214869423*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Transpose", "::", "nmtx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The first two levels of \
\[NoBreak]\\!\\({\\(\\(solutionLinear[\\(\\(0, \\(\\({1.`*^-6, 0}\\)\\), \
0.001`, 0.002`, 0.01`\\)\\)]\\)\\), \\(\\(solutionLinear[\\(\\(1.`16., \
\\(\\({1.`*^-6, 0}\\)\\), 0.001`, 0.002`, 0.01`\\)\\)]\\)\\), \\(\\(\
\[LeftSkeleton] 47 \[RightSkeleton]\\)\\), \
\\(\\(solutionLinear[\\(\\(49.`16., \\(\\({1.`*^-6, 0}\\)\\), 0.001`, 0.002`, \
0.01`\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 4951 \[RightSkeleton]\\)\\)}\\)\
\[NoBreak] cannot be transposed. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Transpose/nmtx\\\", ButtonNote -> \
\\\"Transpose::nmtx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6780702149902277`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Transpose", "::", "nmtx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The first two levels of \
\[NoBreak]\\!\\({\\(\\(solutionLinear[\\(\\(0.`, \\(\\({1.`*^-6, 0.`}\\)\\), \
0.001`, 0.002`, 0.01`\\)\\)]\\)\\), \\(\\(solutionLinear[\\(\\(1.`, \
\\(\\({1.`*^-6, 0.`}\\)\\), 0.001`, 0.002`, 0.01`\\)\\)]\\)\\), \\(\\(\
\[LeftSkeleton] 47 \[RightSkeleton]\\)\\), \\(\\(solutionLinear[\\(\\(49.`, \
\\(\\({1.`*^-6, 0.`}\\)\\), 0.001`, 0.002`, 0.01`\\)\\)]\\)\\), \\(\\(\
\[LeftSkeleton] 4951 \[RightSkeleton]\\)\\)}\\)\[NoBreak] cannot be \
transposed. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Transpose/nmtx\\\", ButtonNote -> \
\\\"Transpose::nmtx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.678070215054298*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Transpose \
:: nmtx\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6780702150841913`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(Transpose[\\(\\({\\(\\(solutionLinear[\\(\\(0.`, \
\\(\\({1.`*^-6, 0.`}\\)\\), 0.001`, 0.002`, 0.01`\\)\\)]\\)\\), \
\\(\\(solutionLinear[\\(\\(1.`, \\(\\({1.`*^-6, 0.`}\\)\\), 0.001`, 0.002`, \
0.01`\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 47 \[RightSkeleton]\\)\\), \
\\(\\(solutionLinear[\\(\\(49.`, \\(\\({1.`*^-6, 0.`}\\)\\), 0.001`, 0.002`, \
0.01`\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 4951 \[RightSkeleton]\\)\\)}\\)\\)]\
\\)\[NoBreak] is not a list of numbers or pairs of numbers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.67807021520858*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(Transpose[\\(\\({\\(\\(solutionLinear[\\(\\(0.`, \
\\(\\({1.`*^-6, 0.`}\\)\\), 0.001`, 0.002`, 0.01`\\)\\)]\\)\\), \
\\(\\(solutionLinear[\\(\\(1.`, \\(\\({1.`*^-6, 0.`}\\)\\), 0.001`, 0.002`, \
0.01`\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 47 \[RightSkeleton]\\)\\), \
\\(\\(solutionLinear[\\(\\(49.`, \\(\\({1.`*^-6, 0.`}\\)\\), 0.001`, 0.002`, \
0.01`\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 4951 \[RightSkeleton]\\)\\)}\\)\\)]\
\\)\[NoBreak] is not a list of numbers or pairs of numbers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6780702153895283`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Transpose", "::", "nmtx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The first two levels of the one-dimensional list \
\[NoBreak]\\!\\({\\(\\(solutionLinear[\\(\\(0, \\(\\({1.`*^-6, 0}\\)\\), \
0.001`, 0.002`, 0.01`\\)\\)]\\)\\), \\(\\(solutionLinear[\\(\\(1, \
\\(\\({1.`*^-6, 0}\\)\\), 0.001`, 0.002`, 0.01`\\)\\)]\\)\\), \
\\(\\(solutionLinear[\\(\\(2, \\(\\({1.`*^-6, 0}\\)\\), 0.001`, 0.002`, 0.01`\
\\)\\)]\\)\\), \\(\\(solutionLinear[\\(\\(3, \\(\\({1.`*^-6, 0}\\)\\), \
0.001`, 0.002`, 0.01`\\)\\)]\\)\\), \\(\\(solutionLinear[\\(\\(4, \
\\(\\({1.`*^-6, 0}\\)\\), 0.001`, 0.002`, 0.01`\\)\\)]\\)\\), \
\\(\\(solutionLinear[\\(\\(5, \\(\\({1.`*^-6, 0}\\)\\), 0.001`, 0.002`, 0.01`\
\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 40 \[RightSkeleton]\\)\\), \
\\(\\(solutionLinear[\\(\\(46, \\(\\({1.`*^-6, 0}\\)\\), 0.001`, 0.002`, \
0.01`\\)\\)]\\)\\), \\(\\(solutionLinear[\\(\\(47, \\(\\({1.`*^-6, 0}\\)\\), \
0.001`, 0.002`, 0.01`\\)\\)]\\)\\), \\(\\(solutionLinear[\\(\\(48, \
\\(\\({1.`*^-6, 0}\\)\\), 0.001`, 0.002`, 0.01`\\)\\)]\\)\\), \
\\(\\(solutionLinear[\\(\\(49, \\(\\({1.`*^-6, 0}\\)\\), 0.001`, 0.002`, \
0.01`\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 4951 \[RightSkeleton]\\)\\)}\\)\
\[NoBreak] cannot be transposed. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Transpose/nmtx\\\", ButtonNote -> \
\\\"Transpose::nmtx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.68087269761648*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\(Transpose[\\(\\({\\(\\(solutionLinear[\\(\\(0, \
\\(\\({1.`*^-6, 0}\\)\\), 0.001`, 0.002`, 0.01`\\)\\)]\\)\\), \
\\(\\(solutionLinear[\\(\\(1, \\(\\({1.`*^-6, 0}\\)\\), 0.001`, 0.002`, 0.01`\
\\)\\)]\\)\\), \\(\\(solutionLinear[\\(\\(2, \\(\\({1.`*^-6, 0}\\)\\), \
0.001`, 0.002`, 0.01`\\)\\)]\\)\\), \\(\\(solutionLinear[\\(\\(3, \
\\(\\({1.`*^-6, 0}\\)\\), 0.001`, 0.002`, 0.01`\\)\\)]\\)\\), \
\\(\\(solutionLinear[\\(\\(4, \\(\\({1.`*^-6, 0}\\)\\), 0.001`, 0.002`, 0.01`\
\\)\\)]\\)\\), \\(\\(solutionLinear[\\(\\(5, \\(\\({1.`*^-6, 0}\\)\\), \
0.001`, 0.002`, 0.01`\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 40 \[RightSkeleton]\
\\)\\), \\(\\(solutionLinear[\\(\\(46, \\(\\({1.`*^-6, 0}\\)\\), 0.001`, \
0.002`, 0.01`\\)\\)]\\)\\), \\(\\(solutionLinear[\\(\\(47, \\(\\({1.`*^-6, 0}\
\\)\\), 0.001`, 0.002`, 0.01`\\)\\)]\\)\\), \\(\\(solutionLinear[\\(\\(48, \
\\(\\({1.`*^-6, 0}\\)\\), 0.001`, 0.002`, 0.01`\\)\\)]\\)\\), \
\\(\\(solutionLinear[\\(\\(49, \\(\\({1.`*^-6, 0}\\)\\), 0.001`, 0.002`, \
0.01`\\)\\)]\\)\\), \\(\\(\[LeftSkeleton] 4951 \[RightSkeleton]\\)\\)}\\)\\)]\
\\)\[NoBreak] is not a list of numbers or pairs of numbers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.680872697864314*^9}]
}, Open  ]],

Cell["\<\
Futher approximating the system (Taylor expansion assuming small s and \
\[Gamma]):\
\>", "Text",
 CellChangeTimes->{{3.6708964348849773`*^9, 3.670896450675581*^9}, {
  3.670898261047369*^9, 3.670898288974946*^9}, {3.67091345488151*^9, 
  3.6709134594957657`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "t", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"h", " ", "s"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Gamma]"}], ")"}]}], ")"}], "^", "t"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], "==", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "\[Gamma]"}], ")"}], "t"], 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"h", " ", "s", " ", "t"}]}], ")"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "s"}], ")"}], "t"], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"h", " ", "s"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Gamma]"}], ")"}]}], ")"}], "^", "t"}]}], ",", 
      
      RowBox[{"{", 
       RowBox[{"s", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], "==", 
   RowBox[{"1", "+", 
    RowBox[{"s", " ", "t"}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"h", " ", "s", " ", "t"}]}], " ", ")"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Gamma]"}], ")"}], "t"]}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.670896637074437*^9, 3.670896650151745*^9}, {
  3.670896733078682*^9, 3.670896733719097*^9}, {3.670897000037291*^9, 
  3.670897128109827*^9}, {3.670897158925352*^9, 3.6708972587559357`*^9}, {
  3.670912888365781*^9, 3.670912906989974*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.6745228705562572`*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.674522870566543*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Normal", "[", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"h", " ", "s"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Gamma]"}], ")"}]}], ")"}], "^", "t"}], ",", 
    RowBox[{"{", 
     RowBox[{"s", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Gamma]", ",", "0", ",", "1"}], "}"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Normal", "[", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "s"}], ")"}], "t"], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"h", " ", "s"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Gamma]"}], ")"}]}], ")"}], "^", "t"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"s", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Gamma]", ",", "0", ",", "1"}], "}"}]}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.670912941121573*^9, 3.6709129506974154`*^9}, {
  3.6709134735641212`*^9, 3.6709134843111*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"t", " ", "\[Gamma]"}], "+", 
  RowBox[{"s", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"h", " ", "t"}], "-", 
     RowBox[{"h", " ", 
      SuperscriptBox["t", "2"], " ", "\[Gamma]"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.6709129528635406`*^9, 3.6709134887791557`*^9, 
  3.674522872203631*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"t", " ", "\[Gamma]"}], "+", 
  RowBox[{"s", " ", 
   RowBox[{"(", 
    RowBox[{"t", "-", 
     RowBox[{"h", " ", "t"}], "+", 
     RowBox[{"h", " ", 
      SuperscriptBox["t", "2"], " ", "\[Gamma]"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.6709129528635406`*^9, 3.6709134887791557`*^9, 
  3.674522872218453*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"solutionLinearApprox", "[", 
    RowBox[{"t_", ",", "pAa0_", ",", "\[Gamma]_", ",", "s_", ",", "h_"}], 
    "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pAa0", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"h", " ", "s", " ", "t"}], "-", 
        RowBox[{"\[Gamma]", " ", "t", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"h", " ", "s", " ", "t"}]}], ")"}]}]}], ")"}]}], ",", 
     FractionBox[
      RowBox[{"pAa0", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"h", " ", "s"}]}], ")"}], " ", "\[Gamma]", " ", "t", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"s", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "h"}], " ", ")"}]}], "+", 
         RowBox[{"\[Gamma]", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"h", " ", "s", " ", "t"}]}], ")"}]}]}], ")"}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "s", "-", "\[Kappa]"}], ")"}]}]]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6709138660704117`*^9, 3.6709139875399523`*^9}, 
   3.670916382095207*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pAa0", "=", "0.000001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"solutionLinear", "[", 
              RowBox[{"t", ",", 
               RowBox[{"{", 
                RowBox[{"pAa0", ",", "0"}], "}"}], ",", "\[Gamma]", ",", "s", 
               ",", "h"}], "]"}], "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}], ",", 
            RowBox[{"solutionLinearApprox", "[", 
             RowBox[{"t", ",", "pAa0", ",", "\[Gamma]", ",", "s", ",", "h"}], 
             "]"}]}], "}"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "1000"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Gamma]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", "0", ",", "0.1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"h", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.670916430137972*^9, 3.670916494506776*^9}, {
  3.670916619032295*^9, 3.670916623942947*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`h$$ = 0.01, $CellContext`s$$ = 
    0.001, $CellContext`\[Gamma]$$ = 0.01, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Gamma]$$], 0, 1}, {
      Hold[$CellContext`s$$], 0, 0.1}, {
      Hold[$CellContext`h$$], 0, 1}}, Typeset`size$$ = {450., {140., 148.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Gamma]$1351837$$ = 0, $CellContext`s$1351838$$ = 
    0, $CellContext`h$1351839$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`h$$ = 0, $CellContext`s$$ = 
        0, $CellContext`\[Gamma]$$ = 0}, "ControllerVariables" :> {
        Hold[$CellContext`\[Gamma]$$, $CellContext`\[Gamma]$1351837$$, 0], 
        Hold[$CellContext`s$$, $CellContext`s$1351838$$, 0], 
        Hold[$CellContext`h$$, $CellContext`h$1351839$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot[
        Transpose[
         Table[
          Log[
           Flatten[{
             Part[
              $CellContext`solutionLinear[$CellContext`t, {$CellContext`pAa0, 
                0}, $CellContext`\[Gamma]$$, $CellContext`s$$, \
$CellContext`h$$], 1], 
             $CellContext`solutionLinearApprox[$CellContext`t, \
$CellContext`pAa0, $CellContext`\[Gamma]$$, $CellContext`s$$, \
$CellContext`h$$]}]], {$CellContext`t, 0, 1000}]], PlotRange -> All], 
      "Specifications" :> {{$CellContext`\[Gamma]$$, 0, 1}, {$CellContext`s$$,
          0, 0.1}, {$CellContext`h$$, 0, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{505., {230., 237.}},
     SingleEvaluation->True],
    UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$},
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.670916499076792*^9, 3.670916533185274*^9, 
  3.67091662482353*^9, 3.6745227925328627`*^9}]
}, Open  ]],

Cell["How does mean fitness in the population change through time?", "Text",
 CellChangeTimes->{{3.674521573276849*^9, 3.6745215811854277`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"solutionLinearApproxwbar", "[", 
    RowBox[{"t_", ",", "pAa0_", ",", "\[Gamma]_", ",", "s_", ",", "h_"}], 
    "]"}], ":=", 
   RowBox[{"1", "+", 
    RowBox[{
     RowBox[{"solutionLinearApprox", "[", 
      RowBox[{"t", ",", "pAa0", ",", "\[Gamma]", ",", "s", ",", "h"}], "]"}], 
     ".", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"h", " ", "s"}], ",", "s"}], "}"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"solutionLinearApproxwbar", "[", 
   RowBox[{"t", ",", "pAa0", ",", "\[Gamma]", ",", "s", ",", "h"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{"solutionLinearApproxwbar", "[", 
    RowBox[{
     RowBox[{"t", "+", "1"}], ",", "pAa0", ",", "\[Gamma]", ",", "s", ",", 
     "h"}], "]"}], "]"}], "-", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"solutionLinearApproxwbar", "[", 
    RowBox[{"t", ",", "pAa0", ",", "\[Gamma]", ",", "s", ",", "h"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{"solutionLinearApproxwbar", "[", 
    RowBox[{
     RowBox[{"t", "+", "1"}], ",", "pAa0", ",", "\[Gamma]", ",", "s", ",", 
     "h"}], "]"}], "]"}], "/", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"solutionLinearApproxwbar", "[", 
    RowBox[{"t", ",", "pAa0", ",", "\[Gamma]", ",", "s", ",", "h"}], "]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.674521589580002*^9, 3.674521761162587*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"h", " ", "pAa0", " ", "s", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"h", " ", "s", " ", "t"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"t", " ", "\[Gamma]"}]}], ")"}]}], "+", 
  FractionBox[
   RowBox[{"pAa0", " ", "s", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"h", " ", "s"}]}], ")"}], " ", "t", " ", "\[Gamma]", " ", 
    RowBox[{"(", 
     RowBox[{"s", "-", 
      RowBox[{"h", " ", "s"}], "+", "\[Gamma]", "+", 
      RowBox[{"h", " ", "s", " ", "t", " ", "\[Gamma]"}]}], ")"}]}], 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "s", "-", "\[Kappa]"}], ")"}]}]]}]], "Output",
 CellChangeTimes->{{3.67452171621896*^9, 3.6745217641079683`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"h", " ", "pAa0", " ", "s", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"h", " ", "s", " ", "t"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"t", " ", "\[Gamma]"}]}], ")"}]}], "-", 
  RowBox[{"h", " ", "pAa0", " ", "s", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"h", " ", "s", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "t"}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Gamma]", "+", 
     RowBox[{"t", " ", "\[Gamma]"}]}], ")"}]}], "-", 
  FractionBox[
   RowBox[{"pAa0", " ", "s", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"h", " ", "s"}]}], ")"}], " ", "t", " ", "\[Gamma]", " ", 
    RowBox[{"(", 
     RowBox[{"s", "-", 
      RowBox[{"h", " ", "s"}], "+", "\[Gamma]", "+", 
      RowBox[{"h", " ", "s", " ", "t", " ", "\[Gamma]"}]}], ")"}]}], 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "s", "-", "\[Kappa]"}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{"pAa0", " ", "s", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"h", " ", "s"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "t"}], ")"}], " ", "\[Gamma]", " ", 
    RowBox[{"(", 
     RowBox[{"\[Gamma]", "+", 
      RowBox[{"s", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"h", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Gamma]", "+", 
            RowBox[{"t", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "s", "-", "\[Kappa]"}], ")"}]}]]}]], "Output",
 CellChangeTimes->{{3.67452171621896*^9, 3.674521764736834*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "-", 
   RowBox[{"h", " ", "pAa0", " ", "s", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"h", " ", "s", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "t"}], ")"}]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Gamma]", "+", 
      RowBox[{"t", " ", "\[Gamma]"}]}], ")"}]}], "+", 
   FractionBox[
    RowBox[{"pAa0", " ", "s", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"h", " ", "s"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "t"}], ")"}], " ", "\[Gamma]", " ", 
     RowBox[{"(", 
      RowBox[{"\[Gamma]", "+", 
       RowBox[{"s", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"h", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Gamma]", "+", 
             RowBox[{"t", " ", "\[Gamma]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
    
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "s", "-", "\[Kappa]"}], ")"}]}]]}], 
  RowBox[{"1", "-", 
   RowBox[{"h", " ", "pAa0", " ", "s", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"h", " ", "s", " ", "t"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"t", " ", "\[Gamma]"}]}], ")"}]}], "+", 
   FractionBox[
    RowBox[{"pAa0", " ", "s", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"h", " ", "s"}]}], ")"}], " ", "t", " ", "\[Gamma]", " ", 
     RowBox[{"(", 
      RowBox[{"s", "-", 
       RowBox[{"h", " ", "s"}], "+", "\[Gamma]", "+", 
       RowBox[{"h", " ", "s", " ", "t", " ", "\[Gamma]"}]}], ")"}]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "s", "-", "\[Kappa]"}], ")"}]}]]}]]], "Output",
 CellChangeTimes->{{3.67452171621896*^9, 3.6745217647519073`*^9}}]
}, Open  ]],

Cell["\<\
Comparing automictic spread with relatively large \[Gamma] to spread of \
beneficial mutation in sexual population:\
\>", "Text",
 CellChangeTimes->{{3.674526285909177*^9, 3.6745263160588207`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pAa0", "=", "0.000001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"pAa0", " ", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"h", " ", "s"}]}], ")"}], "\[Gamma]"}], 
            RowBox[{"2", 
             RowBox[{"(", 
              RowBox[{"1", "+", "s", "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"h", " ", "s"}]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[Gamma]"}], ")"}]}]}], ")"}]}]], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", "s"}], ")"}], "^", "t"}]}], " ", ",", 
          RowBox[{"pAa0", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"h", " ", "s"}]}], ")"}], "^", "t"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "1000"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "0.01"}], "}"}], ",", "0", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s", ",", "0.01"}], "}"}], ",", "0", ",", "0.1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"h", ",", "0.5"}], "}"}], ",", "0", ",", "1"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.674526394684811*^9, 3.67452645617194*^9}, {
   3.6745265325786867`*^9, 3.6745265625749807`*^9}, {3.674526637476475*^9, 
   3.674526657313436*^9}, 3.674526694197032*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`h$$ = 0.5, $CellContext`s$$ = 
    0.001, $CellContext`\[Gamma]$$ = 0.03, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Gamma]$$], 0.01}, 0, 1}, {{
       Hold[$CellContext`s$$], 0.01}, 0, 0.1}, {{
       Hold[$CellContext`h$$], 0.5}, 0, 1}}, Typeset`size$$ = {
    450., {139., 146.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Gamma]$1356790$$ = 
    0, $CellContext`s$1356791$$ = 0, $CellContext`h$1356792$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`h$$ = 0.5, $CellContext`s$$ = 
        0.01, $CellContext`\[Gamma]$$ = 0.01}, "ControllerVariables" :> {
        Hold[$CellContext`\[Gamma]$$, $CellContext`\[Gamma]$1356790$$, 0], 
        Hold[$CellContext`s$$, $CellContext`s$1356791$$, 0], 
        Hold[$CellContext`h$$, $CellContext`h$1356792$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot[
        Transpose[
         Table[{($CellContext`pAa0 ((
              1 + $CellContext`h$$ $CellContext`s$$) \
($CellContext`\[Gamma]$$/(
              2 (1 + $CellContext`s$$ - (
                1 + $CellContext`h$$ $CellContext`s$$) (
                1 - $CellContext`\[Gamma]$$)))))) (
             1 + $CellContext`s$$)^$CellContext`t, $CellContext`pAa0 (
             1 + $CellContext`h$$ $CellContext`s$$)^$CellContext`t}, \
{$CellContext`t, 0, 1000}]], PlotRange -> All], 
      "Specifications" :> {{{$CellContext`\[Gamma]$$, 0.01}, 0, 
         1}, {{$CellContext`s$$, 0.01}, 0, 0.1}, {{$CellContext`h$$, 0.5}, 0, 
         1}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{505., {228., 235.}},
     SingleEvaluation->True],
    UndoTrackedVariables :> {Typeset`show$$, Typeset`bookmarkMode$$},
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.674526565347086*^9, 3.6745266580765257`*^9, 
  3.674526695595495*^9}]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Two-locus model with infinite population size", "Section",
 CellChangeTimes->{{3.5973745391378927`*^9, 3.597374559431642*^9}, {
  3.603533292755769*^9, 3.603533293376965*^9}, {3.612303398104492*^9, 
  3.61230340683202*^9}}],

Cell[CellGroupData[{

Cell["Plotting the evolutionary dynamics", "Subsection",
 CellChangeTimes->{{3.6035302482457867`*^9, 3.6035302728390427`*^9}, {
  3.6035308602183037`*^9, 3.6035308624328814`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"meannCA", "=", "0.0001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"meannAB", "=", "0.0001"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sA", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hA", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sB", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hB", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu", "=", "0.00001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gens", "=", "2000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p0", "=", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.60353089187535*^9, 3.603530983226058*^9}, {
   3.603531040739498*^9, 3.6035311977091427`*^9}, {3.603531307406088*^9, 
   3.603531435528841*^9}, {3.603531676554263*^9, 3.603531696127338*^9}, {
   3.605414704051242*^9, 3.605414749366444*^9}, {3.605414801927544*^9, 
   3.605414830772173*^9}, {3.605414888331237*^9, 3.605414888403543*^9}, {
   3.605415303926601*^9, 3.6054154046167097`*^9}, {3.6054183588449306`*^9, 
   3.6054183591463223`*^9}, {3.605418419789003*^9, 3.605418419939818*^9}, {
   3.605418509680318*^9, 3.6054185114142647`*^9}, 3.60541856601192*^9, {
   3.605418597754562*^9, 3.6054186004662247`*^9}, {3.6054186663557796`*^9, 
   3.6054186678602877`*^9}, {3.605418746593484*^9, 3.605418747151949*^9}, {
   3.6054199397152643`*^9, 3.605419942224554*^9}, 3.605420027544197*^9, 
   3.605420082999234*^9, {3.605455436291329*^9, 3.60545546301057*^9}, 
   3.605455502169993*^9, {3.6054555323763247`*^9, 3.605455537542729*^9}, {
   3.605455571255909*^9, 3.605455577576311*^9}, 3.605457183586089*^9, {
   3.605457225967246*^9, 3.605457228221266*^9}, 3.605457292207737*^9, 
   3.605457329502787*^9, {3.6055445115161657`*^9, 3.605544513125423*^9}, {
   3.605546923563574*^9, 3.605546923775676*^9}, {3.605548249560108*^9, 
   3.605548253344016*^9}, {3.605548400853136*^9, 3.605548401451913*^9}, {
   3.605548436893821*^9, 3.605548450466638*^9}, 3.605548495412734*^9, {
   3.61230366667986*^9, 3.612303680991622*^9}, {3.6123040386741953`*^9, 
   3.612304065759056*^9}, {3.6123041165052853`*^9, 3.612304160107432*^9}, {
   3.612304193045336*^9, 3.612304195266068*^9}, {3.612304506933112*^9, 
   3.6123045350207357`*^9}, {3.612304583021286*^9, 3.6123045856115093`*^9}, {
   3.612304620866695*^9, 3.6123046211297626`*^9}, {3.612304834434585*^9, 
   3.612304834775957*^9}, 3.612305211129125*^9, {3.61230689566846*^9, 
   3.612306913106716*^9}, {3.612568620416073*^9, 3.612568620565349*^9}, {
   3.670283427486258*^9, 3.670283428605069*^9}, {3.670283541805253*^9, 
   3.670283570694063*^9}, {3.670283679822341*^9, 3.670283679940343*^9}, 
   3.6702837731178417`*^9, {3.670283844237741*^9, 3.6702838747160788`*^9}, {
   3.674440092464451*^9, 3.674440098462061*^9}, {3.674440143083057*^9, 
   3.6744401502297277`*^9}, 3.6744409990454273`*^9, {3.6744425475353394`*^9, 
   3.67444255108603*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ps", "=", 
   RowBox[{"Simulate", "[", 
    RowBox[{
    "p0", ",", "gens", ",", "meannCA", ",", "meannAB", ",", 
     "\"\<CentralFusion\>\"", ",", "mu", ",", "mu", ",", "sA", ",", "hA", ",",
      "sB", ",", "hB"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PlotDynamics", "[", "ps", "]"}]}], "Input",
 CellChangeTimes->{{3.6123045185893393`*^9, 3.612304518863678*^9}, {
  3.6125686233493032`*^9, 3.612568624677791*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.3, 0.3, 0.3], PointSize[0.002777777777777778], Thickness[
     Large], LineBox[CompressedData["
1:eJxd1n90i/f7x/H4sfqxlu6jo7OOsG7LqMmm24LiQhEU0ZYFRWgRVaRt2qa/
71RH0VlQE9QEncUUQVlmHRk1RWdBEdQEZWFlGWVFzdf39H0n9177x3meRy+X
y/vcZ7rNXBg5q7lIJDrTSiT6/1+b/nMP+u+vIspJHtWl9MVfrFvThM63JUpP
+9Pc7L1dW3o6gL4fUdjc8i/fgdTyecSZKZ4OovDtJ5e38rSY7i25+OG+53x3
J92WwUeneTqYRLPODmrr6XcpSjL22/2NfEsoyJL8ROXpHvRG8bOPfT0dQs9O
ro35/hnfH9CxnQ8SZnpaSl8u3TXbz9Mf0pptcSOtT/n+iAbFlwTEeroPtZz8
4Lifp0Np9ivHZ1qf8P0xLTn3Re1MT39CW/ZujfDz9KeU9s2E9d838C2j6p7X
qmZ4ui8NylPffNXT/ehoWcur+//huz+puN3W6Z4Oo3b/jkpp4+kB1Px/G1/b
95jvgdR/XURhjKcH0YKxv998xdNEmul7Ou5+xJojqvzuWXcl36LBdKr4mE8z
jw8m5ZZbh7fX8z6EVr77bHQk39wQ+rP9XPPTh7wPpWG7x53dwjc3lA79b/Ev
ozweTsdLV+kfPOA9nMwDtr5Yx7doGA2uWxQ22OPDqF36mj6uv3kfTieTj1xb
wTc3nM5NSu7/scdH0CNOT1fcvI+gy7skLo5vkZwG9vunx7sel9PGL8tFp/7i
fSTNv5+iWsg3N5IqevelDh4fRbKZb605cJ/3UeQQdYuaxLdoNIV97jf/2T3e
R1M3P2V1Md+iCNJX/Ksb4PEIevHjzJFX63gfQ+dPvPVRFt/cGApoXf1WZ4+P
pempokcH/uR9LP3wafnGSL5F42hAde6zuru8j6PO56/e/5xvkYKyGj+e8Bbf
pKA9Q1Wt993hf15BS3aP/X043zYF7awrMTtc/Px4qs4LD1XzTeOp/Ygq+aM/
+PnxVLq4jTmXb9t4mv7hJL9WfIsi6fmr/4Qsv83PR1Jfi2zfq3xzkdTm1z1D
C27x85EU/dNAnYhvURSd6vLgWnItPx9FZ1ddf379Jj8fRQH064hRfNui6Ojz
4uDSG/x8NKUN33nXh2+KJp/ut65Ous7PR5PfW1/0KnHy89E0oPPvf9de4+cn
UPrQAe+/yTdNIMXqwP3DfufnJ5Bl7ISJsVf5+Qm0fNCg7Uk1/PxEkufXipOu
8PMTaX7fX5qpLvPzE+l93yNT+l3i5yfSVFuHFi8u8vOf0bjDIwp2XODnP6N3
dro/GHCen/+MJEV3bljO8fOf0YmQ2p4tzvLzSpp3+XEXqZ2fV1K3X34b0+c0
P6+km99029eqip9XUtmhkxu+PcHPT6LYZ10KfY/z85Po2xubxb0r+PlJJO8Y
c8fnZ35+En3U7MzAZT/x85NJUTiv/a4f+PnJ1KZHi5JZ+/n5yWQfVjNpi4Wf
n/zy72eQImoHPz+FMvMWtJr1DT8/hXovn3Pf9jU/P4Vm12tqItby81Mo51ef
5Lsr+PkYelTdLy71c34+hl4J7rbueAY/H0OHuqj77FrAz8dQUtyZuAcqfn4q
NRY96xg1np+fSj+Jb0/NH8TPT6UWPz/Z3asnPz+V8pNjr/3RgZ+fRjWtPj/b
78l9Nj+NjJdXNq6/zJqbRstP7yqe/T1r2zT6rdNvZ26sYC2aTnvv/FEsU/Hz
0ykn997TxB78/HQytZ8yIa3uHpufTo96Fm/1+4a1SEUfzT75w/lI1mIVZZ/9
Wz2mvo79firqeWzZoHNLWKtU9Gmr5s6dr7LmVBT5saGxU86fTW1SkVuhbRF5
9S7bpyLD2yfHHXyPtVNFd3saP6ybcoftn0Ed8wcNvKVzsf0zaOmQA6/1zvmD
7Z9BE48l+7VNuM32z6BFQcYHq4feYvtnULdv9c6bPrVs/wyylh52BPxwg+2f
QROiOvwjm3ad7Z9Bh5ZUfxP3+BrbP5N+nvFm+q0eV9n+mfT+1aADilmX2f6Z
VPSl7qsjlots/8uff7/707hO59n+mfTXjlrX5c1n2f6Z9NHhyGuXJ9rZ/pm0
YK9f5xcpVWz/TFIN2HRr3eZKtj+Wfi6aqLJ9eIztj6UHuZLBuuAjbH8svXN0
/yPD3UNsfywN7rixurb/QbY/lnSqzQNkHxxg+1/+/PnyDT/v2cv2x9LD5fry
V+fvZvtjaW3wBKdo8ndsfxzNXb1yUQ+/bWx/HB25Y5GWztvC9sfRK4++71V0
8Gu2P47KB/mceGRcx/bH0ZpeQ/aURqxh++No6F/izMtlK9n+OJqUnH1ufPwX
bH8crfv2tNwcX8D2zyK/bcunzhqcz/bPovul+6rzTnFs/yzq21m59eqFTLZ/
Fg16HBi2wj+N7Z9Fui/7DYjqnMz2z6LT5/L3zNmykO2fReP7yyV1vePZ/lm0
adR6/YLSWWz/bAq2R20Z/dcMtn82OcwbL87cOZXtn01LfUXvNf9CyfbPpi1F
3JDysdFs/2wKPXY29/gpBds/m75fM8t99/hotn82pVya+jDkyXC2fzY91I3Z
2unFELZ/Dr2z+vW3feIHsf1z6Nyho+7gJ33Z/jkU9cmUU0PSP2b751B6P/fi
Q7YP2f451DXowsjhk3ux/XPo0Fv/rrg0VML2z6Fru++ZfdoHs/1zSPJ2ZPrR
IjHbrya/Xf3nL537JtuvJnPFlcVmc0e2X011E8YN23/wf2y/mi706jRw9ON2
bL+ahj/u80f+2jZsv5qeTlqxqOt7r7D9alrH9el3MrMZ26+mtyNOqay3Gwc2
7Z9Le/0nv9b75j9NLZ5LmU9jxw4/9LCpaS5d9+m0Jna8u6lVc8l45Uxxvyd3
m5qbS22fvCcNHn27qU1zyRTa9fTthBtNbZtLxb/3+vKu9vemds6lGvte0ysh
l9j+eJK4zn1w5ddqtj+e5NroK3s/PMP2x9OFzPe3Vc6rYvvjadBiv/X9s4+z
/fHU7vfth36ee5Ttj6etv3+bp3zVxvbH0+Fe7x7v8flBtj+enn1RM6L5n/vZ
/nnkHD2/cPRbe9n+eTTyw9mizn/vZPvn0eBm8dl3DpnZ/nmU4ZyRtCK5hO2f
R0eiqpc/vW1i++fRiKTmee+4N7D982jtpa0DHnVcy/bPo6Wv1FOP11ez/Ql0
uvRY7+PLvmT7E2jE3Uer0l9bxvYn0Nq5ExKnLP+c7U8gSfMjLfue1rP9CdQ5
+OC+mQuy2f4EOtfiu8fXI3VsfwJtKFgtHtVZy/YnUJeI7sP6bdSw/fNp8dCB
Z8ekzmP759PmjvEXo/fOZvvn0ydRL/oHHJnJ9s+nyVv6r97QbDrbP5/eONp7
8gjTJLZ/PmnmP5r8tNcEtn8+VR/3C+yrH8/2z6e199u9nvpXBNu/gA5N77xu
wt0RbP8Cynt+eWn/iqFs/wKKz/kpNnkisf0LqKM8Tytq3p/tX0BfLXlYVBv5
Cdu/gKZ9/eNuZ/JHbP8CsozoNnm3/gO2fwENXpFy/vqn77P9C+nmd/UrW1wK
ZvsXUvSq3QHjwrqx/QspbpPzi2AuiO1fSK1PLvvIZejE9i+kglyKv57Vge1f
SP9umLrslS7+bP/L5h60rNzelu1fSN239gls3t6H7dfQz7d+XPQLNW9qfw39
ENuxe69P/x3Q9OfRUL5fu4eylk+aWqqhfg+ytX2s9U1NGnJkd/61Tc+/m1qh
oWErSu/1S6trapWG9v7bdUWXjX80tUZDgSfm9OTW32xqTkMZh33in410NrVB
QxtufR0c+caVpjZpaHHsupXPV15oaouGmm/8pfjnc2eb2qahv6WmWdq035ra
rqFrOzfGd598sqmdGhorLRPd7PpLU7s1tPPQuLDxm480tSiRlvaO7F+eebip
/RPJtGj8icH7D7L7E0nxq1hqPXKA3Z9Is80dPo7J3cfuT6RW697NPlVlYfcn
0qKKseqzb+9k9yfSqcO7Dv+RvJ3dn0jtZ94sXTJnG7s/kXzKBn818cZWdn8i
3bq7VFZbtZndn0ix1w4Hn+lgYvcn0sIlzSNDx25k9ydSatGqrj4P17P7Eyk7
4sKyT0Tr2P2JdNAYdXJ37Fp2fyJ9/FWL+zntvmL3J9GOf/RGeX0Ruz+Jft50
/sb5tqzFSfRL8KC++0euZvcnUSvtiR/+3L6K3Z9E8puRn5a9w1qRRKJPfBaN
tK5k9yfRsdLZrQ5OZa1JIl/F845H/8eae/nzHy037q02sPuT6LulzR+P2cza
lEQD31sX91Mqa8vL32/1uYqMKNa2JJqj/zNj6Ces7UlUsX3bj75dWDuTKFa2
1vmkDWt3EvWtjTpnfvAluz+Zxl587Wjbi6z9k+mtz5af7mpjLU6mnt0vRr+x
k7U0mSxnr06L2Miakqnre4nJPQ2sFcn06ose2YM/Z61KppLz61b1ymKtSSZF
q+z0TVrWXDLddmyuiF7A2pBMpdyqxI5zWZuSqWX1/b8OxLG2JNOOTl04/xms
bcl0d+0nl1tMY21PpmZH1/qnTWHtTCafxt+3Rk9i7U6mxxnfHV72GX+/lta0
fmNd24n8/Vo60bb3nePR/P1a2rYmIscaxd+vpY7ZB5znIvn7tSTT3/LpwLdC
S6Udr3fUjOfv19KwcXEf3Vbw92upueav0Yl8c1p6PbF/i3Z8G7TU/0Xlkh/G
8fdr6VjHbC6Rb4uWHvkk/NOHb5uWbo/sPPLFWP5+LQ1etr7jWb6dWqosattv
B99uLSX94vPTUr5FKSRa/ZM9gW//FHr43ZTjUXyLU2ji12vaDeRbmkLz/Lr0
7Mk3pdD5P66VdeZbkUJffHwlypdvVQo9317w04sx/P0p1Kz1zr31fHMpNE6x
9Pldvg0pFN/wmeYG36YU6hTUtvYy35YUauXo+2k137YUWn1BPuY03/YUmrRp
q98Jvp0pZMx9O7aCb3cKPbm3tL+Nb1EqPe7x2pJyvv1TqW5tO9kPfItTacDF
rUMO8C1NpUfDs4r38U2p1N5eFLaHb0UqbZzi++ZuvlWpNGvJM+lOz/2p1Hth
pG6H5/5Uurjyxz+3e+5PpSXNFy02e+5PpW0yffi3nvtT6at7rbtv89yfSm9/
efHNbzz3p5L0eqveJZ77U0mZ7jNpq+f+VEr5dcnaLZ770+iwMde12XN/Gilm
vTHK0+I0+rT93oMmz/1ptOitszJP08v5s5Kjmzz3p5H4yhKlp1VpdDrv2j9f
e+5Po3Uz+ps8zaVRbMJhhacNaXRi2jetPW1Ko42J/Y5v9NyfRr2iry73tC2N
3lA1TvC0PY2GiQLe8bQzjb4P39lQ7Lk/jZ5sjLF7WqSjXj/adnjaX0cPF+uX
eVqso5mDxiV4WqqjrtuuKzxNOjoy7J9PPa3Q0aiT0d08rdJRUnyFr6c1OgpU
vf50g+d+HfVe8OYdTxt0tClp1yVPm3TUosV3pzxt0VG3DvcOedqmoz+2Ttrn
abuOpmZUmz3t1FH+1fBNnnbraMnkoq88LUqnr1fsWuFp/3Tq/phb4mlxOnW0
PeU8LU0n322+mZ6mdNp/3JziaUU6nV56RONpVTqN1Y1N8LQmnXr0HKL23p9O
R3sVxXnvT6dFrv4zvPen0+bCD6d5708na7MFU7z3p1OH83eV3vvTKb/Hlone
+1/O71oR7b0/nYYs2xHpvT+DQj6rV3jvz6DvX581znt/BuW9/XSM9/4MuvCR
JcJ7fwa1GZo/2nt/Bs1dlzzKe38GXTqYOdJ7fwa1m71e7r0/4+W/h38d4b0/
g5IndvC2KYN8/OKHe+/PoDPv2Yd578+gRRTubXsGzXvtWLj3/gxKTBrvbXcG
zZ/oGuq9P5P2VBZ42z+Tzt390NviTNr84MYQ7/2ZNFqywduUSdbaSd5WZFIL
QxdvqzLpdZNrsPf+TJqz9ntvc5l0scVybxsyaUf2TG+bMmnVtgHetmTSGUmQ
t22ZlH7gOXnvfznf+oa3nZnU7Fqlt92ZdOffPd4WZVHPPhu97Z9FU0cv87Y4
i5a8me5taRZ9lznX25RFsSOmeFuRReapY72tyiKNaYi3NVk0u/5Tb3NZZKUP
vG3Iot8WvONtUxZJ4t/ytiWLAsUdvW3Lom9z2wvuz6L56W0E92dR3IsWgvtf
/v4tXwzy3p9NATlPve2fTRbVY2+Ls6n91gfelmZTethf3qZsavVOnbcV2bR4
wh1vq7Jp/vHb3tZk0yltrbe5bJIpb3jbkE2/JDi9bcqmZrt+97Ylmy51uupt
WzZt3HbF2/Zsck+87G1nNp1455K33dk03d8huD+H3g+4KLg/h65/cEFwfw5p
pp0X3J9DD0zVgvtzaFf9OcH9OdRBKWhVDu0/cVZwfw6NkAuay6ENZ88I7s+h
bXMEbcohtY+gLTnUfJddcH8ObZ0qaHsOFQUI2plD7539TXB/Dh1bI2hRLjmn
Cdo/lx6HCFqcS+tenBbcn0tTLgiacumqRdCKXDq+QtCqXDq5UNCaXNoUJWgu
l1r0E7Qhl37sLmhTLq3yE7QllyY+/VVwfy6ddwnankv3HYJ25lLKSUG7cyny
J0GLOJq6R9CtOdJvE7Q/R5uKBR3I0berBS3mKGe5oCUcBeQLWspRdLagZRz1
SRM0cS//fSNoOUeFCYJWcHR/jqCVHB2KFbSKo3vTBa3mKC1G0BqOxk8StI57
+f8XQXMcXYgSdAFH6eMFbeAocpygjRxNGyNoE0dfjRa0maMnIwVtefn3KRe0
laNeI4Tvx1H9MEFXcnQ5XPieHF0aKmgHR+4hwvfl6E1huziKGSx8b452kqAb
OPITtkhP2YOE76+nfwYK319PecIO1FMHYYv1tGeA8P31NEHYUj21FLZMTz+E
Cd9fT6nCluupr7AVemoubKWefusvfH89bRG2Wk9pwtboKVLYOj31EjanJ39h
F+jp737C99eTQ9hGPR0WtklPpcI262mtsC16Wixsq55ShG3Tk1rYlXqaJGy7
nsYJ26GnwcJ26kkmbNfL+4Tt1tO7wm7QU1dhi/LoTWG3zqMOwvbPo/bCDsyj
NsIW55GPsCV51EzY0jx60Vf4/nn0TNiUR0+ELc+jh8JW5NHfwlbm0T1hq/Lo
T2Gr8+gPYWvy6LawdXl0U9gcdEEeXRO2AdqYR1eFbYI259EVYVvyqEbY1jy6
JGxbHl0WdiW4HdwB7gR3gbuhG/LoorBFi/7brRfReWH7L6ILwg5cROeELV5E
1cKWgEvBZeAELgdXgCvBVeBqcA24DpwDLwA3gBvBTeBmcAu4FdwGXgluB3eA
O8Fd4G7wBnBR/n+9df5/3R88EFwMLgGXgsvACVwOrgBXgqvA1eAacB04B14A
bgA3gpvAzeAWcCu4DbwS3A7uAHeCu8Dd4A3gos/h/T+H9wcPBBeDS8Cl4DJw
ApeDK8CV4CpwNbgGXAfOgReAG8CN4CZwM7gF3ApuA68Et4M7wJ3gLnA3eAO4
aDG8/2J4f/BAcDG4BFwKLgMncDm4AlwJrgJXg2vAdeAceAG4AdwIbgI3g1vA
reA28EpwO7gD3AnuAneDN4CLlsD7L4H3Bw8EF4NLwKXgMnACl4MrwJXgKnA1
uAZcB86BF4AbwI3gJnAzuAXcCm4DrwS3gzvAneAucDd4A7ioAN6/AN4fPBBc
DC4Bl4LLwAlcDq4AV4KrwNXgGnAdOAdeAG4AN4KbwM3gFnAruA28EtwO7gB3
grvA3eAN4KKl8P5L4f3BA8HF4BJwKbgMnMDl4ApwJbgKXA2uAdeBc+AF4AZw
I7gJ3AxuAbeC28Arwe3gDnAnuAvcDd4ALloG778M3h88EFwMLgGXgsvACVwO
rgBXgqvA1eAacB04B14AbgA3gpvAzeAWcCu4DbwS3A7uAHeCu8Dd4A3gouXw
/svh/cEDwcXgEnApuAycwOXgCnAluApcDa4B14Fz4AXgBnAjuAncDG4Bt4Lb
wCvB7eAOcCe4C9wN3gAuKoT3L4T3Bw8EF4NLwKXgMnACl4MrwJXgKnA1uAZc
B86BF4AbwI3gJnAzuAXcCm4DrwS3gzvAneAucDd4A7joC3j/L+D9wQPBxeAS
cCm4DJzA5eAKcCW4ClwNrgHXgXPgBeAGcCO4CdwMbgG3gtvAK8Ht4A5wJ7gL
3A3eAC5aAe+/At4fPBBcDC4Bl4LLwAlcDq4AV4KrwNXgGnAdOAdeAG4AN4Kb
wM3gFnAruA28EtwO7gB3grvA3eAN4KIv4f2/hPcHDwQXg0vApeAycAKXgyvA
leAqcDW4BlwHzoEXgBvAjeAmcDO4BdwKbgOvBLeDO8Cd4C5wN3gDuMjwX29p
+K+3BvcF9wcPAA8EDwIXgweDS8BDwKXgoeAy8DBwAg8Hl4NHgCvAo8GV4DHg
KvA4cDV4ArgGXAuuA88C58DzwQvAC8EN4EXgRvBicBN4CbgZvBTcAl4GbgUv
B7eBV4BXgleB28GrwR3gNeBO8FpwF3gduBu8HrwBvBFctBK+/5Xw/YP7gvuD
B4AHggeBi8GDwSXgIeBS8FBwGXgYOIGHg8vBI8AV4NHgSvAYcBV4HLgaPAFc
A64F14FngXPg+eAF4IXgBvAicCN4MbgJvATcDF4KbgEvA7eCl4PbwCvAK8Gr
wO3g1eAO8BpwJ3gtuAu8DtwNXg/eAN4ILloF3/8q+P7BfcH9wQPAA8GDwMXg
weAS8BBwKXgouAw8DJzAw8Hl4BHgCvBocCV4DLgKPA5cDZ4ArgHXguvAs8A5
8HzwAvBCcAN4EbgRvBjcBF4CbgYvBbeAl4FbwcvBbeAV4JXgVeB28GpwB3gN
uBO8FtwFXgfuBq8HbwBvBBethu9/NXz/4L7g/uAB4IHgQeBi8GBwCXgIuBQ8
FFwGHgZO4OHgcvAIcAV4NLgSPAZcBR4HrgZPANeAa8F14FngHHg+eAF4IbgB
vAjcCF4MbgIvATeDl4JbwMvAreDl4DbwCvBK8CpwO3g1uAO8BtwJXgvuAq8D
d4PXgzeAN4KLiuD7L4LvH9wX3B88ADwQPAhcDB4MLgEPAZeCh4LLwMPACTwc
XA4eAa4AjwZXgseAq8DjwNXgCeAacC24DjwLnAPPBy8ALwQ3gBeBG8GLwU3g
JeBm8FJwC3gZuBW8HNwGXgFeCV4FbgevBneA14A7wWvBXeB14G7wevAG8EZw
0Rr4/tfA9w/uC+4PHgAeCB4ELgYPBpeAh4BLwUPBZeBh4AQeDi4HjwBXgEeD
K8FjwFXgceBq8ARwDbgWXAeeBc6B54MXgBeCG8CLwI3gxeAm8BJwM3gpuAW8
DNwKXg5uA68ArwSvAreDV4M7wGvAneC14C7wOnA3eD14A3gjuOgr+P6/gu8f
3BfcHzwAPBA8CFwMHgwuAQ8Bl4KHgsvAw8AJPBxcDh4BrgCPBleCx4CrwOPA
1eAJ4BpwLbgOPAucA88HLwAvBDeAF4EbwYvBTeAl4GbwUnALeBm4Fbwc3AZe
AV4JXgVuB68Gd4DXgDvBa8Fd4HXgbvB68AbwRnDRWvj+18L3D+4L7g8eAB4I
HgQuBg8Gl4CHgEvBQ8Fl4GHgBB4OLgePAFeAR4MrwWPAVeBx4GrwBHANuBZc
B54FzoHngxeAF4IbwIvAjeDF4CbwEnAzeCm4BbwM3ApeDm4DrwCvBK8Ct4NX
gzvAa8Cd4LXgLvA6cDd4PXgDeCO4yAjfvxG+f3BfcH/wAPBA8CBwMXgwuAQ8
BFwKHgouAw8DJ/BwcDl4BLgCPBpcCR4DrgKPA1eDJ4BrwLXgOvAscA48H7wA
vBDcAF4EbgQvBjeBl4CbwUvBLeBl4FbwcnAbeAV4JXgVuB28GtwBXgPuBK8F
d4HXgbvB68EbwBvBRevg+18H3z+4L7g/eAB4IHgQuBg8GFwCHgIuBQ8Fl4GH
gRN4OLgcPAJcAR4NrgSPAVeBx4GrwRPANeBacB14FjgHng9eAF4IbgAvAjeC
F4ObwEvAzeCl4BbwMnAreDm4DbwCvBK8CtwOXg3uAK8Bd4LXgrvA68Dd4PXg
DeCN4KL18P2vh+8f3BfcHzwAPBA8CFwMHgwuAQ8Bl4KHgsvAw8AJPBxcDh4B
rgCPBleCx4CrwOPA1eAJ4BpwLbgOPAucA88HLwAvBDeAF4EbwYvBTeAl4Gbw
UnALeBm4Fbwc3AZeAV4JXgVuB68Gd4DXgDvBa8Fd4HXgbvB68AbwRnDRBvj+
N8D3D+4L7g8eAB4IHgQuBg8Gl4CHgEvBQ8Fl4GHgBB4OLgePAFeAR4MrwWPA
VeBx4GrwBHANuBZcB54FzoHngxeAF4IbwIvAjeDF4CbwEnAzeCm4BbwM3Ape
Dm4DrwCvBK8Ct4NXgzvAa8Cd4LXgLvA6cDd4PXgDeCO4qBi+/2L4/sF9wf3B
A8ADwYPAxeDB4BLwEHApeCi4DDwMnMDDweXgEeAK8GhwJXgMuAo8DlwNngCu
AdeC68CzwDnwfPAC8EJwA3gRuBG8GNwEXgJuBi8Ft4CXgVvBy8Ft4BXgleBV
4HbwanAHeA24E7wW3AVeB+4GrwdvAG8EF22E738jfP/gvuD+4AHggeBB4GLw
YHAJeAi4FDwUXAYeBk7g4eBy8AhwBXg0uBI8BlwFHgeuBk8A14BrwXXgWeAc
eD54AXghuAG8CNwIXgxuAi8BN4OXglvAy8Ct4OXgNvAK8ErwKnA7eDW4A7wG
3AleC+4CrwN3g9eDN4A3gou+hu//a/j+wX3B/cEDwAPBg8DF4MHgEvAQcCl4
KLgMPAycwMPB5eAR4ArwaHAleAy4CjwOXA2eAK4B14LrwLPAOfB88ALwQnAD
eBG4EbwY3AReAm4GLwW3gJeBW8HLwW3gFeCV4FXgdvBqcAd4DbgTvBbcBV4H
7gavB28AbwQXbYLvfxN8/+C+4P7gAeCB4EHgYvBgcAl4CLgUPBRcBh4GTuDh
Xv8/SEp8ZQ==
      "]]}, 
    {RGBColor[0.7, 0.2, 0.2], PointSize[0.002777777777777778], Thickness[
     Large], LineBox[CompressedData["
1:eJxd13t8y+f7x/E42xRFEdSWUZNRE1sRU1woiiIooqqiB021SM/p+dMDgiIo
guqCzsqKoLOiI6zbgu67mNo6OjJagiIoq63m19+jd5LP3vvn+3g9nu5ert7u
Nt8PglfNCWspEAiuthMI/v9/m/+zjRP89z/6ZnXh3ZYN9WObsz2lDBjy8Yi/
W7M/50o9r32ZX5DcmbUbddu2dOvef91YC+nG6uc92o7vzdqd9h0+1Hldzvus
RVSb1EG+LbQf6350zeXG9lXtBrD2oIVqW8Dvhwey/pDqDj41mmcOYi2mL4aH
/znvhSfrQRR4+5frSt1Q1p7UoeLKzdbvD2P9MVkGCmTuMZ+wllCuuG9l8vef
sh5G7+wqihP1Gs76E2rn0X1sxxUjWH9KZtN57/EXRrL2oimtHqeWdR/Fejj5
7P3+3Yzln7EeQfNFc59rzo9mPZJu30wZd8NtDGspPY39903M8rGsR9H6h1Gj
5hrHsf6MxOu3pY/ZQKxH09FPBw2KHzGetTd9qXlSaP7T3mNo3/vD6mdtnMB6
LE0y9u77QjqR9Tjamfelx5kaexP9cWVf5y+0Ps3NERkK9tw56T2J+Xgatd+6
756VNTeeIufvmD1m+2TmE+i7qpCX34yfwnwCXdpfqp3/hLVgIo2X7v6w1x5f
5hNp6kH96bdTpjL3oV7HH0x/9yVrzofK1717W7p/GvNJlPrn29gNs6Yzn0S3
B7l3aPmGtWAyja18cSD/sB/zyfR63JQxi+QzmE+hBaMeVo5pO5P5FFqbXxTu
U8Ja4Ev+loHPVgbPYu5LPtvufB3UXsZ8Kt06NdK6cwlrbiptPT22w91Tdp9G
Q0LO96JOs5lPI8GF7I7HwlgLppO1zejbQ7+1+3Rq3WPhmotuc5j70aFFzxuW
RbHm/CgwcdvgvuV2n0Hls9y61PaZy3wGvX4VtvtcLGvBTIq9HHDq0BW7z6So
95WzD/b3Zz6LxpUq5pWksOZmUdmHAw9du2Z3GZX1XyBp7TmvuUlGX5TXXJ6U
w5qTkXauwV9Xzdooo/1hHb/4x2s+Oz+bDu8ZvWnVRtY0m2on/lz9opY1N5ti
K9st0IxdwM7PpuinXco8d7IWzKFRMz/5zvKUNc0ht62/9i70lbPzc2jhOk14
wj7Wxjn0/avzExb8zVowl17O2TRq8tyF7Pzcpu/X+1cmFLPm5pKLsH24X5sA
dn4uLZkXFBkcxFrgTz0fbuqX8w1r8qcgwSOjwXURO+9P11dblt6PYG30pxYB
V1sP/I61YB5pZyWvW+keyM7Po+tbq74qi2fNzSOLIOlt559ZG+fR66BeD5eJ
F7Pz82mGMGPv+UzWNJ+S2gW7Cm+y5pr61MRXK7yC2Pn5tF3S+tS5jawFC2j8
j41B7e6zpgV05JugfB9aws4voJ3uaw/G7GJtXEBcwcNhG5+zFshp9Ym8Iz8O
ULDzcqr46O6Po+aw5uR0NTb69K501kY5bRDvu3X3MGvBQjryc1UHt9/s5xeS
mQtJHNBqKTu/kLo+DPi861DWxoVNv09uDroewFoQQOnWvd+HrWFNAfReak39
2eP28wF06GBSzU/V9vMB5DNh7CBtu2B2fhHtnJOV/nIYa1pEZwd2CX+yiDW3
iOIepf2iXM3auIhOX7yun3XUfj6Qwp5F9Fj/q/18IPW9Z/X65439fCB5d0p7
xXmEsPOBFBQxeNmLqawFi2lZ3Fht/5WsaTEFbx436YaWNbeY2ux5dejX4/bz
i6nw4pTNFWb7+SAaWPW/jcGP7eeD6FFA77tD24Wy80H07oHfupzpy9oYRNvu
Hp8eI2EtWEL5J8wnT4xlTUvol7Ff5J2dYj+/hL4nQYlhmv38Ehr8kajtzsn2
8wrqZu7hPvcz1iIF+e8IuFLkYf96Cvpyzr3j3q1ZKxR0b2vtEt1v9v0UtDii
seMne1nrFTRgbNFV9Vz7vgraPqD9wHsN7PtpUZDro7dzu+fav/9LafJskcbS
gbVoKfl02nMgK9H+72EpJaw4Ovns/9i/L8VS6tc6MPBZF/u/z6W0b62pX0EO
+/evX0qiXv/rdOA7+3tbSn+8GSncdI+9b8tSct8Q+kxVb//5EUwvn0x7J+Ul
+3klCqbp8uilGc/Zz0cKptD9ta/C6tnPY0UwbfvzIrenlf3neTAVP+nYacAs
9vtEH0wR6+dXXKpgv7+MwTT289ntvdex34eWYPpg64qzgevZ71tBCP3c0zij
zTX2+1sUQhNCdra+9gP7PEBN7fJ2wMex7POEIoTWH7HcfHOAfR7hQmhkwICP
n81in1/0IXS3y6TJkVESNj+EzBdV3TOrB7P5IZT23pwJm/Psn6dCKTzos+1Z
j/qz+aFU9tFb86ifRGx+KFVc7TMqa6Y7mx9KX93jDI+v9mTzQynv/f3J/dqx
z3v6UOq65+iuvpWubH4ocZO6fhXm48Lmh9K1si7vac62Y/PDKLlg9NiaR63Y
/DCaF32tw+5SAZsfRg9HTN7i3rWx+fOnIowqbs9/dEr7V3NzYfRFi8WKzy+9
aG59GIWHhufbCmzNbQyjO5kDd9c9edTcljDa9PucsBcp99nn2WX0eeHAEL8L
d5tbtIxSb2R5tNtnaW5aRtVLat07ta5m85fRvYsfZXIFv7H5y2h68qib/Z9c
Y/OX0ap3r46Nu25m85fRiJH/Dk5LrGDzl9H9Fte6nBCa2Pxw+uXv1R++iixn
88Pp1PqH9xX+F9j8cDrX+cC4DbHfsvnhJIs4YP2982k2P5wuT/KK+GPR12x+
05+fdSZ1xugTbH44jSsYo2k55BibH07KuPxlC08eZvOV9Ef24nsp1oNsvpJ2
7ilo+5XhAJuvpIpetYmH6vVsvpKEv13v3jh+L5uvpB2VRabD03ax+U1fzyL6
/J/729l8JZVsPVr+rOU2Nl9JW1+XHhmr0bL5EVTYs0op+zmXzY8gS/bUIa4D
17H5EfST6e+JFwRr2Pym5tx7tZ2azeZHkHCwqfe6pxybH0HdT5/t9LYijc2P
oIIXdbmZPslsfgQ9/q2u4o9hiWz+crK88PolICeOzV9O7hnprUxDYtj85XQg
a+CuHv1UbP5y0qw6sazd0Sg2fzmVX+l/Ur82gs1fToVbIz599+IyNn85TT94
+Wy6LJTNX06ZRbcudhQHs/mRdLSs9Z9zxynY/Eh6O9VnUZr7YjY/ku6enUEl
fQLY/EgaP2TYL9NVC9j8SDJtn/bsTud5bH4k9f569piUZ3PY/Ega+rzmzKSO
s9n8SMqq/e70k9KZbH4UnZzXKsj3xHQ2P4oCvzo/kBp92fwo6pMrijBtnMzm
R1F48vBLtiAfNj+KyuvPfHNeOYHNj6JTx+5kdfmC2PwomrJxtKLBfSybH0VD
L8w7vZJGs/krqNXE/l06F0vZ/BW093L0Zrl8BJu/gm7rl1/bN9aLzV9BHY/V
xf0r/4TNX0HFZ2b3Eu+XsPkr6I/Q24OvD/qYzV9BI+IKgwYsHszmr6Az+9oO
PndNzOavpJA+Bbp7az9k81fSmrah8bpYDzZ/JfUIfTAjaks/Nn8lndfNubm2
WsTmr6SM7Ys9+u57j81fSeM6zOgmvtaHzV9Jfm8ev37ftxebv5I6f9An9MvX
Pdj8VXR234ihLe64sfmr6Po/J++9/acrm7+KYutmvXk1oQubv4qEgkbZorDO
bP4q6rr33vyDm1zY/FVUfvf2Fevf77D5q0i71L9F7YF2bP4q+vDLAM+X2W3Y
fBX9Txmf0Li9VXO7qmjs1gu7F15vwf4+KvrxKN29MUbQ3BIVtQg+e27Zzjdj
mv9+Kupw8nXwnVd/N7dMRdNf1B9+sK2huRUqknt33PCL8lVzq1RUs//ClSRV
fXNzKnpv0qxJIw4+b26tila03xbwU5tnza1X0Wbvnz2u9nja3AYVhR0/EioM
r2tuo4qODZ+c2ffVg+Y2qyjP62Vxv3P3m9uiovpvxyx6drq2uW0qCj1Rf+Sn
mrvNLYimnod7d4v87E5zu0aTacDBl3+esjS3KJrWD+r1k9+RW80tiaZhIe/7
vfWsZvtHU+8/M54K7v/O9o+mg3d2LxL8+hvbP5p+b7W4RPzyOts/mtp9cHpw
D6pk+0fTqLr7n1858QvbP5rexF8ZemjqVbZ/dNPn9dlHQ1qY2f7R1Kei6vzr
Iz+x/aNp/M2YW+rNV9j+0dShNLPz3P2X2P7RlKE51OndOz+y/aOp7mZ/lWba
D2z/GFqX95WLsKqc7R9DL5ODZi5c+x3bP4b+GW6aOnreRbZ/DGWljtHWj73A
9o+hZznRhxvHG9n+TZ6yeYFL6Tm2fwx93vmw/nn3b9n+MfTvvgPDbu06y/Zv
Ov/q9+ML6QzbP4Z+6NxqEbU9zfaPIXPOnP2nrN+w/WMoZmXnjf1rT7H9Y+hx
0AP9oNdfs/1jqO73iqUH+7G2xFDnEVNkB5aUsP1jqO9HZwIXHT3J9o+lVkEn
y4d1ZO0aS0Utv5EdSz7B9o8l3f5jD9JfHmf7x1Jhx9bpy1NZUyyFr+g8VN6J
tSyWAn9eapxy2MD2j6VL9y5NkM1irYql9oOXPxr9+hjbP5aGR9actASz1sbS
8RNH70huHGX7x1LBkfCZTxazNsTS+ftHz/5Vd4TtH0vc1vzRk9ewNsdS+vqM
Hx+KWVti6b1DM9xcKovZ/rH0wbYSXc0a1oI4Wp4w9IKRWLvGERU8m/FGwFoU
R6qo335t8+NXbP84+qCVNXruVtbU1FsmJEUGs5bFUUnanhW3RrBWxNGdGYbn
kzuzVsXRlS/n3fV9dJjtH0ef3X6drL3MWhtHfyUVbb1azFofR703m57+sIW1
IY7KRrzePyyJtTGOTlTkxVcFszbH0Xd1q0PXzmRtiaPa7tKBnb1Z2+JoSY/1
F3wGsxbEE9f24vst3Fm7xlPb2l1nRZ1Yi+JJKNwyNbsFa0k8fbLg4ooOrw6x
/eNpS6vNiQWPWMuavt4trr/HHdaKeLqZfTV4ze+sVU1fb7ib+PhV1lw8aeLX
S7deZq2NpwfXT7XoVc5aH0/08ZWYEedYG+JpQ4bu9+pS1sZ4KrUcvfj2JGtz
PB2fFFK97RhrSzxlH02s3vQVa1s8DVkpVt7/krUggd6pWPZvXiFr1wSqndup
ZvM+1qIEiii/1+VqAWtJAinP+nrMybfvn0DrO43z67jbvn9Te7Wc8Ganff8E
6jP1qLTvDvv+CTSnS89ryjz7/gm0RqDvVb3Vvn8CrdgtiI7dYt8/gfZ+fXvL
YK19/wRK7/5JZovN9v0TKGbXtHXPN9r3T6DY6g2fNuba90+gH3YWT3C3ty2B
RkZnHpFtsO+fSM+60e6d6+37J9LDXEnA03X2/RPpSs3FsPn2liRS2o238isa
+/6JtCfez+Znb1ki7bSq29xYa98/kd4+6LYx2t6qRNo2vXFbV3tzibTiw8Fj
ytbY90+kLYnHz6+wtz6RyjNqQj+0tyGRhh4sWVO72r5/Ip0SDN502N7mRIr4
953ncfa2JFJoy03DfextS6Q27aff72lvgZrCiz30T3Ps+6up98igllfsLVJT
Zqyx9JC9JWpyWXItfoO9SU1tbn/0YpW9ZWrqeuNb23x7K9QklS7yInur1LRs
pXDdYHtzakoIuHlOaG+tmv6RPTjUzt56Nc2VZ/ZryLbv3/T1CjNaP7S3UU3B
ye8M/cPeZjVtLaOcq/a2qKnHsn+tP9jbpqbHAdt8vrW3IIl2v9zEldjbNYn+
/Gm9ptjeoiT6fuw/U7+wtySJjo1pXVJgb0oiY9853+jsLUui5JqXk7bZW5FE
idU+czfZW5VEl3qfvbbO3lwSBZ2wlK22tzaJxAuGtcmytz6JhkvbFqY79k+i
iX9kbklx7J9E16vSflA79k8iuUeyd4Jj/yTa9Hbj41jH/kn0eGhAZbRj/2Ty
5BofrXLsn0yHg1tLVjr2T6aQfGV+lGP/ZJpnSRsS6dg/mTZMenI7wrF/Ml3K
Pm5QOvZPppa1bfaGO/ZPpvs3IvYvc+yfTLUf7TgX5tg/mcr3qJ+GOvZPprIh
Qz91tCGZvj7aShPi2D+Z4r8Lrwt27J9MO6Y8C3K0JZlOtlxwa6lj/2QadXhF
hKMFKVQjHvBW4dg/hdYOWFPgaFEKrfju2GRHS1Ko1c7rr5Y49k8h4eUxRx0t
S6HlkeOiHK1IoehakjhalUJ/6U69DnLsn0If6D4wOVqbQt0yOu1xtD6FFoW7
xTjakEI3X1zzc7QxhcwxrwY52pxCLm5DXBxtSSH9MIltsWP/pr//oXO/OlqQ
StqJe8872jWVDnruOOxoUSolx6l3OlqSSsKCnmscTan0aOT0BEfLUmlH2pNw
RytSSdXSEuBoVdPXD2kxy9FcKu1qMdLH0dpUSj8f/pmj9anU8lLqMEcbUqnX
4qUfOdqYSqV7W/ZztDmVXoTM6uNoSyq1Fkq7O/dPpfYbj3Z27p9GAssX7zr3
TyPLwq5tnfun0af+D1o490+jcNEH/wY69k+j0c8MfztalkZTftD+5WhFGs1f
eLre0ao0yuzo8dzRXBpdvn35qaO1adRtYdFjR+vTSJ35zSNHG9LoROWLB442
ptGOkQutjjanUe6Tu/ccbUmj63naWkfb0uikW2CNowXpNEw/8a6jXdNp72Gf
O44WpdOeO4F/OlqSThc911uc+6fT8YLLt537p1NBsruzFek0cXD6Lef+6fQp
PfnDuX86pS6PdLY2nb5Iqq927p9OFrnG2YZ00rh86GxjOlUdq7jp3D+dfotJ
cbYlnRJ0w5xta/rzcU9uOPfPoLLI4852zSC3p0nOFmWQMW2KsyUZFLi/l7Mp
gyTPn/7u3D+DvFwuO1uRQVLdl85WZVCHyRpncxl0pSLS2doM+uThbGfrM6h1
8GfONmRQ+hsPZxsz6Nr6Ls42Z1B59dsq5/4ZNPDyU2fbMmjXkD+dLeCoR+01
Z7fn6PTVH53tylHIb2XOFnK0vvqEs0UcPbt0yNlirun/f+xztoSjt+/udraU
I8Fn25xNHO1rt9HZvhylhq11toyjlZOznC3naFtBmrMVHLmGJDlbyVHH9fHO
VjX9+XdjnK3mKKd6pbM5jhIbIp2t4ejEgghnaznqVr/M2bqmeaZQZ+s50v0v
2NlFHHVvtdTZBo7mLV3i7FKOtLWLnW3kSJYb6GwTR/FzFjnbzNEHwwOcXcXR
+WELeffLkW2S3NnWpn1XLeDdd9M+xfOd3cDR2n/m8e4/k5IDeN0+kzqZ/Hn3
n0kvJvBamEm2S3N599/Ui3gtzqTHf83h3X8mtdnLa2kmBU3jNWXSmLezefef
SU/P8FqWSb+m8lqeSSE+vFZkUrcuvFZmUuQdGe/+M6llKa/VmRSzhddcJoWt
5LUmk9bO5LU2k7YM47Uukz7ryWt9Jk17O4t3/5m0+gGvDZlUdp3XpZl07jte
G5vmn+S1qel8Ia/NmU2fN3hdlUln1vPakknaDF5bM0kZz2tbJg2N4nVDJl0O
4bUgiwYH8rp9Fo2ex2vXLHo8k9fCLPpkKq9FWfRmIq/FWUTjeC3Johef8Vqa
Re1H8pqyKPlTXvtm0RgJr2VZNGMIr+VZ9PkgXiuyaJiY18os+nsAr1VZ1NCf
1+osGtCP11wWpYt4rcmif97jtTaL8vvyWpdFge681jd9v/rw77/p+9Obf/9Z
NLEX//6zSCnk338WHejJv/8setKDf/9ZNI3fVVlU0p1//1k0hN/WLDruxr//
LJrA74YsutmNf//ZxPG7fTYN4rdrNt3qyr//bNrJb1E2yfktzqb3+C3Jpodd
+PefTWf4Tdmk5bdvNin5LcumyfyWZ9MAfiuy6R1+K7PpiSv//rPpV36rs+k8
v7lsKua3Jpt28VubTev4rcumJH7rsymK30XZtITfhmyax+/SbJrGb2M2TeC3
KZuk/DZn0yf8rmq6H35bssmD39am7z+/bdnUi98N2dSV34Ic6sTv9jn0Dr9d
c6gdv4U51IrfohxqwW9xDv3bmX//OfSG39Ices1vyqEGfvvm0Et+y3Kont/y
HHrObwW0Moee8luVQ0/4rc6hOn5z0JoceshvLbQuhx7wWw9dlENWfhvAS8GN
4CZwM3gVuAXcCm4DbwAXrP6vt1/9X3cFF4KLwMXgEnApOIH7gsvA5eAKcCW4
ClwNzoFrwLXgOnA9eBG4AbwU3AhuAjeDV4FbwK3gNvAGcMEauP81cP/gQnAR
uBhcAi4FJ3BfcBm4HFwBrgRXgavBOXANuBZcB64HLwI3gJeCG8FN4GbwKnAL
uBXcBt4ALlgL978W7h9cCC4CF4NLwKXgBO4LLgOXgyvAleAqcDU4B64B14Lr
wPXgReAG8FJwI7gJ3AxeBW4Bt4LbwBvABRq4fw3cP7gQXAQuBpeAS8EJ3Bdc
Bi4HV4ArwVXganAOXAOuBdeB68GLwA3gpeBGcBO4GbwK3AJuBbeBN4AL1sH9
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
      "]]}, 
    {RGBColor[1, 0.1, 0.1], PointSize[0.002777777777777778], Thickness[Large],
      LineBox[CompressedData["
1:eJxd2H18S+f/x/G4nU1HURUUQZFRBEVQfFAEVVFF0RJaRBXpfXp/mhRBERTp
lAVFTRFW09FZ3HwtoyborIyJrajpLChi6/j5PVxJzt77Z4/X4+nq6SdXr+Sc
dF6wImRhfYFAcO0jgeD////hP/tIwX//o7SHy/e0fNByxIdsQnWv130V16MP
a0/q/TSlVY5xJGsvOnI6Zcv+rEmshVTpmLqrJnk6ax/6rF+s4yTNYy2iwvYD
mn55YCHrLiQZ0V3T5q8Y1r407nZ2ZuTlONbdqVOl6qsm95NZi2n97l2tay5n
sO5JpfO2PTop17D2o7svTu/IDVjFug9VeLc7F/n1WtYSShz5jyO5fCPrfnR2
ff26wd9vZt2fGnvMST3beBvrAXRq+MfT5UfyWfvT6ZkTTMGWnawH0sQIv+1C
yW7Wg+jic78fZGf3sh5M20bPb7x/137WUsrdWnrq6tWDrIfQniW95okjDrMe
Sg3GjE+vPWBiPYxmxO4IbH/rOOsAut2t8EbB+BOsh9MV+6jBBW9Osh5BTdu+
yLn18hTrkTT08Il1Z8ecYU1U36ds3XcvzR+aI2r3xOd143/OMR9FkfMybx0Y
9D/mo8iQu25FiyPfMx9NM8x7G4xYfIn5aApvUHjDrLzCfAxtbNnx8B/hVuZj
6MbJL5tL+11nHkgiU/COooEVzAPp0NVtkzxW3GQ+ltakXRp+5LdK5mNptr7j
O8W2X5iPo9GPi1vn6n9lPo6aG62xHWpszMeT9tR27bZTvzEfTytnHO5Te7KK
uYy8PjUpH1Y/ZC6j6D4LWm0Necx8Ai1SBTkO/f2E+QQ6+7z81eJHT5lPpOuL
885eb/6M+USSrugcpP7pOfNJtL5rquiypZb5JFo045Z9ztNXzINo8ZBdgyWT
3jAPIsum0/evVP3DfDItGCDrKjv7lvlk+nRz7Q/7XwjYOQ2mZv/abrU/Wv9D
c8F0IHbp20+3N2Q+hSaN6xP619HGzKfQpcgjB/e+bcJcTtPq9b+1Ttf0Q5Oc
RseHBG6e1oz9ezk9PN90vM9Xnh/aLKeml3bPuhHZkq2fSpWpl6/dHenF1k+l
s+s6nd04yZutn0rddn71y6F1QrZ+Kr1oz3HLG7Vn60NIO7P4dv6ZDmx9CP1v
yYUdZ+eK2PoQOn3g1s/6hl3Y+hA6vGRpl40VXdn6aRT0ek758+vd2PppVN2y
6nhEQzFbP43irhQ/f7SsJ1s/jZ5V3T/Yq3Vvtj6U/mesfCYWSNj6UKr/T+uF
njv6sfWhJG/Y7otG8waw9aE04LuP60TygWz9dAq6NabX73GD2frplDHiW83I
8iFs/XQqSj4YemB+AFs/nVp9dnee95CRbP0M2lv6zVC93yi2fgblJwdIuarR
bP0MKmo4Z0qoJZCtn0E34z3nRt8Zx9bPpBE5Wdc3dJvA1s+kW6d2x310cBJb
P5PG3BP2+CImmK2fSc9HRa+YdVrO1odR8YNu1zotDmHrw4gb9+KVengoWx9G
e6f8OnDH6BlsfRgpv0xo2T0tjK2fRRejWnT2q5nN1s+ih2sflQ7fEcHWz6Kc
g9+PGjpewdbPoui5oY6RD+ez9bOpX/s/ZLOORLL1s8l73aC+ur0L2frZtKH/
j0/6XFrM1s+mwRvs/7bpEc3Wz6GnYzskZX4Xw9bPoV+X/LTGO38FWz+HRtt2
dGkaEcvWz6Hy8T+3+sIrnq0Pp3OKscftrxLY+nAytH18/NVHyWx9OJ1osqqx
Y1IKWx9Op9ucEmz4Po2tj6Dnp3q22JeVydZH0JCxn53+toxj6yPI9GDm5uAI
DVsfQfTd4+fLfHPY+rm0r+GTwZ1br2Lr59I9/17xXH8dWz+Xgm8nLyvKWsvW
z6W+byNGHniXy9bPowU/lPRYcGIjWz+Prqi7r/tm6ia2fh7lfp4tevtgM1s/
j1rMbughNeSx9QoSG5Qt9iu3fWiRgkaI7tf8NsPAfp6C8gUNr5TM//xDKxQU
fCXm/M1VBeznK+hlR034mXO7PrRRQcNCCvdLdEZ2PQWdN14q4kp2f2ibgmry
W0Q0+G0Pu/58mnvl896pTQvZ9eeTOrLZUnPPfez68+nVzd4z7NL97Prz6eDp
2PzCPgfY9efTrJcXb89oWMSuP59yPjJ8+vNx1ub5tP7JkMnXBhxk159PkUvO
Hw7RsBYsoK7ZrxRDd7AWLaC/bBvGr8xgTQvolWF9i8U9WSsWkGNNPc5vH/v5
3ALaN8tUv+Y5+32MC2heB6Vvy3aszQso+un0x790Zr+/bQGdfxWy+1oLNp8g
ksI7fxc+9dledv1Iunbv8On+37PXhyKpa4OXL1fns9dPEUk9lh0Upi1jry8X
SZ3mXFGt2uB8/SPpo9X9C2aGsv0xR1Ln2+Eb5P3Y/tkiaad45id3xWx/BVFU
pRs5WTzcuf9RNCf+xMSZK9jfB0XRkZyIq2e+Y38/iigqa7wypVUf599XFIWf
fr2kWzz7+zNGUU7I2/gJ59jfpzmKDgRVt7OPY3+/tigyzx6p7fN2Nbv+Qqrv
V7XjRdVKdv2FZNK2Lezs0LLrL6QgW2iz3f7s/CgW0szByd7LtzvP10KSvvkx
PHAYO3/GhZT8b0BUrY6dT/NCSnrpEVzSkp1f20La6Xtu3K4bSez6iyjG99rx
Tt+z8y9aRLo5MZMd1XHs+u/70tOqwQPZ+4diEW2bcHByktz5/rKIrmfc3jMl
g73/GBdR38+Wtbn2xxJ2/UW0+fSjblO3sPcv2yIaVtX57K5Y9v4mWEyNLled
dXDs/U+0mII6rjE0+pa9P9JiSn83bdblzuz9U7GY0hJ2R8pnOt9fF9OMCsmu
bUfY+69xMX1y/ZQqfAx7fzYvplWrM4d18GTv37bF1LF9z/7XmrP3d4GSfmqp
/ea34ez9X6Sk6Nt9tvtuY58PpKT7R89YN33GPj8USgqUPd9/LMb5+aKky47W
12b9JWPXV9LBi4IJ5YfY55NZSava67yvFrDPL5uSjgz463Pjt+zzTbCEtBPu
3a35mH3+iZZQA93TDav/GcGuv4TUQo1S1It9fiqWUHRwwJ5OBc7P1yXUN+Lv
8O0y9vlrfP/vn5991aUX+3w2L6GHY25/dXsE+/y2LaE/j23kZFns810QTSNu
lSw6be3Lrh9Ndb/3jbtR48euH03/ak/17hrE7h8U0XRUPSRCX92DXf+9r7oX
vaGM3X8Yo+nFhq3bW5xn9yfmaPLcmhyifd2ZXT+aJtq67Dw5nd3fCJbS1n1f
/XDxK3b/I1pKnwUMTOxRj90f0VJqnhNZPGk9u39SLKWxs3oUZoU476+WUqd7
P3TMm8Tuv4xLacIXXRZdj2f3Z+al9GdmaPizi+z+zbaUFO/etmqjYfd3ghj6
VuXd3e9bdv8niiFb7/i/TdKP2fVj6KlPx6WXnrL7R0UMRS/fvarbbXZ/ycXQ
rdjL/Z68ZPefxhhaemNfdcnweuz6MbT26JiPG8159+H+1RZDP48rtM3X1rH7
22W01TZr0e9/svtf0TLydazUrsp7/aFpGb1cJ61XEfvyQyuWUWpR8xs3uBfs
fngZ5eWPXVPvW3b/bVxGE/5WXB3Vxf6hzcvoi9rJZ47N+pNdfxn1KJi49/zx
P9j1l1O9r2ckrJ9Qza6/nO6fPf0sTsieB2g5Ze2IV85ux54XFMvpWOnpCuNE
5/PEchok3idsvo89bxiXk21m5znGSex5xLyc+n2UH2/dzJ5XbMvJ+HLgk7C2
t9j1V5Bud15+8i32vCNaQf/eVc+0X2HPQ7SCunbZZhU8Z89LihXk2+mMavqo
a+z6K6hfdfS+tyuusuuvoDtt1/a/WVjOrr+Cbg7KHHqsHXs+s62gUd2Hndp/
2fn8pqKOQwOHzDzOnu88VdR86jOZ7Yfz7PdR0QL93u7XPmXPgxIV2bepF4lS
2fMiqejAoCqfsd7seVL+voctFzZIO81+XxXt4US/L/H55kOrVNTSt+Pll7Vf
s99fRfqS6vi970o+tF5Fv775sVfV4K/YPCpS3qqUb8k/9qFNKrpyTVNcI2LP
w2YV+cV9Ne+jrex52aqi8p+7vE7qfojNq6KAeW3GZNmLPrRdRVNfP+rwz5/O
5+9Ykg4a2ml4u31s/lgaOjfqm4ax7HldFEt/b+ocmvCUPc9LYul6602Tm2w0
svljSXa8S36HL3ax+WPpzPS7e2h2AZs/ln49LXnUb+LnbP5YOqIdk+IbbWDz
x9KGr3N8T59g3y/oY2mW16HAt+KtbP5YarvDc22IeQubP5a4Y3/mqdTs+wlz
LB1a8GRaRPAmNn8s+R+e6BU5Us/mfz/fVMci780b2PyxNOjxy4uS67ls/ji6
+Wv3x/WHrWPzx9HlOY8ltyxr2Pxx9Kq6aY8Zah2bP45M3rWF0eNWs/nj6F2n
j74OlrDvV+RxtOv5uY5pA1ay+eMoc2dy6t7JOWz+OHps+uu+KV3L5o+j3O/z
mn17hn1fo4+j612/e/ppS9bGOPrhy4fGFonZbP44Ovp8dvnshxybP46iL9Sb
sjOKtfX971dwTjXjbhabP46ipv3auqoxa/v7n38yO9U+JpPNH08Lp+z648Rm
9v2RZzwdkH/8bPuzdDZ/PJV32La90zzWkni64Z3w9vWtNDZ/PL15Yhv9RMFa
Hk9dpG8O33ueyuaPp4B6bbv9tIG1Kp5uy2/+9NsA1lw8nSrvKRx4P4XNH0+r
5Peym25jbYynbn7fdT85lbUpnlbe5+rlt2Jtfr/+jSlb9IuazR9P/l+OGnbp
AGtbPD0KNpV0TGFtj6eZNQ75sWDWggTy3mMN6SRm7ZlAGT/cftWsEWtRAk15
fXZPnwfs+zZJAhlKgnv4W1hTAhW8PNvqzmHW8gSyau8LH29lrUigAd4TUrty
rFUJtLJJSW5YDGsugfZda0GzZ7PWJ9CxSyElbyewNiZQxOUXP3caxtqUQP1+
XNh8R2/W5gSSL9NWyTuztiZQyPdh3/p6s7YlkH7hlvy6pqztCTRq2LufzPWd
3x8m0lePtS/n/J3E5k+kyDFdVpx6zlqUSCMOZXCXnrCWJNK77NUN0x+wpkQq
jq2ZbL7HWp5I/t1rGq69zVqRSCdqJzW58hNrVSKl9/aZmnmNNZdI9RY1u7Xl
Cmt9Iv1Yr7O24SXWxkTafmRJY8tF1qZE+jz5yu2b51mbEyl4U0qPnmdZWxOp
V8va46fPsLYl0njtFxUry1jbE0m4eeNi7SnWgiRaPVx/5mipc/4kKt49Jr/x
Sef8SfTs0+Htck4450+iR3Prn/Etcc6fRNXFv4Y8OO6cP4ks4+OfnTvmnD+J
7h1/+fKUyTl/EnV/9Mnfl44650+i/hv7XbUfcc6fRF8PP5LS09nGJEq98mev
pMPO+ZPohd+00deLnfMnUcy1RSOHO9uaRP7P5lpOHHLOn0TZcY7dQ51tT6JP
huQfvvSlc/5kMnU/8TDK2Z7JVHtmhaKJs0XJ5PFHwpiSg875k+laRYPyxc6m
ZOo2r4esi7PlyXS8to3370XO+ZPpE4/zew46W5VMIluCMtHZXDJNGb/7z7HO
1ifTPzcs59s525hMUcXJq14ccM6fTB3Oz7l91dnmZAqRq2KOOtuaTI12Bjzb
5GxbMh2e6+ub7Gx7Mu35xHJxrrMFaoo9HG+UOdtTTdrazzP8nS1SU/mg+X27
OFuiJm6h37oWziY1WR+Oiq7vbLma2ibEHKzd75xfTXs/+1Jc7WyVmkI//u3S
HWdzano92ph43dl6NcUVVnr+4Gyjmk7vObLK7GyTmkakjD5f6myzmiY+1pQc
c7ZVTU97N5h4yNk2NS0+V5Gwz9l2NbXfE9XD6GxBCoUfmzN9h7M9U2h2I82L
bc4WpdB8S+Hrzc6WpNBPGZlhG51NKZSwfPenuc6Wp9CZT6Kar3HNn0KO1ldn
rHLNn0KfqNbf1brmT6H/hd3dme2aP4W8PtFuznLNn0Kv15R9neGaP4X+2T6o
cbpr/hSKLKifkeqaP4U02evbpLjmTyHfBduvJ7vmT6HUN70OJbnmT6V253fs
SnTNn0ovTyV+meCaP5XOH8kuj3fNn0pFrU7XdzWlUsfQoElxrvlTyXvd2sJY
1/yplLTnmYerVe9//mWRVuWaP5UaBf3cyNX6VFJsfLZlhWv+VMrKWeTnalMq
He8/9sflrvlTacaa42pXW1NJsOBRT1fbUqnxsT5Vy1zzp1JX2+97XS1II/WU
2CWu9kyjSW+C/V0tSiNuYL2Grpak0YX8NpUxrvnTqH5tL5Or5WmUEX5/nasV
abQn4vdoV6vSaFnfB0Gu5tKovOHufq7Wp1H7JT8LXW18//OKg+u72pRGhRHX
/1zqmj+NTlzt/4urrWk091DgJVfb0ujvNbZTrran0U/5vxW7WpBOv0zsaXS1
ZzpdrP95nqtF6TSu0nutqyXpFBKq41xN6TRiSGWyq+XpVBf8fIWrFen0sf8F
patV6bS///AFrubSydE2ONzV+nQ63O7xDFcb0+nm/nohrjalkyk0d7J7/nRq
cyFzgnv+dJq76upY9/zpNKdJ0mj3/OkUnxk90j1/BiVf3xfgnj+Dum3pPNQ9
fwZ99uDnwe75Mygz8fxA9/wZ1HDZvQHu+TMocGGP/u75M6jv3O0S9/wZdKWk
V1/3/Bl0qd393u75M+jMhhI/9/wZJJ2+t5d7/gya/fzLnu75M8jb94fP3PNn
0JM7/4jd82eQz8hR7rZnULhhew/3/JlUGfFvd/f8mbRHHOtuUSbFHH/WzT1/
JuVdz3A3ZZIqzcvd8ky6fbLE1z1/Jr0oinC3KpM65DRzN5dJPTdd7OqeP5O+
FK90tzGTFhyf4G5TJtn3tnK3OZPWZP3WxT1/JpVfP+FuWyaZB653tz2THkxQ
uluQRUHfjHO3ZxbdHCh2tyiLstUe7pZkkZledHbPn0X3p91xtzyL1qV/725F
FgWsLXG3Kot+ke91N5dFoUVb3K3PosExK91tzKLINLW7TVlUejLG3eYs+qnR
Andbs+hWUJi7bVkkSpribnsWdVg23t0CjoSdyN1NOPJOG+JuT452xQ5wt5Cj
A7W93S3iaNFrsbvFHAUu93W3hKOjwSJ3SzlqudGH9/px7++/2rpb9v56n3rz
Xk+O9ga0cncYRwMPe/JeX47mzGrmbiVHh4d58F5vjoZP+cTdao42b2zCe/05
Mjgau1vH0RerGvH2gyPZoIbuNnC0smED3v5wtP5pPXcXcfTLMwFvvzgSefC6
lKOJw96J3PvH0fKMt+62cHTT+q+7rRw9HcDryvfr99W528bRzq68ruao7PA/
7rZztGk0rx0cdb3/t7sF2bRZx+sm2fSplNee2fTL0zfuFmbTlGJei7Lp2gpe
i9+3lNeSbLrRmNfSbJp3y+FuyqZmJl7LsilzLa/l2TRLyeuwbJo8gdeKbGrd
m9fKbIppxWtVNrWve+1udTY9eshrLpt23+C1LpvaneO1Ppv8jvPakE1H9/La
mE2rtvG6KJvWr+W1KZsOZ/G6NJssibw2Z9PlGF5bsmlnFK+t2dQ3gteV7+eb
wWtbNsnkvK7OpmMTeW3Ppl1jee3IpnqjeC3Q0LUAXjfRUL0hvPbU0NqBvBZq
KLI/r0UaWt2X12IN1fjxWqKhjT15LdXQYjGvSUPx3Xkt09AhX17LNdSsK6/D
NJTXmdcKDY0U8VqpoY868VqloT878PdfQ098+Puvofr81mmod3v+/mtoWTv+
/muorC1//zXUgd9FGlon5O+/hprwu/T969GGv/8a6spvi4a+8+bvv4YW8rtS
Qy35bdOQpTV//zWUw2+7hsbz26Gh5vwWaOmuF3//tXSE355ayuG3UEsR/BZp
aRi/xVpqz2+Jlt614u+/lqr4TVq6wm+Zlk7yW66lQn6HaWkzvxVa0vJbqaV4
fqu0tIjfai3N4jenpWB+67Q0ht/69/Px26Cl/vw2aqkXv4u05Mtvk5Y68btU
S0J+m7XkxW+Llprx26qlpvyu1FJjftu01IDf1e9f75b8/dfSv/x2aOkNvwU5
5OB3kxx6yW/PHKrltzCHnvFblEN2fotz6Cm/JdDSHKrhN+XQE37Lcugxv+XQ
YTn0iN8KaGUOPeS3ClqdQw/4zYHrwPXgBnAjeBG4CbwU3AxuAbeCV4LbwKvB
7eAOcMHK/3qTlf91T3AhuAhcDC4Bl4ITuAxcDh4GrgBXgqvA1eAcuA5cD24A
N4IXgZvAS8HN4BZwK3gluA28GtwO7gAXrIL9XwX7Dy4EF4GLwSXgUnACl4HL
wcPAFeBKcBW4GpwD14HrwQ3gRvAicBN4KbgZ3AJuBa8Et4FXg9vBHeCC1bD/
q2H/wYXgInAxuARcCk7gMnA5eBi4AlwJrgJXg3PgOnA9uAHcCF4EbgIvBTeD
W8Ct4JXgNvBqcDu4A1ygg/3Xwf6DC8FF4GJwCbgUnMBl4HLwMHAFuBJcBa4G
58B14HpwA7gRvAjcBF4Kbga3gFvBK8Ft4NXgdnAHuGAN7P8a2H9wIbgIXAwu
AZeCE7gMXA4eBq4AV4KrwNXgHLgOXA9uADeCF4GbwEvBzeAWcCt4JbgNvBrc
Du4AF6yF/V8L+w8uBBeBi8El4FJwApeBy8HDwBXgSnAVuBqcA9eB68EN4Ebw
InATeCm4GdwCbgWvBLeBV4PbwR3ggnWw/+tg/8GF4CJwMbgEXApO4DJwOXgY
uAJcCa4CV4Nz4DpwPbgB3AheBG4CLwU3g1vAreCV4DbwanA7uANckAv7nwv7
Dy4EF4GLwSXgUnACl4HLwcPAFeBKcBW4GpwD14HrwQ3gRvAicBN4KbgZ3AJu
Ba8Et4FXg9vBHeCC9bD/62H/wYXgInAxuARcCk7gMnA5eBi4AlwJrgJXg3Pg
OnA9uAHcCF4EbgIvBTeDW8Ct4JXgNvBqcDu4A1ywAfZ/A+w/uBBcBC4Gl4BL
wQlcBi4HDwNXgCvBVeBqcA5cB64HN4AbwYvATeCl4GZwC7gVvBLcBl4Nbgd3
gAs2wv5vhP0HF4KLwMXgEnApOIHLwOXgYeAKcCW4ClwNzoHrwPXgBnAjeBG4
CbwU3AxuAbeCV4LbwKvB7eAOcIH+v95Q/19vAu4B7gnuBS4E9wEXgfuCi8H9
wCXg/uBS8ABwAg8El4EHgcvBQ8HDwMPBFeBR4ErwGHAVeAK4GjwdnAPPAdeB
54LrwfPADeAF4EbwQvAi8GJwE3gJeCl4GbgZ/AK4Bbwc3ApeAV4JfgfcBl4F
Xg1eA24HrwV3gNeBCzbB+d8E5x/cA9wT3AtcCO4DLgL3BReD+4FLwP3BpeAB
4AQeCC4DDwKXg4eCh4GHgyvAo8CV4DHgKvAEcDV4OjgHngOuA88F14PngRvA
C8CN4IXgReDF4CbwEvBS8DJwM/gFcAt4ObgVvAK8EvwOuA28CrwavAbcDl4L
7gCvAxdshvO/Gc4/uAe4J7gXuBDcB1wE7gsuBvcDl4D7g0vBA8AJPBBcBh4E
LgcPBQ8DDwdXgEeBK8FjwFXgCeBq8HRwDjwHXAeeC64HzwM3gBeAG8ELwYvA
i8FN4CXgpeBl4GbwC+AW8HJwK3gFeCX4HXAbeBV4NXgNuB28FtwBXgcu2ALn
fwucf3APcE9wL3AhuA+4CNwXXAzuBy4B9weXggeAE3gguAw8CFwOHgoeBh4O
rgCPAleCx4CrwBPA1eDp4Bx4DrgOPBdcD54HbgAvADeCF4IXgReDm8BLwEvB
y8DN4BfALeDl4FbwCvBK8DvgNvAq8GrwGnA7eC24A7wOXJAH5z8Pzj+4B7gn
uBe4ENwHXATuCy4G9wOXgPuDS8EDwAk8EFwGHgQuBw8FDwMPB1eAR4ErwWPA
VeAJ4GrwdHAOPAdcB54LrgfPAzeAF4AbwQvBi8CLwU3gJeCl4GXgZvAL4Bbw
cnAreAV4JfgdcBt4FXg1eA24HbwW3AFeBy7YCud/K5x/cA9wT3AvcCG4D7gI
3BdcDO4HLgH3B5eCB4ATeCC4DDwIXA4eCh4GHg6uAI8CV4LHgKvAE8DV4Ong
HHgOuA48F1wPngduAC8AN4IXgheBF4ObwEvAS8HLwM3gF8At4OXgVvAK8Erw
O+A28CrwavAacDt4LbgDvA5csA3O/zY4/+Ae4J7gXuBCcB9wEbgvuBjcD1wC
7g8uBQ8AJ/BAcBl4ELgcPBQ8DDwcXAEeBa4EjwFXgSeAq8HTwTnwHHAdeC64
HjwP3ABeAG4ELwQvAi8GN4GXgJeCl4GbwS+AW8DLwa3gFeCV4HfAbeBV4NXg
NeB28FpwB3gduGA7nP/tcP7BPcA9wb3AheA+4CJwX3AxuB+4BNwfXAoeAE7g
geAy8CBwOXgoeBh4OLgCPApcCR4DrgJPAFeDp4Nz4DngOvBccD14HrgBvADc
CF4IXgReDG4CLwEvBS8DN4NfALeAl4NbwSvAK8HvgNvAq8CrwWvA7eC14A7w
OnCBAc6/Ac4/uAe4J7gXuBDcB1wE7gsuBvcDl4D7g0vBA8AJPBBcBh4ELgcP
BQ8DDwdXgEeBK8FjwFXgCeBq8HRwDjwHXAeeC64HzwM3gBeAG8ELwYvAi8FN
4CXgpeBl4GbwC+AW8HJwK3gFeCX4HXAbeBV4NXgNuB28FtwBXgcuyIfznw/n
H9wD3BPcC1wI7gMuAvcFF4P7gUvA/cGl4AHgBB4ILgMPApeDh4KHgYeDK8Cj
wJXgMeAq8ARwNXg6OAeeA64DzwXXg+eBG8ALwI3gheBF4MXgJvAS8FLwMnAz
+AVwC3g5uBW8ArwS/A64DbwKvBq8BtwOXgvuAK8DF3wO5/9zOP/gHuCe4F7g
QnAfcBG4L7gY3A9cAu4PLgUPACfwQHAZeBC4HDwUPAw8HFwBHgWuBI8BV4En
gKvB08E58BxwHXguuB48D9wAXgBuBC8ELwIvBjeBl4CXgpeBm8EvgFvAy8Gt
4BXgleB3wG3gVeDV4DXgdvBacAd4HbhgB5z/HXD+wT3APcG9wIXgPuAicF9w
MbgfuATcH1wKHgBO4IHgMvAgcDl4KHgYeDi4AjwKXAkeA64CTwBXg6eDc+A5
4DrwXHA9eB64AbwA3AheCF4EXgxuAi8BLwUvAzeDXwC3gJeDW8ErwCvB74Db
wKvAq8FrwO3gteAO8DpwQQGc/wI4/+Ae4J7gXuBCcB9wEbgvuBjcD1wC7g8u
BQ8AJ/BAcBl4ELgcPBQ8DDwcXAEeBa4EjwFXgSeAq8HTwTnwHHAdeC64HjwP
3ABeAG4ELwQvAi8GN4GXgJeCl4GbwS+AW8DLwa3gFeCV4HfAbeBV4NXgNeB2
8FpwB3gduGAnnP+dcP7BPcA9wb3AheA+4CJwX3AxuB+4BNwfXAoeAE7ggeAy
8CBwOXgoeBh4OLgCPApcCR4DrgJPAFeDp4Nz4DngOvBccD14HrgBvADcCF4I
XgReDG4CLwEvBS8DN4NfALeAl4NbwSvAK8HvgNvAq8CrwWvA7eC14A7wOnDB
Ljj/u+D8g3uAe4J7gQvBfcBF4L7gYnA/cAm4P7gUPACcwAPBZeBB4HLwUPAw
8HBwBXgUuBI8BlwFngCuBk8H58BzwHXgueB68DxwA3gBuBG8ELwIvBjcBF4C
XgpeBm4GvwBuAS8Ht4JXgFeC3wG3gVeBV4PXgNvBa8Ed4HXggi/g/H8B5x/c
A9wT3AtcCO4DLgL3BReD+4FLwP3BpeAB4AQe6Pb/A6FzTVE=
      "]]}, 
    {RGBColor[0.2, 0.2, 0.7], PointSize[0.002777777777777778], Thickness[
     Large], LineBox[CompressedData["
1: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
xfMy3rm8Vsjmx1LvL7vvSTregc2PpdqSX//6edz/2PxFZBnobRVmvcrmL6JB
ojEew+QCNn8RXf7+xMVRM563fv5ULqJe6cULLl173NrcIvIL6vLA0u+v1jYs
Ig/J1PMjPe2tbV5EuQcr+j7+5X5r2xZRfUlt/nc5d9jn2cX0qenFJXHdzdYW
L6ZT9cL8bz653tq0mL6c/Pqab7OvsvmLKePXw10XSK+w+YvpbPraDzftvsjm
LybD5LDCTuHn2fzFNKBw4sbw8B/Z/MW03X/Fmhbf02z+EvLSjDhWvfMEm7+E
7nYS9RCrjrH5S0hb9cXDP7MOsflLKLz21Jhu879j85fQpLyVw0Y2HGDzl9AO
ZZvCN57sY/OX0NNVg5eVdN3D5i+hfQfanhv8ZDebr6Kln997kpK/k81XUW5O
8pmwzQY2X0V6ecSL2OBSNl9FD3SzPGa/XcLmq0ggidY3lBaz+SoK7tmmo3HX
ejZfRTXpZb28J65j81U0etZxUS+P1Wz+Uvoj89udXMxKNn8pxX4S+c306QVs
/lJSfT045so+js1fSh3Wv/vP8dvZbP5S+nHY5ZPhr2ew+Uvpz3dHfHH87Ao2
fynt+6lmVW5LMpu/lM7H3PdJ3KBm85eRyTvxiz0t8Wz+Mqp5g9tVuXgpm7+M
zDtfVS2ctpjNX0aazg0L5m2LYfOX0X7t1D+kU6LY/GU0ZMCdoVdWRbL5y+j6
jviRZsF8Nn8ZbZ9hfW9Z0xw2P45uTJQdvzFyFpsfRxVr33/tk2sz2fw4KlMd
r39yVs7mx9HazNqKsEfT2Pw4mn5cK8o8PIXNj6NPfYr7/tkwmc2Po9lDRInh
0RPZ/Dja2rnj6H/8JrD58bTlaaHq2OBxbH48nY785kLUb2PY/Hiat21aVPOR
UWx+PA3anfTX/L+lbH48TWv23PxBxnA2P54kP/hrfqEANj+ebvheGigJHsrm
x5Nx6fuKgmwJm59AHdtum3T4zLtsfgJ5jR6yscP9gWx+AmXM/27+j7P92PwE
urX9XmDDa/3Z/ARaNXdb0kh7XzY/gcImefQs6NyHzU+gH0U/W9+NFLP5CVQb
eW1xyd632Pzl9PTus7nPm3qw+ctpTrrX48OJIjb/ZU9Y7tc0uBubv5ySpVm+
kQO82fzltHCn5cu18tfZ/OXUOSljTNFuIZu/nB4Z2t6+HtKJzV9Ox35q3qH7
uAObn0glu8bHPuvWjs1PpN5BzxRXfmnL5ifSzYbjv0RfbMPmJ5JHwLtrMp57
sPmJtK9+2eZ0+StsfiJ9dHNW7sItL0a3zk+k1Aed2lX92tLatkSKVk7TBEY+
a22BmvKn2fd929PR2kI1XSnrsHp3p8etLVZTeUv7tPZDm1tboqbfLhYdn5f/
qLVJTdNGn1bkOeytLVdTyNT8XasG/NHaSjUlrDowaev2ptZWqylvunpn/7D7
rc2paczWIf5fBjW2tl5NcXN3ru4/505rG9S0fy/dfXNbQ2ub1NTl1d9WLOt4
i+2nprsXhvSP2nGjta1q6v9IP3f7bBvbV00NE2vavBt+rbXtL/cN2DTwlaH1
bP8kmlo9Mf7AuKts/yR65aexPvty69j+SaSh/ikXGq6w/ZMos8+h7Fnqy2z/
JPp1/KFn59+qZfsn0RvdU/r1v3+R7Z9Ex94eEbDy4gW2fxJVVwRuUdZa2f5J
5LVwXc3Jq+fZ/kn01ZhRcVeHn2P7J9HqGdyc976vYfsn0ZhdXU+NjzzL9k+i
jpu7rGvq8yPbP4k+Dtmyf0qbH9j+L/89kd8UHntxhu2fRGselhbef521IJka
ty07/Pmo02z/ZDK+/c6Xf6afYvsn0+mT7+zqdLqa7Z9MhQ9Hl8/zZU3J9Mew
I+sj1p9k+yeTpYvf6iMdWCuTqU/77v+btOEE2z+Z9E9+r7/alzWXTNMX6/Zk
HjvO9n/Z67cWjIplbUgm+6bZJ2VdWJuSyXNyu343TpnZ/smU5DP1eXg+a2sy
DQhP+KTNBNa2ZPpi4/Lzke1Z25NppPrfpce+Psb2T6Efbjzc+7actTCF0rrV
RL3y/CjbP4Wy0hZO2/E1a0kKXduzN3jKEtaUQvNvn8hVDGAtT6HsHQdFIx4e
Yfun0HuTSw5FVrJWp1DX57/ND9ex5lKo8MBXvsYI1voU+vb9PkubA1gbUmhC
QF5VvZC1KYX2zjv0Zkd7Fds/hca+ONsr8CJrawpx/x5d2PMga1sKhQ74+1Dq
Ntb2FDr5UV9rBx1rQSodT923ojyFtTCV+o0JoAFRrMWp9GdsN+8ZctaSVPoq
tc9xj3GsKZVeXzvtC9Ew1vJU2nfmRExyf9bKVDraPfvDRz1Yq1Np1fXvZLlC
1lwq6TRlin/astanUo7m1Cdz/z3M9k+ldt/F3c19zNqUSqXeDzzm/8HanErC
9l5Tf2tkbU2lGUcjyh7fZG1LpdVftQ379DfW9lQKsl65WlnHWrCCXni/dzOk
lrVwBX3wxifdx1tZi1dQ3L2qN0tqWEtWUFv79qgJP7CmFZRgOfBe0GnW8hU0
ZlJtatZJ1soVJIu4e/aZmbV6BW05d09ZcZQ1t4J+bF7U+HkVa/0K+uGfXhuO
H3Lu//Lve+3mPx2+d+6/gkLuhA7JPejcfwWVdftknfd3zv1X0Cv/+NScrXDu
v4IGDKpuMnzj3H8FactbpOsPOPdPIz9pinTLfuf+abRpnbz8e5Nz/zTauOPF
Rw/3OfdPo/URCY+HOZtefv2/341bs9e5fxp94Ai69efXzv3T6N+BXdIWO1ud
RrGBld/eLXfun0aRC4ZnpTpbn0afNigPdXC2IY02dFueV77HuX8azf75SNMs
Z5vTSHvtsvR/zramEV0sKj/2lXP/NPraQ7kj19n2NKq7/UfeBGcL0mn+ue1H
OzpbmE6HjLNs9V8690+nZ5dnp5icLUmn4bljhTpnUzrdetRlboyz5el00z7f
Mc7ZynSaeyrR0NfZ6nTSrNzX3tPZXDqlHG58/LvRuX86vfv30YF1zjak06st
fZNOOtuUTgmz6z81OducToHtOmdsd7Y1nYYUXb/zsbNt6ZT2Wpdj+c62p9Pf
f+23pTpboKHUwvPvLnW2UEP3rw1eE+lssYbsP7xuC3e2RENfCx1vhDr75W/H
pH5xomBnyzX0YOWl2iBnKzU0PCNk5HBnqzU0YO/yQImzOQ0NyZ9SPdC1v4bK
Ut4518+1v4ZKPsub2tu1v4aunvtpyFuu/TXUs/dH6W+69tfQdyfaeHdz7a+h
macXvHjdtb+GZBbVUKFr/wyisTt2d3Ttn0E9ZvSY3cG1fwZd8Ewa1c61fwaF
/3Rsxv9c+2dQ55YNxa+59s+gb4quvXjVtX8G9d/d/LGHa/8MWt8pZ9wrrv0z
6GB0QheBa/8MyvTw+OffL5z7Z1Cbzw++4mpTBpnUE9/6x9nml27ZPK3F2dYM
ip99Vv/c2bYMWnbI7/YzZ9sz6NVCcYirBZkUsHHy4afOFmbS1R/DRrpanElx
wjdPOZwtyaR161fOczVl0rCQsqdPnC3PpIij+h2uVmbSvCe5M1ytzqSLpRWe
ruYyqYNMd/qxs/WZdNCxcLWrDS/n7d0X5mpTJiX1dfR2tTmTJu481fy3a/9M
+uLfvWddbcuktz8J3+1qeyZtzVpY6GpBFg0wcotcLcyihxPUIa4WZ1HPF02D
XS3JoksZh0WupizyPLTrVVfLs6ju60x7s2v/LJr3fcfrrlZn0ZUPhp93NffS
9efNrtZnkf3pwW9cbciiz7te+MLVpizaOPBFqavNWZQtfGejq61Z5HtjxGpX
27Ko40/dtK62Z1G7ewcyXS3IphEez1NcLcwm+4rrCa4WZ9OKjjNVrpZkU239
xBhXUzad9d0X6Wp5NnEjCua598+mHQsrZ7v3zybLDxPD3PtnU0tiX7l7/2xq
bjtlmnv/bBr88MAU9/7ZlNlTIXPvn01N3QImuffPpncaxgW798+m6ufZ4937
Z9OBsTfIvX8Omf9cNta9fw79/FW3Me79c8gr7EaQe/8cSuthGeXeP4c+S7aM
dO+fQ6s9bYHu/XNIcczL3eocku8Jlbr3z6HEjttGuPfPodnTXwx3759Dm14s
d7cph8LPPXjfvX8OTVid6m5rDtW+5eluWw7tLdoV4N4/h1L+nOpuQS5tzno2
zL1/LhUmmNwtzqVbPRLcLcmldncHu5tyaeUEx1D3/rl0be8pdytzaf43m92t
zqWntxPczeVS4u3J7tbn0rS5/dxtyKX3/nzN3aZceh5zb4h7/1yixPPutubS
xisH3W3LpfYxn7vbnkvHbq5ztyCPpvrluFuYR8vaJ7hbnEfbYiLdLcmjmi4z
3E159PjvYHfL8+jhX4HuVuZR10eD3a3Oo7d+6e9uLo9ubHzb3fo86tW5u7sN
eTQ3UOhuUx7t8GjP2z+PCiLa8PbPo2uBLyTu/fPo0Lpn7rbnEckfu1vA0arU
R+725OizR7+7W8iR/MQDd4s4Glnf6G4xR1sC77jb7+XX195yt4Sjk7tvuFvK
UeOe6+4mjsTXf3O3jKOgoHp3yzmKO3bV3YqXvugXdys5KhhY524VRyqvn92t
5mia5xV3azj6pedld3Mc3QiudbeOo7T8S+7Wc3Tu/EV3l3A0/T1eGzjK3nrB
3UaO2nTjtYmj8lKruys5inyP12aOvH88724LRw+W89rKUTsfXtdxtN96jne/
HA0t4nUjR39M47Wdo1lv8NrB0fUbP/HuP59E3/DaM5/W6XgtzKfbUbwW5dOx
MbwW59NPb/PaL5/Mr/Bakk+KuzW8+8+nWed5Tfmk/Z7Xsnz6chev5fm0YyOv
Ffk0qoDXypd/XyqvVfl0ZjGv1fmUPo/XmnyaMJ3XXD51m8hrXT7VjuK1Pp/i
hvG6JJ9ODeK1IZ8u+PLamE85b/PalE9HRbyuzKfCrrw251N1J15b8impPa+t
+fRhW17X5dMjD17b8unbF2d5959Px1t4bc+nN57x2pFPu57wWqClxL957aml
uL94LdTS5j95LdJS0x+8Fmtp2e+89tNSu4e8lmjpxwe8lmpp931ek5a23eO1
TEvljbyWa+niXV4rtNSe30otzbnDa5WWDtzmtVpLb/Nbo6VNDbzmtNSD3zot
GW/xWq+l8fwu0VLDTV4btLSe30YtBfPbpCUBvyu1ZL7Ba7OWdPy2aCmM31bt
y89zvK7T0hMbr21asvK7UUt7+G3X0hp+O7QUz29BAc3kt2cBSfktLKC+/BYV
UCd+iwuo5Tr//gvoAb8lBVTPb2kB/cRvKqDj/JYV0Lf8lhdQOb8VBbSD38oC
2sJvVQFt4Le6gIr4rSmgD/nNFRDHb10BZfJbX0Bp/C4poCR+Gwoogd/GAlLx
21RAi/ldWUDR/DYXkJLflgJawG9rAUXwu66AFPy2FdAcfjcWUDi/7QUUxm9H
Ac3gt6Dwv+1ZSNP5LYQWFdI0fouh/Qpp6n/uH1paSCH/uX9oWSHJ/nP/4Apw
JbgKXA2uAefAdeB68BJwA7gR3AReCW4Gt4BbwevAbeCN4HZwB7jgw/+654f/
dSG4CFwM7gcuAZeCE7gMXA6uAFeCq8DV4BpwDlwHrgcvATeAG8FN4JXgZnAL
uBW8DtwG3ghuB3eAC1bC/a+E+wcXgYvB/cAl4FJwApeBy8EV4EpwFbgaXAPO
gevA9eAl4AZwI7gJvBLcDG4Bt4LXgdvAG8Ht4A5wwSq4/1Vw/+AicDG4H7gE
XApO4DJwObgCXAmuAleDa8A5cB24HrwE3ABuBDeBV4KbwS3gVvA6cBt4I7gd
3AEu0MH96+D+wUXgYnA/cAm4FJzAZeBycAW4ElwFrgbXgHPgOnA9eAm4AdwI
bgKvBDeDW8Ct4HXgNvBGcDu4A1zwEdz/R3D/4CJwMbgfuARcCk7gMnA5uAJc
Ca4CV4NrwDlwHbgevATcAG4EN4FXgpvBLeBW8DpwG3gjuB3cAS5YDfe/Gu4f
XAQuBvcDl4BLwQlcBi4HV4ArwVXganANOAeuA9eDl4AbwI3gJvBKcDO4BdwK
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
LwM3gpeDm8ArwCvBq8DN4NXgFvAacCt4LXgdeD24DbwBvBG8CdwO3gzuAG8B
F5TC+y+F9w/uBS4E9wYXgfuAi8F9wf3A/cEl4AHgUvAgcAIPBpeBh4LLwcPB
FeAR4ErwWHAVeDy4GjwVXAOeDc6BF4LrwIvA9eDF4CXgpeAG8DJwI3g5uAm8
ArwSvArcDF4NbgGvAbeC14LXgdeD28AbwBvBm8Dt4M3gDvAWcMFn8P4/g/cP
7gUuBPcGF4H7gIvBfcH9wP3BJeAB4FLwIHACDwaXgYeCy8HDwRXgEeBK8Fhw
FXg8uBo8FVwDng3OgReC68CLwPXgxeAl4KXgBvAycCN4ObgJvAK8ErwK3Axe
DW4BrwG3gteC14HXg9vAG8AbwZvA7eDN4A7wFnDBNnj/2+D9g3uBC8G9wUXg
PuBicF9wP3B/cAl4ALgUPAicwIPBZeCh4HLwcHAFeAS4EjwWXAUeD64GTwXX
gGeDc+CF4DrwInA9eDF4CXgpuAG8DNwIXg5uAq8ArwSvAjeDV4NbwGvAreC1
4HXg9eA28AbwRvAmcDt4M7gDvAVcsB3e/3Z4/+Be4EJwb3ARuA+4GNwX3A/c
H1wCHgAuBQ8CJ/Bgt/8f+gvZCQ==
      "]]}, 
    {RGBColor[0.6, 0.1, 0.6], PointSize[0.002777777777777778], Thickness[
     Large], LineBox[CompressedData["
1:eJxd13981XP/+PEjPyp2sdwmB8PBZFy7OFhX45p6xroaLZ1+6aSVU606q1Vn
Pzvbztobq05MHTU1Gk5ZOZEcDEfm6uSaTI3rYGlpfI6u4WB0LqLJ8PW9eZ1z
3j384/a43b08Pc+r13ZcNmfppHkDDAbD+wMNhv//9z//io4ynPyX/O8F80sD
Xd/c8mcOkoF3Ni2z3nfWyD87Wc5dX3fkrZ8vUZ0iu86qHnnm2r+qNsrpZdvG
BuqHq06V04szD95yzijVJlkypG97WvoY1ZfLHePnlKzyjVOdJvnaok5/3UTV
w+T2wT8bnt46VXW6zDxX21M64m7V10hmwcA9BTffozpD3p6//Ku50+aovlYu
Pd5UWX7HPNVmGV976hVrKuyqr5eUbX9JOnB4keobZH/9+KXFVUtV3yhVm9vG
j9lerDpTDuUc/vmKF0tVD5cXplYtixwsV/13+fjcW+u3XehUPUIu+vaTgSVV
VaqzZFrg13/POu5SfZM0jBnfrD1cq/pmCZ0/fH952r2q/yGPv/dN+6E196nO
lo5Dx8f9NLBO9S3y4fCvph9Yu0L1SBn0Wvqv2rBVqkfJfdN6c07tcKsWyb3/
6jHztQf+bE2kuXDF0Jbb6pWPlsvfvvWjn85bo3y0mAb8bVvW8bXKb5XrLpCP
9vzgUX6r/L3ri8HFPzys/DZZOnPJ6c+fWKf8Nllnve2INrhBeY6cds3br39z
6SPKc2RFS9bzx27ZoHyMnH76Y4e9czcqHyMfFK6b/aOnUfk/pXBF3tzjbz2q
/J+y/eMJp+0YsEn5WBkkUwuNY5uUj5WehvMCo9c/rjxXZv4+5Py/ffmE8lxJ
KX7mo6WXeZXfLk9MOG/idR+q1m4X+1r7moPuzcrvkJXOsy9fdOsW5XfIjJmD
n+z9XbVhnLzz2msbZ+15Svk4OeuLpsf/vbJZeZ5sXHzq6EssW5Xnyc2/vJFc
fPE25ePFvn33o//6TrU2Xo7ObJk/uO1p5XfK0B2rf5/8uE/5nTJyRSTirdqu
fII8s/fxp76f8YzyCZJTfPTZcaOfVW6Rzr90O3des+PPFotcsXB09cXG59Q/
b5FZVV+mbhq8888OWiTy2qLdV/+u2jBRfvh80Ov7+55X5ydKR8amnaOr/er8
RNn3YX3p1f2qgxMl98ojYy6pfUGdnyTV5otGXHbai+r8JBl6/doJNz6oWpsk
TTnDHpqa8pI6P0nCW7/8zP2kasNk6bzjrhvey2hR5ydL7rsNk4e1qtYmy8UL
cwevG/+yOj9ZDq2//tRzP1NtmCJpZy39eFvFK+r8FDE+MevsiWe/qs5PkYbV
SacM8akOTpFrv7n0hy9uC6jzU6Vhx3W/f/CZapkqy19dkHLg3tfU+alS0jc7
2nvFLnV+qny7YYjxwnbVhruk9dnG/8xY8ro6f5eU2g8lvzC0VZ2/S7479IBm
3KM6eJfM+WzNbM/iN9T5abJx4s0rh6b+S52fJpHD5lG+DtXaNHn1ooKxt9bu
VuenyQDntLuiFwTVeavsPzD87lHlqsUqj725eeaD76vWrHJxzdMD3792jzpv
lX5jYHbSQ6oN0+XXy/PeyOpVLdPl7ntebLDkvanOT5fJO43zxz+nOjhdRi/c
seqqc/6tzt8tN91U/sOBYtVyt4SfGDv4zgOqtbulxnco5/6b2tT5u2XSrs2f
z39CtWGGjFn30oovT31LnZ8hJbvHNkULVWsz5ILT+r8sDKkOzpDRbVe2/n3E
XnU+Xw4Pf/Ovw59QLfmywf/sWbec/rY6ny+rp7a1XVKkOpgv035p+3bzB6oN
M2XvorlP3Z/Vrs7PlIUztjWUPa5amyml23yBoae8o87PlJWbft1yYo5qwyz5
JP/VoqY3Vcss+co38hrbpfvU+Vly4pvCrx9yqg7OktVDlt86/l3VhnukYvb1
Fd7U/er8PTLr3CMz7pmnWrtHthzZPvyGbaqD90jJi/WH6j9RbbDJ0k8vfv6Z
wR1/tskmVww/W+rTVYtNDKl104+PUG2zybOfvGSoHq5as0lo+7WvOy9R7bXJ
hCmPhjKjsXk2mfreJRcffVp12CaXLXnl6dNvi82fLc/tGzTxst1qH9NsKdmW
UbPoQtUyW45flr7hncnq87HNlp9DxT3GRbHPd7bkH3v3xzmz1X14Z8uz3Rda
T7lJ3Wdwtuz62/xHn/5R/XkJz5Yp33/5aV5T7M/fHJnaOfvX729Qfz5Nc2Tz
gVFnTAjG3sMceXBn7ZJdG9R7ss2RzPU3Heh+Wb1XbY68f/aJ+1xfq/fvnSNH
Ilt/uWWU+nkSnCORc7x3rWxVP6/Cc+TjnrwX77THfv7NlXGV2xxz69XPU9Nc
2V8+9ci459XPa5krH4fPGr49S/28t82VjRsyHzyRpn5/aHMlK3Xv/724RP0+
8s6V/vFnHuq+WP0+C86VDaMfrDD2q9+P4bly9/jHLBZ77PdrgdwV8l3cO2m9
ml8ghbMeOePU59TvcymQU8Zefezu99X3AVuB9J596j/nf6++P2gFMmzC6GHZ
29T3DW+B/PD1uaHyLvX9JFgg1//79XnGZZqaXyBJEzq+O9gT+74zT5b8o/nw
+spKNX+elBz97L//aahQ8+fJ/w7veXjM5WVq/jzJ/sq3e0NyiZo/Tx4a+Vrg
O4tDzZ8nu+59etW05xar+fPkre6Vw6+4Vn2fC8+T766rcw4+t1DNny+jBl1v
bbp9gZo/X9799T3De2+r74cyX7YOe/nUDfcWqPnzxX/u9Tc/tXiumj9flh6u
+Y+xTn2/9M6XvjOTk6b+a7aaP18Wf/DAo8GhqsPzJfzImedvddvU/AUyferk
nwYnqzYtENfue8r+Nll9f5UFctvBTzf+0DxLzV8gA9d+XrwtWbW2QKos/71v
zLqZav4CkU8vWVI8THVwgez9fWTlpH35av4CmRR4Ysj91aoNdrkv+/xXfx2h
2mSXVzIz2/7y2ww13y4f7n3Ee2uHaptdzj9/UH/BZtWaXS7f1rd7sUu11y5f
9+8vXp6vOmiX3H3V+z8W1WG7rBx16fT/pqs2FMrkczr+l5yi2lQoi0o6I9FT
YvML5aLeY4cu+159v7cVyktLXjpu6VGtFcqYu654e0SXam+h1O5ZP+Kxd1UH
C+WCAZUDx7SpDv9xfuI/Fia1xv5/YaHM8azp2dei2rRQrnzpybtsO1XLQjla
+U7GC77Y/IXy2/vP+bc+FZu/UN4a/FD51U/G5i+Ur+9edfiaTbH5C+XG4LBt
j22MzV8od/1+xVOLGmLzF0nOBx/NWvdwbP4iiQ68pue0tbH5i2ReXc7KXfWx
+YvkoaOzX3z2gdj8RZL19fr2992x+Ysk+QXriWGrYvMXyc53Lr1224rY/EVy
zxknvrijLja/SDJ/CV035P7Y/CJZ+8mm1T/eG5tfJIvvvbj7mBabXyQe+zv2
pFhrRWK5tmb3TbWx+UXyYm17S9Xy2PwiuXSbe/q7NbH5f8zbt/WH62JtWCz7
d7993OuKzV8s67Z8euqlsZbFMvUX28e+6tj8xbLv9Stn3RJr7Y/ObltzuCo2
f7EYdi5YcV+sg4vlzqvOKLk+1uHFMjn8beOXlbH5S2T8mY9bmmNtWiL20o9/
nx9rWSKX1Z2Rel2sbUvktemPX9XvjM1fIo1v/df/bqy9f5z/6DXLU7EOLpEZ
eWu2u2IdXiLPnlgyf3qsDUtl6uYbbr4p1qalUjDqtU8virUslcpbJeWUWNuW
yk/j272RZbH5S2XbEw9M+CDW3qWy605X9I1YB5dK9o+fTHs21uGlkjPuo5mP
xdrgkDOeGfrpA7FOdsiXVverrlibHHIweErH0libHXLk5QGGgliLQ9ovWXbz
9FhbHJI2rbZgQqxtDlm365bCf8ba4ZDsg77hI+P//Q5p/nB24O+x9jgky7vm
s+vi+zjEu/HVLVfH2u+Qh272fXdFfD+H3Ng66bVLYh1yyGcXvXL8gvi+Dpmz
du+T58U66hDzQKtvSHz/YsnddObgs+P7F8svL2XtOjO+f7EU7/2iZWB8/2LJ
01q+Py2+f7FUjv7P4gHx/Yvl4r2fmwzx/YtlxeepA3+riO1fLNPHn57aH2ut
WF65fN2ME7H2FEtnWfKbfbH2FsvOJZfmHY+1v1gO/H37Tz/GOlgs5y7p/tex
WIeKZfCoYVt+iHW4WE78L+OJ72MdLZbLf97n/1+sDSUybtGZXdFYJ5fIjiOm
c+NtKpFtry6aeTTW5hK5am1R4LtYS4ncP3zvZfG2lEjy7psav4217Q+PPHVh
vB0lUvPCiad74/uXyMiMcaPi7SmRzppX/++b+P4l8vyZ5e54+0tk8/59WfEO
lsj/vX1O9Ov4/iXS5t/+XLzDJbKk6azieEdL5IHulpvibSiVzu+uGxjv5FIZ
tmLIoa/i+5fKiS3Hd8bbXCqu99zueEupNE8unRdvS6k0bCwaE29bqfxYZU6P
t6NUDPu0v8RbK5VvA2k/RuL7l8p3iyKfxttbKtNXN+2Lt79U1h84LxDv4B//
PQczno53qFSO1L2xMd7hUvnrT9tWxztaKutM+13xNpTJhg1nF8c7uUzeGG+d
H29TmawofDg/3uYyiZy5dXK8pUzOSNPGxdtSJu0ThuTE21Ymn+3IvSXejjK5
qPX8EfHWymTV6OLrE/uXyeL02zMS+5fJvYUNVyX2L5N1P+Rekdi/TAZsmHlp
Yv8ymfjtOxcl9i+TGyeuNCb2L5M72h48L7F/uYz9/MNzE/uXy52fWZMT+5fL
igXnnZ3Yv1wOPn5aUmL/cnlg6OVnJvYvl9DewkGJ/cvlr78dPCOxf7msm1V4
emL/csk6cOFpif3LZUDDVwMS+5eL+6wPT0nsXy7ezzsNif3LZZbh29+/jO9f
LnWFFyQ6/Iffbf0t3tFyOXqj79d4GyrEVT0w0ckVYj9Y1h9vU4XcnnT0l3ib
K0ROlCVaKqT5sdMTbamQXb8+eSLetgrZk3tboh0VcmHLdz/HW6uQx1ZvTrSn
Qs64YkaivRXyQuTCRPsr5G+WcF+8gxVyzeFnEh2qkMVDqxIdrpC9jeMTHa2Q
kQOuTLRhmeT+8vvxxP7LxJD5aaJNy6R67u5Em5fJiLFPJVqWyYotqxNtWSYD
RpYk2rZMrv4yP9GOZfLZ0tsTrS2Ti3aOSLRnmZRXX5Vo7zLpbTEm2r9M1t58
VqKDy+Tmo7/9lNh/mVgDPyQ6vEw213yV6OgyOZ4eTrTBKVdtO5joZKfsPfKf
RJucMui99kSbnbLB+maixSmlZa2Jtjjl05RXE21zSua1Lyba4ZT3X34u0ZpT
/rJle6I9f/TXWxPtdUpwxZZE+53y7uInEx10Su2mJt3+Tnll0GO6/Z1y5PmN
uv2d8sWDj+j2r5SLG9fr9q+UCaGHdftXyqNmj27/Sql8eY1u/0p5ecZDuv0r
ZaapXrd/pbxteFC3f6Xce2K1bv9KmXSWrj2VcsP1bt3+lTJm4Srd/pVyqGWl
bv9KWXCOrkOVstK5Qrd/pRz9rk63f6WUFevaUCWDfr9ft3+VPLdB16YqWTVC
1+Yq2RO+T7d/lXgf1rWlSipv17WtSnYO1LXjj3///nt1+1fJjw269lRJ8lxd
e6tk/XBd+6tkaJKug1Vy6xeabv8qafu3rsNVMrFZ19Eq2bJK14ZqcS3WdXK1
bJ2qa1O1REbp2lwtKRm6lmoxXKhrS7XcP1jXtmqpPlGr279a9vbqWquW3LCu
PdXS06lrb7Vo+3Ttr5aBe3QdrJZ5AV2HqmWFX9fhapm2XdfRatm/RdcGlxxo
0nWyS+Zs1LXJJYvX6drskq8e0rW4pH21ri0uOWOlrm0u2XSffn+XVNfq93fJ
Uy79/i45q0q/v0ueW6bf3yUryvX7u6S+VL+/S/YU6/d3yaUO/f4u2bxEv3+N
3LpYv3+NnFak379G/rtQv3+NHC7U718j39j1+9fIOfq21UjuAv3+NdIwX79/
jRydp9+/Rqz69tbIewX6/Wtkor6DNfLJXP3+NVKu73CNDNV3tEZ2z9Hvv1yW
6Dt5uVypb9Ny6Zmt33+5PK1vWS4OfVuWy0h925bLEH07lsuXNv3+yyWob89y
eVLf3uWi6du/XAr0HVwu4/QdWi436ju8XFL1HV0ug/VtqJXj9+j3r5UefZtq
5YC+zbXytr6lVnbp21Irz+vbVitb9e2olU361mplvb49tfKgvr21slLf/lrR
9B2sFae+Q7VSqu9wrRTpO1ordn0bNJmr70GazD7p89Bkhr6NmlhP+nw0maLv
dE0mnfR5aTJB31majD/p89Pkdn3najL2pM9Tk9v0bdVk9EmfryYj9W3X5JaT
Pm9N/qFvJ1rT5CZ9u9EeTUbouxHt1WS4vn1ovyY36juADmpyg77b0SFNrtd3
FzwMj8Cj6D7884Z7T/ZB957syXAj3ARPh5vhWXCB58ItcCvcBrfDHXAnXIO7
4R54I9wL98H98AA8CG+Hh+Bd8DA8Ao/C++CG+3D/9+H+4Ua4CZ4ON8Oz4ALP
hVvgVrgNboc74E64BnfDPfBGuBfug/vhAXgQ3g4PwbvgYXgEHoX3wQ334/7v
x/3DjXATPB1uhmfBBZ4Lt8CtcBvcDnfAnXAN7oZ74I1wL9wH98MD8CC8HR6C
d8HD8Ag8Cu+DG+pw/3W4f7gRboKnw83wLLjAc+EWuBVug9vhDrgTrsHdcA+8
Ee6F++B+eAAehLfDQ/AueBgegUfhfXDDCtz/Ctw/3Ag3wdPhZngWXOC5cAvc
CrfB7XAH3AnX4G64B94I98J9cD88AA/C2+EheBc8DI/Ao/A+uGEl7n8l7h9u
hJvg6XAzPAsu8Fy4BW6F2+B2uAPuhGtwN9wDb4R74T64Hx6AB+Ht8BC8Cx6G
R+BReB/csAr3vwr3DzfCTfB0uBmeBRd4LtwCt8JtcDvcAXfCNbgb7oE3wr1w
H9wPD8CD8HZ4CN4FD8Mj8Ci8D25w4/7duH+4EW6Cp8PN8Cy4wHPhFrgVboPb
4Q64E67B3XAPvBHuhfvgfngAHoS3w0PwLngYHoFH4X1ww2rc/2rcP9wIN8HT
4WZ4FlzguXAL3Aq3we1wB9wJ1+BuuAfeCPfCfXA/PAAPwtvhIXgXPAyPwKPw
PrjhAdz/A7h/uBFugqfDzfAsuMBz4Ra4FW6D2+EOuBOuwd1wD7wR7oX74H54
AB6Et8ND8C54GB6BR+F9cMODuP8Hcf9wI9wET4eb4VlwgefCLXAr3Aa3wx1w
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
      "]]}, 
    {RGBColor[0.6, 0.1, 0.6], PointSize[0.002777777777777778], Thickness[
     Large], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxd139c0+X6+PGVmWmcwr5Wq0hXkVFxahYeqaN5aZhUmDNRZ6JNRZ2KOOTX
gAFvFRWLdCoWJeoq0llaq+g0i3NcRUVKtU5YWNRZRUlFtpOUHKP89H10b3v7
6p/zeD2e3ufy2t0N64p5y+9dcKbBYPhggMHw///3z3/CYw2n/yP/fd784gDX
92P+zHNkwD31xdZV5972Z8fLBVuqvnzzf0NVD5FXzi27bdDG61UbpX/Bron+
mpGqE+TsvJSPx5w/VrVJcgf37klMmqD6Srlr0rwV67x3q06ULG1pm69qiurh
ctfA/xl2PzVNdZLMuUB7LX/Ufaqvk5HZA17LvvV+1cny9sKKb+fPmKf6Bhl2
or6k8K4Fqs0yqbLfVRuK7KpHyP/b9Ze4w58uVX2THKyZtDyvdLnqm6Xk8eZJ
E/bkqU6R9rRP/3fVC/mqR4pvWmlx18eFqv8mRy4YX7PrUqfqUXLpD58NWFFa
qjpVpvt/e2POCZfqW6R2wqQGbVOl6lvl/YtHHipMXKn677L9ve9bjmxYpXq0
vHvkxN2/DKhSPUY+HPntzMMb16i+TQbsT/pNG75O9VjRZnSn9WutVi1yx+pr
JyzUHvizNZGGxWsuary9Rvk4ueLt8R/9cuEG5eNk2Jl/3ZV6YqPy8fLXS+Sj
1467lY+Xke3fDMw7vkn57ZI7O7f/cyc3K79dNllv/1IbWKs8Tfpd9/ar3w/b
qjxNqhpTn+sZ87DyCdK//2OfeuY/onyCfLh489yf3XXK75ClazLmn3jzUeV3
yDOfTD5r75nblE+UQTJtsXFivfKJ8k3thf5xW7YrT5f7Tw2++K9HdyhPl4vy
nv5o+RUe5XeKZ/KFU278ULV2pyzZaN/wcfXjyu+Stc7zrlw6/gnld8l9swfu
7D6l2nC3vL1//yNzXntS+d0y8Jv67W+sbVCeIVuX9Rs31PKU8gy55dd/xudd
vkv5JFm458Cj/zqmWpskx2Y3LhzYvFv5PXLh3vWnpm73Kr9Hxqzp6vKU7lE+
Wfa8tf3Jn2Y9rXyypOX9+Mzd455RbpEP/9LhfPa6vX+2WOTKJePKLjfuU3/e
InNKjyZsG/jsnx2wSNf+pQeuPaXaMEWOf33Oq4d6n1Pnp8i7ydueHVfmU+en
yKEPa/Kv7VMdmCJ3Xv3lhKGVz6vz94rLfNmoK856QZ2/Vy4esXHyzQ+q1u6V
+rThD00b8qI6f6+Enjr6RfVO1Yapcviu6Te9l9yozk+VO9+tnTq8SbU2VYYu
SR+4edJL6vxU+WTLiH4XfKHakCnDz13+ya6if6jzmXLpjjnnTTnvZXU+U7au
jztjsFd1IFNu/H7Y8W9u96vz02Tr3htP/fsL1TJNtJcXDTm8cr86P00KeueG
u696RZ2fJuGHBxsvbVFtmC4Hnql7f1buq+r8dCmyH4l//qImdX66/PfIA5rx
NdWB6bLwiw1z3cv+qc7PkG1Tbl17UcK/1PkZ0v2peay3VbU2Q169LHvi+MoD
6vwM6eecMT18SUCdt0rr4ZH3jS1ULVbZ9vrjsx/8QLVmlaHluwd8cMNr6rxV
fjf658Y9pNowUwxXZfwztVu1zJTZ979Qa8l4XZ2fKdOfNS6ctE91YKbcvmTv
umvOf0Odv0/+fkvh8cN5quU++WrHxIH3HFat3ScrvUfSVt/SrM7fJ9Nfefzr
hTtUG2bJnZtfXHO035vq/CwpPjCxPrxYtTZLhp7Vd3RxUHVglkxsvrrpb6Pe
Uuez5IuRr18/codqyZJ63zPnjun/tjqfJRunNTcPzVEdyJLZvzb/8Pi/VRtm
y6Gl859cndqizs+W3Fm7agu2q9ZmS/Eur/+iM95R52fLg9t+e+LkPNWGOfJV
1ss59a+rljlyzHvbdbZhB9X5OXLq+8XfPeRUHZgjDw2uGD/pXdWG+6V07ogi
T8Ihdf5+mXvBl7PuX6Bau18avtwz8qZdqgP3S+ELNUdqPlNtsMmKzy9/7umB
rX+2ySbDR54nNUmqxSZnJlTNPDFKtc0m+z570VA2UrVmkw/23PCqc6hqj00s
mY8GU8KReTaZ/t7Qy3/crTpkkytz/7G7/+2R+XNl38FzplxxQO1jmit5u5LL
l16qWubKL1ckPfzOVPX52OZKbzCv07g08vnOlVk97/48b666D89cebrjUusZ
t6j7DMyV/X9d+Ojun9W/L6G5kvnT0c8z6iP//s2TaW1zf/vpJvXvp2mePHF4
7NmTA5H3ME82PFuZ+8rD6j3Z5smoLbcc7nhJvVdtnhw+7+Qq13fq/XvmydGu
p34dM1b9PAnMkx/O90xf26R+XoXmyWedGS/cY4/8/JsvU0p2OebXqJ+npvkS
LJz25d3PqZ/XMl9CoXNH7klVP+9t82X7wykPnkxUvz+0+TIm4a3/vJCrfh95
5kv/ewYd6bhc/T4L/PHnxz1YZOxTvx9D88U26TGLxR75/ZotWUHv5d33blHz
syV3ztaz++1Tv88lWwZOvLbnvg/U9wFbthw/r98dC39S3x+0bLlu8rjho3ep
7xuebDnx3QXBwnb1/SSQLSlvvLrAWKyp+dkyeHLrsY87I993Fkj+3xs+3VJS
ouYvkKIfv/jq/doiNX+B/Pzpa5smXFmg5i+Qsd96Dzwcv0LNXyDu2/b7j1kc
av4CCazcvW7GvmVq/gI52LF25FU3qO9zoQXy041VzoEXLFbzF8r4c0ZY6+9c
pOYvlPd/e8/w3tvq+6EslN3DX+r38MpsNX+hPH/BiFufXDZfzV8ouZ+Wv2+s
Ut8vPQuld1B83LR/zVXzF8qyfz/waOAi1aGFEto66OKnqm1q/iKZOW3qLwPj
VZsWievA/QV/naq+v8oiuf3jzx853jBHzV8kAzZ+nbcrXrW2SJyWr1ZN2Dxb
zV8kYz8fmps3XHVgkbx56raSew9mqfmLZIp/x+DVZaoNdlk5+uKXfxul2mSX
l1JSmv/y+yw13y5tb231jG9VbbPLJRef05f9uGrNLlft6j2wzKXaY5fv+w7l
VWSpDthl4sGyQ5+I6pBd1o4dNvOrJNWGxTL1/Nb/xg9RbVosS1e0dYXPiMxf
LJd19xy54if1/d62WF7MffGEpVO1tlgmTL/q7VHtqj2LpeK1LaMee1d1YLFc
cmbJgAnNqkN/nJ/y9yVxTZH/Xlgi890bOg82qjYtkatf3Dnd9qxqWSI/lryT
/Lw3Mn+J/P7BPt9TT0bmL5E3Bz5UeO3OyPwl8u196z69bltk/hIZERi+67FH
IvOXSOapq55cWhuZv1TG//ujOZs3ReYvlWMDrus8a2Nk/lKZX5W29pWayPyl
UvPj3BeeeSAyf6mM+m5LywfVkflL5fznrSeHr4vMXyr73hl2w641kflLZc7Z
J7+5qyoyP0du/jV44+DVkfk58tBn29b/vDIyP0dyV17e0aNF5ueI2/6OPS7S
Wo5Ybig/cEtlZH6OvFDZ0lhaEZmfI8N2Vc98tzwyP0dSDj51/MZIG5bJoQNv
n/C4IvOXyeYnPu83LNKyTKb9avvEWxaZv0wOvnr1nDGR1v7o0c0bPi2NzF8m
p/YtWrMq0oFlMumas1eMiHRomdwb+qHuaElkfq5MGrTd0hBpU67Y8z85tTDS
kitXVJ2dcGOkbbmyf+b2a/qckfm58uibX/nejbQnV5Z8tN/yZKQDuTI7Y8Me
V6RDubLvZO7CmZE2LJcZj9906y2RNi2XhWP3f35ZpGW5lI6XIWdE2rZcTkxq
8XQVR+Yvl107Hpj870h7lsur97jC/4x0YLmM/vmzGc9EOrRc0u7+aPZjkTY4
ZMDTF33+QKTjHXLUWv2yK9Imh3wUOKN1eaTNDvnipTMN2ZEWh7w1tPjWmZG2
OOSKGZXZkyNtc8iGV8YsviPSDoeM+tg78rbo398hng/n+v8WabdDRno2fHFj
dB+H7Hzk5SeujbTPITW3eo9dFd3PISOa7t0/NNJBh/znsn+cuCS6r0Pmbnxr
54WRDjvEPMDqHRzdP0/Stw0aeF50/zz59cXUVwZF98+TvLe+aRwQ3T9PJmmN
P50V3T9PSse9v+zM6P55Muytr02G6P55sv7rhAG/F0X2z5PZk/on9EVay5P9
V26edTLS7jxpL4h/vTfSnjx5PndYxolI+/LkyN/2/PJzpAN5cmFux796Ih3M
k7ixw584HulQnvT9N3nHT5EO58nV/zvo+2+kDStk0tJB7eFIx6+QZ780XRBt
0wrZ9fLS2T9G2rxCrtmY4z8WaVkhq0e+dUW0LSsk/sAtdT9E2vaHdz15abQd
K6T8+ZO7u6P7r5Dbku8eG233Cmkrf/k/30f3XyHPDSqsjrZvhTx+6GBqtAMr
5D9vnx/+Lrr/Cmn27dkX7dAKya0/Ny/a4RWyvqPxlmgb8qXt2I0Doh2fL8PX
DD7ybXT/fDn5xIlno23OF9d71dXRlnx5amr+gmhb8mXrIzkTom3Ll59LzUnR
duSL4aD2l2hr+fKDP/Hnruj++XJsadfn0fbky8z19Qej7cuXLYcv9Ec78Mff
5+Pk3dEO5suXVf98JNqhfLn+l13rox3Ol02mQ65oGwpk68Pn5UU7vkBenWRd
GG1TgaxavCkr2uYC6Rz01NRoS4GcmajdHW1Lgbw1eXBatG0FEtqbPibajgK5
pOniUdHWCmTNuLwRsf0LZEnSncmx/QukcnHtNbH9C2TD8fSrYvsXyG9bZw+L
7V8gk35457LY/gVinrLWGNu/QO5ofvDC2P6Fkvb1hxfE9i+Uu76wxsf2L5RV
iy48L7Z/obRtPysutn+hrL3oykGx/Qul9a3F58T2L5Sk3z8+O7Z/oWycs7h/
bP9CSTl86Vmx/Qulb8u3Z8b2L5TV5354Rmz/Qqn/us0Q279Q7jP8cOpodP8/
/r6LL4l1qFCy7rP+Hu1wofxws/e3aBuKpKxsQKzji2TRxwV90TYVycS4H3+N
trlIbjtZEGspkscf6x9rS5G8/NvOk9G2Fcm/0m+PtaNILm489r9oa0VSt/7x
WLuLpP9Vs2LtKZLnui6Nta9IrreEeqMdKJKkT5+OdbBIll5UGutQkbxRNynW
4SK59cyrY20oltt/PXUitn+x/Hrz57E2FUvR/AOxNhfLTROfjLUUi/bE+lhb
iuX3MStibSuWq49mxdpRLJ8tvzPWWrFc9OyoWLuLJa/smlh7iuXbRmOsfcV/
/P47N9aBYhn14++/xPYvlmn+47EOFcuO8m9jHS6WnqRQrA1OuXrXx7GOd8rr
X74fa5NTznqvJdZmp2y2vh5rccrygqZYW5xyZMjLsbY55YYbXoi1wymtL+2L
teaUc57YE2v3H/3dU7H2OOWVNU/E2ueUt5ftjHXAKSXb6nX7O+X5cx7T7e+U
z557RLe/U754cKtu/xIx1m3R7V8idwU36fYvka1mt27/Eil8aYNu/xJ5YdZD
uv1LZJapRrd/iTQbHtTtXyIVJ9fr9i8Ry7m6dpfIjSOqdfuXyLgl63T7l8hH
jWt1+5fI/PN1HSyR1c41uv1L5IdjVbr9SyQ/T9eGUjn71Grd/qXyzMO6NpXK
2lG6NpfKgdAq3f6lsmOTri2lUnynrm2lsneArh1//P8fWqnbv1R6anXtLpXz
5+vaUyqbRuraVyoXxuk6UCpjv9F0+5fKa2/oOlQqkxt0HS4VzzpdG8qkZJmu
48vEM03XpjL5aqyuzWVyfrKupUx+vUTXljKpGKhrW5kUnazU7V8mr3XrWiuT
20O6dpfJf9p07SkT10Fd+8rkrNd0HSiT+X5dB8tklU/XoTLJ3KPrcJm0PKFr
g0uC9bqOd8nsR3Rtcol9s67NLvnqIV2LS15fr2uLSwxrdW1zydZV+v1dUlSp
398lO1z6/V3Sv1S/v0u8xfr9XVJZqN/fJevy9fu75NU8/f4uucSh398l23L1
+5fLmGX6/cvFkKPfv1w+X6Lfv1w+Wqzfv1yO2vX7l8tf9G0rlzsW6fcvl80L
9fuXyw8L9PuXyzR9e8rlULZ+/3K5R9+Bcvlkvn7/csnTd6hcLtB3uFya5un3
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
      "]]}, 
    {RGBColor[1, 0.1, 0.6], PointSize[0.002777777777777778], Thickness[Large],
      LineBox[CompressedData["
1:eJxd1n9c0+X6+PFValqkWJToIZ2KhoY2jXQV1qWiriSbioqKNhV1KuqEAeP3
/FFNI11HTk7FXEZFxbGV6MEj1kzLVdSZRkVGuU7UwaTaR6nQQ51v34fvbW9f
/tPj9Xhyc3Ht5k4HLl47Y+m1Go3m1PUazf//75U/wQc1V/+RDbM739nb5cZx
V7K7TNyaf8O0EfcqHS2GD57Nful0mtIx4j7SusPgMysdK8/vbC/8aKdN6ThJ
D3yYpXvncaW1UlU485dfjz+j9CC59P3sD+bN3610vLi+PffAlsFVSg+Vz3TX
XFvyXI3SCdK3Jav7j+8cUHq4LF35yee2l/+pdKLYHg2crt17TOmRor0u55Pe
599TWifB1zUF600fKT1KNNv6JA91nVZ6tMR/9ewvGw2fK323ZB6JHjIy0Kx0
kuQX3t/tkvcbpe+R+zW/T9j86ndKj5GbOgv/fm7CD0qPFf9XL2+54YWfldbL
mbfebrBfvKD0vZK9/eihe3b8qvR98vXwm+OyPr6s9P2SNGH8K4P+/j+lk+XV
idMfPFd17QNXepys7Dmu9Kuvuyr9gHww9eVRu//aQ+kH5ZfjeUOi/DcpLXIh
7sfjj6f1vtJ2kV8sTyzwx8YoPl4GXIor1EofxcdLj1PeMVGf91N8gvS/+Pp1
+8/3V3yCpEzbfcu59wYqPlEWlxYerVger/hESflqw+/eRXconiI3PXzkPxu8
wxVPkaQF+98V50jFJ8lbb62tzFo7SvFJUnShfcV/vrpb8clyb23hrOTKMYpP
lvlbU+6Jq71X8SmSP6n5ofm6cYpPEddO15LNW0Vxg/g3Fd767fEJihvkk0t/
X/beg5MUf0g2zTx5s/sGg+IPyZTPH636fMRUxR+W6casuLYD0xR/WD7/sOOH
h9KmKz5VNjwwVmMpn6n4VCl+RHPTmz1mK54qH/Yc8KOuMV3xVIl6ZE+339vn
K/6IvPDzD7mj8h5T/BEZ5nYO3vzGIsWnSaN81KNPyxLFp8ml8yvePDZ3meKP
ypSO0fGz+q1Q/FFZqLdNXj8yS3Gj9Njtfvbi3rVXWoxy+kzx2cP165SvN8pl
/S7P+m9zrrTXKIlTB9dppuYp56fLHa+cfbv6sk05P12e/qT30eOXi5Tz0yVz
/qL+5WllyvnpMv3V7HODN69Xzs+Qg8fmJR7Yu1E5P0PefWTErdPbH1fOz5Cc
jff9evNWh3J+hix6rlfLGetTyvmZYh+9+eCaN7Yq52dKRdyQj3xDn1HOz5RP
dxY8FD18u3J+plw8urfXTvPflPNpUvFlV2/cuR3K+TQ5NX/Ef287sEs5nyaF
Pdfe9+XHe5TzabL988Azn+1zK+dnyZD+0ad+dO5Tzs+Ssh6btqz9R5Vyfpbk
nXy74Gjcy8r5WfLGhmEv/t/JV5Tzs2Vjr/9LueitUc7PlkHHHD2mdPco52fL
4VWtQycH3lDOz5ZtffecPffjAeX8HHm4fNgtE8ceUs7PkS8q7zp48/E65fwc
SXzO1+1r1xHl/By5r3PnqK7H3lLOp8uNXXOnrBl0TDmfLlMP98vP7HNcOZ8u
zXc+VXnXpHeV8+nyj9///dPEN08q5+dKZ2qf+z9Z+oFyfq40H63t8+3yj5Tz
c2Xp20O/edPkV87Pld57ojuHP3BaOT9P9N9pbj4/vVE5P098f7tp37B9nynn
50nqU/MvfXrPF8r5efLpO4uv3R/TrJyfL9n+J3bPnnJWOT9f/D22zj2y6hvl
/Hw58tzwAz8s/1Y5P182PvLA/nHPfaecz5DLK1NPrrq1VTmfIa90XfPRxcYf
lPMZUrS37ZNR3/2onM+QmAHGrCMvB5XzC+Td8mm/Rm+7oJxfILNe8z24YH+7
cn6B3Ph4yo6uUb8p5xeIdsTKXv1fv6ScXyh7rWOP5O7tVM4vlDFjhlxwf/c/
5fxCmTXt49vs715z5e9l70Lpcd/49wIN1yl/Tz8m1u1LRq/u2e1Ky2OS7Ml+
5/K27lfa/pjkTutzoXrOjcr5P3vSN5PfW9VTOW8S3eYdP8w8F32ltSape3Fy
x9j3b1a+n0m6bDljMDXFXGmTSWYm33j3nX37KN/fJGXeilmTnu57pd0mmZS9
cMDCe+KUeSbZ/MOnv5+KHnClAya5UH7bmpd7DlTmL5K7v2rIG/faIGX+Irkm
+52/N86LV+Yvko0bjnz0aexQZf4iyT72WWD52TuU+YvkdOCuxU+/PEyZv0ha
+z7TL3PFncr8RdLl+hl7nowbocxfJH+Ud5zdVjdSmb9YJqwesepf/XTK/MVi
nj90R+57Sstimf/aP4p3ZYxS5i+W6s2jbtrypdL2xfLNiZgnnpowWpm/WO7t
/Lyy6RmlvYvlv4vnxdo/UDqwWHq8dnDCfT8prVkiz99/8sUx/1Nau0S8My78
dC7UskQc1gGJ31xQ2rREHrvQp3TPGaXtS2Rdv0nmgsOh+Utkz6czl+8Iz18i
u0e+uLkpMzR/iRx9/uicL5JC8zOlvPTRaRevDc3PFOn9/dzxfmU/yZTb/8/W
86U9of0zZeTsohdPrwrtnymXnyi6bdr9SrszJTcm4cuiKKW9mWKeeUf/fWeV
zzOQKT1G197zc63SmqVS5nphUWl56PNfKg3D3z89f1no818qfZf93MMxQWnT
UolxPOe+rFXavlRKbxm9reoapd1LZf31u7q1+O5S5i+VG2fWeHb8VenAUtnY
snXjKJPSmmVyd5fhK4tHKa1dJoXN58ZN6Ka0LJMSy4UvU79Wfl9My+SV085f
lh1W2r5MdrS/8ErGDqXdy+TpCxMu/Ddfae8yOTql8eeY+UoHlskdM3v2LZTQ
799yObbvh1maBKW1y8XkWH5DWW+lZbk8nN4Z4+9Ufn9Ny6Vt6pfH/3VOafty
2VtmO57RpLR7uUwb8VD3dJ/S3uXSu3jiwarDod//5XLX1OmahBqlNWbZtviF
W9/fq7TWLBPu3X3ZUqG0mOXX1Z9abtgSmm+WrZeOfLHeHppvloJZ5/u9mx+a
b5alX+7deHxtaL5Zbln66IHV5tB8s0w8+vj6g4tC81dIbpfo/zw9PzR/hZwb
XtT6w6zQ/D9727frjxlD81fI6Ed7VVyfGpq/Qnrkv3/6wJTQ/BXy5Q3ZtUcn
huavkKcGHlx8u4Tmr5Dl2fNqPkwOzV8pvrj+HcfuDc1fKR8/vFF/eUxo/kpJ
ND8TWJMUmr9SNl7I+qLf6ND8lTJ83lHbpbtC81fKgt9O5XcbGZq/UsoP2s6P
SwzNXymfeAuSK4eH5q+SXqNqtP2HheavEvdjrgrvHaH5q6Tf5D2f2oeG5q8S
R3BrRsaQ0PxV8sGhE03G+ND8VVL7zNY7MwaH5q+SjqIemcWDQvNXyaRFU4+8
PjA0P0t+fuWss10bmp8l5y4+vfyhUEuWnOm69N81A0Lzs+RwUZd3bg+1PUu6
9NX+e1f/0PwseSpaP3ZwqL1Zcvzn9Q0Hbw/Nz5INo/84Nj3UmtUyt/HQw7+G
/v+sXS3flA1+bV+oZbWMH+8ZOzvUptXS95slM6NDbV8twwwvrPH/JTR/teRt
6NXt2VB7V8vF4cXPm0IdWC2/jOk8fVeoNWvk5YnXjbku1No1Ytu/c82ZfqH5
a0T//fMJB0NtWiNzNo7osz3U9jWyvTFwMSfU7jWy6JUlpXNC7V0jA8Z9XTQu
1IE1cmbc+kNDQq1ZK5P+1+f3XqHWrpWlf7wwqLNvaP5aebtN88e5UJvWSuMW
54ovQm1fK/+t/nHCB6F2r5VvD7y4sj7U3rXS88GO46+HOrBWsm6sTKoKtcYi
cbdsrtoZ6miLPD3i5O/bQq21yD2tkvhkqHUWKdTvur0s/PNZZMaBG47lh9po
kR9/v+/6deGf1yJzRg3598pQWyzSEfwtZWn457fIwEv/HWwKtdMi3/xcZJ0f
3sciv0zenzgn1B6LHL7m+Ykzw/tZ5IYxd7zxaKj9FtEM8q1ODe9rkZW1r2c/
FOqgRW4zuw9PDu+/TibM+j45Jbz/Olm7cOpv48P7r5OPTFEtD4b3XycvTf/X
H+PC+6+TM0m7JiaH918nh774YP994f3XieGRXuPuDe+/ThwXFp4fG95/ncwZ
3X5oTHj/dTLy0OQ994T3XyevDuxWmRTef50MklvfuDu8/58/f+XjZ0aH918n
b9q23xbuwDqZN3DfklHh/dfJP57We3Xh/bNl7iN/DA93dLbE1tXtuyu8f7Y8
kGEYGm5dtkx/8aXakeH9s8V96NvUcBuzJT43/qcR4f2zpbLevSPclmx5sP55
Q7jt2bI+364JtzNbLiyveisxvH+26Mdt2BBuT7Z463ZNDbc3WzbvK+gbbn+2
9Pi09vyd4f2zZeTC88fCHcwWx4ETu8OtyZFBHT/bwh2dIwtmDJ4bbm2ObDX+
JTncuhy5MG/XwHBLjlwz2twj3MYcac2ffnF4eP8cSUm542y4LTnywLG3GsJt
z5HBp4JHwu3MkV+P7KwJtztHfv7W9Vy4PTnykt3/TLi9OTLWNOSJcPtz5NDf
S4vCHciRo/Xvrgt3MEfyvvjOHG6NVQJxDaZwR1vlHynL54Zba5U/tr48I9w6
q7hdpanhFqt8/8DZyeE2WuWfG4+Oj+xvlbutPcdF9rfKjN4+fWR/qzTf901S
ZH+rdK2cPiqyv1Ve2dl7ZGR/q8iEfndG9rdKrweXJkT2t8rB99qGRPa3Sqvz
tcGR/a0y/MPKgZH9c2VHz/oBkf1z5cnZXftH9s+VC79Z4yL758rhndf/JbJ/
ruSO+GffyP65cql1c2xk/9w//wVv7RPZP1deD+TdFtk/V7yvbrs1sn+unNlf
HxPZP1fKEzpvieyfK58Vpkbamyv/Sqy5ObJ/rmR93zfSgVx5Y3VF78j+udKz
ql+kNXnSvvG16Mj+ebK//+RIa/Nk2a5zvSL758lE3d8iLXny2XBDpI158mTL
NZE25cnY9471jOyfJ5cmPRlpe55c+G56pJ158tDdAyPtzpPEd9tviuz/5897
f0OkvXmSLi9H2p8nBzY8HulAnqT9c1mkg3lyrurhSGvy5XzXUZGOzpeBL/WN
tDZfhs7sEmldvvzxdTAqsn++1A44G2njn/7Tx5E25UvbMG+kLfmyz/NmpO35
0n3ZS5F25sv2u3ZH2p0vvX5xRtqTL5nuJyPtzZcVt5dF2p8vR+fmRzqQLxUp
lkgH8+W5j1dEWmOTc+eWRDraJm9uXhhprU0W7JsbaZ1NHh42S7W/TT6Oma7a
3ya3ZTyi2t8mt/z2kGp/m2R9PVm1/599Y4pqf5v8lj9etb9NrP0fVO1vk1OX
klX728Tc9X7V/jb5Pfle1f42qa0cq9rfJt0GjlHtXyCH3ktS7V8ggS13q/Yv
kH+tHK3av0Buzhyl2r9ArFadav8Cad15l2r/Ann29EjV/gXycZyq7QXSNX+E
av8C+eRsomr/Avlplqo9BTKs6U7V/gViW6pqf4Gc7Ryu2r9ASvaoOlggpZNV
rSmUhN+GqfYvlI/2q1pbKI1ZqtYVSrVO1VIo719KUO1fKG+fVLWpUG7fpWpL
oay3qNpeKFsfVrWzUH65Q9XuQjF3V7WnUJ4/f4dq/0LJPKVqf6HYDqs6UCgv
vaDq4J8/3zZVa4pkd4mqo4uk12pVa4vk0gJV64pkjFHVUiQ1E1VtLJJxelWb
iuTUCFVbisQYr2p7kbz4F1U7i+ToLap2F8njUar2FEl7V/X+RfLr/4aq9i+S
0suqDhTJxl9UHfzz64Oq1hRLY5uqo4vlxnOq1hbLru9UrSuWgn+rWoplz1lV
G4vlmq9UbSqW58+o2lIs1iZV2//8fp+p2lksrzaq2l0sXT5RtadYNp5StbdY
hvjV+xfLdx+r9y+W4x+p9y+WIw3q/Uvk5Ifq/Uvk/Afq/UtkkLp1JbLqffX+
JXLcp96/RO5Ut6lEnj+p3r9EBqvbXiJvvKfev0SmqNtdIv95V71/iTjV7S0R
Ube/RH47od6/RGrVHSyRAnVrSmW8uqNLJVrd2lL59rh6/1I5rG4ple3qNpaK
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
UyL+/wAk4ihK
      "]]}, 
    {RGBColor[0.1, 0.1, 1], PointSize[0.002777777777777778], Thickness[Large],
      LineBox[CompressedData["
1:eJxd2H94i9f/x/HYjKqqjI6MIqOIrZugKCveKDqrCYrQIqUIWtLf6e87aREU
QU1QlVltMWVhZUVNWFFbR1hH0PlkdBRlQRFT8/W9nCS31/7Z9bwe1+nxzulJ
7vSD2Usmzn1LIBCcby4Q/P//X//nGCZ48z8Kja6NC97WdOjr9KKMnyI/9L0k
Zi2kC99JQ2uv9mHtRwnfJ/daMnwYaxHteNC9i68mjLU/Da/9e2jejQmsxXQ0
f5zkQ5ucdVfq8qAiuq9RwTqARl9Z7XXCOJd1D5I2ObP4M+0i1hKqeDoof8/H
8aw/pCXNn6yb2zWZdSBdlp/VNpSksf6EJi1LyZtVk81aSjq/pd5fKrSs+1Cv
x2cH/3xwKeu+tG5d7eMD6StY96Ok+f2KYn9czTqIclfeSsgJWce6P4W9E/ok
6uYG1gNoyaVDX263f8l6IC09cnP4pH5bWAfT85fdfp1waxvrQTQ14NGxj97+
ivVgehgy5e/8cV+z/pR6X1rjY7btZB1C3/Qo3N56t4n1ENqlKfr11193sx5K
tzI/aXNkxPesh9H+9PDhQ/P3sSY6NHDv9VG7f3jdHNGd6mEFu98+yHw4HVEL
HB9tLWM+nDQDZk5rpz7CfAQ90deaIr/6ifkI6py+vef41seZj6RPzi337tp4
gvlIqugZZ63oeJJ5KBVNlTo/TzzNPJS2CXc/H+f1C/NRFBXQY5zDXsV8FOW2
Wm39t4mV+Wi6e/DAhXnl55mPpp2PJ3T//evfmY+hEae/nXOs/A/mY+ivmAvU
2cfGPIw+9GvqFb3pCvMwitx3e0RezJ/MP6Pjd06d9x1iZ/4Ztd349q4D//zF
fCzdrzms6Hv2BvOxNHXb3s03a/5m/jlNGNHTu1hcx/xz6n8i3/xj0R3m4bRD
MTjgSdQ95uF09Lt8fa3UwXwcHanYP6DLlQfMxxE3sXVnn72PmH9Bvle9N/9j
fsz8C+o+4JuOGbeeMh9Pq6OHfWCb8i/z8fSBX5GktOkL5jLKv/nsr3FPX75u
ktHTZ6UXj29p8vp9gJPRrHGGk/Fz3n7dFhmN8Z444dq0d9j7xAQas8I7dLO2
+eumCeS/ufnAXddbsPUT6PiHUwZtzPFh6yfQH3FDt8fPas3WTySvLx60TA19
l62fSH2bFxfsb9KWrZ9I183tt6bc9WPrJ9LuU2Fb+jdrz9ZPoiZ792z/fcr7
bP0kqqj23bzveke2fhLN+/CR5dD3ndn6SdTv9sUdA66L2foIWhl7vfjZhq5s
fQTt/e3b7/3iA9j6CLrZb8X5K1k92PoIUpb9PL7VMQlbP5mOpl9dd3PQR2z9
ZDo06lrnHg0fs/WTadXTMTd806Vs/WRqM3RJC4W4L1s/hd7ZMUBoc/Rj66eQ
rc3ZnF3/9Gfrp9DBrW2j4z8IZuunkPeonnuHrxrM1k+lQy33Hi/pO4Stn0qJ
x9ffq/Mltn4qBQ5spTywazhbP5U6LDykiYsbydbLqbjN1mtdZo5i6+U0s1fn
l8SNYevlFDL/1uNS22dsvZweHzU/vRwbztZPI9+ODy9sGDGerZ9GIU87fxIo
ncDWT6On9ybFFd2cyNZPI2MSN1RbGcHWT6chm2Lvt78yha2fTmdzx51uJp7G
1k+nhV+0uTp3eyRbP52aDu06+uSMmWx9JL18uq1+q1nB1kfS3yu45Z/IZ7P1
kRRR0G59/14xbH0kLU4+tqqw5zy2Poo+bjGjS/FUJVsfResCi3NuHl3I1kdR
6sUMr8hZcWx9FP3+Q8KsErGKrZ9BpidNCn4tjWfrZ1Dgl13mtFuSyNbPoAtF
Rz86OTGZrZ9BPse2XAqek8rWz6SjQWeiHn2dxtbPpHU3O8fmizLZ+pk0ZWEL
6VcV2Wz9THJs4a5f+4Nj62fRjr5c7Hallq2fRSfeSqn2889j62fRpMhfBmQ+
WMrWz6Ivvu1RXHJ7OVuvoCe72/13v+nK1y1WUGtby32/jchnP09BJ3IuRNV8
teZ1KxR0eVz0kPK1evbzFbTeq8+pE1fXvW7jq/Y+t8+v7wa2n4J+WTnxt9Nr
Cl63XUFtsw/4/K9+I9s/mtZVDVgxcvQmtn80eV1c2/v3DQa2fzRJL3Y7vuq3
zWz/aNJf7XPl4p0tbP9oIkuQ5en1rWz/aIr2y7q3cU8h2z+a/jhTnCkfuY3t
H009J5bM4opYC2bTCv9zxxYdYS2eTQrDlSP3DKxpNuW3+bdgUTBrxWwKG32+
++Ft7Odzs+n7jNsHjp917T+b7Ndvn3p6gf37LLPpYNr7d3/ez/799tnUtHtW
179T2HyCOdTTTzHrdk/X/HPoh2//Sj/xG3t9aA7NuVvaPmsJe/0Uc2hQswuj
RG3Z68vNIW7Hu0/VR12v/xwabd60KiGBnY9lDpkPV757ZAE7P/sc+sv3cHls
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
SbR6cp4i7xpraRIdP3HkZoeLrCmJKno16Zt8lrUsiVa++hXQnGatSKKZ3Mal
vY+zViXRuMfF36mOsOaSqB1FLxt4kLU+iTp+Xu9I3cfamEQqxbg/e+xhbU6i
nnGHhg3exdqSRPPO9Hli2snamkQZ/iN/WLiDtT2J7vy9/07qdtaOV//+H+4f
O1Pomj+ZunT3ezJti2v+ZGq5NvavrgbX/Ml0IH3w9C5fuuZPpq2jD5vHFrjm
T6aE/wbtMK53zZ9M3l69x3da55o/mUrW9e17dK1r/lc/7/S59llrXPMnU8Qx
Yfvpq13zJ1NXS9nKCfmu+ZPpfC//ltGrXPMn042vliuXrXTNn0zv5Pb65tgK
1/zJtOhg/GNvV9uTSd/vz33zdK75k+m/qG4zzi93zZ9CuojyrZ+5WphCedKy
PmeXueZPocof//dyhqulKdTzcfsmzqWu+VOoxdq3wra6WpZCpqg/Gke7WpFC
3/SLifw3zzV/Cr09Q76v1NVcCnmtWheV7Gp9Co1fWXLmU1cbU8g8rCShuavN
KfRP9fE/L+W65k+heUP7FJa42ppCL5eO/2ypq+0p9GWuYUW0qx0p9Ptfl1sM
d7UglVbmxGd3c7Uwlfov2rbDy9XiVDp47epAh9Y1fyqNOD3tnSuuplTavWzx
pZOulqXShMPdcn5wtSKVfB2nz+9wtSqVvh67yrTB1VwqxX3S3b7U1fpUCg/Q
ytNcbUyllH5pDXGuNqfS1qa6zXNcbUmlWdKNvae72ppKRb3KjBNcbU+la9Ts
8meudqRS4tiYUyNcLVDTyIwoeYirhWoK6uDMGeBqsZokewp793HPr6Zpsvrp
ge751bTuvulJT/f8aurcfouzm3t+NR0LSp4qds+vpqb3T3t3cs+vJt+sWu8O
7vnVtMt6TtbePb+aZozrc9HPPb+a1niFbmzjnl9N8sgzOqF7fjVd2dO429c9
v5oKZ+r+9XHPr6YeJRmqlu7502j2iuHe3u7502jRGEOFl3v+NJrSZGVhc/f8
aTS/bO7aZu7506hQeGjLO+750+he0djypu750yi43O/h2+7500htpcHu5tJo
W8tuG95yz59GNzQDnjdxz59Glh3vx7vbnEbN3lr1SOCeP43+XjRP425rGlWH
7Hjf3fY0in0afuSlxjV/GkW2WTXX3YJ0yntW0N7dwnTKGHLA+p+rxek08d5o
vbul6fRDu9LJ7qZ0ciiTxO6WpdPPT1s6XrhakU53OnhXuFuVTg3zvQrdzaXT
/Z93pbpbn077Vm6e4m5jOt0+szLY3eZ0envNwE7utqTTjGGKpu62ptM431/v
Nbrank4FsSMvu9uRTl4bNp9ytyCDEtrsOOBuYQbFLu7/jbvFGaQ93tvgbmkG
7VygWuVuyqBh5Zdz3C3LoE7HZcnuVmTQoUfli9ytyqAu3l5z3M1lkOh4p0h3
6zPoWcndSe42ZtAZ3+hx7jZnUPiexWPcbcmg1fuajXC3NYP2LvMf4pk/g4zl
xcGe+TOIu1cQ5Jk/kxbvvCH1zJ9JOeG6jz3zZ9LZNhkfeubPpBHXSnt65s+k
poN7d/fMn0lLx9R29cyfSefNZ8We+TOpfeHtzp75MynZKO3kmT+TjEe2d/TM
n0lfh/Xr4Jk/kyY+vSXyzJ9J2ysOt/fMn0kFj0ztPPNnUkMz83ue+TMp8chv
fp75s2jeWwJPC7PI90VoW8/8WRTo3NLGM38WtVUKPE1Z1OrvxHc982eRSNIg
9MyfRQ+ac55WZdGklHae5rJoXdbB1p75s0g2dJanjVm07F5rT5uzaPuF076e
+bOoctQyT1uzKG3vWE/bs+ilxs/Tjiz6bMSNVp75s6ks86CnhdnU8cxqT4uz
6XCl0tPSbErtPsbTlE0t10k8Lcumzyp8PK3IJk32Ix/P/Nl0Pa/G01w2Pfjq
tKf12dR+Z6mnjdnUdfbXnjZn09/mDZ62ZFNN7FJPW7PpQpLa0/Zs2vxdrKcd
2VTxMNrTghyaGST3tDCHDsvHe1qcQ0M+H+NpaQ5Jng3zNOVQwoRBnpblUFFo
P08rcmhTxce8+XNIXyHhzZ9DdcEBvPlzqEV7MW/+HJoy2Z83fw61vivizZ9D
I6zv8ebPoR9ftOHNn0NXYoW8+XPoYHtf3vwcXXa29LQXR1NbevNeD472jfXy
tIijP/Y3470+HLWkdzwt4ch5/23e68WRrvwtTwdz9HhnE97rx1GpSeDpMI7S
T7xs6Xk9OQp88J+n5Rzd7MtrBUd3l77wtJKjkrpGT6s4+nEar9UcHb/03NMc
R1ujea3jKOjJv57Wc6Qv4LWBo98+5bWRo453n3naxNGxr3ht5sh3Fq/LOFrS
ldcWjmR3nZ6u5GjAIV5bOTKt4rWNI5rNaztHW0J4XcfR7A68dnA0+vlTTzs5
enGN1wINjTnJay8N3dzDa6GGvjXwWqShyUt5LdbQqUReSzR0dg6vpRr6fDKv
gzUkCuM1aahDCK/DNNS3D69lGhrbk9dyDY3uzGuFht5rx2ulhnb48lqloT+b
81qtoQNNeM1pqFPjE975a6jZU17rNTTvIa8NGupzn9dGDc26w2vTq9fvJq/N
Gjp2g9dlGrLbeW3RUOg1XldqqPYqr60aOnqZ1zYNnb7Ea7uGBBd5XachRTWv
HRq6dYHXTg3pz/NaoKVpVl57aWnIOV4LtRRyltciLU34jddiLWVV8VqipSO/
8lqqJR9+B2tp0S+8Ji1dPcPrMC1N4bdMS9cqeS3XkorfCi214rdSS/tP81ql
pWh+q7XUjt+cli6c4p+/ljbwW6+lSH4btCTht1FL/57kn7+WzvHbrKXv+F2m
peX8tmhJye9KLY3lt1VLUn7btCTit11Lb/O7Tkv3K/jnr6U/+e3UUhW/Bbn0
E7+9csnMb2Eu7eS3KJc281uc++rzjH/+ubSM39JcyuF3cC6l8ptyKZ7fYbm0
kN+yXJrLb3kuzeK3Ipci+a3MpSn8VuXSJH6rc2k8v7lcCue3LpfC+K3PpdH8
NuTSSH4bc2k4v025NJTf5lwK4XdZLg3ityWXgvldmUsD+G2FtuVSf37boety
KeiN88+lfm+cfy71eeP8895srzySvnH+0KI86v3G+UNL8uiTN84fOjiPPn7j
/MHDwGXgcnAFuBJcBa4G58B14HpwA7gR3ARuBi8Dt4BXglvBbeB28DpwB7gT
XLD0Tfda+qYLwUXgYnAJuBQ8GJzAw8Bl4HJwBbgSXAWuBufAdeB6cAO4EdwE
bgYvA7eAV4JbwW3gdvA6cAe4E1ywDM5/GZw/uAhcDC4Bl4IHgxN4GLgMXA6u
AFeCq8DV4By4DlwPbgA3gpvAzeBl4BbwSnAruA3cDl4H7gB3gguWw/kvh/MH
F4GLwSXgUvBgcAIPA5eBy8EV4EpwFbganAPXgevBDeBGcBO4GbwM3AJeCW4F
t4HbwevAHeBOcIEOzl8H5w8uAheDS8Cl4MHgBB4GLgOXgyvAleAqcDU4B64D
14MbwI3gJnAzeBm4BbwS3ApuA7eD14E7wJ3gghVw/ivg/MFF4GJwCbgUPBic
wMPAZeBycAW4ElwFrgbnwHXgenADuBHcBG4GLwO3gFeCW8Ft4HbwOnAHuBNc
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
gweAS8ADwaXgQeDB4CHgBB7q8f8DXym8Nw==
      "]]}, 
    {RGBColor[0.6, 0.1, 1], PointSize[0.002777777777777778], Thickness[Large],
      LineBox[CompressedData["
1:eJxd1n981XP/+PGjkmJck8lRk5NWLS1OrFo1eaqlE7vqlFWrlk611qlWnf0+
+33S5GDlxNSqxUEY5nJkOBgO7WIuk1PN5dDk0MqRlYNhmMvH99v7nPPeo3/c
Hrd7z54997q9bxm+ctP81X00Gs3hCzSa//ffc7+CN2t6/5KNz8/rLj3/6+Rz
OUDGpn5U1/3FsJvOdbSkPvHarKPam5SOkVNj1u4/tnq+0lp5Z4Vp8KbgSqVj
5ZNbL9AfTMhRWidzv6gbfu9DZUpfI7cZ+92UtGCr0nEy88vxaxc86VB6lIz5
qvOK9wK7lI6XF7JMBWufdSp9rZw8vDbzoeeeUjpBykdeklM58V9KXyeGvsHv
bv/gJaX1Mjq/O2uP/TWlx8ue5JI69wyP0jeIa/6VT95Y3qz0jbJvyocHa7d/
oHSiGMY8Wdq8+2OlJ0jPx1vG3L/yqNITZfKNnzVoHvlU6UlSvaNtwKe72pVO
kuWNfX/4bsJXSk+W49FvffVSXYfSUyS1+efjf+wIKD1VJq4edOu7Y84onSxZ
s16+cfZNPyh9k4wf/dMFp+d0KT1Nrs78a+og369K3yyLWy7/tD3wh9Iie2/Y
l904WzPt/6dNZERM/6cv+qXPudbcIj8/uGh+oF9/xW+Rxf9Iu3TMloGKT5ej
Xv/10ysvVny6XPh7n59f6Xep4jPkjfR3R/+w+zLFZ8gS27DGrfcOVjxFqtsv
j+88fqXiKWKckHTRb09dpfhMObTL4h3QrVN8plyd/uCb164eofitMuvEnJe/
HTFK8Vvl8/GOl1ZMG6P4LOl8NveBE28nKD5LArULS6uX6BU3yNsnh6cM3nmD
4gapOXjxjNIhExSfLR/l3zJvV3CS4rNl276v35p3zVTFb5PY1tuSm16fpvht
8vFz/9o/ZNUtit8u9+XeY5j1zAzFbxf7XcsO7510q+KpMnWL/+Arg2crnioX
ZQ/9apIxVfF/ylfnv1X/xdm5iv/d644MueOveYrPkSWbvj9dfGua4nOk8MGU
k0vaFio+V8oPXNV224uLFZ8rWSNSv685laG4UVY0Ta+8/WbTuRaj3B48b5Fl
+krl9xtl+GWmyWO3ZJ5rj1FsVZNvbBiwRpmfJ3OrP33/l8/XKvPzZNwsTdTv
fTYo8/Pk/IfmeRbMtCjz86SzfHTlg9Nylfn5MmDk8P6r8vKV+fkyJW95VcPp
QmV+vvTkyG3DGoqV+fny1JcVfoOnTJm/Q249NKpjqdamzN8hB7VrhlzQ7y5l
/g55P1pbfdmYKmX+Drl4SN+C2O1blfk0OXa5o7Viyr3KfJpsyfqsZtPEamU+
Te7efE9LzP0PKPNpctebr9UZH9uhzC+QqYnLj09ufEiZXyBDhz3Sf1+/ncr8
AhmXXXnm/t21yvwCSdMsn/VtyV5lfqH0/zlq3OYXH1HmF8oVlz1jfHDEY8r8
QpmYbp6aOeIJZX6hrLTc1TftzieV+UUyZvKWqyYee1qZXyQXdec2PffYs8r8
Innvvje3T339eWV+kbxz3lPeibtcyny63K5NW19QdUCZT5et23+d5H22UZlP
l5xDh4Z2Rb+qzKdLytpdvy156zVlfrG4sydkr36jSZlfLP1b9/36xgCPMr9Y
fjmysnvbyXeU+cWy46VXGwb9flCZXyKfbr7t4bOp7ynzS+TDR6d01Z5sUeaX
yEvDauYUtX6ozC+RCw+Meb7nwo+V+aXyH7lz+6kFh5X5pXJp27V/5i47qswv
lQEDso6cfPwTZX6pBFbo9x4f51PmM2RsVV3Rr/2PKfMZcuLgzT0nJx1X5jNk
1bEBF3hP+pX5DNnTmlw2/ZuvlfllMvuLR3Nmjj6pzC+T+D/S5rmf/0aZXya3
XJHQWrzltDK/TL6bnlBadeCMMn+nrBhy2tD/iaAyf6ccuee/rXOe/FGZv1M+
2BE7b+g3Xcr8nRLljp893vKrMr9cRslHT8fN/l2ZXy4HNz6/Z0npn8r8cnlm
aVnjZrvm3L/rnuWS9faP72+5r4/y77xJDt487LGcD/qda51JSrQX3TLh9gvO
tZhk7JEdz756+YXn2mSS6Pozrseuu/hc20zy0n3l72z5Z/S5dpok1/vn9orr
Byn7THLVe4P63jct5lz7TXLZlT0xJ0oGK/tXyOCGj0zrT2iV/StkQdsf/1ta
MFTZv0LaG8fNOj9hmLJ/hQz/LioxzaZT9q+Qoj3Tr0/+ebiyf4U8ptvRmrVp
hLJ/hTS9t7ezJRCn7F8hh/99SUlwyShl/0qxz5s2x/z2aGX/Spl395N/jYge
o+xfKc/Nz1l+cta1yv6VUrF45rFtK8cq+1fKN77/2OctS1D2r5QM05G09yeO
U/avlD+T1vTxnVXav1J+L/j4wINbr1P2r5I7x395b/AvpXWrpH7ChoIdy65X
9q+SPOvI50oeV9q0SuYGvz3bflhp2yppr5v0x8mzSjtXyYj5t0c90qO0Z5Vc
Xnb3l94/lfavko/m+0o1PyutyZRnNwx2Le9QWpcpS7cOSzzyUWh/pvz7vK93
Bg+E9mfK8uiE0kseDu3PFHNT3HnTC0L7M+XwzBPb1qeF9mfKKyW3rLnpxtD+
THnk2JKPpw8K7V8ty14fmHvqh9D9qyU47sCl1iNKy2o53WzKHd+otGm1HLl0
6LYpu5S2rZb71icPfb5UaedquXn7uupdK5T2rJatZdNK/jIo7V8tUca+DSfG
h37+WbLMWfzGTbGh/VlSXdq8tu+A0P4sqTr77oujf1bez5QlgY0pT+w9obQt
S1K0bdFzjyrtzJJ3XzBqxzeH3j9Lvv9Zv03/Suj9s+SGgQm3JT+jtGaNvJty
3qYZ+5TWrZHJ78/cPuFBpWWNLPlu3aE+9tD+NbLuv3s1dRWh/WvkqpKaF34s
CO1fI2OGXhf/24bQ/jXy4qiB5Y9nhfavkV2nCrd+vTy03yxlp6u/fH5xaL9Z
pu296qvf7gjtN0vc7rF7m+aE9pulv3vOR52zQ/vN0p1lPr55Zmi/WZ4Y8MPR
vFtC+81yavEVs9+4KbTfLI0ffLF63pTQ/rViP2/Rf6+fFNq/Vu5aOORdY2Jo
/1oZeHGf5n+ND+1fK2uDN3+dcn1o/1r5sti79ZJxof1rxW2eZ71gbGj/Wom7
dNrRsWNC+9fKsSd39LWODu1fJ6cnH3orMDK0f53MuzzrfyVxof3rJGFE1e9j
R4T2r5Ppz10/8rfhof3rJGrU+yP9utD+dfLmWx+1Hb86tH+dLP2tf9JPw0L7
18mpM8cqhoZas152Pnz+XwuuCu1fL0PeKRr/WGxo/3rpyrW/8MfQ0P718t1d
c/WZobatl4cfnbL1syGh/evl8a7DdUtC7Vkve4LPFJ66MrR/vWzxVYwtC7Um
W166qOjUkFDrsiUv6t6Od7Sh/dky8qE+eZZQm7LlI911Z0eG2pYt7QdiPF9d
EdqfLX1XL17+RKg92ZL5S8KcdaH2Z4v7n4uunBhqzQb5deqCRf1Drdsgzx23
P/354ND+DfLBNaUvHgi1aYPE9B8Xtz3Utg1ywFj0cnaonRvk6O6i4XNC7dkg
HZsHXntDqP0bJHrE7Tu1odZslBdax95wXqh1G0U3vt+h7y4P7d8ow26eNM0X
atNGyf7+8yXvhdq2Ubbeaf7r5VA7N8rRXbkXPh1qz0YZVbVq2e5Q+zfK6OJp
7dWh1mySz35Ys2FzqHWbZEKf3N8Kw/s3yTe6M+s2hPdvkh2nk/+VGd6/Se6/
1/JiRnj/JhmbPyxzQXj/Jvlt8oxX54T3b5Jlw0bsM4T3W2RtynUDZ4Q62iK+
xG++vyn897FI5v0f3jo51HqLLN83rd+E8N/PIp+dLbh6fKiNFtk+d41jXPjv
a5GDpe6514baYpF7dK6Fo8N/f4vcMDL+0bhQOyzyxbDNI64J32MRe9vO41eH
2mWRb5te/vCq8H0W+d6049TQUHstsuiBqWOHhO+1yNm5sTu1oQ5a5NKtp0dc
Eb4/R5pufPLw5eH7cyR97ra6mPD9OTJYp7vrsvD9OTLu8kG2QeH7c+TDi2+r
uTR8f450XfBFU3T4/hypH3dh9z/C9+dIRtKklHDbcmT2iDOPXhK+P0f+HPnJ
wHA7c6TPDy/bLg7fnyOBUTl9w+3JkaeiztsRFb4/Rx7OLowPtz9HHn/6l5aL
wvfnyJngaznh1uTKha6B14Q7Oldc/W/+7MLw/bnyTeE7O8Otz5WXnzp/Sbgl
V/43rfqacBtz5eoT/u8Hhu/PlSk3734n3JZcmTE2bVe4bbnyo99tCbcjV4bM
KPxnuJ25ciRx+rhwu3JF95fvH+H25MqZgz1dA8L350rfP/Pbw+3PlQn9L3kv
3MFceeLF2hfDrcmTpJPfPhLu6Dz5l3y+Ldy6PJn14cyKcOvzZFf9RZZwS558
cfTiVeE25smwr/SLwm3KkyMHl6aG25InuXuKpofblid5FZsmh9uRJ3vT9ePD
7cyTY+76MeF25cnHL7ZcE25Pntz26ubYyP150lr53uDI/XniDNx3aeT+PElr
PxgVuT9frFPXDIjcny9z3l/fL3J/vqRf8oEmcn++7FpS9OcF4fvzZdZjm34P
tzFfrsx/7tdwm/Jl709xP4fbki/H3v3vj+G25ctlPW8Ew+3IlzWjvGfD7cyX
jIR/nAm3K1/m3lHwXbg9+bL5xr++Dbc3X35zPRMItz9fOrtyvgl3MF9eXLPg
VLg1BZL+3LyT4Y4ukCd2ZnaEW1cgq/TVJ8KtL5CVz733deT+ArGvHBRpY4Es
/WTDV5H7C+Sz/Z/6I/cXyP2OOZG2FcixvMNfRu4vENeM5ZF2Fsi4qF+PR+4v
kFfO7oq0p0Au1d0SaW+BNJ764YvI/QUyffczkQ4WyNX71kRaUyijVo+NdHSh
2Cxd7ZH7C6Vm9ruR1hdKv7trIi2F0uZZF2ljoTzwREqkTYWy/djwSFsK5fZh
fSJtK5Sm0SePRe4vlNbX/hNpZ6Ec2nsg0q5CGbCnLtKeQrnlbnukvYWSdUNh
pP2FcnXJ6kgHC8WetDDSmiLxpRoiHV0kN+yeGmldkRj66COtL5LrN42MtBTJ
+A+GRtpYJNV/DIq0qUjSfrow0pYimf5o30jbiuSh73s+j9xfJP5Pfom0s0gu
mvlDpF1FMnh8Z6Q9f/cD30TaWySXLDgRaX+RnCj+MtLBIrn152OR1ljl8bd9
kY62StSRTyKts8rEUUcjrbdKxiveSItVkssPRdpolYGFrZE2WSWz7j+Rtlhl
TmdLpG1WiVv5vup+qzz0+79V91tl+4Fm1f1WWXjPQdX9VllV+K7q/r/3lb+j
ut8qt+7xqO63yhUfvq26v1iuvETV0cXy6oq3VPcXS2Hzm6r7i2XABFVLsUw4
0KS6v1jap6jaVCznHXpDdf/ff/46VduKZXS0qh3Fsu3N11X3F8vEXFW7iqVi
nKo9xXLk7Guq+4vlqZdV7S+Wqs2qDhZL1zxVa0rkoVGqji6RPn+5VfeXyJnP
Va0vkfNfV7WUyHl1qjaWyBM2VZtK5Pk1qraUSMCoaluJjEhWtaNEbhyjameJ
nL1C1a4SuW6Aqj0lcvi3V1X3l4i7U9X+Ennfr+pgiXz9iao1pfLTh6qOLpWv
31W1rlT2va5qfakMeknVUio3NqjaWCpnn1S1qVSSnKq2lEqfvaq2lYrsVLWj
VL7boWpnqfy6TdWuUll2n6o9pTL4HvX9f3eV+v5Sydisvr9Ujleo7y+TPWXq
+8vk7hL1/WXyuFV9f5l8V6i+v0wWF6jvL5PTeer7y2Rfrvr+MlmXo76/TNIs
6vvLZOEm9f1lsmmj+v4y2btBfX+ZfJatvr9MxqrbXybV69X3l8kf69T3l0ue
uqPL5Y+16vvLZZu69eUSr24pl4/M6vvLpVjdpnK5Tt2Wcjm9Rn1/uTyrbke5
bFK3s1ymqttVLhep21MuX2Sp7y+XV9TtL5cH1R0sl1x1ayrkDnVHV8gkdesq
ZJi69RXSX91SIT+uVt9fIV+q21Qhh9RtqZC31G2rkOfV7aiQx9TtrJAadbsq
xK5uT4VUqNtbIQXq9lfIOnUHK2SVujWVkqHu6Eq5Q926SvmnuvWVYlC3VEpK
r/srRXrdXynJve6vlCm97q+Uib3ur5TEXvdXyg297q8Ufa/7KyWh1/2VMrbX
/ZUS3+t+tMb29///qXqATUb2+nnY5Bp1a20yvNfPxybD1B2P1tskVt1JaLHJ
EHUbbDK018/TJlp1p9vkyl4/X5sMVrfZJlf0+nnbJEbdVvx+G9wOd8Br4U54
PdwFd8M98Ba4F+6D++EB3B9Ed9vk8l7vv7n3nzdgc2+PhmvhOng8XA9Pggvc
ADfC0+EmuBlugVvhNrgd7oDXwp3wergL7oZ74C1wL9wH98MD8CC8G665C+9/
F94froXr4PFwPTwJLnAD3AhPh5vgZrgFboXb4Ha4A14Ld8Lr4S64G+6Bt8C9
cB/cDw/Ag/BuuGYL3n8L3h+uhevg8XA9PAkucAPcCE+Hm+BmuAVuhdvgdrgD
Xgt3wuvhLrgb7oG3wL1wH9wPD8CD8G64pgrvX4X3h2vhOng8XA9PggvcADfC
0+EmuBlugVvhNrgd7oDXwp3wergL7oZ74C1wL9wH98MD8CC8G665G+9/N94f
roXr4PFwPTwJLnAD3AhPh5vgZrgFboXb4Ha4A14Ld8Lr4S64G+6Bt8C9cB/c
Dw/Ag/BuuGYr3n8r3h+uhevg8XA9PAkucAPcCE+Hm+BmuAVuhdvgdrgDXgt3
wuvhLrgb7oG3wL1wH9wPD8CD8G645h68/z14f7gWroPHw/XwJLjADXAjPB1u
gpvhFrgVboPb4Q54LdwJr4e74G64B94C98J9cD88AA/Cu+EaO97fjveHa+E6
eDxcD0+CC9wAN8LT4Sa4GW6BW+E2uB3ugNfCnfB6uAvuhnvgLXAv3Af3wwPw
ILwbrrkX738v3h+uhevg8XA9PAkucAPcCE+Hm+BmuAVuhdvgdrgDXgt3wuvh
Lrgb7oG3wL1wH9wPD8CD8G645j68/314f7gWroPHw/XwJLjADXAjPB1ugpvh
FrgVboPb4Q54LdwJr4e74G64B94C98J9cD88AA/Cu+Ga+/H+9+P94Vq4Dh4P
18OT4AI3wI3wdLgJboZb4Fa4DW6HO+C1cCe8Hu6Cu+EeeAvcC/fB/fAAPAjv
hmuq8f7VeH+4Fq6Dx8P18CS4wA1wIzwdboKb4Ra4FW6D2+EOeC3cCa+Hu+Bu
uAfeAvfCfXA/PAAPwrvhmm14/214f7gWroPHw/XwJLjADXAjPB1ugpvhFrgV
boPb4Q54LdwJr4e74G64B94C98J9cD88AA/Cu+Ga7Xj/7Xh/uBaug8fD9fAk
uMANcCM8HW6Cm+EWuBVug9vhDngt3Amvh7vgbrgH3gL3wn1wPzwAD8K74ZoH
8P4P4P3hWrgOHg/Xw5PgAjfAjfB0uAluhlvgVrgNboc74LVwJ7we7oK74R54
C9wL98H98AA8CO+Gaxy9vZ+jtw+AR8Gj4TFwLTwWroPHwePhCXA9PBGeBE+G
CzwFboCnwo3wNHg6PANugmfCzfBsuAWeD7fCy+A2eBXcDq+GO+A18Fp4HdwJ
3w+vhzfAXfBGuBveBPfAm+Et8Fa4F94G98Hb4X54BzwA74QH4V3wbngPXLMD
3/8OfP/wKHg0PAauhcfCdfA4eDw8Aa6HJ8KT4MlwgafADfBUuBGeBk+HZ8BN
8Ey4GZ4Nt8Dz4VZ4GdwGr4Lb4dVwB7wGXguvgzvh++H18Aa4C94Id8Ob4B54
M7wF3gr3wtvgPng73A/vgAfgnfAgvAveDe+Bax7E9/8gvn94FDwaHgPXwmPh
OngcPB6eANfDE+FJ8GS4wFPgBngq3AhPg6fDM+AmeCbcDM+GW+D5cCu8DG6D
V8Ht8Gq4A14Dr4XXwZ3w/fB6eAPcBW+Eu+FNcA+8Gd4Cb4V74W1wH7wd7od3
wAPwTngQ3gXvhvfANQ/h+38I3z88Ch4Nj4Fr4bFwHTwOHg9PgOvhifAkeDJc
4ClwAzwVboSnwdPhGXATPBNuhmfDLfB8uBVeBrfBq+B2eDXcAa+B18Lr4E74
fng9vAHugjfC3fAmuAfeDG+Bt8K98Da4D94O98M74AF4JzwI74J3w3vgmhp8
/zX4/uFR8Gh4DFwLj4Xr4HHweHgCXA9PhCfBk+ECT4Eb4KlwIzwNng7PgJvg
mXAzPBtugefDrfAyuA1eBbfDq+EOeA28Fl4Hd8L3w+vhDXAXvBHuhjfBPfBm
eAu8Fe6Ft8F98Ha4H94BD8A74UF4F7wb3gPXPIzv/2F8//AoeDQ8Bq6Fx8J1
8Dh4PDwBrocnwpPgyXCBp8AN8FS4EZ4GT4dnwE3wTLgZng23wPPhVngZ3Aav
gtvh1XAHvAZeC6+DO+H74fXwBrgL3gh3w5vgHngzvAXeCvfC2+A+eDvcD++A
B+Cd8CC8C94N74FrduL734nvHx4Fj4bHwLXwWLgOHgePhyfA9fBEeBI8GS7w
FLgBngo3wtPg6fAMuAmeCTfDs+EWeD7cCi+D2+BVcDu8Gu6A18Br4XVwJ3w/
vB7eAHfBG+FueBPcA2+Gt8Bb4V54G9wHb4f74R3wALwTHoR3wbvhPXDNLnz/
u/D9w6Pg0fAYuBYeC9fB4+Dx8AS4Hp4IT4InwwWeAjfAU+FGeBo8HZ4BN8Ez
4WZ4NtwCz4db4WVwG7wKbodXwx3wGngtvA7uhO+H18Mb4C54I9wNb4J74M3w
Fngr3Atvg/vg7XA/vAMegHfCg/AueDe8B66pxfdfi+8fHgWPhsfAtfBYuA4e
B4+HJ8D18ER4EjwZLvAUuAGeCjfC0+Dp8Ay4CZ4JN8Oz4RZ4PtwKL4Pb4FVw
O7wa7oDXwGvhdXAnfD+8Ht4Ad8Eb4W54E9wDb4a3wFvhXngb3Advh/vhHfAA
vBMehHfBu+E9cM1ufP+78f3Do+DR8Bi4Fh4L18Hj4PHwBLgenghPgifDBZ4C
N8BT4UZ4GjwdngE3wTPhZng23ALPh1vhZXAbvApuh1fDHfAaeC28Du6E74fX
wxvgLngj3A1vgnvgzfAWeCvcC2+D++DtcD+8Ax6Ad8KD8C54N7wHrtmD738P
vn94FDwaHgPXwmPhOngcPB6eANfDE+FJ8GS4wFPgBngq3AhPg6fDM+AmeCbc
DM+GW+D5cCu8DG6DV8Ht8Gq4A14Dr4XXwZ3w/fB6eAPcBW+Eu+FNcA+8Gd4C
b4V74W1wH7wd7od3wAPwTngQ3gXvhvfANXvx/e/F9w+PgkfDY+BaeCxcB4+D
x8MT4Hp4IjwJngwXeArcAE+FG+Fp8HR4BtwEz4Sb4dlwCzwfboWXwW3wKrgd
Xg13wGvgtfA6uBO+H14Pb4C74I1wN7wJ7oE3w1vgrXAvvA3ug7fD/fAOeADe
CQ/Cu+Dd8B64pg7ffx2+f3gUPBoeA9fCY+E6eBw8Hp4A18MT4UnwZLjAU+AG
eCrcCE+Dp8Mz4CZ4JtwMz4Zb4PlwK7wMboNXwe3wargDXgOvhdfBnfD98Hp4
A9wFb4S74U1wD7wZ3gJvhXvhbXAfvB3uh3fAA/BOeBDeBe+G98A1+/D978P3
D4+CR8Nj4Fp4LFwHj4PHwxPgengiPAmeDBd4CtwAT4Ub4WnwdHgG3ATPhJvh
2XALPB9uhZfBbfAquB1eDXfAa+C18Dq4E74fXg9vgLvgjXA3vAnugTfDW+Ct
cC+8De6Dt8P98A54AN4JD8K74N3wHrjmEXz/j+D7h0fBo+ExcC08Fq6Dx8Hj
4QlwPTwRngRPhgs8BW6Ap8KN8DR4OjwDboJnws3wbLgFng+3wsvgNngV3A6v
hjvgNfBaeB3cCd8Pr4c3wF3wRrgb3gT3wJvhLfBWuBfeBvfB2+F+eAc8AO+E
B+Fd8G54D1zzKL7/R/H9w6Pg0fAYuBYeC9fB4+Dx8AS4Hp4IT4InwwWeEvH/
A11zAVY=
      "]]}, 
    {RGBColor[1, 0, 1], PointSize[0.002777777777777778], Thickness[Large], 
     LineBox[CompressedData["
1:eJxd1A9U0/X++PHZtbSkKxrVKqppXJtFthKNjPSVkc7CnIo5FW0K6lTUIQMG
Ak3zzyyqqZTLMJeR0o1sdcm7imqZJRXdZqFRUq7CXPeS7homFl2//X5+tn14
ejyn8zyPXrx4nc95O2je8inzz9NoNAf6aDT/77/n/kTGaHr+kXtGf9/rpYd/
zTiXfaX9gYOfd5mvvvNcJ0rlN8kP37NxhNJJUpt8ov/JB4xKa2Xb2bcuz3p8
utLJ0vbyTz9t35antE60r1m3//dfNqUHy/hVjz17uFeZ0inSfs3mNyxTH1Z6
iPg3PHfH5s8fVVov6ZvPPDZt7Walb5CTn+1LfPHzrUqnyuGBF8z77aodSg+T
b7/98J97tXVKG+Rfur6XHfv7K0rfIpob1+1646kGpW+VwOXjB2Wtf1Pp4TLs
0dzsjs6A0mmyX/+e07X+A6VHyKpdDZPuT/1E6ZFypHfVoBv6H1D6NmlNnf7i
Y1MOKp0u4er1tz/56NdK3y6vfD5408SSkNKj5NnV120rn92u9B3yw3/KLqi/
5ielMyT4xc4b7/zpuNJ3StGoul27fjup9GhxF817Yf7dp5UeIxPe3b71eEm3
0iLb+7V80J3Xa/T/T6fIvVVzh3w56vxzrblLxrvemPOf7y5U/C5JeGfAz2PX
9Vd8rDxWaDdvHnaJ4mNlZ/83z66fernid8tTFYcu6jUjWfG75X99ptm1tw1S
PFPq+5+uuuLHFMUz5SPHXltizlDF75HbP9x79OO9wxS/RyovKfpu2c5bFR8n
hUPeyXnnmZGKj5Nh17745MwFdyg+Xr45mj3S9bQoPl52Pfle3kXJmYobxX68
32UPzTIqbpRZX840VD80UfEJcmv+H9cPaZus+ATZ/Pm/7z6yfZri90rriH2J
Vw6bqfi94rdOSMh59UHF75PCI1cmVA3LVfw+Od3ed/D+2xYqniWTXn7q+r5X
5iueJVcd3tvL1qtA8Yly+pVn7/FX2xWfKMNnn5l4W9ih+P0yfGLv/saUSsXv
l2GNY4ccyVit+CSp3d924tCAdYpPkrxwzodNDY8obpLXTuXMLtW7z7WYxP3Z
7FlTH9us/P8mOT5OBj9dt+VcB0zSK7hu5lPeGmV+spwtSjMGJz+nzE8WQ17N
Ez901irzk+WZrNYjy2a9qMxPllVtc+aU7d6tzE+RXvvfKzz4xGvK/BQpzFuZ
4yrao8xPkWXVJU+9lPqWMj9FiucNd2y1BZT5qXJdV+WZoe3vK/NTZWl3/1cN
A5qU+aky/8ic7Geu+VSZnyp9e736dmDbAWU+W0pPHb1imemgMp8tK5NfGtv8
0VfKfLZo/5VTXTX8iDKfLa/uX7G7f+h7ZX6aFC3fuyPz0I/K/DSZ+lm1a+Jz
/1Hmp0nOVUMTw3siyvw0+WzstXOOpXcq8w/IlbveSJ1U0qXMPyAvTHrk+x1P
/6HMPyC9bfXHDx3rde7f5cADYhp9aNv2F89X/p2eLieH9L550IiLzrVMl9zx
e/c839D/XDuny5e9TjTX3nSJMj9dHnj/wBb78MuVebPsKnesSxmQrMyb5Z+T
ln/VeUanzJvlwiSTceSGFGXeLFXTl7otX+qV+RmSf9mgA7kJw5T5GZLSMe7j
sam3KvMzZPDuj09d/PsIZX6GFFr2fH/gyVHK/EzZ2pA3euMloszPlDdrbGtH
FtytzM+U/xnWuY+uHq/Mz5Tz5h8efOWyLGV+lhT/tXlkX8NkZX6WpF1h7v/y
/mxlfpZs2/H76e+umaHMz5JVB4PzJ86eo8znyGrzn39nzFPmc+TWbw+8cXfq
AmU+R75Yn5zQ9dFiZT5H7t15tuiPm2zK/Gw53TTz9f6PFCrzs0Wz9OqLL95S
oszPFueIxVPqHeXK/GxpuGLp1R+lrlLm58h9i0///Z49a5T5OXLq61smdv3q
UubnyEPbd93yzMDHlfk5MniwzVN3xSZl/kH5/pqm7vEfPKnMPyg/3+9+s+/Q
rcr8gxJ+cuCOBxdsV+YflFHHLx/w3YEdyrxF3sx55ePSdTvPtc4iP6QO9Wz8
6e/Kz7PIbR+FrzX0851ri0V2/pq27vZL/6H8fIt8WDRt1GM79pxrr0U2Ndsu
Gf3+m8o+i8h/Dc9ftf7dcx2ySMqWVW/kVu5V9s+V8yt//XSc5wNl/1x5ZVBu
7tpLP1L2z5WTR+15h083K/vnyi1vp1Z8+2xQ2T9XLK/lDAlFPlf2z5VhG/q0
DVp6UNk/V0YPTzvzekKrsn+u1L61dNyHH36t7J8nt931tz3/c3+j7J8n+g9r
+15iCCn758nnJ/bMW1T9nbJ/npy6ua3fwMj3yv55csdTs54fPrpd2T9P+o6Y
aP247Kiyf55s22AzfrrjR2X/PHlpzobH0huOKftz5ev14bW9doeV/blSf8OS
G8488ZOyP1fWP7f+ldqZ/1b250qf/X3yB/b/j7I/Vy58vjLZt1tpb678JeuJ
Q3+7o0PZnyuud+cvuG2P0qFcmXSm6vH6QT8r+/NkoNvYNOYhpXV5snfPI7s2
BZWWPPll+ZtfDLn8uLI/T9LKatbOzFbamSfftPzvyYUblPbmydG7vzDl/VPp
wJ8//5orl9xzROlQnqSP2/JcqNcJZf98mTBnYN2Ja5XWzZdf3k9KvWSU0jJf
Lv1rn/cPmpS2zBfT+KSXducp7ZwvL+zOnty7WGnvfBnVb9mWYWuVDsyXiw8c
/9KxSenQfFk07duXrns2un+BrC8+XLSgLrp/gYz84DK/7dXo/gVi//mTUUve
iO7/0+8N9i0NRPcvkO/Orhrv/zC6f4HsO/Xr8bHN0f0L5McvPltw84Ho/gXy
vy3V/TYejO5fKJf+43yv46vo/oUyXT/z5c626P6F8trvv7UMCEX3L5SLDScu
Pfx9dP9C+XXTV31mHo3uXyjXJQ6+eMux6P6F8sDinRVP/xTdv1C6Eq74ZOF/
ovut8sWtfbx9fo7ut0roR/NvFcej+60ycH33XZ+diO63yvvbpuacjUT3W+Xx
vCONA05G91tl0/IthRf+Et1vlZn3Zd7+U7RDVtnZNLTsH53R/Ysk81t5cPGp
6P5FsuXy2w71/zW6f5Fob5zreSHalkXy3cT9hptOR/cvkmORJb3qou1dJEO3
hcdf3hXdv0hOFjkGlUc7tEim5655/MtoaxbLJyfeK7rhTHT/YinI/WVnUbRl
sfzl0WnfvBFty2LJ/uyD905H27lYct59sePm36L7F8uEY9uPzYt2YLGs8mtu
3hjt0GI5M2PE8LeirVkiFy//acZ30dYtkdUjk8/+5ffo/iViOZBUfF20LUuk
7Lw7L5JoO5eIZB09OyPa3iUy+lRndUG0A0tk/42uXuujHVoiAzMqHVujrcmX
IveZ6+ujrcuXsWc/v70xtj9fIo29Wj6O7c+Xdwad0bbG9ufLN5P+uL49tj9f
jtYtv/pEbH++jD92ySVnYvvzxfD0/brzuqP7l8r3L8yeeVG0dUtlo/3RlgHR
lqVyU8ZsrzbalqXya2fjp9dE27lU6s3XLkmJtnep/DJl59qh0Q4slUW3y9Bh
0Q4tldIr91luje1fJpFF/UaOjO1fJob7Lnzt9tj+ZfLja0faMmL7l8lN1Sff
HhPbv0zuMJ6ZNTa2f5lcMeuvb2fG9i+Tl394+8dxsf3L5PcNA781xvYvl/DM
53bdG9u/XE6vrR6fFdu/XA5f8/p7E2P7l8sFvxVeMSm2f7mse+O/k02x/ctl
xNUXLJsc279cXts1zjYltn+5fLUrYdbU2H6b9Hm9zJAd7USbXPvSqpOx1tnk
8luP7pgWbYNNXjk85u4HYr+fTQZ8d8HBWJtsct2Gx2ZMj/2+NikY0/fzWNts
os19Yow59vvbZHDLoOdj7bbJ3Ht2/RFrr03GmE9OmhFtn03uW793a6wDNpnQ
/sG3sQ7apOLlrckzY/faZMg7wexYR2yy4pt/r4+1pkDOHH9wT6wTC8TepyYU
a12BWKy9+syK3V8gO/J+GhprKZCVhhcmxNpUIBXPVi6ItaVAZnzid8baViD9
3nR7Yu0skEPf3bk71u4CmfrKyfdi7S2QD8+0fRFrX4HsXzqkPdaBAhlxvPNk
rIMFMr9jsSYndn+B3O7flRDrSIH80bT/8lhrVkj92fZBsU5cIQN+uOzGWOtW
yBOHVgyPtWGFHL0v4Y5YywqxRDrvirVphZx3KMMYa8sKOeI5OTHWthUyeNV1
U2PtXCH/fu7w9Fi7V8jcU3/LibV3hdxfnGCJtW+FjLnNkxvrwAp5peTAglgH
V4jhn+8uit+/Qr76cFF+/P4VcuNXB5fF7y+UYveFBfH7C6Wj30WF8fsL5dlf
Dtvj9xdKxsMPF8fvLxRNdW9H/P5C2fjCvNL4/YVy64/esvj9hXLTqL0r4/cX
SsHYj8rj9xfKl/P8FfH7C2XT/o2V8fsLxbh4+kPx+wvFd1k/Z/z+QvnHst3x
DhXKPcfHrorfXyj7j38Ub41dxvw9c3X8frsMHd0Qb51d+u2+4uH4/XY5eLQo
3mKXPo0fxdtkF+8vl66J32+Xn++cFW+bXS7N2Bpvp12edn4Rb7dd9rj7rI3f
b5fKoyPj7bPLxT/PjXfALvZ+G+IdtEvDM/XxDtllbaQ53hG7aKf9O96aIvn0
4vPXxe//s81Xx1tXJJuXDY+3oUgeXj0+3lIkk96fEW9TkSydtTjeliIpLCiN
t61IyvTr4+0skkXezfF2F8mdvz4bb2+RmDNfjLevSHbveC3egSJJuP6teAeL
5K6je+Md+vP3O/FRvCNF8uS0YLw1xXJ6yCHV/cXyu+2w6v5i+WVMSHV/sfTd
3q66v1gWe8Kq+4sle0SH6v5iubnyhOr+YtledlJ1f7FU33JKdX+xPPjiadX9
xRI4dkZ1f7Gc+O/vqvuLZWfzH6r7i2VU+VnV/X/+/N691sfvL5Zxi86Lt6ZE
Hn35L/FOLJGZLb3jrSuR2aHz420okd4tF8RbSmTdq33ibSqRY2V9420pkd9u
uTDethJZ3KpqZ4m8tfyieLtLZMIZVXtLZHpxv3j7SqRvWNWBEsmdlBDvYInk
vKzqUIk0nXex6v4SWWFStcYhCVtUneiQO75Utc4hWwb8VXW/Q54fp2pxyLfF
qjY55PUdqrY4ZNPHqrY55F/HVe10yHv9+6vu/3P+JlV7HXLCqGqfQ16Zq+qA
Q25xqDrokJ1Vqg45RLarOuKQoT5Va0pl3buqTiyV1Z+qWlcqI75WtaFU9h5V
tZRKZkTVplL57IyqLaVSfl6i6v5SefAiVTtLpWqAqt2lMlCram+pnL1a1b5S
yb1O1YFSuVev6mCpvJOq6lCpNBtUHSmV0jRVa8rkwG2qTiyTtlGq1pXJjjtV
bSiTFFG1lMnSsao2lcnqTFVbymTBOPX9ZXKNUX1/mbw8QX1/mVxxn/r+MsnL
Ut9fJhsnqu//8/e7X31/mWydpL6/TMpN6vvLZMJk9f0rpfcU9f0rpV7dupUy
fqr6/pXyubplpUzJVt+/Uj5Qt2Wl3DxNff9KeULdzpVyTN3ulTLyAfX9K6VC
3b6V8q66Ayvld3UH/9w3XX3/Spmn7shKeVzdmnLxqzuxXA6rW1cuf6jbUC5X
m9X3l8vt6jaVy2R1W8plkbpt5VKhbme5uNXtLhevur3l8qq6feXyrroD5fKJ
uoPl8qW6Q+Xyvboj5fKzujUVckrdiRXyh7p1FdJ7hvr+CrlI3VIhA9RtqpDL
1G2pkKvUbasQnbqdFfI3dbsrRK9ub4XcqG5fhQxTd6BCDOoOVshwdYcqZIS6
IxWSrm5NpYxSd2KlZKhbVymje9xfKdLj/kq5q8f9aEul3N3j/kq5p8f9lZLZ
4/5KGdfjfrQPHaiU8T3urxRjj/vhkUqZ0OP+h+TeHvc/1NN1cMNDcl+P+9Em
tAVtQzvRbrT3Icnqcf9DMrHH/fAgPASPwDXOnt7X2dMT4Vq4Dq6HG+DpcIEb
4Sa4GW6BW+E2uAPuhLvgbrgH7oXXwX1wPzwAb4IH4a3wEDzslPt7fG+nTFJ3
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
CjfA0+Dp8Ay4wDPj/n/S699E
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Frequencies\"", TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox["\"Generations\"", TraditionalForm], 
     FormBox[
      TemplateBox[{
        StyleBox["\"aabb \"", 
         RGBColor[{0.3, 0.3, 0.3}], 16, StripOnInput -> False], 
        StyleBox["\"aaBb \"", 
         RGBColor[{0.7, 0.2, 0.2}], 16, StripOnInput -> False], 
        StyleBox["\"aaBB \"", 
         RGBColor[{1, 0.1, 0.1}], 16, StripOnInput -> False], 
        StyleBox["\"Aabb \"", 
         RGBColor[{0.2, 0.2, 0.7}], 16, StripOnInput -> False], 
        StyleBox["\"AaBb \"", 
         RGBColor[{0.6, 0.1, 0.6}], 16, StripOnInput -> False], 
        StyleBox["\"AabB \"", 
         RGBColor[{0.6, 0.1, 0.6}], 16, StripOnInput -> False], 
        StyleBox["\"AaBB \"", 
         RGBColor[{1, 0.1, 0.6}], 16, StripOnInput -> False], 
        StyleBox["\"AAbb \"", 
         RGBColor[{0.1, 0.1, 1}], 16, StripOnInput -> False], 
        StyleBox["\"AABb \"", 
         RGBColor[{0.6, 0.1, 1}], 16, StripOnInput -> False], 
        StyleBox["\"AABB \"", 
         RGBColor[{1, 0, 1}], 16, StripOnInput -> False]}, "RowDefault"], 
      TraditionalForm]}},
  FrameStyle->20,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->600,
  Method->{},
  PlotRange->{{0., 2001.}, {-0.02, 1.02}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.670283573180913*^9, {3.670283674642009*^9, 3.6702836822273006`*^9}, 
   3.670283776277156*^9, 3.670283848556039*^9, 3.670283878719194*^9, 
   3.670284089599792*^9, 3.6702843959970293`*^9, {3.670284625887168*^9, 
   3.670284667087978*^9}, 3.670628578288513*^9, 3.670628703950799*^9, 
   3.674440110416408*^9, 3.6744401534933643`*^9, 3.674441005906104*^9, 
   3.674442556154015*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"psSex", "=", 
   RowBox[{"Simulate", "[", 
    RowBox[{
    "p0", ",", "gens", ",", "meannCA", ",", "meannAB", ",", "\"\<Sex\>\"", 
     ",", "mu", ",", "mu", ",", "sA", ",", "hA", ",", "sB", ",", "hB"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PlotDynamics", "[", "psSex", "]"}]}], "Input",
 CellChangeTimes->{{3.6123042586628437`*^9, 3.6123042653346567`*^9}, {
  3.6123045134508743`*^9, 3.6123045150171328`*^9}, {3.6125686266926003`*^9, 
  3.6125686280689096`*^9}, {3.674440246549995*^9, 3.674440250142874*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.3, 0.3, 0.3], PointSize[0.002777777777777778], Thickness[
     Large], LineBox[CompressedData["
1:eJxd13lYTfv7//EkZA4hhCiEEIoQXhJCKKIQopCkQaPG3TzXrj2WIoSQRCGE
OKEIIWQOITKEEMJv/z77fdf+rvPPuR7XsvZ73eu57uscg9a5Ll6vrKSkdKud
ktL//7f8n/rp//ffSvi6OKB/zr9PzKooV0sYatNsNfQ5O7ifSrPV8frmqN9H
/pI10Hh8x+WVzdaEb8X6wHbN1kJfL4+B+X/Ig9H44WTO6mbrIGOb9pAOzR6K
u/P2RR9vIutib7T+fbtmj0DMwmNqnZqth8+H+hme/E0ejbgsW9N1zdaHiv76
aZ2bPRbak4doF/4ij8OB3fFf1jV7PAymxuV0brYB7G6pWRb+JBvCu2/n6nXN
noBdV1yXd272RFzw1z17spFsBJvrQzuua/Yk8GavmNmp2ZPR5HBs/Ykf5Clo
nTZgq12zjaE3L9GxQ7On4tD1erOC7+RpuOlq2GN1s6fD0nX+lXbNBib8HbT+
6DdmHpAxI/v9CrLSDFyzvL5Kpfn6DAydzCs83EDXTfCj8UjTMjLPBKnB80co
NV+fCadjM2Yc+ErXZ8LeMWTGYrKSKSI3/xzx+wtdN8UyX+mfPWSlWTCctuCU
efP1WRi2pu3qb5/p+mxIXI/VZZB5s7H9+/R1s5uvz8G+LRkXPtbT9Tk4hFPt
JWQlM1y+HjJ5evN1M0Suf7XkzSe6PhcZ824vTSLz5uLR0QmY2Hx9HhZcVOrx
7CNdn4cXwgE3IslK85FmEOQ+uvn6fFjv6Pzn7ge6bo77xafdAsk8cxwO8CjX
ab6+AFpZQ9TK39P1BRj0+9wUD7LSQkybOGpR3+brCyH8t2rehTq6vghH3k8b
5UjmLcKB6LM/ujRft8DFhVcOHH/HDAucPjR3pi2ZZ4HNf8aWKJOLLfAqZYve
gbd0vyWW5Lz1X0SGJar9BMe+1dL9ljilZVOxnVxsiR95OndnkJUWw3nM6+I3
b+j+xajixwgSyLzFEJz+bT6eXLwY+0KHf6h6Tfcvwc4j/zyCyFiCA41Oz7XJ
vCUwaWNjWPaK7l+CGVvyXV3ISlb4VLiJ34MMK+TZbZQU1tD9Vuh/XRq+ilxs
hepl76yVyUpLkT/brNv+l3T/Uhjd3ZE3n8xbincjHhrWv6D7l2Kk3etMIVlp
GfoGHvlsRMYyLN02SPfJc7p/GeYb65qGkIuX4X76kVlDyErWGLJ2j15ZNd1v
ja7TPzU6k3nWcHkUdFCNXGwN3tWpMwqe0f022JHU+6w1GTaYlPGj/++ndL8N
LliV2e8gF9sgoa1v4gyy0nJc+/wxo+YJ3b8c8aZ9UqLIvOXw6vfCaQS5WPbn
Qwx0rz+m+1fAwf13mSsZK3Do9iCL7mTeChgGpJwueET3r4DaeKP21mSllQg4
+GfKz4d0/0pcD7u+eDuZtxIRC1MWTCUXr0TP6Al6zx7Q/ba4sT3rI48MW7x8
cVk4mMyzhUlW1ICSKrrfFkHqt+LWk5VW4ezShMdtyZDZZ59a9n26fxVifdrq
ziUXr0LcdMngd/fo/tXYvN9EKY6M1Wjj+aV4JJm3GuOt+Q7ld+n+1XjyqU2d
M1lpDZ6UGVt1JmMNbqwakHm4ku5fg9bdhDcWkIvXwN8w6tmHO3S/HUrbP7+d
QNayQ1NhbPYoMuywdcUWu+u3me3sUP/Z/ZczmWcHM9cQ707kTDsk5oZXHrpF
59nhko+D+nxytR2+BLWf8K6Czl+LW/a2k2LIWmvRdHTWAF0y1uJA9eGayzfp
/LVIXxwYv57MW4sBy9J7qpAz1+Kiztfg3Tfo/LXY/HLTNZCr12LK7tofT6/T
+etgYWvdJpCstQ4ffmR87UvGOqjOzrpYWE7nr0Oi8uKty8i8dehcmajccI3O
X4ei+SYeyeTiddB7taRkNLl6HVLaHvp27Sqdb49ZSmPabSJr2eNlpyuNbciw
xxDLFVd3l9H59ih4dNN/Oplnj2l7u3R+XErn22Mk/0+gL7nYHtsdw26ok6vt
MbEm8m/eFTrfAfN2f+y8gKzlgA0jdzXVXqbzHWD9OfxqONnOAaaLeD5aZJ4D
psdsa110ic53gGP5MhdrcrEDMkb/PfmlhM53gCh3aXUCWWk99o2f+UaXrLUe
BQk55f/9R+evx29PH/5qst16dIuNGffzIp2/HheXlh4TkDPX46VZn26jycXr
sapo7YLSC3T+ejypj9y4jqy0Abe6uKxpKqbzN8BuaJOBmIwN6D2mV+0Yst0G
/Gm3y7fsPJ2/AS4+Ia/XkTM3oHxE+timc3T+BuSeuLtcRK7egGRx9zWjyUob
UaA3ccaVs3T+RqhdHKZkR8ZGILJ0e2MRnb8Rs5L+9Egm8zYi8MFBx+HkzI3g
zSlIvXCGzt+IH7v+7FtOrt6IUIkT//NpOt8Ru4qeLo0hazkiIm7qDy0yHNHB
wcmz8BSd7winOLPri8g8R5jrnWn1ppDOd4T/sr3dgsjFjvj5922TOrnaEWH/
Nv936CSdvwk/enVZb0LW2oTs2mPPq07Q+ZuQ0WQ8yZVstwnG5xM3tyHzNmFm
SKzv9uN0/ibE+3S3G0su3oQeZ1QHXymg8zdhv9mic7ZkJSfUKJUafMmn852g
km0VEUWGE668undEk2znhKGz9AuOHqPznbDdwCRlNjnTCRvafJz76Cid74TH
deqPXMnVThjwTzJLhay0GT+NbGKkeXT+ZmR4TdinR8ZmnPHokV58hM7fjAmV
N52syLzN+NXHvHttLp2/GW8POKb4k4s3I/9qm7ou5OrN2JvVWnP3YTrfGYkz
TIYYkrWcERG/q21pDp3vjI+WrYpXkO2cMXD6DMsPh+h8Z6x7gdPB5ExnHDr4
7Fc3crEz+G+aumcdpPOd0bPMR3kCWWkLQteMKbtygM7fggnblTcuJ2MLIs0r
Hr3LpvO3YL+2z7AAMm8LluXdnduZnLkFz9ZeNdmxn87fgqrI8d3HkKu34K/5
p5Pn99H5Luh+4dF4C7KWC1Jv3Iuo3kvnu+Dj9HOH3ch2Lig663pIicxzgdrN
0iB+Fp3vgpEP9g3TIhe7YM3AN3uP7KHzXZB5ccPPaWQlV1y+oDz4xm463xXv
GyUDV5HhihODWn+p20Xnu6LgtlaqH5nniqTg6+rtyZmuOOv7ykGSSee7Ymqd
acwQcrUrwquvhOTvpPPdYDtt3sIZZDU3uF7e//HGDnoeN4h6Fa2zJeu7YWD2
uoNvM+j53NC6wvuSN9nCDRHn7uS3Jtu5YUiwlRc/ndnNDYaNd9r3J/Pc8O+d
nvuB7cx8N0z/OumQITnTDdpRd09eSGPOc4PBjwfiBeRiN9zaMsjsQSpzhez3
P0VccyBXu2Hx8uda9VLmejfE2nc28ycrucNrx0u0Jau5Y5fH1I7JEppf5iEN
+/qR9d0Rc7O6xz4xze+Ofw6PLfXJFu64ePS83WkRze+OU8vtYUp2c0ds1c76
60KaX/Z7IQvcrcl8d2wONr1YLaD53TGs0vblJnKeO47auFR+SaH53XG6yELk
T65wR2TkoyEq5Gp3VHZ/HRGfTPO7Y71wznF1stJW1Pa4n5/Op/m34qHr5hAd
stZWaNs+6p+TRPNvxdu1f6LHk7EVgc/2XzydSPNvRXW7o1dnkO224tSLj5ml
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
D4LWTJeOZuRq2fMmzl4r7kfzB6Ff2GCLmr40fzAyZkjvjyWrBWPS6qk/gvrQ
/MEY8Wxf7jUNmj8Yb6Zs+tObjGB0tNV4ad+b5g9GpnjOmiO9aP5gdDka4/6r
J80fDJWnbn1mkXnBuFqUuCxJneaX/Z6Np+6DHjR/MD7rHEscTM4LhqFyVfTm
7jR/MJomePUq6EbzB+OXu8bEJjWaPxjLSxe9m0muD8alguwxcV1pfh7m98pr
e7sLsyoP68Z8cdEgq/HwMevXxtWdmTV46BFo9XlPJ3o/PIwaENvhbUdmXR7u
LRiSP4qsz0P+mCPv3DswG/HgapqXd7w9vT8eDjjmqfxUZTbjoejOhNdTyBYy
97pqFdSO2YYHu371i4rb0vuV3T949P1WZEfZ85WovjNpQ++bh37vW0eHqTD7
8rDk0e68/1rT+5f9+SGO9q3J0TxY597daaJMPXhIz3FeH9KKWcpDdNbh/PNK
1IeHT44asX/+fZQ7m4eVffRqJ5PzeGjS2njd5y9zIQ8+hnMmFfxhLuZh89K5
I+ubmEt58L7ydvdIcgUPhzWydm74zVzFQ0K/r1q7fjFX8yB+bTH00U/mWh5+
355wRJ1cz4Onf/8zCxqZG3nYdzpgbuQPZqUQ9Dt4bfm578yqIbidyav79o1Z
LQQnx3b7q0fWCEHIiC98+wZmrRDMTJHsSf3KrBuCN/s9DW9+YdYPwdfq37NU
yEYh6FG7o9LoMzNCkLL9RrVzPbNZCLp2+r0p8xOzRYjsvycC1zsfmW1C8MWm
7ec2ZLsQPDa98GHiB2bHEBxvP3b9pvfMbiHwz7iwLK2O2TcE0QOfXrj6jpkX
glH36/f+esscHYK6sfbKI8j8EIy7mHHPppZZGoLdU1UHR71hzgxBsH/7moLX
1D8E2h7tNF+8ov4hsJy8sawLuTAEp1on1E2uof4hMOj/OGTDS+ofgikfT8Ql
v6D+IRj2PUi16Dn1D0HaVeGPV9XUPwTXe9rYdCXXynoJh40wekb9QxDec62z
3VPqH4LXXmsHRD+h/qHotSt8+pHH1D8UkxOH3Lz7iPqH4sC0HeW/H1L/UPQs
mjNxEFkrFHm9/LrMfkD9Q7HYPt7SqYr6h+LWqcp/CfepfyiUx2drHL1H/UNx
+fWK7XfuUv9QuL+bHvWtkvqHImLhgUe9yDahUO9fK5l4h/qHYru1+Rnr29Q/
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
GpltErHgfr1DtwZmu0Q8Fm5Yee4Ts2MiRhZXf7WvY3ZLRIfMwH7Kb5h9EzG7
od956QtmXiKWf1x+bdhT5uhETBoi1DvygJmfiP1hNTdG32WWJuLQ2EE79lUw
ZyZivu+jiF7lzNmJaJe52j3oCnNeIgrKcuc/vchcmAibC1H/DM8xFyfC69pK
n4hTzKWy850XZ5QXMFckgqc7Z2XHPOaqRNnfmEvTZhxirpb9eYees1z3MdfK
nmftgJnCXcz1svdfFhKYl87cmAiI4h7/J2FWSoJT4XizGynMqkm4XKiZfTOB
WS0JLhNSXl6JZtZIQohr1PMTYcxaSUg9I4pOD2LWTULMv1/nfLcx6yfhoYbU
ab4ns1ES5sz45KbuyowknNw0+OSdTcxmSQiM/zwoxoH6J0HzR6HIYA31T4Iw
1vX73eXUPwlVX7KGbbGi/knYWRnc6ddC6p+EQ5/PRAXMpf5JeG6S7d8wk/on
IVN1yNW106h/EuIqdlmVGFH/JOxz69fUbzz1T0LWjz67HEdR/yQMSsnVPjiM
+idho4O7ffUg6p8Ee5vg6R01qX8SelX7iEf0ov5JmHzIb/Y0NeqfhHyLIaNm
d6D+SRhYxx9mokL9kzAye1H3cX/fsf5JSJznVNazkbk2CS8yVul++Mxcn4TH
j3t3KKxjbkyCQPW7mfcrZiU+9MZeODfsGbMKHxOPHDItr2JW5WPFgoX59reZ
O/Gxcd3eFx+uMavxEfmw80GnS8zqfLTXN6l+cI5Zg49zi61XTilk1uSjMvBU
feJRZi0+sn/relUeZNbh4969E0Uds5h1+djseyHNIINZj4/X4z4/Xyhm1ucj
t9DAYUUSswEf3kFnvyyLZjbiI1+1aZVpCLMxH/20070G+zGDj2DlENXPW5lN
+ahadKHmyGZmMz6a+u25v9qB2ZyPy2ckh//YMlvwsSlu4rj4pcxWfExLnarf
YSGzDR9LJ4S5+8xmtuXjj/Pvc3emMdvx0dU2t3rARGYHPgK8CzJsxjA7yt7P
vrFFvGHMznwoW1m0kgxkduNj0Hzjsdt7M3vycSuyf9eErsy+fBQ86L7KuR1z
AB+WPnqPjf69Zd8/H31tN5h/+c4czoe2YLez9CNzNB9/bfb8GvGaOZ4P675t
8g88YebzMXihkaX6XWahrNdw/ySncmaprL/enaE5/zGn8zEipu3NqtPMmXw8
shVNqz/KnMWH4aVjI75kM2fz8enS1DlPdzLn8NFN5fTsAjFzHh8Dl5g99Ehg
LuDjYo+dRzXDmQv52LlO2T/Xj7lI9n31NH6p685cLDs/SiCK28hcwsep0Zem
3FvFXMrHgL8/A1WtmMv5WJRyTnnwPOYKPiTav1wGg7mSj5zpr9a3n8BcJfse
zJRi7o1kfiz78wXtfWMGMVfzYdyzoWJQb+YaPkzuPxqzsxNzLR8LLzeNbqXM
/J6Pj/P2b5jzo5btNx8jHQy3uL9nbuCjZPm/e0HPmRtl8w6xmOB6j7lJ9nyC
5f1MrjErJUOpu676j/PMKsnYPEGck1DArJoM3frpLm0OMHdKxkJHr+pVGcxq
yTgZPypanMysnoyBpo1vciOYNZJxyqw+eN82Zs1k7Nyfcz1gC7NWMo4/H2s+
di2zTjLUDr/w+M+KWTcZk5e4nR5nxqyXjH0Hr6YETWHWT8b27K5b9o1mNpCd
H+N34sAgZqNkmMUufhClzmycjCCjB8Zox4xkXDczmnX75xu2/8mY/s9lydT3
zGbJuNB/+iXeU2bzZIQv7/NtewWzRbJsH9tPTrzIbJWMZ+q73iwrYLZJxqtW
NQu+7WW2TUbc4rGnHCXMdsmwbhq1NS+a2SEZY3vmnr22jdkxGSsOZDw+5cTs
nIymVm87+q1kdkvGpBUO4R3NmT2TcfffMb8txsy+ydB7MmrgTj3mgGRYOpVl
7NRk5iUjQfl3f5dOzOHJuJaecbF902u2/8mIr7l7wL2OOT4ZiUe/vc96yMxP
RuHj1Zm7y5iFyXjvtv7OpkJmaTIcJozl/9zHnJ6Ms5IdjyxEzJmy368ecNwl
jDlL1rNS0muxO3N2Mo5lmjT8XM2ck4w/OrHG682Z85KRn1Z7P2USc4HsPHFJ
dshQ5kJZ/00L4vR7MBclo6xm2dId/16x/U/GmTCDe2V1zCXJMPwruHf0PnNp
MrwWWGss/Y+5PBn9hrosO5bLXJGMwZ9zTUtTmStl888/kiQKZ65KRvu+6Y81
XJkfJ0Nk0K3MYjlzdTJ2ldS/mzKTuSYZzjaTK6r0mGtlfUue/x3Si/l9Mupf
7G0Y9K+G7X8yeOZvhl57w9yQDGnfYGWtCubGZKTfF9UNKGRuSsaeE35TL+9k
VkrBzwn+89SjmFVSMHv5mZXtXJhVU2Ce3OVohhVzpxQk7L7FuzuZWS0Fd9Mv
/cjRYlZPQcXY90aD2zJrpCB8z/pV4+tesv1Pwb1kC8+nN5m1UtDl26HQQQXM
Oik4lTol7JeEWTcFPwJcN2z0Z9ZLwULXhd03rGbWT4Gdm8O6BjAbpGDe9OPD
1LSZjVLwLTtf96QKs3EKAodPG/Tm1Qu2/ylIidh1MeMys2kKjLvuzq/ax2yW
gqgV8XxRJLN5ClwnL6y7tZ7ZIgVj66Xz40yZrVKApM5jzg9mtknB1FzP9puV
mG1TcFSiPCv+yXO2/ymwmXvAROs0s0MKtuRuW6EjZnaU/f7uno9F7szOKejh
bNB1qzmzm2yeuCkGJ4Yye6ZgRuWH8DVKzL4pcG833nDzg2q2/7J5Z/3yuHeU
mZeCWW8nOe+IYQ6Xvf/krrOL7ZijU7B+dWvdSROZ41PQJ8PdqG1nZn4KeE+M
p80tecb2PwVXbT921t7CLE3BS4eOEKozp6fgzM7xMyWnn7L9T8HukytTh65h
zkpB/5BeT4yVmbNTcGXUpiuVe56w/U/BuBETJrydyZyXgtGd54/3evGY7X8K
/EsHNHkEMxemYGDPhR2e92UuSsGw6hrNwoJHbP9TUD0j3OSbOXNJCt7N8aoR
vnzI9j8F/8Wcui3wZS5PwVDNkZafOjJXpCDpx9khezMesP2XPb/Jt/35o5ir
UvCl985bfYqq2P6nwNH2rcV9M+bqFJSfe779/Z37bP9ToGq3tc3KVcy1KTht
VXdH59U9tv+y5w0atnzBZub6FNTfsun04NNdtv8pEFeH772+lbkxBfluJyaP
a6hk+y+bT/JydVdPZiUBDq8NMXH9coftvwAz25y4u8qVWVUAA9Vu72vf3Wb7
L8DInnvXaq1nVhOgX4rljF5Pb7H9F0Dv2c+6p0uZNQSYtG4pkssr2P7Lfv/F
h4uzTZi1BEjrlRI30eUm238BJowzHrBm2Q22/wKM0stvMpt6ne2/AI/O918F
7XK2/wIs+LpnhET1Gtt/AX6ppU7a96GM7b8AHc+5uF6/Xcr2XwB3N9dHHoVX
2P4LUDKrrqjdzsts/wVY1MbA42/kJbb/ArQ9y1tS6VbC9l+A6T/S7Tqt+o/t
vwCTp4yoHmN+ke2/ACcajMuuT7vA9l/2/NlzVf0Mi9n+C7DWyGV46tpzbP9l
59V0O1i8rojtvwC7K//s2ON6mu2/APd7hpn7xxSy/RfArnPq+cCjJ9j+C3DW
yL/pQW0B238B1Ne0vpuvn8/2X4AuN/95DYw9yvZfgPrAwSGT3h9h+y+A6bNl
PYfU5bD9F8AqP+umoPtBtv8CdLi+asYd+/1s/2X97ui3r3mWxfZfgAeesyO3
Ru1m+y/AzT8jflasyGT7L8DdDUMfvM5PZ/svQOvHds6PVFPZ/gtQ/jt3x5tj
Irb/svdndtj21JEUtv8CHHJsn7+jMYntvwCFp9qkdhsRx/ZfgOyc/es86iLZ
/gtQs37K0YjxYWz/Bcj4e39Tfn0w238B3tWeMuyxxo/tvwB/Othov073Yvsv
QHHKiavVQne2/wKcPKlnPdHBme2/ANvTdOxrijew/Zd9D3u/HNzbZx3bfwEC
VWY9aRTZsv2X9R094kmF4zK2/wJMG9LmqbG7Jdt/AXZeGi72+j6P7b8ACHzX
JfWYKdt/AeK2Ny58xJ/O9l+AW6vT3jq9m8j2XwBhsPOGO63Gsf2Xzav3YcOm
hhFs/wXoZZJk0qarDtt/AVZUvokqyevP9l+I3Jttl3x/1JPtvxD2hQ9vClur
sf0Xwi9qlFvKinZs/4X4nv4pXKdBie2/ECbh2tfnhDVO+5/VhZjnsTPw877P
cmsI4XKloc9Oq7dyawrR3vmnXZXmC7m1hBDNX/ty9O0HcusIob97st2t5bfl
1hVi2C03b7S+KreeECstspZ+tb8ot74QSjtPj3T9fEpuAyE0tV19I02OyW0k
RMbwk6+37j8gt7EQx3d/08OfXXJDiCOFvduM1k+V21SIi+0dc49uT5bbTAib
z52vtBZHy20uhO/79VNrdULkthDiwZJTw9xe+MhtJYS/58dlE3e6yW0jxLhu
Vmsr+2+U21aIiAGrRmmr2cltJ0Sosoqm06JlcjsIUdXfeNd/jQvldhSiu+Gd
fRaBs+R2FmLvstfP7t6cKrebEL+7P9U+mGMgt6cQHwdFDtDK0ZPbV4jaQbOW
XniuLXeAECXPDJ6MFfSTmyeE1gu1KeO1esgdLoSBc3Kb/2I6yB0tRPXQTSV9
NivLHS9EvGeBdb3g59T/mS8E/2iI74RLn+UWyr6HniqFPsdr5ZbKnv+R/uz+
Y5/LnS7EHC/Xzd8+35c7U4ifTWXFdkcr5M4SQqNi3XWdBVfkzhZCO3K/1kWz
YrlzhBg4jr9T99oJufOE6Dzlqv6thiNyFwjRZl7Xrs/d9sldKERMx+1O84Q7
5S4S4vDowGU2pmK5i4VYIdh7X7QtSe4SIZ5k/9FcsiBS7lIhFjb+tjA/Gix3
uRBLOk2dqyH2lrtCiKi2Q/oPGeomd6UQP7YOD03U2yh3lRBf9g7xuJZnJ/dj
Ibbd75bxVNtG7mohgk4N3Lo92lLuGtl+Pb025rV4rty1QhTm79QxKjGR+70Q
/64Zd284NEXueiH+9rl3fnS4gdwNQhxTfmgmSRstd6MQlkMtZg5oHCp3k2zf
16pd27hikNxKIhwMDd/zeUNfuVVE2DDxQ+D7yepyq4pwKdGtjbFxV7k7ibBq
ldmJ8QtU5VYTYbFdgd+Qrq3lVhfhnf6b+WE6f43/Zw0R9s5yvJDRvlFuTZHs
+9bvlrn0q9xaIrj8S9iua/dJbh0Rzi9KL6/NfSu3rggR6soNjYav5NaTPU/n
OX0dc57LrS/CrTvDz1868URuAxGeHu/R+ve4B3IbiXD3bsCNiMS7chvLnnfJ
Kp1Vqbflhght/g0t3zW6Qm5TEdL/ds48a18ut5kIg5Re6v7tUya3uQiLlue6
Ja26LLeFCCW7e6x37FEit5UI4++ctTIcelFuGxHwbcudjhHFctuK4DH75J/H
pufkthMh2/dn9z5vzsjtIAJvXc1a22en5HYUQW/MYqPIgYVyO4sQ3b3qoXr6
CbndRNh3rOf19PnH5fYUofLjpParhxbI7SvCRu3OE+qH5MsdIMIarew0pVnH
5ObJnsdpx63+wUflDhch4/jKMYkVeXJHi2B5Ijti9ATmeBFyVvaoz11xRG6+
CBJrp19JG3PlFsrOG9Ln67Ckw3JLRTgw7s0EvRs5cqeLsK7EaXfpIOZMES7G
8LLjow7JnSXCfJ+3F1f+OSh3tgj6L39K7EKYc0R40mXEYuXuzHki9C9+Wfzo
8AG5C0RoML38MX8Jc6EI93PV3vkoMxeJMES3LtrwVLbcxSKs75z1p5cPc4kI
fX5P7L1mCnOpCD9f9e62oQ1zuUj291eXh+LK/XJXiHClwPmCczZzpQgTWku2
uvOYq0QoqnoybYot82MRPh2Pz9g8hbla9nx3flUf7s9cI0KSxKnXCWXmWhH+
bijpgHf75H4v+16Sn7l0qWSuF0FnUU2vd+eZG0SYUqZiueswc6NsX3assWiX
wdwkwocbyw98TWBWEuO9ypAnM3jMKmL8cw78UuHBrCrGy4gvfcIcmTuJsWDs
fNupq5nVxLiWUGr5xopZXQzV8AnPncyZNcTocepJmwJTZk0xtJ/EbM+byqwl
huTX5zEWE5l1xKg3eFMVNpZZV4ypDRe6TNNj1hPj2Bxx7NZhzPpiGF66PKyX
NrOBGL/yUksHDGQ2EuO0WvDUsH7MxrLrp86PnqLBDDH8dy5Vnd6T2VSMDeUF
b6K6M5uJ4VK8OK6rGrO5GPfWnJ9Z0ZnZQoxY3rDXJR2ZrcTYuaZ/cW17Zhsx
9nWOip+oymwrxtPx4k2H2zLbya5HHbk5uw2zgxh3no2IUVJhdhRD2eD+wfvK
zM5ipDwfk1DWitlN1mfzuMt3lJg9xcgXXdJu+LeX7b8YI/Wy9umSA8Rw0z8f
6PqXmSdG6NROylf+MIeLsbzPiWOjyNFiZFrvG7u7iTlejMUVa6BN5ovR1Xvw
2SO/mYWyfmWWmbPJUjF23ej96/Uv5nQx/nyYVp9EzhRjWdnUIpCzxBjv4Hag
8SdzthgFEX49TpJzxDBKvOngT84T47CNbc9Z5ALZ++picaAHuVAMp36t8l43
MheJsb2o7uJZcrEY/5VeCZeSS8TI2Juf6U0uFSPJe2uZNblcjOtlZwqnkCvE
mDF6++jB5Eoxrs54Wt+BXCVG77dJV7/9YH4sBp8XHPeCXC3bl8+3290i14jR
6fDu3hfItWKkH90hPkZ+L/v9U2fs95LrZefXvrFLJTeIMWry5a2J5EYx2g1z
44WTm8Twe2rs4U9WkqDnnoQJHmQVCTZc23FyM1lVgn1/bV85kDtJ8HXetLzV
ZDUJIooGdFhOVpeg3xCt10vIGhKUlMUbLSJrSrC/oOj7PLKWBFFb/vSaQ9aR
4Mhzf/5Msq7s+ebqrwRZT4KHD6+5TiXrS6A1LPvKZLKBBIfrT9oakY0k2Ga/
bfgEsrEE/WPe6hqQIcHPJ77LxpFNZfd/UMrVJ5tJcOfp6ZFjyOYSBFRNKB9F
tpCg1WireD2ylQRdpk/eNJJsI8Hf35Z2I8i2Elj8m+46nGwnwdIxzwS6ZAcJ
rB5NKR9GdpRg8dykXs12lsDm4BT3oWQ3Cco2lz4cQvaUIOvJU8tm+8rmGzLn
rg45QIIgv1f2zeZJMCXtZJM2OVzmkNs7mh0tgYml3dxmx0uQ6bTj92AyX/Y9
5D0qaLZQgpwf3p7NlkrwI+XJpGanS3CwfaxKszMl0H+lXDmInCVBQ/qD/c3O
liAp7UBws3MkKLDqvbLZeRLsCbo5qdkFEvjMi+zX7EIJeEXf/2mRiyTQ6PLi
dbOLZb0HdK1odons/X2ee6bZpRK8nGif3exy2fdTM0bS7ArZ910aHdXsSgkK
p83b1uwqCUZWLnFu9mMJDihH2zW7WoJnddeWNrtGAgfNdubNrpWgm5X2zGa/
l8BySacpza6X4EvOkfHNbpBgcnqTXrMbJTj19OXQZjdJ4JdsPajZSlJs7TZf
s9kqUuQ+Pda72apS9A0N79HsTlIUeZ3o2mw1KT51Qadmq0tR4tSnfbM1pHi+
ckrbZmtKYb5iZ+tma0kR7Tm9VbN1pHg9o9e/gc37L8XmewP+NFtPCqeTVr+b
rS/zrfyfzTaQotLFqLHZRlKEjHn2vdnGUmi22vut2ZCirUZUQ7NNpfhTG/q1
2WZSrNUWf2m2uRRvDp373GwLKS5JftU320qKDbpmLbaRYtWVvZ+abStFqXL3
FttJ0Ts27mOzHaRQGtmtxY5SlN3Y9aHZzlKU+xi32E0Ko+nV75vtKcXvxfEt
9pXiy9fpLQ6QYojnr7pm86SYa3imxeFSzN8f0uJoKfrNWdDieCm2ZPRvMV/2
vUz98q7ZQinUL11tsVSKvAf7WpwuxZnhkS3OlH1PTo4tzpJ9TzYLWpwtxYkT
Bi3OkV2fP6DFeVLEvmrf4gIpuiz98bbZhVKMd3vd4iLZ96Z2v8XFUij3KGtx
iRQXrItaXCrFxQt5LS6X4sCEfS2ukMJ1R3qLK6WY+FLQ4irZ+/4c1+LHUvQ8
Ed7iaikkg4JaXCPFfh3fFtdKcfDo1ha/l8KwaEuL66X4ZbSpxQ1S5Pdf3+JG
KdqsXdviJikcf61qsVIqdF+saLFKKkZ3s2mxaip6hCxtcadUKOstabFaKrI7
WbZYPRXjByxqsUYqptkuaLFmKkouzm+xViq0F85rsU4q1H6btVg3FX6X57RY
LxUHDs9usX4qBufOarFBKgSXTFtslIqvn2e22DgVtmMVjFT0DjVpsWkqUl/M
aLFZKvwtFWyeig3X0WIL2bxLFWyVijtvprfYJhVzwhVsm4qC4Qq2S8W8+9Na
7JCKufEKdkyFipmCnVPxpr2C3WTz3JraYs9UfMhQsG8qNF0VHJCKUFMF81Jx
tr+Cw1Ph8cu4xdGpsHmo4PhUaJ1VMD8VCbsVLEzFilgFS2X3eyo4PRUL7RSc
mYruCxWcJXvfUxWcnYq1oxWck4rdWgrOk/VXV3BBKv5TVXBhKpz+TlHY/1Q0
NSi4WHb9vYJLUrGrRsGlqYh4ouDyVHS5r+CKVOjdUnBlKiquKbgqFfWXFfw4
FWEXFVwt+77PKbgmFTdOK7g2FT4nFfxe9rwFCq5Pxd6jCm6QvY8jCm5MRVWO
gptSceGggpXS8CRbwSpp0N6vYNU0JO1VcKc0aGUpWC0NlbsVrJ6G/bsUrJEG
YaaCNdOQulPBWmko2KFgnTS8zFCwbhqGKFovDb7pCtaXPf92BRukwVzRRmm4
mqZg4zQsVjTS8CpVwaZpiFC0WRpGKto8DQ+lCrZIA1/RVrLzFW2TBjVF26ah
SqJguzTsU7RDGrYp2jENFop2ToOuot3SoKJozzTUiBXsm4ZSRQekIVfRvDSI
FB2ehmBFR6fBSdHxabBWND8NsxQtTMMERUtl70/R6Wnor+jMNHRXdFYaVBWd
nYa/IgXnpOG7ovPS8EnRBWmoVXSh7HtSdFEaHim6OA13FV2ShgpFl6ahXNHl
aShTdEUaLiu6Mg0XFV2VhvOKfpyGIkVXp+G0omvSUKjo2jScVPT7NBxXdH0a
8hXdwHEjx00cK23/v1bhWJXjThyrcazOsQbHmhxrcazDsS7Hehzrc2zAsRHH
xhyDY1OOzTg259iCYyuObTi25diOYweOHTl25tiNY0+OfTkO4JjHcTjH0RzH
c8znWMixlON0jjM5zuI4m+McjvM4LuC4kOMijos5LuG4lONyjis4ruS4iuPH
HFdzXMNxLcfvOa7nuIHjRo6bOFZK5+w/x6ocd+JYjWN1jjU41uRYi2MdjnU5
1uNYn2MDjo04NuYYHJtybMaxOccWHFtxbMOxLcd2HDtw7MixM8duHHty7Mtx
AMc8jsM5juY4nmM+x0KOpRync5zJcRbH2RzncJzHcQHHhRwXcVzMcQnHpRyX
c1zBcSXHVRw/5ria4xqOazl+z3E9xw0cN3LcxLFSBmf/OVbluBPHahyrc6zB
sSbHWhzrcKzLsR7H+hwbcGzEsTHH4NiUYzOOzTm24NiKYxuObTm249iBY0eO
nTl249iTY1+OAzjmcRzOcTTH8RzzORZyLOU4neNMjrM4zuY4h+M8jgs4LuS4
iONijks4LuW4nOMKjis5ruL4McfVHNdwXMvxe47rOW7guJHjJo6VdnD2n2NV
jjtxrMaxOscaHGtyrMWxDse6HOtxrM+xAcdGHBtzDI5NOTbj2JxjC46tOLbh
2JZjO44dOHbk2JljN449OfblOIBjHsfhHEdzHM8xn2Mhx1KO0znO5DiL42yO
czjO47iA40KOizgu5riE41KOyzmu4LiS4yqOH3NczXENx7Ucv+e4nuMGjhs5
buJYaSdn/zlW5bgTx2ocq3OswbEmx1oc63Csy7Eex/ocG3BsxLExx+DYtMX/
DzgVfBs=
      "]]}, 
    {RGBColor[0.7, 0.2, 0.2], PointSize[0.002777777777777778], Thickness[
     Large], LineBox[CompressedData["
1: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
jfmwv1tCrklB//fxsboPyXUpWHPVZHZQPbkhBQlf2zR2aH+C6p+CR40WX0/3
ITO4mLpk5nGRGVmDi4kzawVSa7ImF+3HjtUodSZrcRGYJvPo50PW5uLj/p/T
dsSRdbm4MdL71UwZWZ+LyX4Zt/QKyP246DIsxlv3BpnJxcPVGZOnvCQbcfF6
d6WM95tszIWmRkovHd08pU25mLuwQO/ccLIZF2fHFelJZpLNuagSpvFkK8gW
XNwqudP2ng/ZkosNjdzXExPJ4CKaF19cnkm24uLo2X6aKWfJNlyY3phjHXaP
bMtF3P1zv/fWk+24KJn5JPe7Zr7SDlz88z7zJngQ2YmLrPUmZuaWZGcuPnvK
u/Z3JLO42P/1YffJbLILF/IR+0oT4sluXPT/YCDX3kd2V6yfv0HS1XNktmJ9
7VdcOPWQ7MvFvaG+X598JQdwcUVUf3ZS95NKB3Pxu591/nVTMocL+8+vtopt
yJGKfN9Mke1wIcdy8WTeqYr7HHIiF7Enbx6cv5PM5aLz+/Y3/5wiC7nI3dv4
su4eWczF6gULRN0ayelcZFTUxnl3L6D+4eLHqKPuOqPImYr8zW6+r7clZ3HR
77no9H+byTlcPOuZHOsaR87lolLu/1+bLHIeF/ex9Oejy+RCLoqi/Lo2vSQX
cdGk79rOsX0h9R8Xdxhaad+MyCVcWGzbFffQilzGRbvEwzvbrieXc/Fo2RCx
ZxS5QhF/yVIM2k+u5OLp0MbVfUvJVVw4reh9cUUduZqLHZcWWtR2OkX9y8VL
WQo3fzi5lgupw8yMivnkOi4O1s6ZNJ5Nfs/FYMaPia/55AYu3h3oH1ibT27k
wtWl7d2RD8hNXNi0dR1R+pv8m4vN5VEuR5inqf95mDZRf/VLK7IGDw8Z8zW2
bCRr8lDAvTbFOpmsxcP0W7nfvU6QtXn4OSqR+amKrMvD8mcrDpb8JevzED4v
NuqD0Rnqfx5mJTzJdp9HZvLQ1Ca++0xvshEPydVaeV4SsjEP3TgTUn7IyaY8
MK703/OojmzGQ6Rm94/63Yuo/3mIPhi39fhEsgUP+q6G0w+uJVvyUNoYu+Rv
Ahk8nNJxOXs8n2zFw/qbcyNLn5JtePj7M7tgSuez1P887BGfcNUbR7bjAWMs
9yxmkR14mPT2YPCXBLITDweNbnf6WUB25uFSxsNVG2rJLB7mVejxLbsXU//z
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
ObGVua0sbGVxK6e3sqyVM1s5q5VzWjm3lfNaubCVi1pZ3solrVzWyuWtXNHK
la1c1crVrVzTyrWtXNfK71u5oZUbW7mplX+3MiO9Vf+3smYra7WydivrtrJ+
K/drZWYrG7WycSubtrJZK5u3skUrW7by/3RNR1qKAAAAAMMgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIKguwuCIAiCIAiCIAiCIAiCIAiCYGHx3hucD5g8
LuAiLuEyruAqruE6buAmbuE27uAu7uE+HuAhHuExnuApnuE5XuAlXuE13uAt
3uE9PuAjPuEzvuArvuE7fuAnfuE3/uAv/sGBP/zHQRzCYRzBURzDcZzASZzC
aZzBWZzDeVzARVzCZVzBVVzDddzATdzCbdzBXdzDfTzAQzzCYzzBUzzDc7zA
S7zCa7zBW7zDe3zAR3zCZ3zBV3zDd/zAT/zCb/zBX/yDA3/5j4M4hMM4gqM4
huM4gZM4hdM4g7M4h/O4gIu4hMu4gqu4huu4gZu4hdu4g7u4h/t4gId4hMd4
gqd4hud4gZd4hdd4g7d4h/f4gI/4hM/4gq/4hu/4gZ/4hd/4g7/4Bwf+8R8H
cQiHcQRHcQzHcQIncQqncQZncQ7nceG/fwFHY0qv
      "]]}, 
    {RGBColor[1, 0.1, 0.1], PointSize[0.002777777777777778], Thickness[Large],
      LineBox[CompressedData["
1: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
K0P7LiCXR2JN2INdry3IlZE4NWpBoQKbXBuJOSs0X/ieIddL6tuwPkDnCbk5
EiXvLHcY/iW3RcLfIHHrmYlalH8UjjS6TrA0IitEYXBja6KNN1kxCru++Dtf
OkRWjoJwWFO0dSmZGYXEmgN5Ft/I6lHIdA67c5Y5n/KPwnE51bStq8laUZhh
GCm3xYOMKDyfGf/y9EGyXhTSBccHmZWRjaLgZj/Ax+YH2SQKsy5cbC8av4Dy
j4LBEK/g4PVk+yjkDG75mhJIdo4CtyVbV/EU2SsKl7y0tr+uIrOicL/3H60h
vRdS/lHoXxlcnK5J5kRh0qYtvZJtycIorHs083MTnyyKwu1Nb9mHi8gZUUjj
ht+9/JWcFYXZ02xKtCdoU/5R2D9zdMiYzWRxFLTPnFVwYpOLozBnf5AD8xK5
PArdv1sXaDeRK6MQLp875IaqDuUfhbDv27i568j1UTh37PWaQWHk5iiYpgc4
Pcsjt0XhYNCIocM+kBnRiF3j5CIes4jyj8YfJ7lTVZvIitFYd3jDT9sYsnI0
HLYVxtleJzOjkaZXdLiqjawejVeLqjwKZyym/KNhtTVTf7wdWSsa5ntGWP3Z
T0Y0Kov0+6x7QtaLxk/ONr2BCqD8oxHWX00tV41sEo0Qy+mFgiVki2ik33N+
fMmcbB+NlJ8afVX9yM7ReDe3/5DryWSvaKzs3vP4sQtkVjS2nI8IuPeIzI7G
cWO3tQtayZxotMRPq6wftITyj0b0n/1PqmeSRdFYHKA3UGkdOSMa34v1liU4
k7Oi0U3bfsFmDjlPUv+DcVess8jiaORtyEvJKycXR8Mzb9qBTS3k8mjJ81Gr
fYsGLaX8o9G7RtnBZTa5NhoJfRjPPhmT66ORu+ZG+SUPcnM0vg0eMu6hkNwW
jY2/8nPn55MZMTArO7Dz0zOyQgyOXnqs/pWxjPKPwffHZ2tWq5GVY5D55J5r
60oyMwYRQ8bUfNpFVo/BnYd/+y3mkDVicLZs/u9XuWStGPTrx8yoeUpGDC7I
JfWb9pesFwPIj5n2SE2X8o+BZ+P3gY9XkU1i8HbC4KsaLmSLGHCG6+i9FZDt
Y/Dt/NjL36+QnWOwMNxmtu1bslcM5FqPFc4asJzyj0HS74w483lkdgys5hrk
NJqTOTHIG5dtUhlBFsbATn75cfVssigG6xofPaypImfEQH9eet9vcisof0n9
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
Hgyx+GddPvq9v2LuPsb8n/X4OF+l83zERtN/NuDjx+ft9V5XttL9vnyctYue
vG/Tln825kMhsEQ7YRjtJ2rCRzn3wnut9k3/bMqHbfWK/IkMsgUf5rqnU+JH
036kNnyEbtD/qLbZ+J/t+YgVt2j1O7Lhnx358Mj4WlrSg+zMx8Sxs3vOcaP9
Td34SI5tP2z3Zd0/e/GxYd/nxsuBZD8+RvbhLy8cRmbxoVa3c8LcS0b/HMpH
g3lWW8sOMltyfNbfW38PJ8fwMX7Dk11fTtD+qhw+Pqv3eLFoBpnHB3vZR/PA
q4bU/5LzU2un5r+VnCY533JPcsf+XUP9z8emPIeLXpnkI3ys+GO445AlOUNy
fVx6v7FqFDmTj9fFPtV7ag2o//mQj5Y8I8kg5/Ix16qX/yoPch4fuuFGz4P0
yAV8WIWE/PiuShbzMXt5e9DyH6up//lY/WPOzv5PyMV8cPTUSn5dIJfysfiX
+GNhKrmcj8tbo1lqweQKPv7e5l6ucSBX8nE0qO7+uY3kGj68hU90/JeSayXH
I393jfxMch0fNXf5IrUx5Ho+Zi0SXTo3iNzEh/7h5CNJ8uRmPsqalXgZP2j/
21Y+Sgwm7bv3kdzGx5HcHo6f68jtfOx4HSv/s7pjv9wkzAq1jbv/kCyXhBBG
wDDbUrJCEsbsvronvYjcLwm+Fxb9DL5KVkxC6h439oeLZKUkKE8dpfU0l6yc
hPA/ZsYLssgqSTj+7en8nplkZhJEx510ZmeQ1ZKw/eIaft4RsnoSdtkZ6MYd
JE9NglqgYq9T+8kaSTji2H/ZgDTynCQsW/rf95PJZK0kFN1dcoolIGtLxkt3
7I7gk5GESSe3ns9PJOsmYbQwZefwBLJeEszULt5J45ANkuDlftVjaTzZKAlB
qhs29IojGyehoYjHrY8hmyThQuTRQ6+jyaZJcM+5MetbFNkiCaNuNI9T7bBN
EuwmK0VuiSTbS+pbEn8wnU12TMLeQVqPenTYWXL+YrKz9kSQ3ZIwIEX5VX04
2SsJ49b9mbu7w35JmK2TwfsTRmYloddWzl9hh0OT8OSbarx2h9lJqNZOdq4P
JcdI1ucurkvtMCcJRn6ChZs6zEtCq+qzJ0M7LEzC72NC9Wch5LQknA00PpHR
YVESMjVd3nh1+EgSHGOUnNZ0OCMJfXrOfD6+w5mS9f8cft6tw1lJWN7LXuVl
MDk3CZ+ePDW40eG8JKxSHjA1o8MFkuMNmucX32FxEjw+K8l7d7gwCW+1fBNt
OlychBjrx23rOlyahLDkwj5LOlwuuR5ZuYdmdrgiCSuNY/eN63BlEq5+MK8e
2uGaJDz+pry4b4drk6CZrXea0eG6JNhk1yh+DyLXJ2Frr49GHzvclISWTXFb
33a4OQl6u1NGvuhwaxIefeaEVHa4LQkRNx1DHnS4XXI93QvuX9ZhhgD9HlkN
Ke6wnAAPJ+bH3+iwggC9qha5Xu1wPwFCVsbl5HdYUYCt+WNW53VYSYAF3ebN
PNdhZQGSzl8yP9thFQG0Zy8tO9NhpgDedZ89TnVYTYDiH96bTnZYXYCdun9t
j3d4qgCO00ccOdZhDQHunbnVO73DcwSYMMWSd6TDWgIkSF5zHO6wtgBh7K19
D3UYAmQqt7aIOqwrwP4nL1oOdFhPgCq/xwqdNhBAQ7tozv4OGwlwul/J3n0d
NhbA2nRyYVqHTQQYO3GLWqdNBTCxa0hI7bCFAPWV8QM6bSMAt+fopJQO2wuw
NjVUvdOOAkS23CxM7rCzAJZV3R067SbAfOHOYZ32EqC61+JSYYf9BHj55UlE
p1kCFMYJ9TsdKkD7wC+KnWYLMMjF9pmgwzECnFzpf7rTHAGmXioN6TRPAL2Y
L6adFkrO55Lk+Z1OE2CgsdPwTosk+fpNaE/q8BEBdvcNftnpDAEU1y8r6XSm
AEOGzc7pdJYAhsNHH+h0rgD6+57GdDpPgB9y8/06XSBAb5dhTp0WC+DrsH57
pwsl55t3e32niwVosrZe2elSAebWdtfpdLnk+rflzu50hQDd3H5M7nSlAOs9
Jo7rdI0Aq/b1Vul0rQCaOfFDOl0nud6+nxjY6XoBCv6s6dPpJgGEHEf5TjdL
+iv+F6PTrQI0PGtu53f2v6SfVyz70el2AQ7sbPzaaYYQh9Off+60nBCF/Yc3
d1pBiALDxA+d7ifExRMr33daUYjF7zQaOq0kxPKlq951WlkIY7v4N51WESJv
R/vrTjOFiD4W+6rTakLsbFj8stPqQkybrVjb6alCDLz/63mnNYSIX8Po8hwh
inaNfNZpLSHMx66u6bS2EJ+SYqs7DSGuDX9Z1WldId6P0e2ynhCv9c897bSB
EBsMZnfZSIjx3S5XdtpYiMat67psIsRum09POm0qROyipC5bCKGturzLNkJk
r/r1uNP2QtwYmddlRyEc23y67Cx5/I3LuuwmxIBcxS57CfFV9OpRp/2EWJCT
12WWJJ/ohC6HCrH5wZ4us4XQmm/U5RghfnnO7jJHiLFrhneZJ8nHv1uXhUIE
3H9f0ek0IcYNr+yySIi+E292+YgQBg/OdTlDiJtf07ucKYRgT3KXs4RoZsZ2
OVeIWx+CupwnRFqBZ5cLJOfbY3eXxUKEytt2uVCIuZvNu1wsRPmWzV0uFcL9
t1GXy4UQzV7d5Qoh1D4t73Kl5HyNW9LlGiEW3tLucq0QP+9qdblOiMmz5na5
Xghe/cwuNwlxqXF6l5sl/TpzapdbhQi5MKnLbUKYekzscrsQo3eO7zIjGVOi
x3VZLhkzK8d0WSEZZgbMLvdLxtQ61S4rJsMibVSXlZIx2FWly8rJEFmN7LJK
Mni7RnSZmYybUcO7rJaMOVeUu6yejN5yUp6ajJStw7qskYw94qFdnpOM8XOk
rJUMz9whXdZOxmpIGcmIeazUZd1krPOQsl4yilWlbJCM4fcGd9koGfxwKRtL
rCtlk2REKkjZNBnv7w/qskUyZoukbJOMFlcp2yfjmr6UHZOhpyZlZ0ke3aXs
lgy11/912SsZr29K2S8Z005JmZWMO3wphyYjnCVldjLUnaQcI6lnm5Q5yQhe
LWVeMuq1pSxMxr4ZUk6TPP44KYskVpbyEcnjDZByRjLs5KWcmQzV34pS/S+5
nr5KOTcZuR+lnJcMj3opFySj6JWUxZLr6ZmUC5PRUCnl4mQcqJByaTLyyqVc
LumfMilXJONTiZQrk9F+U8o1yTAslHJtMp5dk3JdMo5dlXJ9Mg5dlnKTJK98
KTcnY/QlKbcmQ5gn5bZkzLsg5fZkfDknZUYK7uVKWS4FN3OkrJCCB2el3C8F
37OlrJiCmdJWSoFvlpSVU1BxRsoqKdCRNjMFZ09LWS0Fc6WtnoLrp6Q8NQUm
0tZIQVumlOek4KC0tVJgLG3tFPSXNlJQdlLKuilIkLZeCkylbZCCqdI2SsHf
E1I2TsFTaZukIFfapilIlLZFCtykbZOCLdK2T8EiaTumYIK0nVMwUNpuKWg/
LmWvFDRK2y8FNdJmSeqXdmgKxNJmS45f2jEpOC5tTgpE0ualIEnawhRwpZ2W
Ara0RSkIkvYRyfUj7YwUeEg7MwWu0s5KwW5p56Zgp7TzUmAt7YIUWEhbLMlX
2oUp2Crt4hRslnZpCjZIuzwF66RdIeNKGdfIuFbGdTKul3GTjJtl3CrjNhm3
y5iR+r+Wk7GCjPvJWFHGSjJWlrGKjJkyVpOxuoynylhDxnNkrCVjbRlDxroy
1pOxgYyNZGwsYxMZm8rYQsY2MraXsaOMnWXsJmMvGfvJmCXjUBmzZRwjY46M
eTIWyjhNxiIZH5FxhowzZZwl41wZ58m4QMZiGRfKuFjGpTIul3GFjCtlXCPj
WhnXybhexk0ybpZxq4zbZNwuY0aaTP/LWEHG/WSsKGMlGSvLWEXGTBmryVhd
xlNlrCHjOTLWkrG2jCFjXRnrydhAxkYyNpaxiYxNZWwhYxsZ28vYUcbOMnaT
sZeM/WTMknGojNkyjpExR8a8/+uajrQTAAAAAIZBEARBEARBEARBEARBEARB
EATBYBAEgyAIgiAI2hYEQRAEQRAEQRAEQRAEQRAEQTDce4f3AYdHeIwneIpn
eI4XeIlXeI03eIt3eI8P+IhP+Iwv+Ipv+I4f+Ilf+I0D3/zHQRzCYRzBURzD
cZzASZzCaZzBWZzDeVzARVzCZVzBVVzDddzATfyBP3ELt/EX7uAu7uE+HuAh
HuExnuApnuE5XuAlXuE13uAt3uE9PuAjPuEzvuArvuE7fuAnfuE3DvzwHwdx
CIdxBEdxDMdxAidxCqdxBmdxDudxARdxCZdxBVdxDddxAzfxB/7ELdzGX7iD
u7iH+3iAh3iEx3iCp3iG53iBl3iF13iDt3iH9/iAj/iEz/iCr/iG7/iBn/iF
3zjwy38cxCEcxhEcxTEcxwmcxCmcxhmcxTmcx4V//wH1hWA4
      "]]}, 
    {RGBColor[0.2, 0.2, 0.7], PointSize[0.002777777777777778], Thickness[
     Large], LineBox[CompressedData["
1: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
eK7k74cJ5OwwPF53Yb3mfHJBGDb42oROWUOWheHDIp+JmzaRK8MwMDm9sDiR
XBsGDxedLx13khvDUNa0jrHyOJmxBd23dHwjKyMzt2DsiJCjo2rIrC0oXbJs
w75GsukWrBDMGzCiYyLlvwUlJ9XunOpLtpePt5sqchxFZm/BEYOr/s3TyZwt
MFu5JTBvCZm7BZ+TZuxd60nmbUGv6ZqaxhHk7C1YV/tW9iuDXLAF0/OeyqoP
kGVbcOBOjwHnz5Ert8Bx774nhVXk2i3olFrHLHxLbtwC09E9z5f+JTPCEcbd
+qOqVxLlH45DtdsufzMis8KRNfKhqcEUsmk41j0+bbPCkYxwVHS7q7XLg2wf
jrN7LmR/3kJmh+OH54Tf89PJnHA09v1mWpRH5objk++VOSNKybxwjF8Vt+jg
XXJ2OEK7DF0x/i25IBw+H6Ret/6SZfL1/vwi8NdOpvzD4btrzkN9Y3JtOHr/
KrernUpuDId+Vd6PvEVkxlYwbo9t2LKRzNyKnZEXTVdFkFlbERJx/q5dJtl0
q/z1277nNofI2IrJSf/c510k229FXvVaDvshmb0Ve0du7cr9SOZsxd+7GtPz
O6ZQ/ltRXVKt/6o/mbcVD7adKzE2I2dvxe32R/pusSUXbIVgy55ZNSvJsq0o
PHTM0TaQXLkVje7f55xPItduRcT1PRNn7SI3bkWxRzvTR8VkBhd3HVdZht4i
q3OhM8tw9bDXZCYXw8/dLHr+m6zLRZjuy9n7e6XS/nDR/dA/g3BjshEXQZ/v
LGZPI5tyoSXW+2+BM9mSi/V7jn218yGDi+/ioPAlsWRbLv7Fumb4bCfbc3HW
Mto2o5DszEXd3KY95dfJbC6YC1+d6fKS7MHF+0ap2PknmcOFQXvPOSc00xQO
5uLd8QvPBg0nc7kQ7B+wTgxyPBfhA7p9HOhM5nHh9Mcs9rgPWcyFXe95kxbH
kbO56GdkqNd5JzmPi7zeOydeOUku4CLyd/6u9JvkYvl8l6WuPq/JMi44lhdS
l/4ll3OxRy9Fd3g3HtWTixOeTodM+pCrucie6JYyXp9cK6/HtGDZ7NHkei5c
7tvPXzuJ3MhF6q+SKdGzyM1cPPPLkOQ7khkRWFR51r1mFVk9AmXJBod7eZKZ
EcjUvRi0MJisG4GHH7ZfF0eTWRFYnXfp6Gse2SgCaj0XmlltJ5tGgDXGc5Fk
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
Lr/RRFZPxMIuAx/3V9tN9U/E5Gc9NTb3IusmIuqYftf3Q8isRIzte//TRjOy
USJGNrx49mca2TQRt77M/JTtQLZMxIjMSTMWrSYjER1Tpn3p50u2TcSytD6D
PnPJ9olopymre8QjOyei5Ct3zb1sMjsRXnZ1J58XkD0Scb/bKQbjPJmTiNO3
e60yvU0OTsS43AWf/J6TuYn4cKLHg7JP5PhEbDCZZDq6fS7VPxGst5319muR
xYkYsOjT2XH65Gx5/qNLx94bS85LRLULd2ecNblAvt6zGUPmLSIXJ6JT+/1P
h7qTZfL9jDr2VTOIXJ6IoME/EjTjyZWJsB/Uq9RAQq5OhEOnN4VzD5BrE2GU
mM+PPUOuT8QWzn9B9yrIjYngbI5NsnxKbk7EiiV5jUc+khlJECRVX5/Ubg/V
Pwlm3p+n1WiRmUnw6m8UzDcg6yahyqeDcLkFmZUEnU7rzky0JRsl4c/4NO3R
y8imSeik3+uKpSfZMgnDCl59WxJORhIcdy6+mcwj2ybBQ9Qr4MEusn0SHo4d
zrQ8QXZOwj0DteuHy8jsJPhN9bsx6RHZIwlzsnfjWQOZk4ShFSPmS/6Rg5MQ
f689a4PWXqq/fP2xsbUOQ8nxSeiTvPm0vSWZJ8/nYI+H7nPJ4iQwv91bJ1xJ
zpbvD+OO4KEvOS8J7Yf6xFrEkAvk+V6K9TkoJhcnISyJvdkynyxLwrjzxx88
OUcuT8K39Lxj2+6SK5PA8Xk40e8NuToJToucdq7+Ra5NwoJJWT039NxH9U9C
ideBM0n65MYk2H//ePfKeHJzEjZ1X5LQ347MSEbfSOvuiWyyejLsJ0r4WoFk
ZjJmHThueyKBrJsM38W+bn47yKxk6Cwz7T/nONkoGRu+VG63KiebJqNH76LB
c56QLZPB+nP9sd9nMpIx487WdkWd86j+yTCxuV6uo0e2T4bZlDEeAjOyczIe
RMh0jG3J7GQs9Omt8XQF2SMZK08u5x72J3OSYdHXPn9bAjk4GW/GTr+6ZyeZ
m4xJc3Q0b5wgxyejy4BZpZoVZF4ypsvedAt4QRYn41bsnnFNzeTsZIx9fjVI
0HM/1T8ZExda9VxgSC5IRplr9ATjyeTiZJzef93cwIksSwbOPps6eSO5PBnb
HM2lgZHkymTYzXsVdUNCrk6G5t3iyTOPkmuTIQ4Z3OVJObleHt8LRhm15MZk
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
MH55KutGNrlWAKn/pQeRheQ6AY6Yhh+3u0KuF+B5gv5jtfvkBgHezbC5H/mS
3Cjfrzj75m0fyE0CRKt9ddD/Tm4W4Np63T1vf5N/C5Ajvb/87D8yIx2Zm1ZG
bVBaLR0jdEOvn/5FVk+H9/OTSYFNZI10HBHg1qq3ZGY69M7kelg9ImunY+yl
Bz0qlOvXTUep1s/oG4fJA9LRFBhx8w+fzEpHjxk8X10O2SAdr1Pdrz6wJRul
47Hmjw1f+5NN0vHhw+3txm+pXqbpuF/h/d60gGyeDl6hQ9kFDtkyHf8i3zlk
GZOt0rHN2Nky7Andb0jHqeCzxwwSyNbpwPUtu1xGkm3TUXVK/3bjVeoHu3SY
Bn5YcGIl2T4dfe60/x77nvrTKR26gl/t5nGU/S/P9263Kz8b6PHBJR1anF5h
/NVkdjr+e/5GZ8hNerxyle/Xt2P9b5mRPdLhwz3iczONHk8901Ex6Xa3ja/o
8Z2Tjg2vhkV3MicHyPfz94T5/cLo+Sc4HZvnrDliWUrPj2HpWNdndWC/b8rn
/3R8q/RJPOVOrxei09HVo4rTpZJe/8SnI0bjufOXsfR6Kzkd/B+LfBOF9HqS
l44wdv6Tjk30+lqYjtAt+b+KnZSv/9Oxe/CGzl1P0fulrHTcOmc1c50+vb/L
lufr8PjLRBG9385NxwxOztqnvejzhTz5/fTwokNf5edX+elw2/3f6wMc+ryw
IB03PufPHHyFPk8uTEf0345r94I+7y9Ox5D+f3tXvKDfb5Wko2FbeWb4YeXv
X9OhYec59sds+v3+pXR8ntxw8UCK8u9x0rF38t9Oj4bR329VpGP7xk1XNfoo
/z4zHcN3DH6U60x/f1wl//lnp9O636HvJ1Sno9PnKwtS4uj7PDXpCDQet62g
TPn9vHQk9z15lBtH3x+tS8dCndFnewTR963r03E4dfW0eQV0fkCD/P4pbSi4
rjzfojEdwo7xm65uovNOmtIxUD2+dPYlOu+mOR0Tc1KLh3eh84R+p6N53HuX
qsHK85uEcB3RQz+ihs7LUhOiZvXSgc276XwwdSEqttvUmHjQeWcaQgxxuBBS
+YvOb2MKsawxbtF0Lp0fpy2EjX9YfPVAOq9OVwhOz4Sg2Jl0Pt4AIaydrpxS
k9F5eywhbCU5Di/KR1H/C9E9ufCH9Qc6789Ivp6h+ld/pdL5gCZCODMM8w4W
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
xvFtnNzGvDYWtrG4jbPaOLuNc9s4r43z27igjQvbuLiNS9pY1saX2ri8jSva
uLKNq9q4uo1r2ri2jevauL6NG9q4sY2b2ri5jX+3MSOrTf+3sXoba7Qxs421
21i3jQe0MauNDdrYqI1N2ti0jc3b2LKNrdoYbWzdxrZtbNfG9m3s1Mb/0zUd
aScAAAAADIMgCIIgCIIgCIIgCILBYBAEQRAEQRAEQRAEQRC0LQiCIAiCIAiC
IAiCIAiCIAiCYLj3Du8DroTLuIKruIbruIGbuIXbuIO7uIf7eICHeITHeIKn
eIbneIGXeIXXeIO3eIf3+ICP+ITP+IKv+Ibv+IGf+IXfOPDNfxzEIRzGERzF
MRzHCZzEKZzGGZzFOZzHBVzEH/gTf+ESLuMKruIaruMGbuIWbuMO7uIe7uMB
HuIRHuMJnuIZnuMFXuIVXuMN3uId3uMDPuITPuMLvuIbvuMHfuIXfuPAD/9x
EIdwGEdwFMdwHCdwEqdwGmdwFudwHhdwEX/gT/yFS7iMK7iKa7iOG7iJW7iN
O7iLe7iPB3iIR3iMJ3iKZ3iOF3iJV3iNN3iLd3iPD/iIT/iML/iKb/iOH/iJ
X/iNA7/8x0EcwmEcwVEcw3GcwEmcwmmcwVmcw3lc+PcfrA8YdA==
      "]]}, 
    {RGBColor[0.6, 0.1, 0.6], PointSize[0.002777777777777778], Thickness[
     Large], LineBox[CompressedData["
1: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
ssueq1FkmSPGJnQ3rq4lyx0Rfq/O/abpc1rfEQ75uQ88M8kMJ1yc6jW1Su0F
re+E0zxts4H+ZDhhwPa77/tWkm2cUNR0sdp5ZCWt74S7E5MfTVxPljlB50on
3fWxZLkT3o3rsuL1ZXKlE0pOTUguayQztmCDfrz35HFVtP4WGFRfWtKwmYwt
0BxU6TlQRLbZgoLuIqv9RWT2FkQe671d0Oklrb8Fwxyae3ycSZZvQWOtLCXL
k1y5Bee65EdVHCMznOHndM6A9YrMdEZHDxs1N81XtL4zXvQbFfVgLdnGGRwu
4+fBRDLbGUsd/B8/v0mWOcOlx9GY8M7VtL4z3j2bEiycS650RkrDiuH9d5EZ
LlB5U/Ds5xky0wWWdz8PN/tChgvWds/f1F/vNa3vgo1D837McyOzXWAh+bz1
xTGyzAV/GAP/e19Dlrug5MiWSMcxb2h9F7BE1/utdCIztuKuV+qUtMNk5lYU
ewzc5PGajK2ImZj3+9iot7T+Vkw4/Dx+rROZvRU3mFbBHkfIsq3QGnF68d8a
snwrKtZ23PB3XA2tvxVNEX/He7qRGdvQP6HbdItMMnMb9Fep12d9IWMbrmbd
vB1sUEvrb4M8xm7J1V1k9ja8PlbwxE9Olm1D9r2A5tQu72j9beh78uzYpcvI
lduQ99y0wp5HZrgiq/F8YuNjMtMVg33Gypu13tP6rnCtdXkX4ES2cUXfB02x
O0+S2a7od/PPiLffyDJXyPxW6d6fW0fruyL8nNdEg2hypSucklJk6g/IDDd0
2XBUxWPYB1rfDR5nprxd7EyGG4bdCLokySbbuGHARE6/LX/JbDdUjv1jf2pZ
Pa3vhqvnFs3cJSHL3ZCX6T/46mtypRtOP2FFRU39SOtvx7FBp3sUhZCZ23GT
kzCOW0LGdvR4FGzwrm8Drb8d0/LtM4sMyOztGL4tK//jZrJsO44LI8+t4ZDl
27Fczba0KZNcuR3l5v9tevGEzHBH3S+GoFunT7S+OwqCjhR4TCDDHY8vqRto
rSPbuOPH4dOTerPJbHcMzV/xfc4xsswd7z+oPsouJcvdIalIVHP9S650x8M7
+b+2jPtM67MwaHzfh0fWklVZyBox7d34EDKThf3rHCIa08l6LPwKmPKpwxMy
WOikstfXvMuXfzZjQe9Ony11k8k2ivnZ61RuWZNZLISan0r7EEtmszA066Zg
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
7JJk6Cm7NBm6yi5LxgRlVyRjnLIrkzFW2dXJ0FF2TTLGKLsuGaOV3ZCMUcpu
bOemdm5uZ0bK/3fndlZp517trNrOau2s0c6a7cxsZ+121mnnCe2s18767WzY
zkbtjHZe2M7G7WzazmbtbN7OFu1s2c427ezQzs7t7NrOrHb2amffdg5oZ3Y7
h7czp53j2pnbzoJ2lrTz7naWtfOhdk5r5/R2zmznnHbObee8dpa3c347F7Zz
UTuXtHNpO5e1c0U7V7ZzdTvXtHNdOze0c2M7N7Vzczszdrfr/3ZWaede7aza
zmrtrNHOmu3MbGftdtZp5wntrNfO+u1s2M5G7Yx2XtjOxu1s2s5m7Wzezhbt
bNnONv/XNR1pJwAAAAAMgyAIgiAIgiAIgiAIgiAIBoNBEARBEARBEARBELQt
CIIgCIIgCIIgCIIgCIIgCIJguPcO7wMOV3EN13EDN3ELt3EHd3EP9/EAD/EI
j/EET/EMz/ECL/EKr/EGb/EO7/EBH/EJn/EFX/EN3/EDP/ELv3Hgm/84iEM4
jCM4imM4jhM4iVM4jTM4i3M4jwu4iEu4jCv4A3/iL1zFNVzHDdzELdzGHdzF
PdzHAzzEIzzGEzzFMzzHC7zEK7zGG7zFO7zHB3zEJ3zGF3zFN3zHD/zEL/zG
gR/+4yAO4TCO4CiO4ThO4CRO4TTO4CzO4Twu4CIu4TKu4A/8ib9wFddwHTdw
E7dwG3dwF/dwHw/wEI/wGE/wFM/wHC/wEq/wGm/wFu/wHh/wEZ/wGV/wFd/w
HT/wE7/wGwd++Y+DOITDOIKjOIbjOIGTOIXTOIOzOIfzuPDvP9KbSOo=
      "]]}, 
    {RGBColor[0.6, 0.1, 0.6], PointSize[0.002777777777777778], Thickness[
     Large], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxc3HlYjO/bBvCxZw8hJIMQkhCFcNqLUNZoUUklRaVdy1RTTfvMNGvla2wJ
oRSSEEII2SoKoQhJCCF553e4qnnHP47PcXfP/VzP+Vyzzz3SfufqrR0ZDMb9
bgzG//7/969hHuP//8O8lewH5wM/zPlHFXQptJ8bEt5z7j+rwr94dVHib02y
GkYesq/oz5tIVsf9fucdjyRMJ2tgitGIqIT+88hMjB9vHndlwmLyKDz+7Bnu
lrGcrAVvW6sm3yhz8lhE5uw08D+yjqyNn3qrZyQabSJPwITAt4P6zt9M1oHG
tT7TDlvak3XxwXFmwv1VW8l6CEiZe29KkDN5Cp4wztl8fb2dPBW1E8oq5rN3
kqdhia5ZgtZJD7I+NjzWEA89t4s8HZWFwglDqrzJM+Dx+mHkDC0/sgFCvr/t
Eh0RQDbEwp4tw8d1DiLPxJRBoXbjZCHkWei/de+8Ep1Q8mwMeLh431pJGNkI
pXuyTTL6s8lzkLDe7PyrlAjyXAw49Seyk34UeR7+MCaYDq3gkIGlha9yp/Ji
/pkFJNu8jbZYH0fj8/Hq1fkY8YQEGp+Pvoznt/505dL4Auh1GbzMmMGj8QVo
UZ04b0oHPo0vRO/8wuMXuyfR+EIIy5n7vg8R0PgiGE1T13kxRUjji+BmP35b
sLmIxhfj4aGwgKd+YhpfjNBHPWN+HpbQ+BIwLN1vvnwupfElGGUy3lM6PIXG
l2LhzqhrYx1SaXwpZLEXenFP7aFxYzhFvZdUqOylcWOovuK9jJomo3ETJOXP
85G+IbNMIOP2vXRozz4aX4bw5tTGkxb7aXwZkq4nrTk/+ACNLwdj0mmN20/J
rOW4POeZ4NW+gzRuim4GKl26uB2icVMMatiQN90ojcZXoGTZkK5+fQ/T+Aqk
Hr85594bMmMllkRqnJ97JZ3GV2LuY0blzX1HaHwV3l9O6+gVcZTGV+G4QYQQ
bsdo3AwpsZv/Tt2Y8c8ww9WJy0+uNDlOf2+GfetPq4vnnPjnAjP4VDpn951x
kuabQ9Z484/1kEyab47mD29y70nJLHOcikq4Y6ORRfPN8X1XMKP3PjJjNRzv
ZKlXjjtF81cjYbjDizuZZNZq9LJSY1bPzqb5q+HVGJXOvElmrIHW/TvGERY5
NH8Num2f/3DAezJrDVqexWvcDTpN89fAomPW79MDztD8tQiKbTG5c4yMtdCd
OPr1wCVnaf5aDMwbd4j3ilywFlu2erkvCM2l+evg/PLhuAmjztH8dXDd55O5
7BqZtQ4yte+fD7nk0fx18KzdUDqn/3mavx4tq/otU8snYz0EZj2MJjrn0/z1
0FLbt4c96ALNXw8vHLcfdYPM2IDna8JDuwZcpPkb0F2l6cvUyZdovtzntpw6
8oZcsAHidw9sZpgV0HwLXB0l6DHvBBkWQNDnZzt7X6b5Fnh69GTFTTdygQXq
K551W3mPzNiIruwypz9TrtD8jZCOXNLxiZDM2oiNKqNfvPxFLtiIbN1z3YbY
XaX5m2DQkhYZUkTGJrweW+U0aEohzd+EWd4nc58nkws24cWx3KgnXa7RfEuc
2PyrupsnGZbQKLv30uUFmWWJB3VfuJ1WXqf5lvjaGNT14QUywwrlhz5ueKp7
g+ZboaLT6NSh+8gsK0w32/pBoFZE860w7PeWzcuiyQxr9JIaDjD6S4Y1TCuc
R2/3uUnzrZEWW3u8vJ5cYI2I2GEPIpxv0XwbzCwty9z1mgwbnIh0cj2w+TbN
t8HiqhjtQc/IBTawtQzocceymOZvRs/TtYY3K8jYDI2OXSp7Wt+h+Ztx41rg
cNELcsFmXO8ZrL1ty12ab4tnEefGR9aSmbbocNxhVf2Oe3R7tiiomX1z/3ey
rS02rF3g8GBeCd2+Lb6Wdiv4xSbLbGGZMLz/7VvkAlvM3BzwbWG/+/9cZYvD
Q593cbQgM+xgnvLgxRQZmWkHUXUGM72WDDtsX5jgeHPKA1rfDrM9tpqJdpNZ
djie+ymo73WyzA4TNPISp/d7SOvbgR88alx3a3KVHfLvWLyJOUJm2OOXrq37
+e9kpj1iJ6luS1n0iNa3R9P7gd4Tk8i29igy/zbT9RWZZY8Ckx42NlMf0/r2
ENZHczqGkwvsYVoUbrfxEbnKHkO7vuZtGVtK62/Bs7ydV0f6k5lbMFCjRCYo
JmMLrl6JfpzPLKP1t8CpvmOfFG8yawuW3Qr/Mfk2WbYFV3IMEDiynNbfgusc
XTHLj1y1BdHvrDPmlJAZDhBw9+vlaD+h9R1wZc/lx9WhZDjgwLttK0sqyLYO
MN00faXvjKe0vgP6zToa/ZRHljngJtfozK+P5AIHLA9ZFVO+rILWd4DTnhkX
vNLJjK34tNGgW0nXSlp/K9Zbx4z8sJWMrQirt7p+/RrZdiuWbnqQuWXsM1p/
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
SC6PRIr2veslNeSqSAwse6Kd3nsW5R+J9c13f1+ZTm6IxLhvP2+NtCE3RcKm
V9fR1yLJjChskHTkHz9JVomC+1inwxXlZNUoDDg9uHFVx9mUfxQONDv36KlD
ZkZB54ZWcO/1ZO0oqG1IqN7AIuvJ//6Z46P3R8mGUchlfKm5/piMKAjdf52q
YxhR/lG4FV9aaqVDNotC6Ai3+sEWZIsorBg6S6LJJttGgeG3xssjk+wcBRlz
h1a/Z2T3KGRXv1re0n0O5R8Fx+jsxJkGZFYUfN4kiq46kDlRODuoQmUPn8yN
wvG8TO71ArIkCl4r3z/BJ7IsCpF8LX4vzbmUfxT6qFxznrCCnBmFZtbfPimB
5NwoTCqsMNicQS6IwsfFsyW+leSiKJh/e/6mutc8yj8KiZpulYfnkMujILX3
nXZ5B7kqCpWFrPQpMnJtFI7c7fTr531yQxT2OBh59e4Iyj8Km7vppiwbRmZw
MHHm0Ec5+mQVDm68MA0zXUlW5UD7yPAe/Z3J6hws3/K1pEsYmclBpO3SOdqp
ZG0OkmvTz/ifIetxsOxMwaFfJWRDDgaHrfU69oEMDmYkL4uP6zqf8uegLOq4
1X8jyWYcGFw5ueqlEdmCA5edJx+tsyDbcuA2bZZl8y6yMwcRvfutfZxIdufg
10KdKS+Pkf046LP50lZmEZnFwempcxyTqskcDs7+sEyf1WEB5c9BtNeQA4M0
yRIOHk+/dHfcbLKMg4Vlbw7usCCncyC0CpZ98CZncuCQUjxnbxI5l4PuZ7x/
RWeRCzjYeThkXcY9chEHd6vW3+taTy7h4GfTg3fSXgspfw6q3GZrO04kV3Fw
ws+0r+syci0H4Y2zx2RsIzdwYG5x8fPYaHITB8aFPVsq08mMaDwZVfPobhFZ
JRpfrKUd/9SSVaNRmN5joHP3RZR/NDSfZ6eoTiAzozGv8fi4H8vI2tHoGHl6
uYYrWS8a4zz1UlnxZMNo5HOnndQ6SUY0bEM4Gt3vk42jIWNnB+l+JZtF42nM
TzfhwMWUfzT+TnWMmWtIto3G/b/3PSZYkp2jUSWtLdwYTHaPRrbO5LF39pH9
ovHyWY9ZEdfIrGjUWt9IC3tH5kRjsmCP2vXeSyh/+fyteZPMppIl0dghXvzf
yA1kWTQ+FzurzQ4kp0cj7sB67NlHzoyGw3vzR8Y3yLnRiGrKYc/9SC6IRreR
P7uFDFhK+Ucjc/HFQT1nkUuisSr6wfbXtuTyaOSOnFWowiFXRWPpMoMXu0+S
a6OxdcPq4Dll5IZofPpgt3XlX3JTNE6ZJW06Oc6Y8o9BTb3nWDszskoMLOob
kxz8yaoxuPgjyD1vP1k9Bo3D6mK3FJOZMfhZtTfX9jtZOwZM74jbp5gmlH8M
JnbXTN20nGwYg/zV0Z03+pARA78ZiS9P7CMbx2BV6pH+1nfIZjGY4NYnwOEn
2SIG38+fa742ZhnlH4OhQ/3CwlaTnWOQqP75W3II2T0Ggd+zFqkeJ/vFIDvI
cPPrp2RWDMr6tBgO7L6c8o/ByGdhRWkGZG4MTCw3dpM6kiUx8H865UudkCyL
QbPlG86Ba+T0GDwTRd698I2cGQP2VIebRmNNKf8Y/JoxInzkBnJBDA7nnFJx
45CLYnDyQKgLM49cEoO45i35RnXk8hiM6Jkz8KrmCso/BlP+WPJyzMm1Mdh+
/PWK/hHkBnk9GcFuz3LJTTHYFTV00OCPZEYsPNa4eRSMXEn5x6J+V+fjT9eT
VWOx/MiaX45xZPVY+NgVJjheITNjcWbltQNPm8jasei6+KlP4eRVlH8shLYZ
JmOcyIax2Os91L7lPzJiMb7YpId5Gdk4FtoCS+O+KmaUfywuqWpp5WiRLWJx
3UG3UDyfbBuLTw/cS/NsyM6xeP9Hr6dmINk9FnNm9h54RUr2i8XhLl2PHD5L
Zslv/1xU8L3HZE4s1C28Vs1qJHNj4Zg0qby2vznlH4seHfeWVUwhy2JxM9S4
r5o5OT0WscXGC/nu5MxYpM5znrWBS86NRafS0Re3ZJIL5Le/ITc5t4RcFAu9
/El7138ml8TiYpH9nrn9V1P+sXjwQt3FYxq5KhbOfRjPPq0l18YiyfxqSZ4P
uSEWVYMHjn4oITfFwuTv+ZyZ58mMOFje37vt0zOyShxOXizV/sZYQ/nHoVfF
qcrlWmT1ONypuOfZuJTMjEPmkJGVn7aTtePwp+xvr3lcsl4cPt+f+edVDtkw
DutUmemVT8iIQ5/uol6T/pKN47Cv+8hJj7XWUv5xqK7/0bd0GdkiDjYTB1zS
8yDbxmGg5hzjN2Kycxw450dd+HGR7B6H8hiHaY5vyH7y+poOF07ts47yj4Np
xyMJNjPInDiMmmWa/d6GzJXfnnaWRXkUWRKHhT0WH9HOIsviMOPT44eVT8np
cTCandbze+f1lH8csmNZHO/J5Nw4RHUqjrTaRC6IwxHGvqUZEeSiOHSb81zV
MYtcEofd1nMnxT4jl8dh1We3Oo0eGyj/OAyuGXlAw4BcGwfj7brHYh3IDXFw
sv5vy3Y+uUmen/ptvQsFZEY8Ap54BYZ9IqvEY7uo4nS+pgXlH49+9uXmbivJ
6vEIXf3jljCYzIzHxa+8fQYnydrx+M/4veXaKrJePFytlkR+7LeR8o/HwW29
sjsvIiMe9yQvAlJ8yMbxCLO8EJh9hGwWjz+Ow2xWPiNbxMN8ddfbbv02Uf7x
sKiEz4AlZOd4nKncMmT+brJ7PFbUtHg1ZZL94qElPmc2+y2ZFY/hmd67e2pa
Uv7xYD/2uO2yjsyNx3ymm6ZlPFkSD6edtzc+v0aWxaNXZJ7L9xZyejwSfm5Y
csjQivKPx7BvZe/qPMm58XAsz9h07zi5IB6eZ06mrXxHLpLXk2dS7TrGmvKX
ny/f/6bq2JPL47FH5+y5hL3kqni0/D5xVPSMXBuPn1pV85Zo2FD+8cic1//C
XktyUzxy2Ed2HkohMxIQMLbsxMZKskoCjApvVVwcvpnyT0BYc7Vd2WayegJy
x304c2g/mZmAlvlGljpvyNoJ6B/Z6eOMgbaUfwJUzhQ4nDEgGybAPIZbI9xE
RgI+Xnx/rTSIbJwAZspI+4B9ZLME/FnG0gi7RrZIQEP9NutP78i2CTi01T/p
ah87yj8BSY/3TWPok90TMOj3qnNpG8l+CXBHXFpuCJmVgN6HhrMN0sicBFz0
P/5S6w6Zm4DNPz6sC2skSxIw48zpYHMNe8o/ATd6zuogWEROT0DaulExy93I
mQk4aJB3x19Ezk3Au4fqHGYBuSAB/TovD5r/nlyUAN3kYP/nalso/wRoZOma
/5xHLk9A6ADzl0nbyVUJ8L3M7pspJtcm4Fbq/FurCskNCchb2L2792dyUwKW
jpYWjxzhQPknYvnN4SMsVpBVEvE1xEltaCBZNRFLZjNvbTtGVk9E1auOziYV
ZGYi4jqoMc/33Er5J2J4TYXuZSOyXiLKDPdXWO8gGyYidcwxvyQZGYmo7+iz
xeEh2TgRWw7+6fywqyPln4gjq37dfzmLbJEIDacxy5N2km0TYVMa/OfdQbJz
IixWCMJqn5LdE/Flwy0Wr58T5Z+IF5sPH3trTGYl4t5hZuFHFpmTiJCV7yRp
58jcRAzYdrXrwK9kSSLGLH7YNHuSM+WfiJJXjc6azuT0RFScHWB76QA5MxF7
77C/j6wi5yZikumWtSbDt1H+8tuL+JRlaEkuSkR/fsOGr1JySSL8k9VlgU/I
5YmYWbr9W9kQF8o/Eb/sjj5SsSTXJuLj7/zi/nvIDYn4c0kr5OcLclMiZvx2
kxWM3k75c/FLN61puzO5MxePrR9v+XucrMJFy/mAB8GN5F5cuL7otax+titd
H1w0xgTVmLPJalwETL38+PgdsjoXk9Zvsu+q7vbPGlxYPap9t3kLmcmF1uoL
ry6eJGtxcbDSvWLcH7I2F29qWLv3Lt/xzzpceF7+FD4hhazHxcpr7+7d+UDW
52KQwc51CXN20vXGRYdJncZ6cMlGXHjEbt65u5oMLprGDJ77RMP9nxdxMU/D
4WlvY7IxFyaHmlc930U25eLAjhqPFTKyGRd6X8aPtrlDXsvFuBNLNwz4Tbbg
4klSan/38R7/bMWF/c1yF18Lsi0XqU93RelwyA5y+47Zz88lO3Ox/oVdt+Pv
yK5cOAx6OihkmCdd31zk9WQs6rWS7MWFzZ2EQRahZD8uxn8eNNHxNDlQnvf6
xGmz3pNZXBxxef+jbMSuf2ZzMbJP5vqF68kcLhavS13MiifHccGbu/AB/xqZ
y8UP4blRIS1kARcd9Rb6mBh6Ub9wMftE17HfPcmpXFxsuX4o+gRZxkXJ7f1s
lQ/kg1zo9Hvq5qvtTf3ExSLV5PEVjuQM+frP7u0xTCNncjG/sMM9wRtyjrye
S5NfNo7zoX7jQmh6Xt3GhZwvv75L11c8Pk4u4MKox59Muy/kQi4yzBsWdTP0
pX7kYtT9K47FweRiLmInOPU8e51cwkWW3bKVd/r6/fMjLsym+3oO3EQulx+/
8dXXwkPkSi6W+XU1XPeFXCU/nkIrvU3w/+dqLr5M2JV3LJFcy8Xkly8+m1WR
6+T9aBs50nxqAPU3F7Oyul3LjiA3chHlPC+G9ZTcxMX76jurL+nt/udmLk7O
zJzuxyEzeHi/6Q0r+yW5Mw9dBmif9zcKpP7noWHtkUMPJeRePFwMr59z6ztZ
lYeSFVmXHNcHUf/zUHe5NO3UWbI6D+uW+WadHRpM/c9D8fyfL0NCyEwemirn
hg58Q9biYZtOLTN8ZQj1Pw+LOxzd8zCXrMODbNEz1ej+LOp/HjrPOzrgkAlZ
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
      "]]}, 
    {RGBColor[1, 0.1, 0.6], PointSize[0.002777777777777778], Thickness[Large],
      LineBox[CompressedData["
1:eJxc23lYTP37B/AQQkhCCCNaEJKQ/S1JFCpRqUiKpGXa0zrte00z0ywJoQhF
iEIYhBCylr2EQg8hCuE3v8tdzXf881yv69Nn7nOf+7xnzjnX9Yx18rJ06S4n
J3e3t5zc///337/mhXL/+w+37/Cr9vV4Ne8fFTDGyr91Y1/l+f+shJDYAZUf
Q6eQVfBucirnv2GGZFX8Lb5W2P24BVkN4wLfj9mwez2ZAd/Sgu6htq5kdagd
/BlpON2HPB6frjkbXf+6nawJnam7HsfejyRr4/iQVXmKl+PJE9Fzl8konTdp
ZB1wFx2K2niYS56CUSUnB3pmCcm6UDG1W2i9chd5GspqbwQ0uO0l62HQLebp
22P2k6fjWsjqBvMVh8j6eDT/R2PjzyPkGcjz2s0ZoHqcPBOcblE3F/4sJs/C
uB8Rnx9plZINYCV6eSo/9yx5NqJGvSlN97tAnoOIzWFLTt26SJ6LDT++13IG
lJPn4bxPzt/74VfJ8+GoueyPD+M6eQHS36aYun+7SV6IMxo7PS78vU0G2KF9
Y0oYd/+ZBVzo08TEi3u0vgjbt4R/Cz/9gNYXofiI49jtJx7RuiHGjry6a+at
Glo3RL//Qk6Kez+l9cVgd/u2Qt35Oa0vxsTJdi1b6l/SuhFe6t3/b9XiOlo3
gmG9fbP7gVe0vgQ6Cy5f5Y5+TetLEGE5YsDKg29o3RhWwybM1zRpoHVj8F71
2H/gVyOtL0WPpoOB68vf0/pS1NfnXaje20TrJhiz79i2PYKPtG6C4eFHNPIs
mml9GZweP1WYtukzrS9DnHnE4TLWF1pfjhsKmrfYh77S+nKMP5S353ttC62b
4tSN1ruzxn+ndVO8/jM0bJdfK62bYXnGcwP/e220bgaLt2+Uey/4SesrcDLN
PWN3yS9aX4ErivrFSQt/0/pK/LfK7ZvKoz+0vhK9vy3NuzJfbsG/9VVYGlnE
GaXa7Z9Zq8Ds6Thn9k+ynDlOjrx7b+Hr7v8Mc8yu+3PX5lEP+ntzzPv97L/D
VfL/LDZHn4wqtY33e9J+CzwaNJGf86IX7bfA+QE59zhfetN+C8x/cyPFcWAf
2m8Bb5c9F/Vm9KX9lkh3/V6k59yP9lvilV3r88RsRdpviaSLhwc6vehP+y3x
6aC/xZsJA2n/ahzmXv+xa6ES7V8NjQ1VS0w/kVmrMdot7adi7iDavxpZA7/n
/3BQpv1WsEjx6qk1ajDtt4LrHLXGQ3VklhUULEas2HFYhfZb4bz2dasBIUNo
/xoc7jnAaIT5UNq/BhdcRTEPJw6j/Wsw+51O3tp+qrR/DRIFdbbFn8lyayF4
7xna88Vw2r8WfAMfxY1VI2j/WmidOzX1RcVI2r8WoyaH6/GuqdF+awgeX4/P
qhxF+62h5px7XaFmNO23RlAP99Pf342h/dZYcWQAY0Ekg/bbIDBwVUmN0lja
bwPr5F4Lq/eRWTY4a9mjcckcddpvg3N9wlp1H5DlbFGeO/tarvc42m+LaT1O
XilUHk/7bXHUyyTApoQstsUCL0vvYxs0aP86fH653vlKP03avw6rt6xS3nOW
zFqHzdNiVlt4adH+dcju1nNovaY27beDSeYhh02vyLDDTFsTo5d7JtB+Ozz3
efRjk8tE2m8Hj1HZ5X90JtF+e0yzX9ftXBsZ9uB3DxxXUKFD++0Rq6x98nH2
ZNpvj24+u61X+0+h/Q440zbzsqblVNrvgEnbbtcXDdel/Q5QmiCnmZhCFjuA
47Nba1+3abR/PTKrFVp6bidjPW7v27m39AuZtR4h356sveSpR/vXo7G7Nyb+
R5bbgEHp63a0ekyn/RuwO7Xl6LTPZNYGjGwdcv9lgD7t34AVt7Q29/lLlnNE
ovn86pOJM/6Z4QiNzTp7mobOpM9zRIDuftOT+8mOjhjzeNW2YbNn0ec7Yk/q
0z0jbpNzHDH56NhdV10MqJ4jRDPmqI2Tm/3PtY7YZMx/M2snWW4jXvwdfldx
/hyqvxELts+8fPAlGRvR0NrjyNDYuVR/Izaus8+wmzyP6m8E9/S3YFYNOWcj
nBEWlxo3n+pvxIc5x58nzVpA9Tfip31kKesDWc4JpWA4BO5dSPWdoJquwp47
BVTfCWUOdnrlKWRHJwhMcftxE5nlBM39v/axVi6i+k44JtT9VXaMLHaCuuiX
OneoIdV3wvivcj69w8hym9DADDEe/YbM2IQd6qa9nq1cTPU3YbuR/JglZ8iO
m3Bk8Z+e67WMqP4mZL9yMpjEJ+dswvrQ+XOP9VpC9TdhlWvSjpYgcu0mOIQZ
f/zRRJZzRr9T4VVXnIypvjOyWjY02D8hS85mcqNx7eXVS6m+M8YNqWL+vU1m
OcPzR8NaFTMTqu8MzXVPbXrfJIudsb9wy5LnpsuovjPsD938mnWbLOeC1tbq
xUtWL6f6LgjtITe67jEZLnj+3c3X18mU6rtg1gP5Bd3+I7NcMPhkOit9uxnV
d0Hd5JPG4xRWUH0XrH00LO+ikFwr+fzvzqe9Jq2k+puxzHbzIT0xmbEZL41U
8gdar6L6m3FQeOBDv2ay42Z06/PIjr/EnOpvxkW7PgVzeeSczYicoZ7RVk8W
b8Yri6wzd/QtqP5mVGudeXY5jiy3BT6ee4uqH5MZW9D71JqW/lMsqf4W7Bhy
yW1rNNlxC/r/d+Np02Myawu+nrVU2TFtNdXfAkH/JW8DksjiLegbnKMd/Zpc
uwUHy1gllxZaUX1XLKjV9jPIJjNcUcbqv6ThBxmu2DDu5ZB7NmuovivW5/Kq
f5WSWa7YfdaftWXEWqrvikyBhqJqGFnsCv30whClOnKtK7jv4x+uNram+lux
4fIhjTcFZMZWNPzihF1TsaH6W3Fi5aqW32Fkx60w80/en9xIZm1F2pYdp3yt
bKn+Vvw6Hmd2+iJZvBVt7wfzN+iuo/pb4TbtwdWtOWQ5NxTXTFF9OsiO6rth
32iP66diyHDD2G5Xx8j9IDu6QV/HbfMZT3uq74YD3dkfG9+Qc9zw7ULEwPT1
DlTfDQEnd2sW1ZBr3VC3hyVYZbWe6m/D+XHvbzLvkhnb0Hdpw/Rh5huo/jaE
Trm/xLiK7LgNuk16F+QmOFL9bciOcNTd70bO2Qb/5AVzhxSSxdswbfrTA6ua
ybXb8Hx06iJr/Y1U3x2Pxv98NHk7meEO5e6j5zw8T4Y7bMdaYFVPJ6rvjoXe
qy7tNCOz3GGybGH2JR45xx2m60sLLzwni91hcPXGY77WJqrvjrn9evVe7kOW
80DhStaYp+fIDA9cCHmuZNbXmep7QCtpbeUua7KjB+qrxMYP88gsD0zamhn0
uYWc4wGFvW0O34xcqL5kPebi91eZ5FoPXNkcaVzWQJbzxPTMZKvoOZupviei
ev6eNCeNDE/sZ5Q/ffWK7OiJTTvyAyIMtlB9T2zfuHqwcjo5xxO/MtZWZr8l
iz3RnjpDPHahK9X3xCVVj0H7hGQ5LzxLCnmr/pXM8MKvoe+27lu5lep7obe6
+Q3Nw2RHLxgWusw5quBG9b3Q/0G3zwu2kHO8sNVee0LNVbLYCy/XDVIP09pG
9b3w4t20MbqJZDkmRn4zcv36gazEhLqq1bLrq9zpeJjoyRErFxeTdZlQNjMb
fmqEBx0fE0u/q5+6G0k2Z2LzrHrjPu/JjkzkfTkwecNqz39mMnF3z6C7D8+R
WUywr6zK9prg9c9sJoa5Tfw7hU/OYUKvruesft2Z/1zExJEm+Wm82WQxE2o6
QQUnvMlVTGjp5b13O0SuZcJ32cypZ+vJzUz82r5QnDfKm/r3RqNo8dtJNmQl
b8i7zW5aySUzvDHkPHuM0h2yrjduFM2qYvbzof698bJ+t7mPCdncGzMrL38b
Ekd29MacvjrDHMrJTG/43W4ZsKyHL/XvjavL789+akhme6OH7shWlWhyjje2
GZTnt14mF3mj+rzXiZieftS/pL6TZ/i5peQqb2icueK7L4lc643aATPlDG6T
m72ROAncUGV/6t8HM/Un7faxJiv5gJvaVzRyJ5nhA/+7l9uC6sm6Pth2V2V2
ysQA6t8HrgdE1Wt9yOY+MH9wz+rJGbKj5PM9JumrygdS/z54tPbvr0ErySwf
JKbvmXFdSGb7wCnByWPha3KODwpT+HoBukHUvw+aDLKHeYWRxT64KVd/bNJN
cpUP1pR/FhUO3079+0DZ32Pbd1dysw+cb4y50vs0Wc4Xz3r+ManvE0z9+2Lf
tanZSXZkhi/kvw7Z8reQrOuLbvss1izuFkL9++Ld1JtDbNaQzX3x1uj0uoWH
yI6+GNE7//HPv2SmL8asYJmmrA2l/n3R0pDm/q2QzPbF0t/J7bN6hVH/vhjv
u/f8mg3kIl+4eQRuNz9NFvti8fNprRNUwql/X6irR/V87UWulfR37qA/q5Lc
7AuPEdFq3SZGUP9+OOaUeG9LAlnJDz09a31PNZAZfrDYMIXZOo5F/fvh/PUr
YYlWZPhhV5zDWk4s2dwPgumRn5RLyI5+uD42D4rvyEw/zImbuDhiZCT17weV
4k1f3FeS2X7YslFo+iiSnOOH39/6rCw7SS7yw8PXrT/HvCeL/fBxYO6a7mOi
qH8/fJhpvcnZilzrh/VMl0lLk8jNfvheqFdyWEyW80ep6SxlbitZyR+rD8kv
/zMlmvr3R9CDZZ4fN5N1/dEwtYbtvJsMfxyYnX9lYw3Z3B+PVrxQbxgUQ/37
Y3PIHfE3UzLTH2abep1JiyOz/DFmvMmkExfJbH+stBBNd/5NzvHHp++GLXtn
x1L//vA7WM1mBpDF/vDaazD19glylT+M32W1ln0m1/pjemKKygLdOOrfH/vu
/zhu6UWWC8Cfo3rd24+QlQKwvu3T9LmfyIwAJNXbhA7Sjaf+AxASqqDM8iYj
AGu1Bk9JOEE2D8AIfUXFSd/JjgGYF9Hv/dbZCdR/AEwYJxSMw8isAOzVnHFY
fJHMDoCrs+2wp70Sqf8AaJtEZ/LNyEUBaC4vYbZwyOIADF227/u3x+SqAEwq
3x2YPTaJ+g/Ay7NnjN9tJTcHYDnz7Onnx8lygVg+cMKEkHayUiD+tJo3XzJO
pv4DEdV/hcepDLJuID4P79vN+jkZgdiwaOXA/RNSqP9AjIi98Cc3gOwYCFvr
9wZrysnMQJQsNJlYqpxK/QdiOtvY8M5GMjsQaZNWfN1xjJwTiCT7K8fHdE+j
/gORe57xw241WRyIcIPaRZZ55KpAPO+9o598G7k2EAde9qzxMU2n/gOhqvpz
Us5uslwQZn0OTU9tISsFobtfvfFoDTb1H4Rh6XnrrM3JukHY5vby5pcQMoKw
OUzJ5fMBsnkQzrx1/LL6AdkxCP2X5i0a2S2D+pfUy3NSN5lCZgWhyv6ey1M7
MjsI6UPfvniYSM4Jgs5NUyeDUnJREJhV3ld7NJDFQahrTqo3GMqh/oNwP5XD
rVlCrg2CX6X58Xp/crNk/631o+z2k+W24+CnicULq8lK2/F01G9rjgKX+t+O
/Vq/PqyeQ9bdjrsak9fEupOxHX/eRQZr7Sabb0f19vtGc++RHbdjNv/Dros9
edT/djxfkeB/djaZtR3zsx1LJniS2duRozJhTf995JztaBEKF22pIRdtx5FR
Ht4GAzKp/+3gbmc+jTQiV0n2G4YFGYWQa7eDXRK9OPI4uXk71p9Kmz37PVku
GI8uVNh6qPOp/2CEKkTmjbYjM4Jxna/LWMkj6wZjgFfEnfZbZASjpXLZ2UkK
Auo/GO/d8v57akh2DEZm9VufAeFkZjC8H++3LT9NZgXjSu2143++kdnBsEwI
yTivJ6T+g2E03qRfTya5KBhBjgMM7heSxcFw/2+A3sQmclUwds9rHtJvkoj6
D8Zks/LugW7k5mD0iRowwusQWS4EjfzrES3vyUohWJDhsU5BJ4v6D4FG1bd7
hz3IuiHI0WxQqT1KRggW9V67cv8XsnkIqsVNR//O2EH9h8D/5mf3/7aTmSH4
obnyLPM8mRWCIze495N6ZFP/IdDUlP88bxk5JwRri/kWCenkohB82v13hucj
sjgEdsGn6j6N2kn9hyBW/nfWgM3k2hDw+r49dPMIuTkEUyztHbTbyHKhKNgx
oZum4S7qPxQ5p343XEkhM0KRfdB/c58asm4o8v5Tf/B53G7qPxQV5zjJLCbZ
PBTLg9e8P3WO7BgKK6Vo7Zs9c6j/ULR9yB+kNJnMCoX89b/1h6zI7FD0rgux
yg4l54Ti1+D9w9/kkotC8bxm94fYW2RxKNbP1oqJ+E6uCoVTTdaue2P2UP+h
eNzjT2vEMnJzKN7dbV+Z4EuWC4PPsuZNTTvJSmFYy3/VVlBBZoRh4zLu3Rtf
ybph6JkbcsJ4zF7qPwyWzfdcxpqSzcPw6DXnmF0g2TEMw4eEbvy+j8wMg7bn
CMMvVWRWGJaJr481/0Nmh+GX1ZkqJZ191H8YRnK+MWasIxeFQeGQ09tzCWRx
GAxtb34/XEKuCsPAY7UT5BrItWH4/Wmh7dmhudR/GJRcAx1fGJPlwnHPp98o
t0CyUjicfEM8N+STGeF499Z45oXHZN1wuEd/sU7ql0f9h0PXpf/pi/PJ5uH4
unzmos1MsmM4VOsYT4L2kZnh+DRyh9fPR2RWOPz3cD596Luf+g/HVsMRy1cu
JOeEwyjay1vdj1wUDpUZcuu2HiSLw8Eczfw57iW5KhyC4l2mq4ccoP7DEfim
wKTNlNwcju5fun8aHE2Wi0CB7doFB86QlSIwsPqowYkvZEYEqj28XxlMyqf+
I+CQZG8425mMCHzQE248uZNsHoGppiWmR6rJjhF49O78AA3lg9R/BERinbMj
VpBZETAR/N7ETiCzI2D5+MTo+HJyTgTez1zfQ67bIeo/AsG2u3Ta55PFEcg9
fLQkNIRcFQGbGZ7lUafJtREYl+LgP7CN3ByB59VHP42bdZj6Z+HNBzO7iwFk
BRZO+z9+1XiKrMSSfMOdP7GjlazKglLa1D9PDAro/Egcp//tQDBZm4VzZ47c
7nGOrMuCQ/nGy5/+kg1YWPT15wCPxYV0/lgoVB3eHBpPNmGhabNVPqOSbC75
/K3GobaDjvyzDQspypwT2tZkRxZy334Qpu8ku7Jw20A9OP01mcmCU6xG/gSd
o/8cxEJJvVLgBj8yi4WYDL0FeufICSz0MOtbYNGjiObBwqkrhoPWaZOFLIw9
bv73+ApyDgvj5nhoO/iS81l4OScStiJyEQv2Tyf8PnCBXMqCnO65IcvfksUs
MJpWLkb/Y/9cIdk/9iSS9clVLKQqpd6YZE+uYeFyN+xWjyHXsjBjhkIEs4Dc
yMKxp98mDX1IbmbBdWzLVpU/5DbJ5y29/Web1nGafyTu3dI/PsqCrBApuZ4u
rZgYQlaKhJ+o+05OHlk1EhFufh7WVWRGJL4GcNK2/yJrR+L90Oq7PzRP0Pwj
YTLlUt/HlmSDSPy5/mKAagQZkdh6u+JkyWGySSTOlug9Lq0hm0eiddsHK7Ve
xTT/SMSNed2rfjrZMRI+pjPv9Hciu0ZCtWQCeyebzIyEEW/OFO4FclAkYo+M
YX/6SGZFQulI1a4To0/S/CMx2jNlSe1KMjsSW7a89A6IIAsjcWnKocGBReSc
SMxT0B5VX0fOj0Tf9G9RZwefovlHIshn2LxuxuTSSCwy6WZ4MogsjkSgXza7
5jC5IhLbtFZpur8kV0Wi1ruHvPfgEpp/JA56TZncuJRcK+kvsfrAvVByYyS8
KneHTjtObo5Emv31Uz0byW2ROP9zgbP56FKafxTu5u3IVF5DVoiC3mq99StS
yEpRcBIPedCtnKwahaMODKVp7WRGFDwt2yc/0z9N84/C0B2TzOQ9ybpRuLBI
KeXQAbJBFAYfaxlUVUdGFEzUVXoGqJ2h+Udhv+a+9J3WZPMoBJnVvFjKJdtE
Ibq2RT3gDtkxCpdvrkifoHiW5h+FNWlW6zYtIzOjwLbOOTc+nhwUhZa5rd88
r5BZUXBItF68WL6M5h+F6tnd3u1dTGZHYUNsxOT0aLIwCr7c4+v6lJNzorDI
7PE55Z7naP5RSFi+40CBMbkoCpofld1rEsilUVjFrnYS3CSLozD/ce+G9wPO
0/yjkGJgZf3AklwVBXlWn6FrBOSaKFjuHZno+YxcKzlenu4IdfULNP8obFp7
eKa3K7k5CkdGlKxyOEpui4LGDssnDd/JctGouVqolThGTPOPRr+xt4Z8WkxW
iobBibeB+13JqtFI/bFOqSiVzIhG9u6MfYonyNrRuLLrb2tZDVk3Gvu8Jz+6
+IdsEI159ucU1DQu0vyjseu6t32lKdkkGpMvTM+570M2lxyfy/A8vSyyTTS2
H3Rf8P4i2TEaQz8dW/TrHdk1GtV1R+I2K1+i+Udjk7V3g85cclA0HpiuxSpn
Misal78pMW+nkhMkn//lmPXhEjI7Gt2Tjzx5W0cWRmO5cuOLSMXLNP9oHLY/
YRY2i5wfjcUWtQOeOJGLoiHIvKgsSiOXRuPJan2Ts2fI4mhMVMvfs6iBXCHp
v05TZbJKOc0/GmVKDoLwReSaaGRU7NGY5UWujcZDrb9nrXeSG6Nx+tycdXU3
yc3ROD7kRfeHP8lt0di7ceHZ6ROv0PxjcNIwKfmPLVkhBs+KKsJnJpGVYvCt
W9PeZ2fIqjGoUXqk8OUDmRGDIzFO5YGjrtL8YzBhNrPJcxVZNwa2Fe+zaiLJ
BjHQnfmg6WQxGTEIPL+yu0Ij2SQGI67u/3Nn5DWafwxMP9krDDQn28Qg1lJ3
2dUYsmMMIp5qf/x+muwq6efmHq29n8jMGFx0sppwXaOC5h8DboHTRA97MisG
noFOLulcckIM7jBdVafdJLMl+90Gx67ucZ3mH4NpNwTNrXPJOTEIH31z3xh/
cn4MVtZP/XDzCLkoBqM9ug3700gujYFrN4SUjLtB84/BvRHnvH6sJ1fEYNUT
LfMrWeSqGNzIGx6qVk2uicHSb+rWcio3af4xOL+yxsTHgtwoOX8+L8t808nN
MRCebFfvdZvcFoMcLuPTxP6VNP9YBLj5i+rNyAqxWOTlsWtaKlkpFvwHVeFD
b5NVY1GoUXmBO/AWzT8WitV/3h+yIGvHwqV/UpoDj6wbizc7xswvrCYbxMJ2
zqC0HSNv0/xjkdSyYdRER7JJLCzu30xel0c2j0W5uD58ygeyjaRe/pA9B6bd
ofnHYvW983uuBZFdYzEoct4MtpjMjEXlpvCkSPkqmn8s9O5d+6s0gcyKRc5k
e/vWFeSEWJxNuBAzw5fMjkXW2rGOlUKyMBahoS41ZefJObGYEDf5Se835PxY
nPldZ3Wk312afyw+vD0755geuTQWczbcZg1aRxbHothJaUxVJLkiFntObVb6
eJBcFQvvn4WW7vfINbEQvCx/a/qLXBuLpgR+Ver4ezT/WGxT1hg2fSW5ORY3
FvHK5wWR22IhdtR/e3gvWS4OaYtSUyJvkRXicMVz683zbWSlOMTG1Z12Hn+f
5h+HzEtbfPzMyYw47Cm8r/wplKwdB79enmUPD5J147DgXjt3QjXZIA6Wu+5c
/CD/gOYfh+gvN71HTSebxOFMy/b7FzaSzeNwa8GgEQ/YZJs4TG6IDbUTkx3j
UH4uc4Z1M9k1DuvOPYyuYDyk+ceh7fiFg0UW5KA47B8p/k8pmsyKw/w5Rlnv
i8kJcZjlUvF7QQOZLfn7tLduA0c8ovnHYUkvFwOHFeScOHACl1ycEEnOj8Oc
8Q+cA06Si+LAsi+JM3pPLo3D4pl/0zLHVNP84zAsZsZ7tzXkijh49PfsczWZ
XBWHagVrp/xL5BpJv4+XeQ3+Sa6Nw0Nl+6MKejU0/zhonmfuT3QjN8fBsGnZ
c8E+clscniRn1ek/J8vF43uSqrHTsMc0/3iMWpy+d6wlWSkeh6Z94fqlklXj
ofXHq8z+OpkRj4A7sZef9nxC849HxGfltV8NybrxGHHLXTOPRTaIx4Tpvk1f
zpMRj9ftuS4vfpNN4iHqPmPN1vlPaf7xSHYbE5MZRraJxwGLhRedz5Md4+Fz
x7mu5i/ZNR4LrLdd+LroGc0/Hk8DzeeVxJCD4jG5fflCjQoyKx7nPV6dXKj4
nOYfj6O/evEULMjseARem/Agkk8WSuqL1gQWPiPnxIMp+dJKHfeC5h+PL4+T
FMdvIxdJ1s3S1H1PkEvjsWjK5frQdrI4HrdfnvRdbPyS5h+PAtGE3xVsclU8
FKbpHx/4jFwTj6kTJ79VVKml+cfjwti1V/3mkBvjMSzq805sJDfHY0m/hZne
CeS2eJQ+ZNYoFJHlEsA9ekbQu4askADfcxt7e8nV0fwTMMqxcgMmkFUTMNmR
8zzUksxIQLeNqRc1QsnaCXie/c583n6ybgIev5/58GIV2SABx5SCs0t+kZGA
HRsX/Bit9Yrmn4CThw8Y/rAkmycgxz/mwdIIsk0CClMdByoWkB0TENcksFn6
mOyaAGHT1hG/etXT/CXHV6NYrj2DHCTxnYvX724isxKgpfAut5VDTkgAx33o
gx2XyOwERGVoPr3whSxMQMIgq8Uu417T/BPQa+mKHalW5PwE/Nm6PHBOHLko
Ad+Ux3t7lJJLExCt4aat/YEsTsCBcSGG7qPf0PwTMPa/HW5zLclVCRjUNNBS
EEeuScCWY9OKIs+SaxNQ0CPFsL2Z3JiAWxu/VipovaX5J+BL++7hBx3IbQmY
NsnkxwseWS4R6mvnLi6oJCskYs2WsIfKPRto/okoPvmKp7KArJqIH/46HicC
yYxErDumYfH5GFk7EQ3l4jlVTWTdROx0nzHJUruR5p+Io/ZjJm13JiMR/u47
ly/dQzZJxPk13nvOvyCbJ0LYj7GqTu0dzT8R5YeVQ47ZkR0TMXhAqdW0HWTX
RHxq2T9401MyMxHBr8StJmrvaf6JOJa5ZtkbBzIrEa16S23n5JATEjFBbWrk
8noyOxE6IdHjVLU+0PwTMT/63OG8beScRLS7s9K+FZHzJcene3FZ31ZyUSK8
e3xyfju/ieafCJMsNe+UWLI4EW6zJ/b5e4tckYgHGc13Mew/mn8i+vq6B1tt
JNckQnXNh7PzCsi1kvN1wWBdeyu5MREDuJXj+EYfaf6JGD3r52dFDrktEfNK
GAc31ZLlklB766nBzqmfaP5JePt2RnZZBFkpCRqjnj4uryKrJiEhWzPKflAz
zT8Jv9Ypjro9h6wt2b+15/1SZ7JuEvwciheOTicbJCHy2eCecmfISELTCu7N
DW/IJkm4oqpvuHDQZ5p/EqYHHxidM59skwTbFvdRMW5kxyTU2X7u9p+A7JoE
4fYj/GdXyMwklHmYFlq1kIOS4MM5N9p63BeafxIKtdxuvrEkJyTh/h6THd2j
yewkhBb2DD96gixMguF7zW0fX5NzknDOcarTxaFfaf5JGFha7jZxGbkoCRZT
H/ImhZJLk7B2w/m2q0fJ4iRwrvuV/KknVyThlEHBzweqLTT/JBxvlftmupJc
Izn/r8e+cokh1ybh8qZfvTTOkhuTcGF2/bHkL+TmJIxZdWVO9sRvNP8kbNls
0cN2E1kuGQevTQgszyYrJIPbqKxY94islIz9Q8cbHhv0neafjKsTfuybtYLM
SMaSJW+uBiSStZNxt1DT1PsqWTcZk86OfDZBvpXmnwz5piDdfYZkJGPCOFbf
2kiySTIwZLZB/UWyeTJ+/HeIe7R7G80/GVf0h/UwMSI7JsOpbcb2o3Fk12Ss
Wub7rfE6mZkMvX5TYlr7/6D5J+O6RtuCF5ZkVjLYo2rMcoTkhGRsH5XyCi/J
7GQoBd82vKz5k+afjO6lO85P9CLnJGP+mOCTwaXkfMnxv76Uear7L5p/Mky/
ND2rW0EulfTr+HiYXBZZnAx+1th6lQZyRTLerdzyYdyMdpq/5HyO3f+fbgy5
Jhmp8+JLFj4g1ybj8rlTWlYav2n+yXAfPneKTyC5ORmOfrcrd94gtyVjp8Kc
YU9H/6H5p2DD7hPTp/iRFVLwfMp8ux03yEopWHqw1xNN9b80/xRc7Hdv4MNg
MiMF/cpsmYcekLVT8HfPs4sPh8n9+/8IdVNgP9/d9+MSskEK4jKb8vb4kZEC
h9zF5z7vI5ukQOeVi3bdfbJ5CkYoZGz0ke/2zzYpUNJP+HhgBtkxBXqBdx1j
tpBdU5Bd07KmbxaZmYK5j8oC590iB6Ug1SModFS37v/MkvRfskCraAY5QWKG
vkmrG5mdAsPld8u+5ZCFKYjNmcQ8Uk3OSYFHwUK78QN7/HN+CqL158euW0ou
SsGD6Q97WLHIpSnYfzLx1+AzZHEKavf+3b2zhVyRgvI0S/2WqfL/XJWCArZb
v5Hu5JoUeM22ShhykFybgl/Hs0Y3vCU3puDE8FxLrkbPf25OwevRSmdGuZDb
UtAoP7w9MY8sl4pFPVvvPn1LVkjFcj3j3sMm9PpnpVTUvPEMXuhOVk1F/B2l
UbZFZEYqLhczW7Z8I2unondr43Dm3N40/1RYfbU/6x9FNkjFJvOjI8NukJGK
WeZzuUmDFWj+qfCYa8He60A2T0V1+0nB9XyyTSry5DWXyH8jO6YiK/mpqbVh
H5p/KqJXqgZeY5OZqfB7dvyQbS05KBW8jAP1ytP60vxTYbiu0KAtipwgWV93
+8mAR2R2KoIF8kPtJ/aj+aci/MITizcR5JxU/Jw2SLnoETk/FbkuS1svTlGk
+UvO5+2DFxgJ5NJUqLjkLr33iixOxdDvoqRnC/rT/FORbp2zb0k2uSoV9UWL
bg/+Ra6R1Gs13LLCbgDNPxXWt7z+aysjN6bCrXZb91GMgTT/VCzonbRNHENu
k/Q346Dy+/dkuTSUiZOjzSco0fzTsOP4/IXfHchKaVhXUvd+K5esmoaPSwcs
O3qdzEhDv72tujfkBtH80xBe+zntvAFZNw2WJ787s73JBmk48mrKzcWHyUiD
LTui+dkbskkadHaOHOk4VpnmnwZdxeEH7zqQbdIw8WjfQTN3kB3TsFF316uM
x2TXNDzcveDaO9XBNP80GOWfjTK0JQdJjo/z7WtOFpmVBpMFaUP6PicnpKHH
nN1/ohgqNP809B/nX6/kQhamYVmI+dDTh8g5achj6ChEfibnp2EFP3GZ5+wh
NP80tKxanBwXRS5Nw41pLrvvVJLFabi1vV/wKtWhNP80bDMx0VN0IVdJ9ssp
9VA8Qa5Jg0qZjtma7sNo/mnQ7DOb+9GS3JiGs/P2xrzIJTenISX1eMukNnJb
GiIW76t9bqZK809H1IISr197yQrpGDV6fUvyT7JSOu5aOf7HXz2c5p8ueR5T
6T3+CJmRjgH9d6nN7TuC5p+ObNuZs19vIeumgzE3QqR1jWyQjnnFtQX9tUfS
/NNx1e7z0N1JZJN0DGG8L3r9kWyeDp9LGskNVmo0/3RY+BZ8LCojO6Zj4Z+b
65drjqL5p2Pn97KscxlkZjoM7dfsVvlLDkpHrt71fFvP0TT/dCxL3q4veElO
kPSfcK97jeUYmn86+tYaDNeqIAvT0Xamx6trYxg0/3TU31xZmWZPzk/HEVyY
65lFLkrHGqdFS90fk0vTwWSkTU4fPpbmnw7Tw2vXPl9HrkjHFIXg1Q47yVXp
qPtj9GpIHblGcnyXy5r6a6rT/CXHd7Elycyd3JgO+TYv+ccnyM3pSFqddvdM
O7ktHZ4BvXb+MB5H82cjx9t9yU4OWZ6NWW+uvCh8SVZgo3GATvH0KeP/WZGN
k6tCl80KJyuxYVgyzOHiHbIKG28nHn/3RF2Drhc2hl6epp0aSFZjw6r77oy6
W2QGG5ZpmnV1Gpr/PJ4NBbXJQ4URZG02NiwNCBjwlKzDBm/oBvYqAy26vti4
9Vln/mYBWZ8NrTrvfQ5tZAM2Wj7EzV5kp/3P89gYFDaqQk1MBhvBZY3u7ZoT
/tmIjdWPNuxsSiebsPFBP2vCz59kMzZqzhkv1HOdSNcnG0emXHDfW022YkOl
3CDXZtkkul7Z6LNx8MJN58j2bFiHmXS7O12Hrl828qb8UjtWQHZmw/7YxJmD
tSfT9czG6zcJm3vvJ7uz8WxpwKJdmlPo+majtG18TeNBsp/ECa/PtU2dStc7
G94LhIq1peRQNs7VFBTbqOvS9c9Gv3u58uKt5Bg2RqebPD16nJzARrvPDTe9
3+QUSf3yKTMsl02jfLCxXmvkwBECMo+N9yWX1DPfkoVsXFFr/nJ7lt4/Z7Ph
XD1l/f0kcg4beoZD9h55Sc5l49GxovUeM6dTnthIXjIkSy2dXCCZT8/B5dff
kYvYyOymfCbKWP+fiyXzmT/s5po8cikboUtbzlr0mvHPZWxoeO+7GbuVLGaj
7sq9km53yOVsqL/affHhzJmURzY0f8cdV95DrpRcL8nxddf7z6J8sjFJPtKg
fxj5ARsvfW7M/vSRXMPG3bzevaI3GfzzMzYCPixwevaEXMvGmVC98wPXzP7n
12wkPJabq3eP3MhGWvLA47aWc/65iY3enxeXZT8kN7Ox+3XqaWX7uf/cwoaN
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
      "]]}, 
    {RGBColor[0.1, 0.1, 1], PointSize[0.002777777777777778], Thickness[Large],
      LineBox[CompressedData["
1:eJxc3HlYzN/bB/CxZ09CEQYhJCEKxdtehCwRkvZCaZG0qWnfa6ZmbWFsCVEp
X0UIRQghipKiqCQhhPDM73JX84x/XK/rdOZ87nN/3jVTM2ecpdMGm+4MBuNR
Hwbjf///+9eyiPH//2HJ2qDHl30q9P5RDgMKLBf6Bf4iy8O3eENR7K9BC/9Z
ERNPWFYocEaRlVA25LLtqZiJZBXo6I4NjVGYQWZixpT1UTemziGPx6tProGO
aQvIqjhobtp2IHQxeRI42U7anqeWk9XQb+aGubG6q8hToefzbvjgxevI6pha
OGj2ye0byBr4YTsv5tE6Y7ImohIXPpx50IQ8E58YuWZf3mwnz0LvaWUVi4N2
kmdji4ZRjGq6BVkLu56qCEbmWpHn4HMBb6pytQ15LiLePAmZq2pP1sahb+96
hQfvJuvAuv+f0ZN7OpLnwXi4v8VksRN5PibaHF5Uou5CXoApT5Yf2SR0Jevi
Y3KWQZqCG1kPpzcbXX6duJ+8EJrnf4f00DpAXgRmt6mGIys8yIBTweucWRyv
f2YBBWbvwk02+9D4Ygx9czlCMNWXxhdDjVF193dvFo0vgWGvEav0Gf40vgQj
h0xbNLNbAI0vxdS8grNX+wbS+FKcL2ce+aYcROPLsGO2kvqrmcE0vgyxllN2
+a4PofHl+HYiwOuFRyiNL8fJ0v4RP06G0fgKTN3ufKemKpzGV2CtwRRX0ehI
Gl8JF6fQwknWUTS+EiWRVwawz0fTuD4SQxuFFXKxNK6Pqa85NaGz2TRugMy8
Re6it2SWAa6xB187kcyh8VU40p7Umm4SR+OrkHkrfuPlEfE0vhrjpl9QufeC
zFqN13ovua+PcGncEJO15Xr1cuTRuCF0WrZcmqPLp/E1+LpKubfHYAGNr8H1
s3f0Hr4lM9bCMUTl8sIbQhpfiz1PGZV3johofB1G3Ujp7hacQOPrUK0dzINj
Io0b4VHkzr+ztib9M4zQNm11+lqDZPp6I1RsvqAk0Dv0z/lGuFBpnzV47mGa
vx7XWu/83qEspvnrodL0NuehiMxajyehMffNVI7Q/PUY5ebLGHiEzNiAiPuZ
SpWTj9L8Dbgw2vrV/QwyawO0TBWZtQuO0fwNONwamsq8Q2ZsxNpH9/WDTY7T
/I3Q2rP4ydBGMmsjNKqiVR4cPEHzNyK8e+avC0NTaP4mZEb+Mbh/hoxNsJk2
4c2wFSdp/iasvTT5BOc1OX8Tkm3cnJf4p9J8Y5yoeTJ56vhTNN8YqUfcM1YV
klnGqFL89unE7tM03xjn67c801M4Q/M3Y7HRkFWKeWRsRqVRP91p9mk0fzOc
FY8kBw0/S/M3Ix9nLcffJjO2YMamQP/eXudo/hbslGv7PGtGOs3fAqtcq/On
3pLzt+BWw2OzuUYZNN8EreO5/RadI8MELgc/vXQamEnzTTDwTHrFHUdyvgmY
lS/7rH1IZmyFblCZ3e+Z52n+Vjwet6L7cx6ZtRVcuQmvan6S87eiRSO3j7JF
Fs3fhgN/UkL8isjYhgmTq+2Gz8ym+dvguz89pyqBnL8Nqmk5oc97XaD52/F9
58/aPq5kbIdl2cOa3a/IrO1Q+fCZ3WPtfzR/O3S/Huz95AqZYYqJKR+2vNC4
SPNNMa3nhKSRR8gsU0QY2bznKubQfFO4/rLauSqczNgBG5HOUN2/ZOzAuQr7
CXvcc2n+DvSLqj9b3kzO34HGyFGPg+0v0XwzHH5WlrHvDRlmUAy1czi28zLN
N0N6dYTa8JfkfDOUbPfqd397Hs3fCb8L9Tp3KsjYCU73XpX9d1yh+Tux7JbP
aP4rcv5OLB/gq7bL6irNN8eOkNwpIfVkpjlCzlqva957jR7PHMvfLrhz9BvZ
3BxJm5ZYP16UT49vjnllffJ/BpHF5jgWM1rh3l1yvjkCd3p9XTrk+j9Xm+Pr
yKpetiZkhgXEiY9fzRSTmRZ4U5vGTK0nwwJXlsbY3pl5g9a3ANvFxojvTWZZ
oEfux4ODb5HFFghUuRQ7Z8hNWt8Czb7jJ/fdQa62wOgHJm8jTpEZljCZYe58
+RuZaYnG6fK7EpcV0PqWMH0/bP+0eLK5JTQ2fJ3n8JrMssSUVf3MzGYV0vqW
6PExPKx7IDnfEpeLAi22lpKrLRHZ+w3HatItWt8K6y473RznSWZaIVylRMwt
JsMKC26GP81j3qb1rVDb3H1Q4n4yywpFdwO/z7hHFlth6QVt+IwrovWtoB+u
IWB5kKutMKRxR5peCZlhDRXOUc1stTu0vjXWH7r+tNafDGvMaty1tqSCbG6N
V9vmrD0w9y6tb41j80+Hv+CQxdbYydH97+cHcr413vmtiyhfdY/Wt4bcoblX
3FLJDBuwt2n3KeldTOvboH1HxLj3NmTYQP2j6a1bhWRzG3zZ9jjDatJ9Wt8G
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
Ua1Pn1S+IKdGYRZS+n/ruYL6H4UsNits/wxyjuR65YpDTLeR86Nwo9eRlWnB
5CLJ/i2pkrfNJJdEIcNy4fTIl+TyKMR/c2xS6beS+h+FXY3jjqlok+ujcMpZ
40ykNblFsl+Wh6z2xJHborBqzD3NK/lkRjT6vnLzCfhIlouGXFLFhbwx+tT/
aFy1K1/vuJasFI1FJt/v8nzJzGhE/uAc0U4nq0XDb23j9k3VZM1omFmuCPkw
xID6H41UpwFZPZeREY3Xh155JbqT9aNx3OKKT9YpslE0NB1Hma19STaJhsCk
9z3HIauo/9G48BruQ1eQ7aMx6Y2V8mJvsnM0Hr7/49aWQfaIxqXkXKMF78is
aNz4b793/zGrqf+S+ipd7u02JrOjMWiy45jt0WRhNAzc722tKiSLo9E9+tLu
b3/IqZLrY5isOKFjSP2Pxvz2soYmV3JONJJepW17eJacH43rV9JT1jaQi6KR
e92g1mHiGup/NJT9Ds1StySXR2OK1sXcmMPkasl+9Ug/zX9Jrpfsh3r1ohUq
a6n/0QhcqXDl8HZyWzQOR51yOpFIZsTgoEbZua2VZLkYbCm+W3F19Drqfwxy
etZZlO0kK8Wgn+b7/04cJTNjsGeV7nb1t2S1GBhH9Pgwd5gR9T8Gmy/lW/+n
TdaJwbkYdh1vGxkx2HazsfDZQbJ+DBIOj7P0OkI2ikHIOpZKQCHZJAahX3bt
+NhANo/B6t2e8TcHraf+x2DliyOzGVpk5xg8/7suN2Ur2SMGS5ZHpeT4kVkx
+HBqdJB2CjksBhm+Z2tU75PZMTBvf28c0EoWSh7/8gXf9SobqP8xeCc/vxt3
GTlVst628RGrHckZMXire+m+J5+cEwPd50phzHxyfgz29V19cHEjuSgGRw/7
elYpbqT+x0D8n8b6H4vI5TFQVl5fE7+HXB2DUbeDBmcIyPUxCDq6+O66AnKL
xAZ9++7/RG6LgeoUUfG4sZuo/7HQfTh6rMkaslws2oLtFEf6kOVjYbaYeXfX
GbJSLAY3dLc3qCAzY1HUR5F5ub8x9T8WTu8rNK7rkjVjobfoaMWOvWSdWAxT
P+MRLyYjFr593a2sn5D1YzHgzO+eT3pvpv7Hwmbzz0c188kmsWh2nLg63ols
HguDl76/G46T7WOxdRM3oP4F2TkW/XbeZXGGbKH+x0peP588806fzIqFUjqz
4AOLHBaLGuMGYUoumR2LeOebvYd9IQtjcdXwSduC6SbU/1iENLbaj7Enp8bi
zLWh5teOkTNiEf406Nu4anJOLGZvstpkMHor9T8WK6M/ZupsJxfFYkNCy5Yv
InJJLMqPKol9npPLY3G+as/XMuVt1P9Y8HafLpXbTq6PRWrPK8UKyeSWWFQW
qfr9eEVui8XMnnvF+RO2U//ZGK6T0rbHntyTjaF2T63+niXLsbGj0Ouxbyt5
ABvN9QNWNS8wpfuDDSH3YN36ILIiGwt1rz89e5+sxIaS+TbL3ko7/lmFDYeq
+oadVmQmGyamV15fTSerstHtnXPF5N9kNTacWljeh1eb/bM6G6OLPwZOTSRr
ssEsaXh4/z1Zi41hS5yMY/R20v3GhqpOj0kubLIuG9f4O528a8lgI3vaiIXP
Vcz/eRkb8uOtXwzUJ+uzMfNM+7qqfWRDNo641bmsEZON2FjeNmWC2X3yJjaM
s1duGfqLbMLGuIQkBecpFv9sysb1h+W7D5iQzSX7X7MvVD2MbC1Zz3fi0bgc
sj0bvd5a9DnbQHZgY8boF8P9RlnS/c3GMQXGsgFryW5sWJXGDDfxJ3uwsbpt
+DTbC2QfNnTNYmfPbySz2Ojr2vi9bKzVPwexIR6WsXnpZnIYGzWmSctZ0eQo
NtatWPo4rpDMZqMsOXe83x8yl43uOkvdDXSsKS9smP7Xe9I3V3KSpL99bp8I
P0cWszGn9GiQ3HvycTYuKr9wPKBmQ3li45NSwpQKW3IaG9ZvHybrpJAz2NC+
3+0h9y05m43bRTNqWifbUt7YqDS+rGS2m5wn6Vf15oqnZ8n5bDwd+jvD4jO5
gA3H7S3L+ujYUR4l/am4YVvsSy5mI03Lrv/FW+QSNv7uWbX2/mD7fy5l4+Gi
A67DtpHL2WjbcPMN7wS5UtLfwN46xp/J1ZI8PTTV3IZd/1zLht7cfZfOxJLr
2chsevXJqJrcxEaOQ8i49bN2U77ZmH6lT2FWMLlV8vVuiyJYL8htbKz9dH/D
Nc09/9zOxpoVGXM8wsgMDgrs3rKyasg9ORjNVLvsqetA+edA3/LUiSdC8gAO
TDjNene/keU5OLU985rtZkfKPwcDS56lnL9IVuLgmsmBzIsj91L+OTho9KPG
z4/M5ODz+4X+w96SVTk4t6CeGbjWifLPQZn86eQnOWR1DtiGL+XDFZwp/xyM
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
      "]]}, 
    {RGBColor[0.6, 0.1, 1], PointSize[0.002777777777777778], Thickness[Large],
      LineBox[CompressedData["
1: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
581fsYjqu0FNQW7Ui0dkuCGy1cPPz2Ux1XfDk2qFOd0+kJluKDuRwczYZkX1
3ZA+4YTFGMUlVN8NPR8Ozb8gJNe5wajV9ZT3uKVUfyMUVm88YCQma2xEznzV
ggF2y6j+RmzO2ve+bzPZeSM29n6whj/fmupvhJ5j78KZPHLuRrydosluqyeL
N8LKRnT6tvFyqr8RFnqnay/Fk+U24bXX7qKHj8gamxB2cmVLvwk2VH8TVIZc
9NgcQ3behPgP1580PSIzN8GrzEZ1+6QVVH8TBvWf/yYwmSyW/H1Irl7MK3Ld
JuidZZZcNLWl+u44X6fnb5JN1nCHeVS/+Q0/yHDHmzHPB9+1X0n13dGQx3v4
q5TMdIdOWQBz0/BVVN8d6kJtJbVwstgdZRmHQpVfkOvcMep9wv0VFnZUfzM+
XDqg/bqQrLEZYe2c8Kuq9lR/M6yWLWv5HU523oyGgJS9KY1k5maMd99+0s/W
gepvRvbxeKtTF8jizch9P4i/znA11d+MwUbVVzbnkuU84PpogtqTgWuovgdW
j9567WQsGR543O3KaLkfZGcPfDPw2Hjay5Hqe2CrPOtj42tyrgfOiCMHZKx1
ovoeMDu5U6eohlzngaO7mYJltmup/hZwtN7dYNwha2xB3YKGyUOt11H9LVgz
8d58iyqy8xbkNhmdlxvrTPW3QJnpbLjXg5y7Be9S5swcfIgs3oK9k5/sW9ZM
rtuCVaPT5toZr6f6nrDR/vlg/Dayhie43UfNuH+ODE88+W85lvVwofqeuOSz
7GKOFZnpiVsLTbMv8si5nqhZW3ro/FOy2BPlV64/4utuoPqeuNm3Z69FvmS5
rTBdxhz95CxZYytWhj1VturjSvW3Qpy8qnKHHdl5K8LviC3u55OZW3Ftc2bw
5xZy7lbs293m9M3cjepvxe3YC99fZpLrtsJrU5RFWQNZzgtPMlNsY2ZspPpe
mNTz97gZ6WR4we6/8icvX5KdvTAkuyAw0mQT1ffCRJcVg1QyyLleOMlZVZn9
hiz2Qmn6FPF/pu5U3wvMYVsH7hGS5byRkxL6RvMrWcMb4qFvN+9Zupnqe+O2
pvV1nYNkZ28MOOw244iiB9X3xqPqbp/nbCLnemOmk97YmitksTdOrBmoGa67
hep74+y7SaMNk8hyDPz5Zu7+9T1ZmQGlYbYLry3zpONh4DtHrFJcTDZkQHGJ
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

      "]]}, 
    {RGBColor[1, 0, 1], PointSize[0.002777777777777778], Thickness[Large], 
     LineBox[CompressedData["
1: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
52kZ9t6KuTR/G1pe9P8++SxZZRteRPWH49ZDNH8bxj/9PFNf4TDN3wb1mQHv
r5WS2dvQPXLHcVnPIzR/G5a2PpHpOzWP5m/DoqSXEW+ayA3bcNqgfVR+bj7N
345BUUm1js5Haf523K/1+qmpfYzmb0fAwNKfvWUKaP52yMf5ass7kNnboTNO
PnPqXXLmdrw82nDJY8Fxmr8d6QFvF77LIzdsx/DmNzXCUSdovj3cnpywCOOQ
VezBFQReKe55kubbY0r1mPEIJNvYQ3f65gOqP8lse4zKnpm4Y1chzbdHfOJI
/dFfyaX2OHnAysBw1ymab49lR0zm/PxBlnHAzPfld6cFnqb5DngTM+bT755F
NN8BOVn3Q7dxyTYOkFuYk+MzppjmO0B3yKeEBQXkTAe0a7XGlS05Q/MdsNp1
7WD5x+QGB7hfUzitvusszd+Bi4IFE1QHnqP5O+CWrTirx1EydsB02qbaB2tL
aP4O5JdeVcn9RmbvQGXvefqh6edp/g5xnrNSWcsv0PwdUMVYUdB3csMOWBvm
PinKuUjzHSGaHq/An1pK8x3R86hVtksMGY6YYT3kyKfXZBtHCBNsdEctK6P5
jui78qvbvxxypiOKNIqTdve5RPMd8SqmT91PF3KDIxYvqD05ooYs4wTvL88j
++pdpvlOSHn1/OGtA2Q4oXL1ZT2n/8ppvhPOT6vZ/DaIzHbCmhutv9d8Imc6
wUn07Pl+6ys03wmat3Va398lNzhhtmfdLC2DqzTfGYcURx/xvUhWcUb8x0av
St1rNN8ZGyq/VGsWkm2c8Yc1uOdRrQqa74zgpM0eK4+TM51xynG7QGHmdZrv
jEd9vb7JFpEbnFH9342ZmvNv0HwX3Jp2s1/aFbKKC4xnrlhpaHST5rtg7M3T
Dw3qyTYuWPdoW36GcyXNd8Fb//JnRn/JmS6wK05LdeTdovkuqLlrMKpF/TbN
d4Gzca8rX8vIMq6oPzq2h/umKprviqoS2Pq2keGKorrqS3Jrqmm+K/zjj/L3
7SWzXaHTw4Qb95Wc6YqVt/tp3lx2h+a7wsjl6ze7dHKDK2YdVnLb1EKW2YnT
xjmLz6y8S/N3omXlH8XAA2TsxMJh9Zn5Mvdo/k5YH4jMW7uJzN6J1RkN/RzO
kTN34ne39My2ETU0fydsFm60GBhAbtiJiXtvzcp9SpZhYd2Et4tuLr4vsQIL
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
eHtet7rT4UIEanEfdDpaiLm+G+o6HS/E9BLR805zhIj5avO603whjsice9dp
kXif6oJPnU4XP8/2lV87nSnEvZ+8753OFuL2n8TWTucKMU9/WVun84Q48fvC
n04XCOFw6e+/ThcKUXa2b3erzv4LYZDwpkenS4To4ZPas9OlQqzYoNa70+VC
RB+Nk+t0hRA6BXf7dLpS/H0sbe/b6Woh5gzuJ9/pGiFmhHXr3+laITZefd7l
OvHvP8kf0OkGITKS7Qd2ulEIgUBBodNNQtjYHu7yByHMzGf91+lmcf6nT3X5
mxDaeyYN6nSr+FwpucvtQsQqtnRZJgV3XAwHd1o2Bd/fpXZZLgXyi150WT4F
9xXVFDutkIKl7dZdVkxBVbCwy0op4I+s6LJyCtLwvcsqKSgwHT2k02op2FW8
pMvqKZC5sK3LGimoPxneZc0UxDZkdlk7BVrhZ7usm4J5j+50WS8FdxXfdBkp
MLD/3WX9FOS19xvaaYMUdPszssurUlAWP7nLRilQuDW7yyYpGFu3pMvmKXC8
v6bLVil4e8e8yzYpsG7a0mW7FIRNdeyyQwrGFLp12TkFWxJ8usxKwfOKoC57
pOCWR3iXfVKguCemywEp8DJK7DI7BYeFvC6Hp2C7n7DL0SlIkE3rcnwK1Odn
dJmTgqQpmV3mp8D1wf4ui8R5LTnQ5XTx8/se7HJmCnoHHOpydgrMjI50OTcF
Eb/zupyXgk1BR7tckILVz451uTAF3irHu1ycgov6J7pckoLza052uTQFV1HY
5fIU9Bl1qssVKQh+JeXKFLzafbrL1SloXFTU5ZoUfK2Vcm0KHGyLu1yXgtBn
Um5IgZXxmS43iu8XS7kpBbrDznb5Qwp6uEi5OQWDz0n5m/j7636uy60puLlY
yu0p2BMoZRkR1E9KWVaEFy+lLCfCXIWSLsuLINCVsoIIKzdJWVGEM0FSVhJB
JUPKyiLcKJayigh/7khZTYSXTVJWF+HiHylriHBa4XyXNUX4O1bK2iKc0pKy
rgjdIGU9EbqvljJEqDeXsr4IOVulbCCCh4uUV4lg7SVlIxGCg6RsIn5/EVI2
F2FPvJStRLjAk7KNCMYiKduJYJMhZQfx+9knZWcRpuVImSWCzGEpe4gQmC9l
HxGyC6QcIELkSSmzxfmflnK4CDHFUo4W4eRZKceLcKREyhwRfC5ImS/C6FIp
i0QQlUk5XYSWS1LOFEGzXMrZIqy+IuVcEdZdlXKeCIuuSblAhJEVUi4U4Zm0
i0XgXJdyiQgzbki5VPw9SrtcPO+mlCtEqJR2pQh6lVKuFucr7RoR2qVdK/69
W1KuE/95aTeI8FrajSKo3pZykwhW0v4gAk/azSJckvY3ET5Iu1WEIVVSbhdh
jrRlUmEhbdlUeElbLhVcacunIk/aCqkol7ZiKh5IWykV76WtnIrf0lZJhVy1
lNVSMULa6qlQk7ZGKqZJWzMV86StnYpl0tZNxWpp66Vig7SRCitp66dii7QN
UuEk7VWpYEnbKBUe0jZJhZ+0zRm2SgVb2japiJC2XSqipe2QihhpO6ciUdos
hj1SwZO2Tyr40g5gmJ0KobTDU5Ei7ehUiKQdzzAnFenS5qdij7RFDKenYq+0
M1ORKe1sxnku4zyP4QKGC1OxT9rFqdgv7RKGSxkuT0W2tCtScUDalQxXM1zD
uF/LcF0qcqTdwHAjw00Mf2C4meFvjOdpZbidYZm0/7Usw3IMyzOswLAiw0oM
KzOswrBa2v++L3WGNRjWZFibYd20/30/emnI/Z/+M6zPsAHDqxg2YtiEYXOG
rRi2YdiOYQeGnRlmMezBsA/DAQyzGQ5nOJrheIY5DPMZFjGcznAmw9kM5zKc
x3ABw4UMFzNcwnApw+UMVzBcyXA1wzUM1zJcx3ADw40MNzH8geFmhr8x3Mpw
O8Myu//XsgzLMSzPsALDigwrMazMsArDagyrM6zBsCbD2gzrMqzHMBjWZ9iA
4VUMGzFswrA5w1YM2zBsx7ADw84Msxj2YNiH4QCG2QyHMxzNcDzDHIb5DIsY
Tmc4k+FshnMZzmO4gOFChosZLmG4lOFyhisYrmS4muEahmsZrmO4geFGhpsY
/sBwM8PfGG5luJ1hmXRG/xmWY1ieYQWGFRlWYliZYRWG1RhWZ1iDYU2GtRnW
ZViPYTCsz7ABw6sYNmLYhGFzhq0YtmHYjmEHhp0ZZjHswbAPwwEMsxkOZzia
4XiGOQzzGRYxnM5wJsPZDOcynMdwAcOFDBczXMJwKcPlDFcwXMlwNcM1DNcy
XMdwA8ONDDcx/IHhZoa/MdzKcDvDMhmM/jMsx7A8wwoMKzKsxLAywyoMqzGs
zrAGw5oMazOsy7Aew2BYn2EDhlcxbMSwCcPmDFsxbMOwHcMODDszzGLYg2Ef
hgMYZjMcznA0w/EMcxjmMyxiOJ3hTIazGc5lOI/hAoYLGS5muIThUobLGa5g
uJLhaoZrGK5luI7hBoYbGW5i+APDzQx/Y7iV4XaGZfYw+s+wHMPyDCswrMiw
EsPKDKswrMawOsMaDGsyrM2wLsN6DINhfYYNGF7FsBHDJgybM2zFsA3Ddgw7
MOzMMIthD4Z9GA5gmM1wOMPRDMczzGGYz7CI4XSGMxnOZjiX4TyGCxguZLiY
4RKGSxkuZ7iC4UqGqxmuYbiW4TqGGxhuZLiJ4Q8MNzP8jeFWhtsZltnL6D/D
cgzLM6zAsCLDSgwrM6zCsBrD6gxrMKzJsDbDugzrMQyG9bv8f+W6cmg=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Frequencies\"", TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox["\"Generations\"", TraditionalForm], 
     FormBox[
      TemplateBox[{
        StyleBox["\"aabb \"", 
         RGBColor[{0.3, 0.3, 0.3}], 16, StripOnInput -> False], 
        StyleBox["\"aaBb \"", 
         RGBColor[{0.7, 0.2, 0.2}], 16, StripOnInput -> False], 
        StyleBox["\"aaBB \"", 
         RGBColor[{1, 0.1, 0.1}], 16, StripOnInput -> False], 
        StyleBox["\"Aabb \"", 
         RGBColor[{0.2, 0.2, 0.7}], 16, StripOnInput -> False], 
        StyleBox["\"AaBb \"", 
         RGBColor[{0.6, 0.1, 0.6}], 16, StripOnInput -> False], 
        StyleBox["\"AabB \"", 
         RGBColor[{0.6, 0.1, 0.6}], 16, StripOnInput -> False], 
        StyleBox["\"AaBB \"", 
         RGBColor[{1, 0.1, 0.6}], 16, StripOnInput -> False], 
        StyleBox["\"AAbb \"", 
         RGBColor[{0.1, 0.1, 1}], 16, StripOnInput -> False], 
        StyleBox["\"AABb \"", 
         RGBColor[{0.6, 0.1, 1}], 16, StripOnInput -> False], 
        StyleBox["\"AABB \"", 
         RGBColor[{1, 0, 1}], 16, StripOnInput -> False]}, "RowDefault"], 
      TraditionalForm]}},
  FrameStyle->20,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->600,
  Method->{},
  PlotRange->{{0., 2001.}, {-0.02, 1.02}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.612304273987935*^9, 3.612304559012388*^9, 
  3.612304604759901*^9, 3.6123046398445597`*^9, 3.612304859818213*^9, 
  3.612305231865266*^9, 3.612306958014635*^9, 3.67028340133582*^9, 
  3.670283467549717*^9, 3.6702837871025467`*^9, 3.670283854206427*^9, 
  3.6702846758590717`*^9, 3.6744401161669607`*^9, 3.6744401568944483`*^9, 
  3.6744402513137712`*^9, 3.674441298754816*^9, 3.67444256536679*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"1", "+", 
  RowBox[{"0.99", 
   RowBox[{"(", 
    RowBox[{"sA", "+", "sB", "+", 
     RowBox[{"sA", " ", "sB"}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"getMeanFitness", "[", 
  RowBox[{
   RowBox[{"ps", "[", 
    RowBox[{"[", "1120", "]"}], "]"}], ",", "sA", ",", "hA", ",", "sB", ",", 
   "hB"}], "]"}]}], "Input",
 CellChangeTimes->{{3.674440291222032*^9, 3.674440378197407*^9}, {
  3.674441305304038*^9, 3.674441361969901*^9}}],

Cell[BoxData["1.2079`"], "Output",
 CellChangeTimes->{{3.674440300959391*^9, 3.674440379213296*^9}, {
  3.674441300668879*^9, 3.674441362597196*^9}}],

Cell[BoxData["1.2078950503024843`"], "Output",
 CellChangeTimes->{{3.674440300959391*^9, 3.674440379213296*^9}, {
  3.674441300668879*^9, 3.6744413626117973`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"1", "+", 
  RowBox[{"0.99", 
   RowBox[{"(", 
    RowBox[{"sA", "+", "sB", "+", 
     RowBox[{"sA", " ", "sB"}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"getMeanFitness", "[", 
  RowBox[{
   RowBox[{"psSex", "[", 
    RowBox[{"[", "220", "]"}], "]"}], ",", "sA", ",", "hA", ",", "sB", ",", 
   "hB"}], "]"}]}], "Input",
 CellChangeTimes->{{3.674440291222032*^9, 3.6744404118145227`*^9}, 
   3.674441378755*^9}],

Cell[BoxData["1.2079`"], "Output",
 CellChangeTimes->{{3.674440300959391*^9, 3.674440413180929*^9}, {
  3.6744413744762487`*^9, 3.674441379643323*^9}}],

Cell[BoxData["1.20757702522635`"], "Output",
 CellChangeTimes->{{3.674440300959391*^9, 3.674440413180929*^9}, {
  3.6744413744762487`*^9, 3.674441379658729*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Fractions of metaphase recombinant genotypes under various assumptions for \
crossovers\
\>", "Subsection",
 CellChangeTimes->{{3.6054933865358973`*^9, 3.60549342355777*^9}}],

Cell[CellGroupData[{

Cell["Defining the two crossover matrices:", "Subsubsection",
 CellChangeTimes->{{3.605493620695002*^9, 3.605493659985474*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"matrixRecCA", "=", 
   RowBox[{"(", GridBox[{
      {"0", "0", "0", "0", "1", "0", "0"},
      {"0", "0", "0", "0", "0", "0", "1"},
      {"0", "0", "0", 
       RowBox[{"1", "/", "2"}], "0", 
       RowBox[{"1", "/", "2"}], "0"},
      {"0", "0", 
       RowBox[{"1", "/", "2"}], "0", "0", 
       RowBox[{"1", "/", "2"}], "0"},
      {
       RowBox[{"1", "/", "2"}], "0", "0", "0", 
       RowBox[{"1", "/", "2"}], "0", "0"},
      {"0", "0", 
       RowBox[{"1", "/", "2"}], 
       RowBox[{"1", "/", "2"}], "0", "0", "0"},
      {"0", 
       RowBox[{"1", "/", "2"}], "0", "0", "0", "0", 
       RowBox[{"1", "/", "2"}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matrixRecAB", "=", 
   RowBox[{"(", GridBox[{
      {"0", "0", "1", "0", "0", "0", "0"},
      {"0", "0", "1", "0", "0", "0", "0"},
      {
       RowBox[{"1", "/", "4"}], 
       RowBox[{"1", "/", "4"}], 
       RowBox[{"1", "/", "2"}], "0", "0", "0", "0"},
      {"0", "0", "0", "0", 
       RowBox[{"1", "/", "4"}], 
       RowBox[{"1", "/", "2"}], 
       RowBox[{"1", "/", "4"}]},
      {"0", "0", "0", 
       RowBox[{"1", "/", "2"}], 
       RowBox[{"1", "/", "2"}], "0", "0"},
      {"0", "0", "0", 
       RowBox[{"1", "/", "2"}], "0", 
       RowBox[{"1", "/", "2"}], "0"},
      {"0", "0", "0", 
       RowBox[{"1", "/", "2"}], "0", "0", 
       RowBox[{"1", "/", "2"}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.605493640509906*^9, 3.605493649380821*^9}, {
  3.605493825036108*^9, 3.605493918893772*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["No crossovers between A and B:", "Subsubsection",
 CellChangeTimes->{{3.605493451827566*^9, 3.605493471861519*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"recfracsCAonly", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}],
     ".", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"nCA", "=", "0"}], "\[Infinity]"], 
     RowBox[{
      RowBox[{"meannCA", "^", "nCA"}], "*", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"-", "meannCA"}], "]"}], "/", 
       RowBox[{"Factorial", "[", "nCA", "]"}]}], 
      RowBox[{"MatrixPower", "[", 
       RowBox[{"matrixRecCA", ",", "nCA"}], "]"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.605488003438231*^9, 3.605488071064808*^9}, {
   3.605488128961122*^9, 3.605488177398898*^9}, {3.605488249733161*^9, 
   3.6054883090756693`*^9}, {3.6054884434549923`*^9, 3.605488444142131*^9}, 
   3.6054917208746777`*^9, {3.605493663740814*^9, 3.605493664929124*^9}, {
   3.6054937124060926`*^9, 3.6054937130140553`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "3"], "+", 
    RowBox[{
     FractionBox["2", "3"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "meannCA"}], "/", "2"}]]}]}], ",", "0", ",", 
   "0", ",", "0", ",", 
   RowBox[{
    FractionBox["2", "3"], "-", 
    RowBox[{
     FractionBox["2", "3"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "meannCA"}], "/", "2"}]]}]}], ",", "0", ",", 
   "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.6054880283263683`*^9, 3.605488040967524*^9}, 
   3.6054881791524897`*^9, 3.605488310025504*^9, 3.605488445412896*^9, 
   3.605491730290667*^9, 3.605494876303177*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"recfracsCAonly", "\[Equal]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "3"], 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], " ", "meannCA"}], "/", "2"}]]}]}], ")"}]}], 
     ",", "0", ",", "0", ",", "0", ",", 
     RowBox[{
      FractionBox["2", "3"], 
      RowBox[{"(", 
       RowBox[{"1", "-", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "3"}], " ", "meannCA"}], "/", "2"}]]}], ")"}]}], ",", 
     "0", ",", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.605493252205077*^9, 3.605493308594367*^9}, {
  3.6054937188627*^9, 3.605493719462237*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.605493309741654*^9, 3.605494880364222*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["No crossovers between C and A:", "Subsubsection",
 CellChangeTimes->{{3.605493477998231*^9, 3.6054934975553293`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"recfracsABonly", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}],
     ".", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"-", "meannAB"}], "]"}], 
       RowBox[{"IdentityMatrix", "[", "7", "]"}]}], "+", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"nAB", "=", "1"}], "\[Infinity]"], 
       RowBox[{
        RowBox[{"meannAB", "^", "nAB"}], "*", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"-", "meannAB"}], "]"}], "/", 
         RowBox[{"Factorial", "[", "nAB", "]"}]}], 
        RowBox[{"MatrixPower", "[", 
         RowBox[{"matrixRecAB", ",", "nAB"}], "]"}]}]}]}], ")"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.605488003438231*^9, 3.605488071064808*^9}, {
   3.605488128961122*^9, 3.605488177398898*^9}, {3.605488249733161*^9, 
   3.6054883090756693`*^9}, {3.6054884434549923`*^9, 3.605488444142131*^9}, {
   3.605488647611471*^9, 3.605488677161413*^9}, {3.60548876965973*^9, 
   3.605488774903154*^9}, {3.605488876143345*^9, 3.605488876603367*^9}, 
   3.605491726388124*^9, {3.6054927439206743`*^9, 3.605492765317563*^9}, {
   3.605492807974453*^9, 3.605492833926012*^9}, {3.60549309284804*^9, 
   3.6054931092924547`*^9}, {3.605493669610867*^9, 3.605493670257476*^9}, {
   3.605493715631359*^9, 3.6054937162946672`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "6"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", "meannAB"}], "/", "2"}]]}], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "meannAB"}]]}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "6"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", "meannAB"}], "/", "2"}]]}], "-", 
      RowBox[{"3", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "meannAB"}]]}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["2", "3"], "-", 
    RowBox[{
     FractionBox["2", "3"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "meannAB"}], "/", "2"}]]}]}], ",", "0", ",", 
   "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.6054887901769943`*^9, 3.6054888833162737`*^9, 
  3.605491739264597*^9, 3.605492744766539*^9, 3.605492839706182*^9, 
  3.605493007293763*^9, 3.605493111532044*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"recfracsABonly", "\[Equal]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "6"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], " ", "meannAB"}], "/", "2"}]]}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", "meannAB"}]]}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "6"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], " ", "meannAB"}], "/", "2"}]]}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", "meannAB"}]]}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["2", "3"], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "3"}], " ", "meannAB"}], "/", "2"}]]}], ")"}]}], ",", 
     "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.60549316446208*^9, 3.605493224098781*^9}, {
  3.605493723519022*^9, 3.605493724142576*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.6054932252632513`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Free recombination between C and A:", "Subsubsection",
 CellChangeTimes->{{3.605493583725957*^9, 3.605493602369691*^9}, {
  3.605494057393038*^9, 3.6054940616549597`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"matrixRecCApowerinf", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Limit", "[", 
     RowBox[{
      RowBox[{"MatrixPower", "[", 
       RowBox[{"matrixRecCA", ",", "n"}], "]"}], ",", 
      RowBox[{"n", "\[Rule]", "\[Infinity]"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"recfracsfreeCA", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"-", "meannAB"}], "]"}], 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
      "}"}], ".", 
     RowBox[{"(", 
      RowBox[{"matrixRecCApowerinf", "+", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"nAB", "=", "1"}], "\[Infinity]"], 
        RowBox[{
         RowBox[{
          RowBox[{"meannAB", "^", "nAB"}], "/", 
          RowBox[{"Factorial", "[", "nAB", "]"}]}], 
         RowBox[{"MatrixPower", "[", 
          RowBox[{
           RowBox[{"matrixRecAB", ".", "matrixRecCApowerinf"}], ",", "nAB"}], 
          "]"}]}]}]}], ")"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6054937299212437`*^9, 3.605493739372932*^9}, {
   3.6054937713575172`*^9, 3.605493778770851*^9}, {3.605493927469467*^9, 
   3.6054939300878696`*^9}, {3.605493971782094*^9, 3.605493977297271*^9}, 
   3.605494019950685*^9, {3.6054940641778727`*^9, 3.6054940699573507`*^9}, 
   3.605494114455142*^9, {3.605494158854396*^9, 3.605494164803237*^9}, 
   3.605494392577078*^9, {3.605494776932356*^9, 3.6054947783630867`*^9}, {
   3.6054950037258*^9, 3.605495015793531*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "18"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "meannAB"}]], " ", 
    RowBox[{"(", 
     RowBox[{"5", "+", 
      SuperscriptBox["\[ExponentialE]", "meannAB"], "-", "meannAB"}], ")"}]}],
    ",", 
   RowBox[{
    FractionBox["1", "18"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "meannAB"}]], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "meannAB"}], ")"}]}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "9"], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "meannAB"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "meannAB"}], ")"}]}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "9"], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "meannAB"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "meannAB"}], ")"}]}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "9"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "meannAB"}]], " ", 
    RowBox[{"(", 
     RowBox[{"5", "+", 
      SuperscriptBox["\[ExponentialE]", "meannAB"], "-", "meannAB"}], ")"}]}],
    ",", 
   RowBox[{
    FractionBox["1", "9"], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "meannAB"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "meannAB"}], ")"}]}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "9"], "-", 
    RowBox[{
     FractionBox["1", "9"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "meannAB"}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "meannAB"}], ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6054941829750566`*^9, 3.605494397285968*^9, 
  3.605494787383037*^9, 3.605495041678926*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", 
  RowBox[{"{", 
   RowBox[{"meannAB", "\[Rule]", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.605494339303824*^9, 3.605494345299396*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "3"], ",", "0", ",", "0", ",", "0", ",", 
   FractionBox["2", "3"], ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.6054943462410097`*^9, 3.6054944032616673`*^9, 
  3.605494792685429*^9, 3.605495047840269*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Free recombination between A and B:", "Subsubsection",
 CellChangeTimes->{{3.605493583725957*^9, 3.605493602369691*^9}, {
  3.6054939542659597`*^9, 3.605493959480412*^9}, {3.605494072040818*^9, 
  3.6054940746865788`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"matrixRecABpowerinf", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Limit", "[", 
     RowBox[{
      RowBox[{"MatrixPower", "[", 
       RowBox[{"matrixRecAB", ",", "n"}], "]"}], ",", 
      RowBox[{"n", "\[Rule]", "\[Infinity]"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"recfracsfreeAB", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"-", "meannCA"}], "]"}], 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
      "}"}], ".", 
     RowBox[{"(", 
      RowBox[{"matrixRecABpowerinf", "+", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"nCA", "=", "1"}], "\[Infinity]"], 
        RowBox[{
         RowBox[{
          RowBox[{"meannCA", "^", "nCA"}], "/", 
          RowBox[{"Factorial", "[", "nCA", "]"}]}], 
         RowBox[{"MatrixPower", "[", 
          RowBox[{
           RowBox[{"matrixRecCA", ".", "matrixRecABpowerinf"}], ",", "nCA"}], 
          "]"}]}]}]}], ")"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.605494077161068*^9, 3.605494081148597*^9}, {
  3.6054947299186*^9, 3.605494740678667*^9}, {3.605494771282617*^9, 
  3.6054947714370203`*^9}, {3.605494818110087*^9, 3.605494818988987*^9}, {
  3.605494905323559*^9, 3.605494977504148*^9}, {3.605495025338629*^9, 
  3.605495031843296*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "18"], "+", 
    RowBox[{
     FractionBox["1", "9"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "meannCA"}], "/", "2"}]]}]}], ",", 
   RowBox[{
    FractionBox["1", "18"], "+", 
    RowBox[{
     FractionBox["1", "9"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "meannCA"}], "/", "2"}]]}]}], ",", 
   RowBox[{
    FractionBox["2", "9"], "+", 
    RowBox[{
     FractionBox["4", "9"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "meannCA"}], "/", "2"}]]}]}], ",", 
   RowBox[{
    FractionBox["2", "9"], "-", 
    RowBox[{
     FractionBox["2", "9"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "meannCA"}], "/", "2"}]]}]}], ",", 
   RowBox[{
    FractionBox["1", "9"], "-", 
    RowBox[{
     FractionBox["1", "9"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "meannCA"}], "/", "2"}]]}]}], ",", 
   RowBox[{
    FractionBox["2", "9"], "-", 
    RowBox[{
     FractionBox["2", "9"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "meannCA"}], "/", "2"}]]}]}], ",", 
   RowBox[{
    FractionBox["1", "9"], "-", 
    RowBox[{
     FractionBox["1", "9"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", "meannCA"}], "/", "2"}]]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.605494796917514*^9, 3.605494830003623*^9, 3.605494914008243*^9, {
   3.6054949536220427`*^9, 3.605494980006649*^9}, 3.60549505829179*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", 
  RowBox[{"{", 
   RowBox[{"meannCA", "\[Rule]", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.605494969738081*^9, 3.605494969907015*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "6"], ",", 
   FractionBox["1", "6"], ",", 
   FractionBox["2", "3"], ",", "0", ",", "0", ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6054949709228992`*^9, 3.605494983327721*^9}, 
   3.605495062477028*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Free recombination both between C and A and between A and B:", \
"Subsubsection",
 CellChangeTimes->{{3.605495072716938*^9, 3.605495113874054*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"recfracsfreeACAB", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}],
     ".", "matrixRecCApowerinf", ".", "matrixRecABpowerinf"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.605495130165723*^9, 3.6054951873130493`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "18"], ",", 
   FractionBox["1", "18"], ",", 
   FractionBox["2", "9"], ",", 
   FractionBox["2", "9"], ",", 
   FractionBox["1", "9"], ",", 
   FractionBox["2", "9"], ",", 
   FractionBox["1", "9"]}], "}"}]], "Output",
 CellChangeTimes->{3.6054951883727427`*^9}]
}, Open  ]],

Cell["\<\
A few tests to see if the approach of just multiplying the matrices is \
justified:\
\>", "Text",
 CellChangeTimes->{{3.60549537065357*^9, 3.605495402260413*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FullSimplify", "[", 
  RowBox[{"recfracsfreeACAB", "==", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}],
     ".", 
    RowBox[{"Limit", "[", 
     RowBox[{
      RowBox[{"MatrixPower", "[", 
       RowBox[{
        RowBox[{"matrixRecCA", ".", "matrixRecAB"}], ",", "n"}], "]"}], ",", 
      RowBox[{"n", "\[Rule]", "\[Infinity]"}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"recfracsfreeACAB", "==", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}],
     ".", 
    RowBox[{"Limit", "[", 
     RowBox[{
      RowBox[{"MatrixPower", "[", 
       RowBox[{
        RowBox[{"matrixRecAB", ".", "matrixRecCA"}], ",", "n"}], "]"}], ",", 
      RowBox[{"n", "\[Rule]", "\[Infinity]"}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"recfracsfreeACAB", "==", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}],
     ".", 
    RowBox[{"Limit", "[", 
     RowBox[{
      RowBox[{"MatrixPower", "[", 
       RowBox[{
        RowBox[{"matrixRecCA", ".", "matrixRecCA", ".", "matrixRecAB"}], ",", 
        "n"}], "]"}], ",", 
      RowBox[{"n", "\[Rule]", "\[Infinity]"}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"recfracsfreeACAB", "==", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}],
     ".", 
    RowBox[{"Limit", "[", 
     RowBox[{
      RowBox[{"MatrixPower", "[", 
       RowBox[{
        RowBox[{"matrixRecAB", ".", "matrixRecCA", ".", "matrixRecCA"}], ",", 
        "n"}], "]"}], ",", 
      RowBox[{"n", "\[Rule]", "\[Infinity]"}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"recfracsfreeACAB", "==", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}],
     ".", "matrixRecCApowerinf", ".", "matrixRecABpowerinf"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.605495230639715*^9, 3.605495358774785*^9}, {
  3.605495420151422*^9, 3.605495435558399*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.6054952856476593`*^9, 3.605495362008593*^9}, 
   3.605495436888918*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.6054952856476593`*^9, 3.605495362008593*^9}, 
   3.605495437195649*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.6054952856476593`*^9, 3.605495362008593*^9}, 
   3.605495438346488*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.6054952856476593`*^9, 3.605495362008593*^9}, 
   3.605495438950015*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.6054952856476593`*^9, 3.605495362008593*^9}, 
   3.605495438954805*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
How different are numerically obtained recfracs to those obtained by assuming \
independence of COs on both DNA segments?\
\>", "Subsubsection",
 CellChangeTimes->{{3.605499471440941*^9, 3.605499535059265*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"recfracsIndep", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"-", "meannCA"}], "]"}], 
    RowBox[{"Exp", "[", 
     RowBox[{"-", "meannAB"}], "]"}], 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
      "}"}], ".", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"IdentityMatrix", "[", "7", "]"}], "+", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"nCA", "=", "1"}], "\[Infinity]"], 
        RowBox[{
         RowBox[{
          RowBox[{"meannCA", "^", "nCA"}], "/", 
          RowBox[{"Factorial", "[", "nCA", "]"}]}], 
         RowBox[{"MatrixPower", "[", 
          RowBox[{"matrixRecCA", ",", "nCA"}], "]"}]}]}]}], ")"}], ".", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"IdentityMatrix", "[", "7", "]"}], "+", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"nAB", "=", "1"}], "\[Infinity]"], 
        RowBox[{
         RowBox[{
          RowBox[{"meannAB", "^", "nAB"}], "/", 
          RowBox[{"Factorial", "[", "nAB", "]"}]}], 
         RowBox[{"MatrixPower", "[", 
          RowBox[{"matrixRecAB", ",", "nAB"}], "]"}]}]}]}], ")"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.605499553130786*^9, 3.6054995763736362`*^9}, {
  3.605499611119822*^9, 3.60549978239172*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "18"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "2"]}], " ", 
      RowBox[{"(", 
       RowBox[{"meannAB", "+", "meannCA"}], ")"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"3", " ", "meannCA"}], "/", "2"}]]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"meannAB", "/", "2"}]], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         SuperscriptBox["\[ExponentialE]", "meannAB"]}], ")"}]}]}], ")"}]}], 
   ",", 
   RowBox[{
    FractionBox["1", "18"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "2"]}], " ", 
      RowBox[{"(", 
       RowBox[{"meannAB", "+", "meannCA"}], ")"}]}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"meannAB", "/", "2"}]]}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"meannAB", "/", "2"}]]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"3", " ", "meannCA"}], "/", "2"}]]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["2", "9"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "2"]}], " ", 
      RowBox[{"(", 
       RowBox[{"meannAB", "+", "meannCA"}], ")"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"3", " ", "meannAB"}], "/", "2"}]]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"3", " ", "meannCA"}], "/", "2"}]]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["2", "9"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "2"]}], " ", 
      RowBox[{"(", 
       RowBox[{"meannAB", "+", "meannCA"}], ")"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"3", " ", "meannAB"}], "/", "2"}]]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"3", " ", "meannCA"}], "/", "2"}]]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "18"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "2"]}], " ", 
      RowBox[{"(", 
       RowBox[{"meannAB", "+", "meannCA"}], ")"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"9", " ", 
       SuperscriptBox["\[ExponentialE]", "meannAB"]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"3", " ", "meannAB"}], "/", "2"}]]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"3", " ", "meannCA"}], "/", "2"}]]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "9"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "2"]}], " ", 
      RowBox[{"(", 
       RowBox[{"meannAB", "+", "meannCA"}], ")"}]}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"meannAB", "/", "2"}]]}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"meannAB", "/", "2"}]]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"3", " ", "meannCA"}], "/", "2"}]]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "18"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "2"]}], " ", 
      RowBox[{"(", 
       RowBox[{"meannAB", "+", "meannCA"}], ")"}]}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"meannAB", "/", "2"}]]}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"meannAB", "/", "2"}]]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"3", " ", "meannCA"}], "/", "2"}]]}], ")"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.605499685878234*^9, 3.605499705211484*^9}, {
  3.6054997722549334`*^9, 3.605499786842778*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"recfracsIndep", "==", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"-", "meannCA"}], "]"}], 
    RowBox[{"Exp", "[", 
     RowBox[{"-", "meannAB"}], "]"}], 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
      "}"}], ".", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"IdentityMatrix", "[", "7", "]"}], "+", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"nAB", "=", "1"}], "\[Infinity]"], 
        RowBox[{
         RowBox[{
          RowBox[{"meannAB", "^", "nAB"}], "/", 
          RowBox[{"Factorial", "[", "nAB", "]"}]}], 
         RowBox[{"MatrixPower", "[", 
          RowBox[{"matrixRecAB", ",", "nAB"}], "]"}]}]}]}], ")"}], ".", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"IdentityMatrix", "[", "7", "]"}], "+", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"nCA", "=", "1"}], "\[Infinity]"], 
        RowBox[{
         RowBox[{
          RowBox[{"meannCA", "^", "nCA"}], "/", 
          RowBox[{"Factorial", "[", "nCA", "]"}]}], 
         RowBox[{"MatrixPower", "[", 
          RowBox[{"matrixRecCA", ",", "nCA"}], "]"}]}]}]}], ")"}]}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.605499830001049*^9, 3.6054998598376093`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
    RowBox[{
     FractionBox["1", "6"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["3", "2"]}], " ", 
       RowBox[{"(", 
        RowBox[{"meannAB", "+", "meannCA"}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"meannAB", "/", "2"}]]}], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["\[ExponentialE]", "meannAB"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"3", " ", "meannCA"}], "/", "2"}]]}], ")"}]}], ",", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "3"]}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["3", "2"]}], " ", 
       RowBox[{"(", 
        RowBox[{"meannAB", "+", "meannCA"}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ExponentialE]", "meannAB"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"3", " ", "meannCA"}], "/", "2"}]]}], ")"}]}], ",", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "6"]}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["3", "2"]}], " ", 
       RowBox[{"(", 
        RowBox[{"meannAB", "+", "meannCA"}], ")"}]}]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"meannAB", "/", "2"}]]}], ")"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"3", " ", "meannCA"}], "/", "2"}]]}], ")"}]}]}], "}"}], 
  "\[Equal]", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
   "}"}]}]], "Output",
 CellChangeTimes->{{3.605499838630847*^9, 3.6054998608517*^9}}]
}, Open  ]],

Cell["\<\
==> It can be seen that a different result is obtained depending on the order \
with which the two matrices are multiplied, i.e. there is a differencce \
between all COs between C and A occuring first, followed by all COs between A \
and B, or the other way around. Mixed orders of COs therefore will likely \
yield yet different recfrac proportions of metaphase genotypes.\
\>", "Text",
 CellChangeTimes->{{3.605499905087515*^9, 3.605500050924644*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"N", "[", "recfracsIndep", "]"}], ",", 
     RowBox[{"PHRecombinantFractionsPoisson", "[", 
      RowBox[{"meannCA", ",", "meannAB"}], "]"}]}], "}"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"meannCA", "\[Rule]", "2"}], ",", " ", 
     RowBox[{"meannAB", "\[Rule]", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6055000636881*^9, 3.60550017854727*^9}, 
   3.605500216335258*^9, {3.6055002795809526`*^9, 3.6055002824751587`*^9}, {
   3.6055003637692204`*^9, 3.6055003688530416`*^9}, {3.605500409633986*^9, 
   3.605500413352693*^9}, {3.6055004798562403`*^9, 3.60550048375672*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0.0919720452156929`", "0.04236831947076501`", "0.2321843475587847`", 
     "0.2006454700979863`", "0.28298935555554683`", "0.09989364140081612`", 
     "0.04994682070040806`"},
    {"0.10450760135253391`", "0.038074285985732516`", "0.22395191243105536`", 
     "0.1924044139318049`", "0.21369977855493816`", "0.17108986921661778`", 
     "0.05627213852731709`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.605500104406752*^9, 3.6055001879283743`*^9, 
  3.605500252707501*^9, 3.605500311590653*^9, 3.605500398249201*^9, 
  3.6055004421251707`*^9, 3.605500511918428*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Automixis matrices for varying recombination rates", "Subsection",
 CellChangeTimes->{{3.612731618488158*^9, 3.61273164398125*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"recValues", "=", 
   RowBox[{"Round", "[", 
    RowBox[{
     RowBox[{"10", "^", 
      RowBox[{"Range", "[", 
       RowBox[{
        RowBox[{"-", "5"}], ",", 
        RowBox[{"-", "1"}], ",", "0.25"}], "]"}]}], ",", "0.0000000001"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</Users/jan/documents/projects/recent/RecAutomixis\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Get", "[", "\"\<AutomixisMatrices BACKUP.dat\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"AutomixisMatrices", "=", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
       "\"\<RepMode\>\"", ",", "\"\<recCA\>\"", ",", "\"\<recAB\>\"", ",", 
        "\"\<AutomixisMatrix\>\""}], "}"}], "}"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"meannCA", "=", 
      RowBox[{"convertMToCOs", "[", 
       RowBox[{
       "recValues", "\[LeftDoubleBracket]", "irecCA", 
        "\[RightDoubleBracket]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"meannAB", "=", 
      RowBox[{"convertMToCOs", "[", 
       RowBox[{
       "recValues", "\[LeftDoubleBracket]", "irecAB", 
        "\[RightDoubleBracket]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"AutomixisMatrix", "=", 
      RowBox[{"N", "[", 
       RowBox[{"getAutomixisMatrix", "[", 
        RowBox[{"meannCA", ",", "meannAB", ",", "\"\<CentralFusion\>\""}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"AutomixisMatrices", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"AutomixisMatrices", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<CentralFusion\>\"", ",", 
          RowBox[{
          "recValues", "\[LeftDoubleBracket]", "irecCA", 
           "\[RightDoubleBracket]"}], ",", 
          RowBox[{
          "recValues", "\[LeftDoubleBracket]", "irecAB", 
           "\[RightDoubleBracket]"}], ",", "AutomixisMatrix"}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"DeleteFile", "[", "\"\<AutomixisMatrices.dat\>\"", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Save", "[", 
      RowBox[{"\"\<AutomixisMatrices.dat\>\"", ",", "AutomixisMatrices"}], 
      "]"}]}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"irecCA", ",", 
      RowBox[{"Length", "[", "recValues", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"irecAB", ",", 
      RowBox[{"Length", "[", "recValues", "]"}]}], "}"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.612341270490143*^9, 3.612341312440858*^9}, {
   3.612341443691373*^9, 3.6123414791904907`*^9}, {3.612341602027923*^9, 
   3.612341629671208*^9}, {3.6123418236462097`*^9, 3.612341830157957*^9}, {
   3.612341951089752*^9, 3.6123420428526983`*^9}, {3.61234207695899*^9, 
   3.612342107486711*^9}, {3.612342157994946*^9, 3.612342164173675*^9}, {
   3.6123422839400454`*^9, 3.6123422965227013`*^9}, {3.6123424447895927`*^9, 
   3.6123425968041363`*^9}, {3.612342656419503*^9, 3.612342660235717*^9}, {
   3.612342732341763*^9, 3.612342774061243*^9}, {3.612342888488181*^9, 
   3.612342889067196*^9}, 3.61234292681419*^9, {3.612343005070539*^9, 
   3.612343011927772*^9}, {3.612343452151896*^9, 3.6123434585898046`*^9}, {
   3.612344667444006*^9, 3.612344668395142*^9}, {3.612344702446021*^9, 
   3.612344789691738*^9}, {3.612345520922344*^9, 3.6123455559900513`*^9}, {
   3.612559234143409*^9, 3.612559234421427*^9}, {3.61255949164211*^9, 
   3.612559499114627*^9}, {3.612559878986474*^9, 3.6125598877795877`*^9}, {
   3.6125616658275013`*^9, 3.6125617076431437`*^9}, {3.6125621558068523`*^9, 
   3.61256216251558*^9}, {3.6127279389689293`*^9, 3.612727939792509*^9}, {
   3.612731690949922*^9, 3.6127317243492002`*^9}, {3.612731768974225*^9, 
   3.6127318109332867`*^9}, {3.612731874864979*^9, 3.6127319627536297`*^9}, 
   3.6127320339775333`*^9, {3.6127326289918947`*^9, 3.612732640198353*^9}, 
   3.612733065366006*^9, {3.613764174397935*^9, 3.613764261341895*^9}, {
   3.613764389657939*^9, 3.6137643908183517`*^9}, {3.613764642768435*^9, 
   3.613764645854155*^9}, {3.6139647837136602`*^9, 3.6139648021130333`*^9}, {
   3.613964943324942*^9, 3.613964944820468*^9}, {3.6139651618975573`*^9, 
   3.613965185721095*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"recValues", "=", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "0.02", ",", "0.001"}], "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"SexTensors", "=", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\"\<recAB\>\"", ",", "\"\<SexTensor\>\""}], "}"}], "}"}]}], 
    ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
    "SetDirectory", "[", 
     "\"\</Users/jan/documents/projects/recent/RecAutomixis\>\"", "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Get", "[", "\"\<SexTensors BACKUP.dat\>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"SexTensors", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"SexTensors", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "recValues", "\[LeftDoubleBracket]", "irecAB", 
             "\[RightDoubleBracket]"}], ",", 
            RowBox[{"N", "[", 
             RowBox[{"getSexTensor", "[", 
              RowBox[{"0", ",", 
               RowBox[{"convertMToCOs", "[", 
                RowBox[{
                "recValues", "\[LeftDoubleBracket]", "irecAB", 
                 "\[RightDoubleBracket]"}], "]"}]}], "]"}], "]"}]}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"DeleteFile", "[", "\"\<SexTensors.dat\>\"", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Save", "[", 
        RowBox[{"\"\<SexTensors.dat\>\"", ",", "SexTensors"}], "]"}]}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"irecAB", ",", 
        RowBox[{"Length", "[", "recValues", "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.612818993725816*^9, 3.612819072393943*^9}, {
  3.6128191514322233`*^9, 3.612819296058086*^9}, {3.61281934083664*^9, 
  3.612819343830646*^9}, {3.612819455013802*^9, 3.612819456920298*^9}, {
  3.612819534744138*^9, 3.61281954136628*^9}, {3.6138549924772053`*^9, 
  3.6138550376161633`*^9}, {3.613964980325366*^9, 3.613964984256057*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Linkage of two recessive deleterious mutations: associative overdominance\
\>", "Subsection",
 CellChangeTimes->{{3.597374655618322*^9, 3.597374686745689*^9}, {
  3.670387623182276*^9, 3.670387629553811*^9}}],

Cell[CellGroupData[{

Cell["Plotting the dynamics", "Subsubsection",
 CellChangeTimes->{{3.670389142672974*^9, 3.6703891559827127`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"meannCA", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"meannAB", "=", "0.0000001"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sA", "=", 
   RowBox[{"-", "0.999"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hA", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sB", "=", 
   RowBox[{"-", "0.5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hB", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gens", "=", "500"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p0", "=", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0",
      ",", "0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ps", "=", 
   RowBox[{"Simulate", "[", 
    RowBox[{
    "p0", ",", "gens", ",", "meannCA", ",", "meannAB", ",", 
     "\"\<CentralFusion\>\"", ",", "mu", ",", "mu", ",", "sA", ",", "hA", ",",
      "sB", ",", "hB"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PlotDynamics", "[", "ps", "]"}]}], "Input",
 CellChangeTimes->{{3.60353089187535*^9, 3.603530983226058*^9}, {
   3.603531040739498*^9, 3.6035311977091427`*^9}, {3.603531307406088*^9, 
   3.603531435528841*^9}, {3.603531676554263*^9, 3.603531696127338*^9}, {
   3.605414704051242*^9, 3.605414749366444*^9}, {3.605414801927544*^9, 
   3.605414830772173*^9}, {3.605414888331237*^9, 3.605414888403543*^9}, {
   3.605415303926601*^9, 3.6054154046167097`*^9}, {3.6054183588449306`*^9, 
   3.6054183591463223`*^9}, {3.605418419789003*^9, 3.605418419939818*^9}, {
   3.605418509680318*^9, 3.6054185114142647`*^9}, 3.60541856601192*^9, {
   3.605418597754562*^9, 3.6054186004662247`*^9}, {3.6054186663557796`*^9, 
   3.6054186678602877`*^9}, {3.605418746593484*^9, 3.605418747151949*^9}, {
   3.6054199397152643`*^9, 3.605419942224554*^9}, 3.605420027544197*^9, 
   3.605420082999234*^9, {3.605455436291329*^9, 3.60545546301057*^9}, 
   3.605455502169993*^9, {3.6054555323763247`*^9, 3.605455537542729*^9}, {
   3.605455571255909*^9, 3.605455577576311*^9}, 3.605457183586089*^9, {
   3.605457225967246*^9, 3.605457228221266*^9}, 3.605457292207737*^9, 
   3.605457329502787*^9, {3.6055445115161657`*^9, 3.605544513125423*^9}, {
   3.605546923563574*^9, 3.605546923775676*^9}, {3.605548249560108*^9, 
   3.605548253344016*^9}, {3.605548400853136*^9, 3.605548401451913*^9}, {
   3.605548436893821*^9, 3.605548450466638*^9}, 3.605548495412734*^9, {
   3.61230366667986*^9, 3.612303680991622*^9}, 3.613769010326198*^9, {
   3.613960694237137*^9, 3.613960702709363*^9}, {3.613961513646883*^9, 
   3.61396151820562*^9}, {3.613962199315379*^9, 3.613962200251214*^9}, 
   3.613962671359161*^9, {3.613963491277767*^9, 3.613963499773079*^9}, 
   3.613963696082384*^9, 3.613963881086821*^9, {3.6139642465257196`*^9, 
   3.613964249700469*^9}, {3.6140294095208063`*^9, 3.614029410688093*^9}, {
   3.6140294746421547`*^9, 3.6140294765472097`*^9}, {3.6140373293945837`*^9, 
   3.6140373668245697`*^9}, {3.614037625731318*^9, 3.6140376311335373`*^9}, 
   3.6140382292748127`*^9, 3.614038460990697*^9, 3.61403863583493*^9, {
   3.614038801054244*^9, 3.614038803509079*^9}, {3.614038889664549*^9, 
   3.6140388950162563`*^9}, {3.614039280455806*^9, 3.61403932051919*^9}, {
   3.6140407688782787`*^9, 3.614040798148198*^9}, 3.6140409751529837`*^9, 
   3.6140417696330633`*^9, {3.614043413700779*^9, 3.61404341441885*^9}, 
   3.670284774468384*^9, {3.670284811100165*^9, 3.670284838707341*^9}, {
   3.670284871675428*^9, 3.670284904186769*^9}, {3.670285033915237*^9, 
   3.67028510162739*^9}, {3.6702851375402803`*^9, 3.6702852350024242`*^9}, {
   3.670628666886817*^9, 3.670628678853553*^9}, {3.670628723518064*^9, 
   3.670628736172834*^9}, {3.6706385206598263`*^9, 3.67063858147434*^9}, {
   3.670640842133814*^9, 3.6706408458623133`*^9}, {3.67064087709507*^9, 
   3.670640895230145*^9}, {3.670640935727557*^9, 3.6706409637422533`*^9}, {
   3.67064102743045*^9, 3.670641027590167*^9}, {3.6706411062803373`*^9, 
   3.670641113509863*^9}, {3.6706412081320972`*^9, 3.670641209381647*^9}, 
   3.670641242678419*^9, {3.670641307086135*^9, 3.670641340270068*^9}, {
   3.670643741085012*^9, 3.670643742016101*^9}, {3.670643868896985*^9, 
   3.6706438689760323`*^9}, 3.6706439364519243`*^9, {3.670643967063491*^9, 
   3.670643981501665*^9}, {3.67064420565947*^9, 3.670644233288663*^9}, {
   3.670644264514141*^9, 3.670644287500991*^9}, {3.670644646890903*^9, 
   3.670644656880802*^9}, 3.6706460749792433`*^9, {3.670648495426221*^9, 
   3.67064850401713*^9}, {3.670807335491227*^9, 3.670807400648245*^9}, {
   3.6775423207730713`*^9, 3.677542415077914*^9}, {3.677542450992519*^9, 
   3.67754246482125*^9}, {3.677542847810172*^9, 3.677542890340788*^9}, {
   3.6775429342801723`*^9, 3.677542979215397*^9}, 3.677544169706235*^9, {
   3.6775444454697742`*^9, 3.677544445520378*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.3, 0.3, 0.3], PointSize[0.002777777777777778], Thickness[
     Large], LineBox[CompressedData["
1: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
Bc/24IDirJvDbMPC4IDJfYeKW/S+LNRNkjTp+l4wzCwWJmt2eJfMv0Pvz4Jy
bfTO2UGFw5zIwpTkkgyHG0XUw8K8HOPfT3cUD3MOC8Elz62UdUqojwVxrf37
yr8SV7OQZD/hWMOVu9TLQpe84zF25L1h7mFBaeqXpssrS6mfDb0pkocyZe5T
PxuPJRSPC3uIFdjIjB+5XKfmAfWzYXRDuaUnv4z62aivVx/MSX9I/Ww8KQ1J
2XaynPrZkP2Qas1LeUT9bPTU3q3bfuox9bNxNErj0/ULFdTPxo+3YhNFb1dS
Pxvh22abuD1/Qv1sCO0LPxR/r6J+NniJ23R376umfjY+/GrROz2nhvrZUNg3
ffbUYuIeNorKnXtfuDylfg6muAaPbfxNLMXBsrbLYj/PPKN+DrLXL6xStqyl
fg4qGwb3rewlBgeHpXULFp9+Tv0cxMkOyj+2qaN+Dt4eqHr9RbSe+jnIvXbj
XOwN4ngObJ2r/jMJbaB+DjaNnJ/5r3Ij9XPwrT6B3/SGOIcD15L3F1afekH9
HLRn2osbbmyifg4meoRc3jb9JfVz8G6RjtGHJuIeDkbfap+18GQz9XPR7mCa
NdvtFfVz8VV4n5uk+Jr6uQjc6S80bCVW40J2QZxJzPoW6ufiptPY9KI8Yhsu
lmWLvHgi/Yb6uTBQvSK1j0fM4qJ0qW7jmzrieC6+nfPQvaz1lvq5SFFWbmo6
TJzKxalJk8dZ9xLncFGYfaene+076udCKmrTsdRs4mouPFzlxq8b20r9XLx+
MC64y5u4hwvX5Kx++0JikXAsb3g4d6vMe+oPx6qfeVdcQogV/vKOzyee3SVW
C0c+e7FhncwH6g/HtE1DNvYBxDbhuNbxpsniFrF7OOqq9NackWij/nAEiX0M
t7Mnjg+HiHFNmEsacWI4QuWCr1/+SJwajl/aOePMtNqpPxxm35bw/o0lLg5H
wc6BpRp3iavDcazgVX7c6A7qD0ej8rR9o82Ie8LB33Le4d52YpEInCqdUnKz
lFgqAvNO5/h2inRSfwR0myyr7VcQq0VgKPLmxtHhxIjAOPflmv0XiW0ikCn7
SFOjhdg94u//T9fbCiZ3UX8EDvWBk2JCHB+Bivgrm2ojiBMjoCdVBPZZ4tQI
sBW55vwa4pwIdGYdSPryi7g4Ake7koLfz+2m/gjMX7M8aOMa4pYISE8rdXXj
EfdEYMnOBrP+48QiPFyoGWG1sJhYiofAJd05Y98RK/CQ3mZSfmzUR+rnoVx3
VV+LEjF42C3zI6V7JbENDwEV7dL3PYjdeWi8UnCLKyRm8bCuWLNiRApxPA9L
11Tz+HnEiTxcWTf0uKWSOJWHQZOyOys/EOfwoJs5fvrFIeJiHr59XbBHfson
6uchhyubmKZC3MLDBqfmKDN94h4eDlruCJVaRywSCbF7bl5iPsRSkbgQuEle
PZJYIRJDmfmqx3YSq0WiwezSZ6NkYkTi31wcXH6B2CYSP3abjI/PJ3aPxMI9
xgoKZcSsSJx8sN9p5nPi+Ego6kfIbH1LnBiJuaYpAtvPxKmR8LGKEhz5SZwT
iYGJv+vWjPlM/ZFwjdOduX0ScXUkrIr0r+jPIG6JRLpF2y2hMnFPJMRHtOqs
UicW4eNu+uURF3SIpfhI1/wv98RKYgU+/hQOlM5fTazGR5TEpG32tsTgwywr
XFp5I7ENH41OYqyTXsTufJw+pulXGEjM+uvLnJ6+l00cz8eO6NvXJfnEiXzI
m88YNBYSp/Ih5hOZrbmVOIePgd/O35t3Mf185JjVPTbdz/Tz4eO2S4p9iOnn
Yw+7fItbMtPPR+G+yw+nnGL6o9D+Wtn34BmmPwqKLYNlzeeZ/ig8d3xk0HeR
6Y/Cqy8yYq+zmf4oBE1VXZGSy/RHQXKFZLvKdaY/ClO0g/7sv8n0R8Gqm+X6
5DbTH4VFHy5Vfihi+qOw1aZxRNNdpj8KQtGrJzLvM/1RaG3IW+jykOmPQrRP
k8anR0x/FPLHb5zmUcn0RyExz07/RhXTH4Vn4zd9/lLD9AtgdPtx0KRapl8A
fZcRrdPqmH4B3p93i5ZoYPoFuF043/xtI9MvQPpnHdtzTUy/ALPatp5c38z0
C9B5+oTMp1dMvwDb1TTTI1qYfgEsY/Yv6HrD9AtguFRUsOYd0y/A2okbHNNa
mX4BNmxdmtD2nukXIE/2eJl8G9MvwOL9KoUr25l+AUZ275Nx6WD6Bfh0pJkV
0Mn0R+Np7lufgC6mPxqR1fwdLt1MfzRqZ9a7m35k+qNxyrCZp/SJ6Y/GthfO
5gMM20RjhbiT9d3PTH800urtf23uYfqjIXyxt1jnC9MfjX9+qIzqZDgxGoNn
dqke+Mr0R8PBl31E7RvTHw2F+UapDxkujsYL0QWpjr1MfzQ4Va4d7xhuica7
7OWP/b4z/dGY4sc58J5hkRhcfGqx1aWP6Y9BftDF9iqGFWLgOMZWRK+f6Y+B
d90fiXMMIwa/7mwxFB9g+mPgJNf72pdh9xj4DN2bXsIwKwbNg+/mTR1k+mNg
mfB6eQDDiTGwnT8ouMFwagwWyJvIi/5g+mOwd9w9MwuGi2NQyOfN3ctwdQzG
SApfVzLcEoOCVpVj434y/TEQlEmFmzIsEouAGKXDQoalYmEz+/70PIYV/vKV
Z3PbGFaLxeChe8+m/mL6YyG155K+KcM2sYjM27CZw7B7LJ61WOefYJgVi6fa
3wdKGY6PxS3N7c5dDCfGwr5FtW/CENP/93lnJV5pMJwTi0UO5sq2DBfH4miD
4nsuw9Wx2D6xWyWJ4ZZYuG2bPeYywz2xmOAYsfcRwyJCHOp4WNHKsJQQpT3m
tUMMKwihqh+cK/2b6RdCS+J3+AKGIcScN3NUjBi2EcLGIKzJjmF3IZSKq48G
MswSok7sakAsw/FCJK3pd97PcKIQlnlD/FSGU4XQVr70KIfhHCFq5oY5FTNc
LMSyRRbqVQxXC8F9X2nfzHCLEOpTFtR1MtwjhISTel4/wyJxqMi2Hhz5h+mP
w+2sE5kTGFaIQ07W61o5htXi0JeRwJ/DMOJwr6/s5GKGbeKQ1cCx1P7L/wNj
BN0Z
      "]]}, 
    {RGBColor[0.7, 0.2, 0.2], PointSize[0.002777777777777778], Thickness[
     Large], LineBox[CompressedData["
1:eJxV2XlYjPv7B/BRDqGSjiVLmRYkpVKWFp23EEXaJKU07XvN1CzVtIwcSZKK
ki1TZC8JORLGEiKdEELL2I5SCGVfvn5X9/PHr39cr+vu7u6da57n+dyPtn+M
a5ACi8XqG8Bi/d+//V89f7H+/xdW/r3DfPw7XZt+KkFDIJAWnDAjqyGo5UXG
F5+55JFobh9fkrt2PlkDkV+U8i96LiZPAJvVoXTD1JHMxujb2msO/uFC1sHV
spdlH2LdyHpoNnfeXih3J0/GK6vGFcJlK8n6aL+18aewxotsgOUtL/dmGfiQ
DTFHoF1ZXuhLno78sLKfEYp+ZBM4HN9UnWbpTzbFf2zHAzt4AeQZuHl7Mk4c
DCSbwa3h2Zz69iCyOZwKhwa/GB1CnolpbzvLfzqGkmdhfMWaPzTWhZFn45xF
q59pTTh5DvbOj7rg8CGCbIGjJ9aPDzSIIltiqO5mfrJfNNkKT0IS6goKY8jW
mNVUq9wcwiXPxXyLcZWBijyyDXQcxMvfFTH+C5yS8g/JlrFkIL46cfPQ+2QJ
8PnbvinbeHFUn4e+XT1ndVX4VJ+Hdy81l1YcJLNs8eJc5wPrBQKq26Jmlopv
XTuZNR8vnOc+cRcLqT4fRQcMVj8dLaL6AkybtuZedCVZsgDBzS/tvjnGU30h
vkexKtd3kiULkaYVMnrkugSq2+GITWWclJ1IdTvYvuXVGdaQWYsgumQ85oyH
mOqLMN072nvhBzJrMQapHCq8nZ1E9cV4EOJ208cgmer2MLrd/KGzliyxR77S
rhFCvxSqO2DhkY+6Cj/IEge0HZtjkF2YSvUlCHt9d4TKOAnVlyAt/8LguyFk
1lIYTRR9LDzF1JeibkVW62rFNVR3xMZjmTV6LmSJIyZ1fMx7VcTUl2HF4WWc
im6mvgxGk5T0hJZpVHfCqeLcVqsMssQJx0a4ZA24z9SdoVG41/ia7tp+wxlq
w1qvZvHIEmc8j17k4nqBLHPGhTCdhjEqf1O/C0qOlVi3epHhgmXB73aWHCRL
XJApmdYV8pEsc0Gqmt9UowXrqN8VkTlb3d/nkuGKZO3q6NPtZIkrXl+oiksy
Sqd+V0yI9A2YJyaz3PB8Ubz1oDoy3JB+4MSPG6PXU78bto46Xro5kCxzg679
9xnLK8ms5eCrKO/TYGVQ/3IEj5v3qcWRLFmOey3PDYp3kmXL8dpIf25QJ5nl
jn8/axtOnb2B+t1he+tWX/ffZIk7tqweWlhxhyxzx77X29T47EzqX4Fnu0b7
zI4mYwV0ywaKv54lS1agt7gm5NyQjdS/AnZL49gSDzLLA5/PzCyxLSXDAyeU
XnYO/ECWeODxOJveq8iifg/sMrx8LiObzFqJskW3bB1ayFiJJ1tSU4cZbKL+
lchJuxpTLyLLVmLM3eXDN9WSWZ5gR0s9Hf/Mpn5PFI1qt1fxI0s8YfFS4XF9
OVnmiQ3lVYOzvpNZXng20OuGg8Nm6vdCtdWPCUMKyZLfdVWfL1dfkGVeaFeJ
Mbw0Nof6V+FPlQU7pCBjFeRhkkspIWTJKuhHzC/2zibLVqH8jWCG5Smm3xs7
RNd4Y1qYfm9Ujjzi1auQS/3eMJuwvKNxKlnmjSfVlaPKnMksH7CXc1szRGT4
YF1Fl0VgEdPvA+vP5pP+qmX6fbBJOGT72G6mfzW26/6b/UE9j/pXY9a7zb/q
LciS1XjwoPdZKYcsW42+PTBPWU9m+SI30KHDvZzp94XCTdEnw3tMvy8mdlet
VPzO9PviwiuRwkOdLdTPwTiz/a/K7MlsDtasLh6UxiWDg/1VM5e4byNzOIh3
23p0ynmyhAOdBgetL8/JUg4OrbXcUjdsK83jwM1v84/CGWQ5B3vMq5aFeJJZ
fgiJdxWZS8hsPxgWmoWwDpDhh6ISe5Wbt8gcPxwP2O6xtZcs8UNwm7GZ9/h8
mu+HDs1RWTq2ZJkfPN1tHF+GkuV+GLgwlXN4M5nlj5jHieURVWS2PyYobdGa
1kqGPxaeelDQoVhA8/2R3dr7ba8BWeKP+8cnmvq4kKX+aL2koDEynizzR5v2
oZzrRWS5P2LDQxMSa8msAOQfqCuf2k1mB+DBQN6w++rbaH4AFK0HhqZakDkB
uF8+fOckDlkSgPjxr+Kvp5OlATj0sOBuSBlZFoDKTfsTFZvI8gAYzx1ttfMr
mRWIRxWG7dO1C2l+ILJUVkw/v4iMQORv+tG9OJrMCYTQNqilYStZEojOWnG1
01myNBDvLxybd/MJWRaI4skX9ecpbaf5gdgxLkfn+HQyKwgS287Wce5kdhAu
r3P6I0VMRhCGD7ps86iYzAnCV/N104yvkyVBmPH0YUjSG7I0CA0TajMvjtxB
84NQLqud9NOSLA/CkvVZV0z9yKxgbOcd6161nswORvVqT82kMjJ+14v7GnLv
kjnB2Bj0IHbXF7IkGAYVLbE7J+6k+cG4Xq9smr2QLAvGtS7TwfwIsjwY3eei
7JbmklkhmHnn+qzRp8nsEOgl1oy+3UJGCPZ+rBqXpLCL5odgc9n2yNH6ZEkI
iieZTtvjSJaG4PHf+8NGxZFlIeh0eDU9vpAsDwH/1xjB1XNkVihMM+/o/3pK
ZoeipKNQX1tpN80Pxb4P6gumGZE5oRC9cLea4EqWhELZiX3+vZAsDYXEQCWi
bCdZFooBp881OMjI8t++8cW/7jmZFYYMXN00ZUgRzQ+DoxVPGmBERhh2Nm65
L3Yhc8LQ0qbkHi0gS8LgdbRZ32I7WRqGsgFj7R7VkGVh+B59Md1JTpaHYXl0
3KECxT00Pxw3x85yLptMZofjivGkXzn2ZITj3KQ/x/8VSeaEY6SaVsfJbLIk
HPONZme8rSBLw1HetetL1x2yLByPliwadaCXLA+Hr93eq6rDpDQ/At2qmX2l
48nsCCi9e2U3xpCMCCzrsW/iWJM5EfB3MJFKlpIlETBXt8zne5OlEeiL1lxn
GUmWRcDq3JEpjWKyPAK75PVjzTYy8yPxS0/QwtnBzI9EqE7B3RWHmPmRuGcw
bKH6P8z8398vX+ORc5WZHwl2he+IhiZmfiS2ft7ncf0pMz8SRs8ausU9zPxI
3Hn9T8yLH8z8KFiHpHoNGFZM86Pwa2bggPoxZEThUszp3Hl6ZE4UzvBq1Vab
kCVRWOZV76VpTZZG4V7fV23xIrLs988PEr+OdSXLo5D4Y6MGy4fMiobv2EO3
NUOY+dH42XRj7DUuMz8alzvPXP6YwMyPxjm91LgDacz8aJw0f7f7biYzPxrG
dwMzBHnM/Gg8zV27eP12Zn406lscryhImfkx0BzsWPmklJkfgwPJX7drHmHm
x8BW7Nd07BgzPwZjH7E25Z5g5sfA6977S2ermPkxmHiR4zDlDDM/BjM7FjfU
VzPzY7CrbdedfWeZ+VyUHD5fdYCxGhe3DQL+ucV8P5uL+yPkH1WZn2fCRf7x
LmEAMw9c7NzWNPlyJdmZiwdls55NKmd+Xy5mTzFLWnuQzOXC6KPx2bvFzO/P
hZdcJ0x1BzmHi838CPdpuUweLn6Y2fjorCdXcPFCtySuS8zk42L/adbhlBhy
Ixc9W+wsmvyYvFz0jsjb+Jz5/+/hwqk03O6gLZOfB6xKdNcwZfLzsKVA1mek
xeTnYf3HGRefDmHy8/Bc8UK1SS/z+eChuGmXl3or2ZmH7lXyHWlXmM8LD7d2
mA9MPkzm8rA25FD1j2zm88PDNfXEzAGx5BweWtorete5MZ8nHqZN2GC1wYxc
wcPbkzHRQ9WZzxcPUYMHdKm30fWlkYfw5Oo5qvnM9YaHGgP+nKHM9ayHBw3D
T/bKX+l6yIpFut7aG+MPktVi4XVFqGPrxlyPY5HqbdeY+Y2u1yaxyCtK5SoW
M/eHWDy6UXTp7Hyycywav6Uern3G3K9i8bjXZvrMNWRuLCqvcrjsCcz9KxbF
+w337zlJ97ucWNR56w295cDcT2PxMr3wxpU2ut9WxKIn0K93H5e5v8fC9Mpt
z00scmMslu0bJNyTzTxvxEI64fLSn+PIPbF4s2XkooZSej5hxSHDdrDKTGOy
WhziP5zz9jxNz0fsOBQ02Lf725BN4qAWeuBbwhV6XkMcjpk6HrxmT3aOg3xT
jZWggZ4fOb89PNP6qCuZG4eWJlfTgvvM82scql1H8ry9yDlxGLvGs3dKG/M8
HYfBvUemaPuTK+JgKD5+IeY/5nn+d32hx2bLCHJjHEYX+HMO9ND5Qh4HX9VT
DY+E5J44PBCvn/z5B3P+4WPD1jsLtdPJanyod6mtEQ4ns/l4v+79aCNzOn+Z
8IHyjFrrpcx5j4+2uqHJriF0HnTm4w9j3UHF6+g8yeFja/O/MR4H6DzK5WPA
MEXF4nrmfMvHotC71qV9dD7O4cOh6VXDeh2ylA+LwvuloW503q7gI3RzY29A
BnOe52N7Y45d3kU6/zfysc/keJ7SL9ofyPkYr6rv0QxyDx99b3xODV/P7C8E
mBrrl3fmNu031AR4euH8mVY2mS2AVV2awho+7UtMBFAf+0lQWk/7FgjwUHxQ
5DCV7CxA+FSXN5GZtM/hCHB0VdYjVTntg7gC7DinVaN3ktkXCTBsbKWbUi7t
l3IEmOL8+kqJkPZRUgGErhH3HgbSvqpCAKOXm61yVtF+SybAuPipXaVetA9r
FMDhRpbvZz/al8kFeH/xxVN/Hu3XegRwPbTuzvkM2sexhFB/oih/doD2dWpC
HF8xwulgA+332EJItnQaP/lO+0ATIQSH3Av8Z5AhROypubd+RdP+0FkIy8m3
0jdW0r6RI8TWJPMhzd9pP8kVIrFZY+VpR7JEiJfNWac+2tM+M0eI2/eTf3YN
pH2nVIiv6yUn39+MpPxCDGLXZhwron2pTIiRhi0d15Jon9ooxMYlY6Y/DaJ9
q1yIYuUX10o9aR/bI4SjZ4zfWQ9mXyvCpYlXFG75BlN+Ecrj/zVK59F+ly3C
hoKoT1uyaP9rIsIvz4cTSitoPwwR/sqvHhXeSvtjZxG2Ph+pm69O5ohQtMd9
1SMn2jdzReDdqTnxdiuH8v9290nVcZdpP50jgkvJ0dnN4aspvwhL1SIX57Jp
n10hgubIfWtlz1ZRfhG85ywb/OIE7b8bRdjfs/r6mhxPyi9Crt2DjZoJtC/v
Ef3++0pabaM8KH88Fp3dPlASuYLyx2N2d8XHYCHt29nx0Ln6ZvGmzOWUPx5T
a1jsrIO0n0c8Qu8+0mI1ulL+eLS6Ji/fwCJz4nFRs1P/pgXt97nxqIwLs48U
O1P+eCiXHNU3ynSi/L99pU3pjeEyyh+Pu/ebZ4vbllL+eJxaXV1kWbSE8sej
0Ucu3xbhQPnj0RUQbjrQzp7yx+MTt0X/oyG9f+iJh1XNzx2dExdR/gRMztOI
8tWyo/wJaOraE9k6ZSHlT8D0ifzJb6wWUP4EnBly+jzbi95vIAEGPu51Smm2
lD8Bq+Ys1bU5MY/yJ2BF7+l679eg/Al49+vU5YEmZEkCruTNl53os6H8Cdis
FswZvJPep0gT8Iw78KiXkzXlT4Cb8PXNoepWlD8B7TXzssRPLSh/AmSdAzTH
yOZQ/gQ8DhI1OR6eTfkTkLFS+CFfOovyJ2KuhjAiomQm5U+Eb594v9Mxc8qf
iAuad53rrtL7HpNEjFq5US+wYwblT4Sx+HRVxZ9k50Rk1gXYLVhsSvkTcfas
1aZ/1plQ/kRckRzV9dhmTPkTkadh8ynFbDrlT0Ro8v5G83ZDyp+IOydV0+u3
T6P8iTC/vNKi2N+A8ifiXOqfyqMsplL+RLwynn8/Z4I+5U9EuuKr9rXKUyh/
IhQ2We0OUJpM+cXwDgmOOjJ8EuUXo53TvqpFW4/yi/G2auzzJBt6/2Uixlrj
wtMaQTqUX4whU+enI1+b8osxRbXn+oYGNuUXg/dpUHa2GpkrRqdzSM6jU1qU
X4y937Rscr00Kb8Yd3YHrs1WnUD5xZgZaSqccnsc5RdD1WF3zj/FYym/GC42
OzmlqRqUX4yqe98tV4aPofxi1P/c9W6e32jKL0b+oy1ZDwNGUf4kWHS4D9rF
G0n5k2DZVjxUOfNPyp+Eqgjtf44fVaf8SZivWBI47uEIyp+EiBM3A5pVyc5J
2Nxj3ZjmqEb5k7BQ67+y8KnDKX8ScpUah7Cvq1D+JOw+vNsoWqhM+ZPg1Hw8
v9RsGOVPgteetlCtX0MofxJsB27TndOsRPmTkKZyxs7z/GDKnwSd3BtD3lYM
ovxJyJH+rRZ17A/Kn4To+kxdxzMDKX8yvt007FZtUKT8yZjto35i9msFyp+M
DTGV2q6jySbJCGgXDXqzeADlT4brDNF46d8syp8Mx1qzPYp5v+b250+G6gV7
Pf9pP/vNTcaKFwPmSZu+91uSjNIUz6NDN33rd04yhqml/ehz+9pvaTL+O/7E
7bz+l35XJGOPhVzh2tDP/ZYlY7/CynmJXz72uzEZPxvSWhb39vVbnoyue9Zv
Dn3t7XdPMkSlCQXjlMmsFDR9vXZaU/9Dv9VSED35cpXVsvf9Zqcg4r2LtULK
u36bpMDXY+tXxdM9/UYKHuvWdlS8e9tv5xQsvZWWPTv9DeVPwX9afm9bDF5T
/hTktsemvmrrovwpyEh3uHC8+BXlT8HhYelPNsZ2Uv4URB5ayn/o3EH5f8/7
lqeqYP2S8qdAQfaNxTf7j/KnYLG10dB9s15Q/hTsVBaoqix8TvlTYF+ef8d4
9TPKn4qMqh1n8tY8pfypmK6Vt+5i+RPKn4oa8dDxji/klD8VKUGzF93UIyMV
rspzR5Q9bKP8qXAP9D85PrF17v8AHiphQw==
      "]]}, 
    {RGBColor[1, 0.1, 0.1], PointSize[0.002777777777777778], Thickness[Large],
      LineBox[CompressedData["
1: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
GxfqT8KSxdOk67WJTZJg63vdIszDmfqT0Dyy8tF4EyfqT4LuHYVo5eWF1J+E
mw1ZbQZRDtSfhMGzTcTu2vbUnwRPC3310AZb6k/CUPOl+44dX0D9v85tpS+2
ZM+n/iTcP2J6c2XqPOpPwomet9JaRXOpPwkjNC8ZzpLZUH8S5O/SL7Yun0P9
SfCae694SaE19cvwyGb9p/Srs6lf9uv9Y0JK7BdQvwzLhGdsayYSm8iwdV+l
+6nGmdQvQ2yrnpqG1Ir6ZdC6KXLoGGZJ/TJERo9zvFg5nfplcA/KCN6ZM436
ZZjz/MS5d+FTqV+GDVkF/TXmW1C/DNt8JoV4TTGnfhl0BgzfZDbBjPplmPwm
2HrQlCnUL0PFskl+sXNNqV+Ga+9mtJ8Omkz9MiwQLB2YuHwS9Scj3HGJpeGf
JtSfjIF/GlZXPJtI/cnokRksl8ZNoP5kTFI+uD5ZxZj6k9HyXvtQn6NG1J+M
2CnW0QnhhtSfDDtXV+1m43HUnwxrjXTfyz0MqD8ZytO+HQhoHkP9ydjy7Lje
oAejqT8Z2zO26TtW61N/Mr7PkrZJ6vSoPxlVmjWre3zQpf5kSONTx8T3J25I
hoZa4VALy1HUn4yZf0qWNiXoUH8Kzn/cpK/sM5L6U6BW7BY2+5k29afgpHa3
isOZw6k/BZmP7qqlThpG/Sl4t/vBp9dvhlJ/CsosjOztzg+h/hQUWf8z+vHG
wdSfgtVleUd6pv1O/SnYOWNE8ZjEQdSfgie/ZyZsEw2k/hTsLtH5UZMxgPpT
oCuOsXLb2p/6U5D+amlk1oV+1J+C3qqWVe9ealJ/Ctb1mrNDW5e4NQWWz6a2
j7/Sl/pTcTD//X+PPPtQfyoOV7V/SWrvRf2puD9jtea0Yz2pPxUClaEjAoS/
UX8qeiQdbZpko079qchcpf2Hqr4a9afCsL7c2ryfKvWnwrP8XrVuLxXqT4V4
4uEgs37K1J+Kjb0DvtTq9qD+VJzvqeGwYVZ36k/Fm/a26KrwbtSfiq++P6NH
bFai/lRUvZ3jpLT358zO/lTUN7t+6zXhRye3pqK6T5XGsvKOTlaSw2lH080C
QXsna8phPNf0+xajb52sI0eRh/vKoo9tnWwiR72qv6bpzS+dDDlOH7SXSo5/
7mRnOTzzzNbdL/zUyTw59lyp/+tcwcdO5stx2bZw9aojHzpZIcfHijDBX5fe
d3K2HDu8pVFlTe86OV+OH5kGJw00iYvkePD59eLIua2dXCLH4IrbslHqbzu5
Uo4cnkNIyKbX1C+H6JrqX6UWr6hfDovDT30Fz19Sfxrq42cuKdr/gvrTsOKH
gF8mfU79aVjqfrClu3sz9afh6N3UlguznlF/GpQMp070tHhK/b+uZ7zvidmM
JupPw52AgfZX7Z5Qfxp62/hFZYY1Un8aqtTqTzaufEz9aXhVq3cl4lwD9adB
q0DFYEpzPfX/8g/y9OsTW0f9aRg0+FJLevda6k9Dun72lXMH/qP+NIT5ma76
zHtI/WmwMHLVFo+tof50+NcPnJDRcZ/607FavupBXP096k+Haa8Xlrm3q6k/
HQXwG+V/81/qT0fjRKdN46vvUn86AltqdotfVM38Hz1iYP0=
      "]]}, 
    {RGBColor[0.2, 0.2, 0.7], PointSize[0.002777777777777778], Thickness[
     Large], LineBox[CompressedData["
1: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
BVpnXKhfhqcXvqk3JTpTfwqMZumYdcx2ov6UP38/kdrF6o7Un4Jil9ddq77O
p/4UrDghFL995UD9KWjO1vno+tye+lOgd/DWGb23dtSfghfZVQPf/Z5H/Sno
p156ctoYsjwFJh81PifY2VJ/Cox3XNN1Es2l/hSodmqsdDgK6k/B9O8Koz4d
c6g/Ba+dNx40k9pQfwrGvSsZHcKeTf0pOOKqueBekxX1p2Bx70GfO7fPov5U
aNwYGfI52pL6U5El8hrk5zyT+lPhftuSkzFjBvWnwqduq3HbNAvqT8Wg/Onf
npmaU38q6gSLe6nNM6P+VNR+iIvuWGJK/akY2Hr0/iv5dOpPRbTqgjmlR0yo
PxWOcVF5Z54bU38q5osaj5dNIJel4ngldyjnoRH1p+I8e0S7PHUq9afi7yTP
YdZGU6g/FW8H1LXdejuZ+lNhFSBcvKNqEvWnoTR5+p1PeQbUn4ar9neb56fr
U38adr69tZ2VOJH60/CtNf3mpsQJ1J+GKckrPSVyPepPw4F9qV+Nt46n/jRc
+bFT37ZSl/rTEPjG/IzFs3HUn4ZpO1WPF4wm5/yxnauKqieb+tNg4/t8n63F
WOpPw7ma9IMvb4+h/jT03fdihHu6NvWnYdyOSO2GWVrUnwYfLeeuE33+pv40
3Jj5ziTgoSb1pyNr14vbRrWjqT8d2rdrtm8+Por603FqjfurH0c1qD8dGgHy
2KeV6tSfjn4mxm2110dSfzryJiw9pvNmhM3/ACE5pm0=
      "]]}, 
    {RGBColor[0.6, 0.1, 0.6], PointSize[0.002777777777777778], Thickness[
     Large], LineBox[CompressedData["
1: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
EiXu3dcmT/3pqPvN5tbPvknm/wNPBZHW
      "]]}, 
    {RGBColor[0.6, 0.1, 0.6], PointSize[0.002777777777777778], Thickness[
     Large], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxVz3lYzHvcxvEJ4VgqWeMglT1rhEg3KURUSqVt2qZlWqapmWmmmWmKHI6t
yFJEqWNfKrJrQdlCKXuRPbJEJOR4znM9n++v6+mfud7Xt8/c8xriF+kU2I7H
433V4vH+9/P//hqt/v8nD8KWjgezl3+g7oz4rl/PJQxlrYcvw3Msh359T90L
8gvw7FTDuh/sayZnvbvJ+k88ax4zRP8Ka0NoDtp7x11ibYQ+l1Lq0y6wNkG/
Okd1RgnrYfArnDvAgOsR+Pxk1+6qYtajEB0pH3qUa1MkzSz7vJ3rsahOF1Wk
cD0eEdlmEWu5noDUO51Xr+Z6Ip74L/r0F9dmWPnkcqe2noTiOx9iV3I9GWum
fezX1uawGFNakcT1FNybtDS1radCrze82noaNj8dPKKtLfBupUnTCq6nY5Xx
4vNtPQMxy3VWtrUlegd2sW/rmbh/vZN+W1shS/KwejnXgKWZ12auNcCNmvAl
be+zYD2qQaftfRYWrD52OZF7n40CWY6Ka81sVBulj297t8aaUZF1Cdy7NbKk
rWu55s1B594G5m3vcxD2Z/ojDfdugwXJTiquNTbwsOk5oO3dFr6lB47Hc++2
GD7x5XyueXMxc/jah2rufS580gUCrnnz4Hpm6nsV9z4PwvKLEVzz5kOrc9lb
Jfc+H2tEP/hc8+yQdrhfZRz3boefddUWXPMW4LHiSYaCe1+Awq4vv8u594X4
s9f6RVxrFuJppXp7LPduD8uurnUy7t0e7e7l/ck1bxGm+w11kHLvi/A2f7ZC
wr0vxqOgzekx3Pti2Eqyc6O5dwdMevzurJg1HBAc2nA2ivt/B1x0088VsS52
QGn3m1sjuXtHjClcLo7g7h0R0jvFKpy7d0TmvQX/Crl7R1jHax0J5e6dkHen
2T6Eu3fCj5VBtUHcvRMm5iZ5CLh7JwiC5ZcDuPslOGTNN/Tn7pdgWMXCQF/u
fgnSutlu9uHul0B+3/aoF3fvjPOelvke3L0zVoV3yXDn7p2h+0IT4crdO2Ne
Y8BQF+7eBR5+wmIn7t4FXRumznTg7l1wwck3w567d8HvPYIaO+5+Kdy8Tn2f
y90vxSthftMc7n4pFi3dcWUWd78Uv8fuk87k7l1hvPbTTwvu3hXBkcqlU7h7
V3gZTlphxt27wr7lTeI47t4NSwY7O4zm7t2wa1q3t8O4ezdM77De3oi7d0NO
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
      "]]}, 
    {RGBColor[1, 0.1, 0.6], PointSize[0.002777777777777778], Thickness[Large],
      LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0.1, 0.1, 1], PointSize[0.002777777777777778], Thickness[Large],
      LineBox[CompressedData["
1:eJxVlXlUzPv/x8cSESlEEVIUkVaUpZ6oULnte9qXmdZpZlqmpml07YrSzU4l
+05uhEvI0r2WspetxEVZitC15Ot3er0/nd/803nMa57z+DzOmXMaHZrgFtGd
x+N96sbj/d/fzleLDe//v5Bt7Hv+wqX19L4yrA5/GX46i7EaTtQ4L1VayHgw
7uidUkqYz1gT/vLPlVNsGGvj06isRU+sGOvgo09bz4FTGeuiWjM2f9NkxmPg
pbnxwl0Lxvp4vMgnJ57jcbhxeJzAkmNDzMHLH8M5nogjVypU+3M8CSoeU0yV
ODbBBGUN5W4cm+LPY3/f7DBnbIbLzqs2/+DYHDKJwfvvHFtgoX/6ii6ejI1/
+szr4ikIXX1Nq4unIksU2faNY0tMrp9wu4utsOlsamkXT0Ok77P8Lp6OI6+L
xV08A3+Z2rt18UxMWbjSuIutkRgDlS62gd0DuxdfOQZqSzL+4lgBfDW8nt91
n4Xu0mH8rvsshAQ5Tuu6z0Zym23frvtsmM1rvv8fd5+DfIvRJRwr5sB3xtWY
rrstzgsrTLvutljs96qtnbvbYfhz7T85VtjBwtZK1HW3x4WXQyZ23e3h4p/z
7At3nwuhuaiAY8VcqLVtsO26z8Phz7fef+bu8xDo/H4dx7z54B85ZdV1n4/t
Tj/vf+LuDrA7uTiRY4UD5l0d0Kvr7ghdYWhBG3d3xKut00dxzHPCxsHeJR+5
uxMO28aN5pi3APt0zTd+4O4LcOCbb1+Oeb+hae4aSSt3/w2v02T3W7i7M0Q1
l804VjiDN2LA0vfc3QUns1ur3zGGC4rFSoM4VrhAs99jx7eMK1wwy1Ip/Q23
d4XURqmomdu7Inl54Kkmbu8KJZfsqtfc3hUzA3pcf8Xt3dCy37TyJbd3g4Wu
/NC/3N4Nl4zmrXrB7d0wMfal73Nu7w6nefu1Grm9O6b/UVfVwO3doT2yVFDP
7d1xz0bQ/oTbe8BUYJD0mNt7wGdH/6cPub0HFgw2nVzH7T3Ai9uc/IDbe+JZ
uMP2e9zeE7+PMj5xh9t74k6u0fFb3N4THx8M31DN7b1we/35kBvc3gubLO8P
uMbtvTDOQqm4itt7QejQOOgKt/fG+GNfIiu5vTfmWJdtOM/tvdGSmrn7LLf3
hlNpYd5pbu+DpX1+8zzJ7X1Q5re/5Ti390G1+fmQo9zeBzMPKnYd5Pa+mDrt
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
3OIPPbO5+wXr/wEuEzRL
      "]]}, 
    {RGBColor[0.6, 0.1, 1], PointSize[0.002777777777777778], Thickness[Large],
      LineBox[CompressedData["
1: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
Gnf/UHpP8ouRr3R739uc+ogYep6fN2nOGpBfjH3a19c+OlGXiGFo4hm1/XYP
8ouRFh0etNWfulaMXAepY6c33ckvQenBYDcDKXVnCUQeaRNv/+xGfglKeh7s
GplIbSFBQmvXtj87U0OCJTUP/Q5s7kp+CYx4OWZpJtR8CcYeM5lefagL+SWo
8ztmcN6GWieB7dQCP8v8zuSXwI6fYh09mzpdAq9Vlsd6nOtEfgn8Khyaz36g
T34JXIqf7Cr43JH8ElhNOyQ+bkhdIcHKpU/3TZvQgfwS6G+xuXw6sD35pTCy
62xvvaId+aW4ej0mozq3LfmlEIx2sWr2ug35pXgS/arjtr7UkKLDLuOvz91b
k1+KLpeLRJ9WtiK/FNuC0rZXF7ckvxQz3gp8KjpT66ToOfrM6NeeLcgvxb7S
M1rDjObkl2LQrgeRmno98ktxrLRvdxNH6rw/3+/RY2OPbc3IL8WGo/esvL7x
yC9FP4udovc+1LVSNKSGe+fG/57Y6JdhxvbqTTZuvxq7swzxz/XyfEb+bGxj
GdL+CdJ16vKjsS1kGDA9Szr157fGhgwGb+aE1dR9bWxXGXJcH25/W/Olsfky
FGS3MRv68XNjC2U4URdtqWtGrZPh+8kxo+4ZNDR2qgyC+80d2lp+aux0GR48
uCCv8/rY2Edk6GKa/i18yYfGzpMhpGBd2NRT9Y1dIkPv1Ud/Bn6sa+wKGTI1
ix6m/k1dK4PX1L8tdsfXkj8WL/s31L7c9p78sfhp7e60dXoN+WOx+ci4VV1b
viN/LISCA4nVN6rJH4sjWXfvF215Q/5YSOqvzJmnfE3+WKTObD12QlAV+WMx
vW9iUA/PV+SPhd+nK6kpHi/JHwvr2vO6GX4vyB+L1gMvDf4ufE7+WDwbLSiw
T3lG/ljkjhlkWpZdSf5YOLk5b3R/+pT8sVh1Q9FNbkhdGwufrb+933lWkF+O
EPnDutJJ5eSXo53J61MTHj8mvxyXFu3NTVz2iPxyPH5nqh3k+B/55Qj0XJa8
uNND8svh+LKT66CX98kvx+Tm3aC+fo/8cvRf5prX6dRd8svR8V7ViMDjd8gv
h3tqVOH307fJL0fFpNmF4UX/kl8O+56tLWyqysgvh//1PgU8feoSOQpvLevr
ObGU/HIEpaz0vycrIb8cc4dNO47oW+SPwzjlpyNZzW6SPw5T/d4MH727iPxx
SN9d72zuVUj+OBj2m37xS68b5I8DWlpueve6gPxx2HTnRXvJtWvkj8MvfRP3
j0evkj8O8fk7VZVZ+eSPQ/snUdbH918hfxxWnlMdeXHqMvnj0M0ldd6Xskvk
j8O0gtRCccNF8sfh5vrgJRWDqEv+eMpVt0t98sgfh3ulA5BjdYH8cfigEyw0
u3aO/AqYXk04NiXiLPkVyC638prY5wz5FQh26FoV9OgU+RXoIrqra38gl/wK
7Hj/LW1lcg75Fdh1w/aqi/Qk+RUYMWuG9/HIE+RX4H5CkLVZzHHyK/DE1Cx5
lPYY+RVYbrVJY/NPNvkVuBWX3/7a2aPkV+D42+Y5/Ooj5Fegj+j+nDWDqEsU
UOLz3gfXD5FfgaTdmQYd/A6SXwFr/aOfa/UOkF+JDbjoejVnH/mVeLpLm1em
2kt+JRIHCwaFuGSRXwlxg/O422Z7yK9EYNJrd23fTPIrsULt+K3AYDf5ldg0
4P1O4367yK9E5QNd4BezDPIrMeCCZcb16TvJr4TNy/lPukl2kF+Jqhunvebv
Sie/EmecRl6ed347+ZXYPO+36SjHbeRXYtvK8eODyreQX4kA0TfekOQ08iuR
na66dHLyZvKrsHWgUfq89pvIr4Lj1Gsjgyo3kl+FuoSUribXNpBfhZOXNAd+
5K4nvwp6DW65bjnryK/CZOGXH2suriW/Cgcsjn6zuLeG/Cq06XBha+bn1eRX
4WVDyEfJQOpUFTYWmlYZeaaSX4XehhM+hgxfRX4VRsTHtViYm0J+FQ67/aw8
57mC/H/2vZNGzmq9nPwqbFm5oUh6NZn8Kgwe5ZcYuy6J/Gqser5uyy5hIvnV
sH9T7O/ps5T8ahSETvqvxnUJ+dW4tD5HVua+mPxqJO/L2iIMXER+9Z+/h99F
k9QLya9GxIxdmpz0BPKrsTkzO9D3lo78amxsUbgxpzV1qhoJlVkOmWu05Ffj
abXm8OKhGvKrkWimtLQpVpFfjcFtt0/5sVBJfjWkJq0SOzkpyP/n+/cXR53r
E0d+NX6JJhR7/YwlvwYpE8tVE97KyK/Br0xp3Y1XUvJrsPBXeE3Uewn5NSg8
nDN4gx41NAgt41WfNhaTX4O0Fr7PvaeJyK/B0NgrFxpUQvJr0KP0wj0rYQz5
NdgYPTZr37co8msQFnHCVrpBQH4N9LZbvr4yOZL8GuQb1sju/4ogvwZTr50r
+nA9nPwaqLuc0gZnhJFfgxb6x/m6ZaHk12D4G/Ww3doQ8muxd/WG7mPjg8mv
xUajScm7lweRX4uZdUn5/IxA8mtRtioy5Vl+APm10F+jenywnk9+LWprsMNh
GDVfi4LqBw8EZX7k1+Ko/TbpwGBf8mthpb08+36r+eTXQvHXuoQrp3zIr8WN
526iIWpv8msRe3+82nGmF/m1KM/PTJD95Ul+LQ5+6aDr0Gsu+bWwKThlKejq
Qf4/9xk1F370nEP+eJiPc5w5cpg7+eMxN9ckT+LgRv54WLi2DJ4hmE3+eNyO
l6fbbHUlfzyODrYLSDw8i/zx6HDB/Gzt3y4T/wffEfvB
      "]]}, 
    {RGBColor[1, 0, 1], PointSize[0.002777777777777778], Thickness[Large], 
     LineBox[CompressedData["
1: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
xsg48+wC5c+C8ZcLpt2Sarv/AUMCLGY=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Frequencies\"", TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox["\"Generations\"", TraditionalForm], 
     FormBox[
      TemplateBox[{
        StyleBox["\"aabb \"", 
         RGBColor[{0.3, 0.3, 0.3}], 16, StripOnInput -> False], 
        StyleBox["\"aaBb \"", 
         RGBColor[{0.7, 0.2, 0.2}], 16, StripOnInput -> False], 
        StyleBox["\"aaBB \"", 
         RGBColor[{1, 0.1, 0.1}], 16, StripOnInput -> False], 
        StyleBox["\"Aabb \"", 
         RGBColor[{0.2, 0.2, 0.7}], 16, StripOnInput -> False], 
        StyleBox["\"AaBb \"", 
         RGBColor[{0.6, 0.1, 0.6}], 16, StripOnInput -> False], 
        StyleBox["\"AabB \"", 
         RGBColor[{0.6, 0.1, 0.6}], 16, StripOnInput -> False], 
        StyleBox["\"AaBB \"", 
         RGBColor[{1, 0.1, 0.6}], 16, StripOnInput -> False], 
        StyleBox["\"AAbb \"", 
         RGBColor[{0.1, 0.1, 1}], 16, StripOnInput -> False], 
        StyleBox["\"AABb \"", 
         RGBColor[{0.6, 0.1, 1}], 16, StripOnInput -> False], 
        StyleBox["\"AABB \"", 
         RGBColor[{1, 0, 1}], 16, StripOnInput -> False]}, "RowDefault"], 
      TraditionalForm]}},
  FrameStyle->20,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->600,
  Method->{},
  PlotRange->{{0., 501.}, {-0.02, 1.02}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6702848145810347`*^9, 3.670284841183741*^9}, {
   3.670284891328796*^9, 3.670284907247169*^9}, {3.670285038182474*^9, 
   3.670285102463415*^9}, {3.670285140541695*^9, 3.670285235660125*^9}, 
   3.6703892992774982`*^9, {3.6706286605709877`*^9, 3.670628680989814*^9}, {
   3.670628724409503*^9, 3.670628736818371*^9}, {3.670638516682199*^9, 
   3.670638584643628*^9}, {3.670640850120481*^9, 3.670640895958399*^9}, {
   3.670640938330905*^9, 3.67064096459173*^9}, 3.670641028088395*^9, 
   3.670641114554212*^9, 3.670641210687904*^9, 3.670641243334235*^9, {
   3.670641314508479*^9, 3.670641340957782*^9}, 3.6706437712881117`*^9, 
   3.6706438700548677`*^9, 3.670643937361878*^9, 3.6706439860013*^9, {
   3.670644211546776*^9, 3.670644234051227*^9}, {3.6706442655276747`*^9, 
   3.670644288110477*^9}, 3.670644658480805*^9, 3.670646078436681*^9, 
   3.670646129742037*^9, 3.670646249006723*^9, 3.670647880575101*^9, {
   3.670648496527564*^9, 3.67064850488301*^9}, {3.670807341379636*^9, 
   3.670807360003912*^9}, {3.670807392223967*^9, 3.6708074013492317`*^9}, 
   3.67754228509019*^9, {3.677542330912346*^9, 3.6775424166625013`*^9}, {
   3.67754245420232*^9, 3.67754246573081*^9}, {3.677542858707762*^9, 
   3.677542890986888*^9}, {3.677542935855174*^9, 3.6775429799918203`*^9}, 
   3.677544174100967*^9, 3.6775443181587353`*^9, 3.677544446307184*^9, 
   3.677556037854158*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
+j9HNs+X\
\>"]]
}, Open  ]],

Cell["Figure for paper:", "Text",
 CellChangeTimes->{{3.6775430577181177`*^9, 3.677543070240777*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Gamma]", "=", 
   RowBox[{
    FractionBox["1", "3"], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        RowBox[{"meannCA", "/", "2"}]}]]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"saa", "=", 
   RowBox[{"-", "sB"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sAA", "=", 
   RowBox[{"-", "sA"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"approxLine", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"saa", "-", "\[Gamma]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"sAA", "-", "\[Gamma]"}], ")"}]}], 
      RowBox[{
       RowBox[{"2", " ", "saa", " ", "sAA"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"saa", "+", "sAA"}], ")"}], " ", "\[Gamma]"}]}]], ",", 
     RowBox[{"{", "gens", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"ps", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3", ",", "6", ",", "8"}], "}"}]}], 
       "\[RightDoubleBracket]"}], "]"}], ",", 
     RowBox[{"{", "approxLine", "}"}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.02"}], ",", "1.02"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "600"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", "18"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Thick", ",", " ", 
        RowBox[{"Hue", "[", 
         RowBox[{"0.33", ",", "1", ",", "0.8"}], "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{"Thick", ",", " ", 
        RowBox[{"Hue", "[", 
         RowBox[{"0", ",", "1", ",", "0.8"}], "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{"Thick", ",", 
        RowBox[{"Hue", "[", 
         RowBox[{"0.66", ",", "1", ",", "0.8"}], "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{"Thick", ",", " ", 
        RowBox[{"Hue", "[", 
         RowBox[{"0.8", ",", "1", ",", "0.9"}], "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{"Dashed", ",", " ", 
        RowBox[{"Hue", "[", 
         RowBox[{"0.66", ",", "1", ",", "0.9"}], "]"}]}], "]"}]}], "}"}]}], 
   ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Generation\>\"", ",", "26"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Genotype frequencies\>\"", ",", "26"}], "]"}]}], "}"}]}], 
   ",", 
   RowBox[{"ImageSize", "\[Rule]", "400"}]}], 
  RowBox[{"(*", 
   RowBox[{",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "*)"}], "]"}]}], "Input",
 CellChangeTimes->{{3.613962702157292*^9, 3.613962769582129*^9}, {
   3.613962938845366*^9, 3.613962974314496*^9}, {3.6139633619074373`*^9, 
   3.613963443412661*^9}, {3.613963539447443*^9, 3.6139635729195337`*^9}, {
   3.613963630504965*^9, 3.613963681961885*^9}, 3.613963896350871*^9, {
   3.613964206565538*^9, 3.613964211220661*^9}, {3.677543091620328*^9, 
   3.6775431046269693`*^9}, {3.67754314383634*^9, 3.677543146483247*^9}, {
   3.677543187395183*^9, 3.677543212405862*^9}, {3.67754325937599*^9, 
   3.677543320160757*^9}, {3.677543526013934*^9, 3.677543565368133*^9}, {
   3.677543611254957*^9, 3.677543657873575*^9}, {3.677543764075495*^9, 
   3.6775437651931877`*^9}, {3.677543810359755*^9, 3.677543824840947*^9}, {
   3.677544063991675*^9, 3.67754410784112*^9}, {3.6775441417157288`*^9, 
   3.677544158454071*^9}, {3.6775442779096413`*^9, 3.677544278069758*^9}, {
   3.677544329533949*^9, 3.677544407424667*^9}, {3.677545176483038*^9, 
   3.677545201601351*^9}, {3.677555989688311*^9, 3.677556025079934*^9}, 
   3.677556063282053*^9, {3.677556122067247*^9, 3.6775561261160583`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {Hue[0.33, 1, 0.8], PointSize[0.005555555555555556], Thickness[Large], 
     LineBox[CompressedData["
1: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
Bc/24IDirJvDbMPC4IDJfYeKW/S+LNRNkjTp+l4wzCwWJmt2eJfMv0Pvz4Jy
bfTO2UGFw5zIwpTkkgyHG0XUw8K8HOPfT3cUD3MOC8Elz62UdUqojwVxrf37
yr8SV7OQZD/hWMOVu9TLQpe84zF25L1h7mFBaeqXpssrS6mfDb0pkocyZe5T
PxuPJRSPC3uIFdjIjB+5XKfmAfWzYXRDuaUnv4z62aivVx/MSX9I/Ww8KQ1J
2XaynPrZkP2Qas1LeUT9bPTU3q3bfuox9bNxNErj0/ULFdTPxo+3YhNFb1dS
Pxvh22abuD1/Qv1sCO0LPxR/r6J+NniJ23R376umfjY+/GrROz2nhvrZUNg3
ffbUYuIeNorKnXtfuDylfg6muAaPbfxNLMXBsrbLYj/PPKN+DrLXL6xStqyl
fg4qGwb3rewlBgeHpXULFp9+Tv0cxMkOyj+2qaN+Dt4eqHr9RbSe+jnIvXbj
XOwN4ngObJ2r/jMJbaB+DjaNnJ/5r3Ij9XPwrT6B3/SGOIcD15L3F1afekH9
HLRn2osbbmyifg4meoRc3jb9JfVz8G6RjtGHJuIeDkbfap+18GQz9XPR7mCa
NdvtFfVz8VV4n5uk+Jr6uQjc6S80bCVW40J2QZxJzPoW6ufiptPY9KI8Yhsu
lmWLvHgi/Yb6uTBQvSK1j0fM4qJ0qW7jmzrieC6+nfPQvaz1lvq5SFFWbmo6
TJzKxalJk8dZ9xLncFGYfaene+076udCKmrTsdRs4mouPFzlxq8b20r9XLx+
MC64y5u4hwvX5Kx++0JikXAsb3g4d6vMe+oPx6qfeVdcQogV/vKOzyee3SVW
C0c+e7FhncwH6g/HtE1DNvYBxDbhuNbxpsniFrF7OOqq9NackWij/nAEiX0M
t7Mnjg+HiHFNmEsacWI4QuWCr1/+SJwajl/aOePMtNqpPxxm35bw/o0lLg5H
wc6BpRp3iavDcazgVX7c6A7qD0ej8rR9o82Ie8LB33Le4d52YpEInCqdUnKz
lFgqAvNO5/h2inRSfwR0myyr7VcQq0VgKPLmxtHhxIjAOPflmv0XiW0ikCn7
SFOjhdg94u//T9fbCiZ3UX8EDvWBk2JCHB+Bivgrm2ojiBMjoCdVBPZZ4tQI
sBW55vwa4pwIdGYdSPryi7g4Ake7koLfz+2m/gjMX7M8aOMa4pYISE8rdXXj
EfdEYMnOBrP+48QiPFyoGWG1sJhYiofAJd05Y98RK/CQ3mZSfmzUR+rnoVx3
VV+LEjF42C3zI6V7JbENDwEV7dL3PYjdeWi8UnCLKyRm8bCuWLNiRApxPA9L
11Tz+HnEiTxcWTf0uKWSOJWHQZOyOys/EOfwoJs5fvrFIeJiHr59XbBHfson
6uchhyubmKZC3MLDBqfmKDN94h4eDlruCJVaRywSCbF7bl5iPsRSkbgQuEle
PZJYIRJDmfmqx3YSq0WiwezSZ6NkYkTi31wcXH6B2CYSP3abjI/PJ3aPxMI9
xgoKZcSsSJx8sN9p5nPi+Ego6kfIbH1LnBiJuaYpAtvPxKmR8LGKEhz5SZwT
iYGJv+vWjPlM/ZFwjdOduX0ScXUkrIr0r+jPIG6JRLpF2y2hMnFPJMRHtOqs
UicW4eNu+uURF3SIpfhI1/wv98RKYgU+/hQOlM5fTazGR5TEpG32tsTgwywr
XFp5I7ENH41OYqyTXsTufJw+pulXGEjM+uvLnJ6+l00cz8eO6NvXJfnEiXzI
m88YNBYSp/Ih5hOZrbmVOIePgd/O35t3Mf185JjVPTbdz/Tz4eO2S4p9iOnn
Yw+7fItbMtPPR+G+yw+nnGL6o9D+Wtn34BmmPwqKLYNlzeeZ/ig8d3xk0HeR
6Y/Cqy8yYq+zmf4oBE1VXZGSy/RHQXKFZLvKdaY/ClO0g/7sv8n0R8Gqm+X6
5DbTH4VFHy5Vfihi+qOw1aZxRNNdpj8KQtGrJzLvM/1RaG3IW+jykOmPQrRP
k8anR0x/FPLHb5zmUcn0RyExz07/RhXTH4Vn4zd9/lLD9AtgdPtx0KRapl8A
fZcRrdPqmH4B3p93i5ZoYPoFuF043/xtI9MvQPpnHdtzTUy/ALPatp5c38z0
C9B5+oTMp1dMvwDb1TTTI1qYfgEsY/Yv6HrD9AtguFRUsOYd0y/A2okbHNNa
mX4BNmxdmtD2nukXIE/2eJl8G9MvwOL9KoUr25l+AUZ275Nx6WD6Bfh0pJkV
0Mn0R+Np7lufgC6mPxqR1fwdLt1MfzRqZ9a7m35k+qNxyrCZp/SJ6Y/GthfO
5gMM20RjhbiT9d3PTH800urtf23uYfqjIXyxt1jnC9MfjX9+qIzqZDgxGoNn
dqke+Mr0R8PBl31E7RvTHw2F+UapDxkujsYL0QWpjr1MfzQ4Va4d7xhuica7
7OWP/b4z/dGY4sc58J5hkRhcfGqx1aWP6Y9BftDF9iqGFWLgOMZWRK+f6Y+B
d90fiXMMIwa/7mwxFB9g+mPgJNf72pdh9xj4DN2bXsIwKwbNg+/mTR1k+mNg
mfB6eQDDiTGwnT8ouMFwagwWyJvIi/5g+mOwd9w9MwuGi2NQyOfN3ctwdQzG
SApfVzLcEoOCVpVj434y/TEQlEmFmzIsEouAGKXDQoalYmEz+/70PIYV/vKV
Z3PbGFaLxeChe8+m/mL6YyG155K+KcM2sYjM27CZw7B7LJ61WOefYJgVi6fa
3wdKGY6PxS3N7c5dDCfGwr5FtW/CENP/93lnJV5pMJwTi0UO5sq2DBfH4miD
4nsuw9Wx2D6xWyWJ4ZZYuG2bPeYywz2xmOAYsfcRwyJCHOp4WNHKsJQQpT3m
tUMMKwihqh+cK/2b6RdCS+J3+AKGIcScN3NUjBi2EcLGIKzJjmF3IZSKq48G
MswSok7sakAsw/FCJK3pd97PcKIQlnlD/FSGU4XQVr70KIfhHCFq5oY5FTNc
LMSyRRbqVQxXC8F9X2nfzHCLEOpTFtR1MtwjhISTel4/wyJxqMi2Hhz5h+mP
w+2sE5kTGFaIQ07W61o5htXi0JeRwJ/DMOJwr6/s5GKGbeKQ1cCx1P7L/wNj
BN0Z
      "]]}, 
    {Hue[0, 1, 0.8], PointSize[0.005555555555555556], Thickness[Large], 
     LineBox[CompressedData["
1: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
GxfqT8KSxdOk67WJTZJg63vdIszDmfqT0Dyy8tF4EyfqT4LuHYVo5eWF1J+E
mw1ZbQZRDtSfhMGzTcTu2vbUnwRPC3310AZb6k/CUPOl+44dX0D9v85tpS+2
ZM+n/iTcP2J6c2XqPOpPwomet9JaRXOpPwkjNC8ZzpLZUH8S5O/SL7Yun0P9
SfCae694SaE19cvwyGb9p/Srs6lf9uv9Y0JK7BdQvwzLhGdsayYSm8iwdV+l
+6nGmdQvQ2yrnpqG1Ir6ZdC6KXLoGGZJ/TJERo9zvFg5nfplcA/KCN6ZM436
ZZjz/MS5d+FTqV+GDVkF/TXmW1C/DNt8JoV4TTGnfhl0BgzfZDbBjPplmPwm
2HrQlCnUL0PFskl+sXNNqV+Ga+9mtJ8Omkz9MiwQLB2YuHwS9Scj3HGJpeGf
JtSfjIF/GlZXPJtI/cnokRksl8ZNoP5kTFI+uD5ZxZj6k9HyXvtQn6NG1J+M
2CnW0QnhhtSfDDtXV+1m43HUnwxrjXTfyz0MqD8ZytO+HQhoHkP9ydjy7Lje
oAejqT8Z2zO26TtW61N/Mr7PkrZJ6vSoPxlVmjWre3zQpf5kSONTx8T3J25I
hoZa4VALy1HUn4yZf0qWNiXoUH8Kzn/cpK/sM5L6U6BW7BY2+5k29afgpHa3
isOZw6k/BZmP7qqlThpG/Sl4t/vBp9dvhlJ/CsosjOztzg+h/hQUWf8z+vHG
wdSfgtVleUd6pv1O/SnYOWNE8ZjEQdSfgie/ZyZsEw2k/hTsLtH5UZMxgPpT
oCuOsXLb2p/6U5D+amlk1oV+1J+C3qqWVe9ealJ/Ctb1mrNDW5e4NQWWz6a2
j7/Sl/pTcTD//X+PPPtQfyoOV7V/SWrvRf2puD9jtea0Yz2pPxUClaEjAoS/
UX8qeiQdbZpko079qchcpf2Hqr4a9afCsL7c2ryfKvWnwrP8XrVuLxXqT4V4
4uEgs37K1J+Kjb0DvtTq9qD+VJzvqeGwYVZ36k/Fm/a26KrwbtSfiq++P6NH
bFai/lRUvZ3jpLT358zO/lTUN7t+6zXhRye3pqK6T5XGsvKOTlaSw2lH080C
QXsna8phPNf0+xajb52sI0eRh/vKoo9tnWwiR72qv6bpzS+dDDlOH7SXSo5/
7mRnOTzzzNbdL/zUyTw59lyp/+tcwcdO5stx2bZw9aojHzpZIcfHijDBX5fe
d3K2HDu8pVFlTe86OV+OH5kGJw00iYvkePD59eLIua2dXCLH4IrbslHqbzu5
Uo4cnkNIyKbX1C+H6JrqX6UWr6hfDovDT30Fz19Sfxrq42cuKdr/gvrTsOKH
gF8mfU79aVjqfrClu3sz9afh6N3UlguznlF/GpQMp070tHhK/b+uZ7zvidmM
JupPw52AgfZX7Z5Qfxp62/hFZYY1Un8aqtTqTzaufEz9aXhVq3cl4lwD9adB
q0DFYEpzPfX/8g/y9OsTW0f9aRg0+FJLevda6k9Dun72lXMH/qP+NIT5ma76
zHtI/WmwMHLVFo+tof50+NcPnJDRcZ/607FavupBXP096k+Haa8Xlrm3q6k/
HQXwG+V/81/qT0fjRKdN46vvUn86AltqdotfVM38Hz1iYP0=
      "]]}, 
    {Hue[0.66, 1, 0.8], PointSize[0.005555555555555556], Thickness[Large], 
     LineBox[CompressedData["
1:eJxVz3lYzHvcxvEJ4VgqWeMglT1rhEg3KURUSqVt2qZlWqapmWmmmWmKHI6t
yFJEqWNfKrJrQdlCKXuRPbJEJOR4znM9n++v6+mfud7Xt8/c8xriF+kU2I7H
433V4vH+9/P//hqt/v8nD8KWjgezl3+g7oz4rl/PJQxlrYcvw3Msh359T90L
8gvw7FTDuh/sayZnvbvJ+k88ax4zRP8Ka0NoDtp7x11ibYQ+l1Lq0y6wNkG/
Okd1RgnrYfArnDvAgOsR+Pxk1+6qYtajEB0pH3qUa1MkzSz7vJ3rsahOF1Wk
cD0eEdlmEWu5noDUO51Xr+Z6Ip74L/r0F9dmWPnkcqe2noTiOx9iV3I9GWum
fezX1uawGFNakcT1FNybtDS1radCrze82noaNj8dPKKtLfBupUnTCq6nY5Xx
4vNtPQMxy3VWtrUlegd2sW/rmbh/vZN+W1shS/KwejnXgKWZ12auNcCNmvAl
be+zYD2qQaftfRYWrD52OZF7n40CWY6Ka81sVBulj297t8aaUZF1Cdy7NbKk
rWu55s1B594G5m3vcxD2Z/ojDfdugwXJTiquNTbwsOk5oO3dFr6lB47Hc++2
GD7x5XyueXMxc/jah2rufS580gUCrnnz4Hpm6nsV9z4PwvKLEVzz5kOrc9lb
Jfc+H2tEP/hc8+yQdrhfZRz3boefddUWXPMW4LHiSYaCe1+Awq4vv8u594X4
s9f6RVxrFuJppXp7LPduD8uurnUy7t0e7e7l/ck1bxGm+w11kHLvi/A2f7ZC
wr0vxqOgzekx3Pti2Eqyc6O5dwdMevzurJg1HBAc2nA2ivt/B1x0088VsS52
QGn3m1sjuXtHjClcLo7g7h0R0jvFKpy7d0TmvQX/Crl7R1jHax0J5e6dkHen
2T6Eu3fCj5VBtUHcvRMm5iZ5CLh7JwiC5ZcDuPslOGTNN/Tn7pdgWMXCQF/u
fgnSutlu9uHul0B+3/aoF3fvjPOelvke3L0zVoV3yXDn7p2h+0IT4crdO2Ne
Y8BQF+7eBR5+wmIn7t4FXRumznTg7l1wwck3w567d8HvPYIaO+5+Kdy8Tn2f
y90vxSthftMc7n4pFi3dcWUWd78Uv8fuk87k7l1hvPbTTwvu3hXBkcqlU7h7
V3gZTlphxt27wr7lTeI47t4NSwY7O4zm7t2wa1q3t8O4ezdM77De3oi7d0NO
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
      "]]}, 
    {Hue[0.8, 1, 0.9], PointSize[0.005555555555555556], Thickness[Large], 
     LineBox[CompressedData["
1:eJxVlXlUzPv/x8cSESlEEVIUkVaUpZ6oULnte9qXmdZpZlqmpml07YrSzU4l
+05uhEvI0r2WspetxEVZitC15Ot3er0/nd/803nMa57z+DzOmXMaHZrgFtGd
x+N96sbj/d/fzleLDe//v5Bt7Hv+wqX19L4yrA5/GX46i7EaTtQ4L1VayHgw
7uidUkqYz1gT/vLPlVNsGGvj06isRU+sGOvgo09bz4FTGeuiWjM2f9NkxmPg
pbnxwl0Lxvp4vMgnJ57jcbhxeJzAkmNDzMHLH8M5nogjVypU+3M8CSoeU0yV
ODbBBGUN5W4cm+LPY3/f7DBnbIbLzqs2/+DYHDKJwfvvHFtgoX/6ii6ejI1/
+szr4ikIXX1Nq4unIksU2faNY0tMrp9wu4utsOlsamkXT0Ok77P8Lp6OI6+L
xV08A3+Z2rt18UxMWbjSuIutkRgDlS62gd0DuxdfOQZqSzL+4lgBfDW8nt91
n4Xu0mH8rvsshAQ5Tuu6z0Zym23frvtsmM1rvv8fd5+DfIvRJRwr5sB3xtWY
rrstzgsrTLvutljs96qtnbvbYfhz7T85VtjBwtZK1HW3x4WXQyZ23e3h4p/z
7At3nwuhuaiAY8VcqLVtsO26z8Phz7fef+bu8xDo/H4dx7z54B85ZdV1n4/t
Tj/vf+LuDrA7uTiRY4UD5l0d0Kvr7ghdYWhBG3d3xKut00dxzHPCxsHeJR+5
uxMO28aN5pi3APt0zTd+4O4LcOCbb1+Oeb+hae4aSSt3/w2v02T3W7i7M0Q1
l804VjiDN2LA0vfc3QUns1ur3zGGC4rFSoM4VrhAs99jx7eMK1wwy1Ip/Q23
d4XURqmomdu7Inl54Kkmbu8KJZfsqtfc3hUzA3pcf8Xt3dCy37TyJbd3g4Wu
/NC/3N4Nl4zmrXrB7d0wMfal73Nu7w6nefu1Grm9O6b/UVfVwO3doT2yVFDP
7d1xz0bQ/oTbe8BUYJD0mNt7wGdH/6cPub0HFgw2nVzH7T3Ai9uc/IDbe+JZ
uMP2e9zeE7+PMj5xh9t74k6u0fFb3N4THx8M31DN7b1we/35kBvc3gubLO8P
uMbtvTDOQqm4itt7QejQOOgKt/fG+GNfIiu5vTfmWJdtOM/tvdGSmrn7LLf3
hlNpYd5pbu+DpX1+8zzJ7X1Q5re/5Ti390G1+fmQo9zeBzMPKnYd5Pa+mDrt
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
3OIPPbO5+wXr/wEuEzRL
      "]]}, 
    {Hue[0.66, 1, 0.9], PointSize[0.005555555555555556], AbsoluteThickness[
     1.6], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxdzznu30QYBuAPKsoUFBQUDkIIIYRM2Nf/sIQlbE7Y9yEQ9hATsrFPQZHS
R5gj+AhzBB9hLoDkggMgBBL6PW6sZ159evUeP3vhzLkbI+KvGyL++f/77Uen
Tl//43r78+i/h3Tom/AxfDO+Bd+KB3wbvh3fge/Ed+G78T14xPfiE/g+fD9+
AD+IH8IP40fwo/gx/Dh+Aj+Jj3A6dMHxFDmOp8lxPEOO41lyHCfJcTxHjuN5
chwvkON4kRzHKXIcL5HjeJkcxyvkOF4lx/EaOY7p0AkX3HCc5h4X3HCc4R4X
3HC8zj0uuOF4g3tccMPxJve44IbjLe5xwQ3H29zjghuOd7jHBTcc73KPC244
3uMeF9xwvM89Lrjh+IB7XHDD8SH3uOCG4yPuccENx8fc44IbjnzoASecccEV
N9xxfEI/TjjjgituuOM4Sz9OOOOCK2644/iUfpxwxgVX3HDH8Rn9OOGMC664
4Y7jHP044YwLrrjhjuNz+nHCGRdcccMdxxf044QzLrjihjuOL+nHCWdccMUN
dxxf0Y8TzrjgihvuOL6mHyecccEVN9xxfEM/TjjjgituuOP4ln6ccMYFV9xw
x3GefpxwxgVX3HDH8R39OOGMC6644Y7jAv044YwLrrjhjmM+9DE84BEnPOGM
Z1zwgiteccMb7njH8T378YBHnPCEM55xwQuueMUNb7jjHcdF9uMBjzjhCWc8
44IXXPGKG95wxzuOH9iPBzzihCec8YwLXnDFK254wx3vOC6xHw94xAlPOOMZ
F7zgilfc8IY73nFcZj8e8IgTnnDGMy54wRWvuOENd7zjuMJ+POARJzzhjGdc
8IIrXnHDG+54x3GV/XjAI054whnPuOAFV7zihjfc8Y7jGvvxgEec8IQznnHB
C654xQ1vuOMdx4/sxwMeccITznjGBS+44hU3vOGOdxw/sR8PeMQJTzjjGRe8
4IpX3PCGO95x/Mx+POARJzzhjGdc8IIrXnHDG+54x/EL+/GAR5zwhDOeccEL
rnjFDW+44x3Hr+zHAx5xwhPOeMYFL7jiFTe84Y53HL+xHw94xAlPOOMZF7zg
ilfc8IY73nH8zn484BGn//03gN4Yrw==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"Genotype frequencies\"", 26, StripOnInput -> False], 
      TraditionalForm], None}, {
     FormBox[
      StyleBox["\"Generation\"", 26, StripOnInput -> False], TraditionalForm],
      None}},
  FrameStyle->18,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->600,
  Method->{},
  PlotRange->{{0., 501.}, {-0.02, 1.02}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6035313173487387`*^9, 3.603531376164637*^9}, {
   3.603531423573029*^9, 3.60353143649267*^9}, {3.603531678657267*^9, 
   3.603531697261805*^9}, {3.6054183636260843`*^9, 3.6054183882150993`*^9}, 
   3.6054184422403173`*^9, 3.605418533890345*^9, 3.605418588473781*^9, 
   3.60541862283601*^9, 3.605418691801709*^9, 3.6054187699606533`*^9, 
   3.605419870315411*^9, 3.60541996496129*^9, 3.6054200485269012`*^9, 
   3.6054201038988943`*^9, 3.60545540678452*^9, {3.605455457988443*^9, 
   3.605455484434392*^9}, 3.60545552351919*^9, 3.605455558714259*^9, 
   3.605455598890006*^9, 3.605456927414364*^9, 3.605457207290753*^9, 
   3.60545725019108*^9, 3.6054573144649563`*^9, 3.605457351320644*^9, 
   3.605544539597934*^9, 3.6055469098998528`*^9, {3.605546969544903*^9, 
   3.605547038014097*^9}, 3.605548224397812*^9, 3.605548275230352*^9, 
   3.605548426848304*^9, 3.605548474974821*^9, 3.605548516935885*^9, 
   3.612303715075611*^9, 3.6139614905175533`*^9, 3.613961670467538*^9, 
   3.613962352538579*^9, {3.6139629324915323`*^9, 3.61396295366329*^9}, {
   3.613963400169712*^9, 3.613963412417864*^9}, 3.61396344412048*^9, 
   3.6139636844461937`*^9, 3.613963848309649*^9, 3.6139640316793137`*^9, 
   3.613964212357983*^9, 3.613964402544271*^9, 3.614029558404729*^9, 
   3.6140298961365547`*^9, 3.614037516338641*^9, 3.614037782311687*^9, 
   3.614038377551219*^9, 3.614038610787903*^9, 3.614038787770584*^9, 
   3.614038950176268*^9, 3.614039195618024*^9, 3.614040300802211*^9, 
   3.614040951857636*^9, 3.6140419180052567`*^9, {3.670284754455977*^9, 
   3.670284779346661*^9}, 3.6775430736031237`*^9, 3.677543105371297*^9, 
   3.677543147079939*^9, {3.6775431964944477`*^9, 3.677543213128208*^9}, {
   3.6775432614908323`*^9, 3.67754332062665*^9}, {3.6775436351829977`*^9, 
   3.677543658408675*^9}, 3.677544190214388*^9, {3.677544392991136*^9, 
   3.677544408320119*^9}, 3.677544450313327*^9, {3.6775451823012953`*^9, 
   3.677545202013088*^9}, {3.677556049453467*^9, 3.677556064333474*^9}, 
   3.677556128116954*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"]]
}, Open  ]],

Cell["Formula for approximation in paper:", "Text",
 CellChangeTimes->{{3.6775447918560038`*^9, 3.677544809754238*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"saa", "-", "\[Gamma]"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"sAA", "-", "\[Gamma]"}], ")"}]}], 
    RowBox[{
     RowBox[{"2", " ", "saa", " ", "sAA"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"saa", "+", "sAA"}], ")"}], " ", "\[Gamma]"}]}]], "==", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"3", "sB"}], "-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "3"}], " ", 
         RowBox[{"meannCA", "/", "2"}]}]]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"3", "sA"}], "-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "3"}], " ", 
         RowBox[{"meannCA", "/", "2"}]}]]}], ")"}]}], 
    RowBox[{
     RowBox[{"18", " ", "sB", " ", "sA"}], "+", 
     RowBox[{"3", 
      RowBox[{"(", 
       RowBox[{"sB", "+", "sA"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "3"}], " ", 
          RowBox[{"meannCA", "/", "2"}]}]]}], ")"}]}]}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.677544811601388*^9, 3.6775449302167397`*^9}, {
  3.677544990700252*^9, 3.677545042114749*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.677544840305746*^9, 3.6775448968616*^9}, 
   3.677544931057313*^9, {3.677544998770919*^9, 3.6775450448560247`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Screen of parameter space", "Subsubsection",
 CellChangeTimes->{{3.670387768182428*^9, 3.6703877949900827`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"meannCAvalues", "=", 
   RowBox[{"10", "^", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "0", ",", "0.2"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meannABvalues", "=", 
   RowBox[{"10", "^", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "0", ",", "0.2"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sA", "=", 
   RowBox[{"-", "0.99"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hA", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sB", "=", 
   RowBox[{"-", "0.99"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hB", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p0", "=", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0",
      ",", "0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pThresh", "=", "0.01"}], ";"}]}], "Input",
 CellChangeTimes->{{3.670631894896737*^9, 3.670631894991397*^9}, 
   3.67063609257662*^9, {3.670656908439644*^9, 3.670656914351946*^9}, {
   3.670657230539441*^9, 3.670657231441897*^9}, 3.6706582615612583`*^9, {
   3.670658473565549*^9, 3.6706584789878693`*^9}, {3.670717145036447*^9, 
   3.6707171492880077`*^9}, {3.670717699245195*^9, 3.670717702010366*^9}, {
   3.67071835612097*^9, 3.6707183584088984`*^9}, {3.670725129071727*^9, 
   3.670725134080917*^9}, 3.6707257466974*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gens", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"resultsCF", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Log(nCA)\>\"", ",", "\"\<Log(nAB)\>\"", ",", "\"\<Log(gens)\>\""}], 
     "}"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"meannCA", "=", 
      RowBox[{
      "meannCAvalues", "\[LeftDoubleBracket]", "i", 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"meannAB", "=", 
      RowBox[{
      "meannABvalues", "\[LeftDoubleBracket]", "j", 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ps", "=", 
      RowBox[{"Simulate", "[", 
       RowBox[{
       "p0", ",", "gens", ",", "meannCA", ",", "meannAB", ",", 
        "\"\<CentralFusion\>\"", ",", "mu", ",", "mu", ",", "sA", ",", "hA", 
        ",", "sB", ",", "hB"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"firstgen", "=", 
      RowBox[{"Position", "[", 
       RowBox[{
        RowBox[{"ps", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "6"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"g_", "/;", 
         RowBox[{"g", "<", "pThresh"}]}], ",", "1", ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"firstgen", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"firstgen", "=", "gens"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"resultsCF", ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Log10", "[", "meannCA", "]"}], ",", 
          RowBox[{"Log10", "[", "meannAB", "]"}], ",", 
          RowBox[{"N", "[", 
           RowBox[{"Log10", "[", "firstgen", "]"}], "]"}]}], "}"}], "]"}]}], 
      "]"}], ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "meannCAvalues", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", 
      RowBox[{"Length", "[", "meannABvalues", "]"}]}], "}"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.670387811136973*^9, 3.6703878184301367`*^9}, {
   3.670387884494091*^9, 3.670387893851362*^9}, {3.670387973434552*^9, 
   3.670388176820835*^9}, {3.670388244924761*^9, 3.670388262824894*^9}, {
   3.670388368255316*^9, 3.670388425960375*^9}, {3.6703884564725924`*^9, 
   3.6703884944478207`*^9}, {3.670388532696314*^9, 3.67038853736869*^9}, {
   3.670388669829143*^9, 3.670388670994875*^9}, {3.6703887352297792`*^9, 
   3.670388774321767*^9}, {3.6703888367940397`*^9, 3.670388837584021*^9}, {
   3.670388869610588*^9, 3.67038890121826*^9}, {3.6703891083112392`*^9, 
   3.670389114760439*^9}, {3.670389239514461*^9, 3.6703892435265703`*^9}, {
   3.670628811412966*^9, 3.6706288155007343`*^9}, {3.6706288602138166`*^9, 
   3.6706289056445637`*^9}, {3.670628942429821*^9, 3.670629015796196*^9}, {
   3.670629065365736*^9, 3.670629065445105*^9}, {3.670629108093275*^9, 
   3.670629108893222*^9}, {3.670629395332234*^9, 3.670629409720138*^9}, {
   3.6706294629102707`*^9, 3.6706295749173098`*^9}, {3.6706296805389977`*^9, 
   3.670629710833304*^9}, {3.6706297600101557`*^9, 3.67062977585214*^9}, 
   3.670629841654992*^9, {3.6706298750258703`*^9, 3.670629879153483*^9}, {
   3.6706299365216227`*^9, 3.670629938608527*^9}, {3.67063046395935*^9, 
   3.670630469287619*^9}, {3.670631713548386*^9, 3.6706317420329*^9}, {
   3.670631798868454*^9, 3.670631842513546*^9}, {3.670631880281363*^9, 
   3.670631886361315*^9}, {3.670636072084363*^9, 3.670636087513665*^9}, {
   3.670657023352892*^9, 3.670657025941537*^9}, {3.670657207494573*^9, 
   3.670657261158107*^9}, {3.67065744747223*^9, 3.6706574538647118`*^9}, {
   3.670657656920896*^9, 3.670657659080247*^9}, 3.670658259091197*^9, {
   3.6706584297547903`*^9, 3.670658429856213*^9}, {3.6707171514703217`*^9, 
   3.670717156417691*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gens", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"resultsTF", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Log(nCA)\>\"", ",", "\"\<Log(nAB)\>\"", ",", "\"\<Log(gens)\>\""}], 
     "}"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"meannCA", "=", 
      RowBox[{
      "meannCAvalues", "\[LeftDoubleBracket]", "i", 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"meannAB", "=", 
      RowBox[{
      "meannABvalues", "\[LeftDoubleBracket]", "j", 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ps", "=", 
      RowBox[{"Simulate", "[", 
       RowBox[{
       "p0", ",", "gens", ",", "meannCA", ",", "meannAB", ",", 
        "\"\<TerminalFusion\>\"", ",", "mu", ",", "mu", ",", "sA", ",", "hA", 
        ",", "sB", ",", "hB"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"firstgen", "=", 
      RowBox[{"Position", "[", 
       RowBox[{
        RowBox[{"ps", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "6"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"g_", "/;", 
         RowBox[{"g", "<", "pThresh"}]}], ",", "1", ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"firstgen", "\[Equal]", 
        RowBox[{"Missing", "[", "\"\<NotFound\>\"", "]"}]}], ",", 
       RowBox[{"firstgen", "=", "gens"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"resultsTF", ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Log10", "[", "meannCA", "]"}], ",", 
          RowBox[{"Log10", "[", "meannAB", "]"}], ",", 
          RowBox[{"N", "[", 
           RowBox[{"Log10", "[", "firstgen", "]"}], "]"}]}], "}"}], "]"}]}], 
      "]"}], ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "meannCAvalues", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", 
      RowBox[{"Length", "[", "meannABvalues", "]"}]}], "}"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.670657321590822*^9, 3.670658249955155*^9, {3.670717159188883*^9, 
   3.670717172348651*^9}, 3.6707899985646772`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gens", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"resultsSex", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Log(nCA)\>\"", ",", "\"\<Log(nAB)\>\"", ",", "\"\<Log(gens)\>\""}], 
     "}"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"meannCA", "=", 
      RowBox[{
      "meannCAvalues", "\[LeftDoubleBracket]", "i", 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"meannAB", "=", 
      RowBox[{
      "meannABvalues", "\[LeftDoubleBracket]", "j", 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ps", "=", 
      RowBox[{"Simulate", "[", 
       RowBox[{
       "p0", ",", "gens", ",", "meannCA", ",", "meannAB", ",", "\"\<Sex\>\"", 
        ",", "mu", ",", "mu", ",", "sA", ",", "hA", ",", "sB", ",", "hB"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"firstgen", "=", 
      RowBox[{"Position", "[", 
       RowBox[{
        RowBox[{"ps", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "6"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"g_", "/;", 
         RowBox[{"g", "<", "pThresh"}]}], ",", "1", ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"firstgen", "\[Equal]", 
        RowBox[{"Missing", "[", "\"\<NotFound\>\"", "]"}]}], ",", 
       RowBox[{"firstgen", "=", "gens"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"resultsSex", ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Log10", "[", "meannCA", "]"}], ",", 
          RowBox[{"Log10", "[", "meannAB", "]"}], ",", 
          RowBox[{"N", "[", 
           RowBox[{"Log10", "[", "firstgen", "]"}], "]"}]}], "}"}], "]"}]}], 
      "]"}], ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "meannCAvalues", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", 
      RowBox[{"Length", "[", "meannABvalues", "]"}]}], "}"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.6706573317300577`*^9, {3.670658221213925*^9, 3.670658238952836*^9}, {
   3.670717188955255*^9, 3.6707171914810457`*^9}, 3.67078999980252*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"max", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"min", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ColourFunction", "[", "x_", "]"}], ":=", 
   RowBox[{"Hue", "[", 
    RowBox[{"0.66", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "-", "min"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"max", "-", "min"}], ")"}]}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nTickMarks", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "6"}], ",", 
       "\"\<\!\(\*SuperscriptBox[\(10\), \(-6\)]\)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5"}], ",", 
       "\"\<\!\(\*SuperscriptBox[\(10\), \(-5\)]\)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4"}], ",", 
       "\"\<\!\(\*SuperscriptBox[\(10\), \(-4\)]\)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3"}], ",", 
       "\"\<\!\(\*SuperscriptBox[\(10\), \(-3\)]\)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "\"\<0.01\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "\"\<0.1\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "\"\<1\>\""}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotCF", "=", 
   RowBox[{"ListDensityPlot", "[", 
    RowBox[{
     RowBox[{"resultsCF", "\[LeftDoubleBracket]", 
      RowBox[{"2", ";;", 
       RowBox[{"Length", "[", 
        RowBox[{"resultsCF", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "]"}]}], 
      "\[RightDoubleBracket]"}], ",", " ", 
     RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"min", ",", "max"}], "}"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ColourFunction", "[", "#", "]"}], "&"}], ")"}]}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"nTickMarks", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"nTickMarks", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "18"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\!\(\*OverscriptBox[\(m\), \(_\)]\)\>\"", ",", "26"}],
            "]"}], ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\!\(\*OverscriptBox[\(n\), \(_\)]\)\>\"", ",", "26"}],
            "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Central Fusion\>\"", ",", "26"}], "]"}]}], "}"}]}], 
       "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotTF", "=", 
   RowBox[{"ListDensityPlot", "[", 
    RowBox[{
     RowBox[{"resultsTF", "\[LeftDoubleBracket]", 
      RowBox[{"2", ";;", 
       RowBox[{"Length", "[", 
        RowBox[{"resultsTF", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "]"}]}], 
      "\[RightDoubleBracket]"}], ",", " ", 
     RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"min", ",", "max"}], "}"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ColourFunction", "[", "#", "]"}], "&"}], ")"}]}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"nTickMarks", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"nTickMarks", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "18"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\< \>\"", ",", "26"}], "]"}], ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\!\(\*OverscriptBox[\(n\), \(_\)]\)\>\"", ",", "26"}],
            "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Terminal Fusion\>\"", ",", "26"}], "]"}]}], "}"}]}], 
       "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotSex", "=", 
   RowBox[{"ListDensityPlot", "[", 
    RowBox[{
     RowBox[{"resultsSex", "\[LeftDoubleBracket]", 
      RowBox[{"2", ";;", 
       RowBox[{"Length", "[", 
        RowBox[{"resultsSex", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "]"}]}], 
      "\[RightDoubleBracket]"}], ",", " ", 
     RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"min", ",", "max"}], "}"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ColourFunction", "[", "#", "]"}], "&"}], ")"}]}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"nTickMarks", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"nTickMarks", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "18"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\< \>\"", ",", "26"}], "]"}], ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\!\(\*OverscriptBox[\(n\), \(_\)]\)\>\"", ",", "26"}],
            "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Sex\>\"", ",", "26"}], "]"}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"legend", "=", 
   RowBox[{"ContourPlot", "[", 
    RowBox[{"y", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "min", ",", "max"}], "}"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"None", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "\"\<1\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "\"\<10\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "\"\<100\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "3", ",", "\"\<\!\(\*SuperscriptBox[\(10\), \(3\)]\)\>\""}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "4", ",", "\"\<\!\(\*SuperscriptBox[\(10\), \(4\)]\)\>\""}], 
             "}"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ColourFunction", "[", "#", "]"}], "&"}], ")"}]}], ",", 
     RowBox[{"Contours", "\[Rule]", "200"}], ",", 
     RowBox[{"ContourStyle", "\[Rule]", "None"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "15"}], ",", 
     RowBox[{"Frame", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"True", ",", "True"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"True", ",", "True"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\< \>\"", ",", "30"}], "]"}], ",", "None"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"55", ",", "300"}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "18"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"plotCF", ",", "plotTF", ",", "plotSex", ",", "legend"}], "}"}], 
    "}"}], ",", 
   RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.612562402232574*^9, 3.612562404017359*^9}, {
   3.612562444478538*^9, 3.612562509022326*^9}, 3.612562796441002*^9, 
   3.612562859811529*^9, {3.612575309222662*^9, 3.612575356548065*^9}, {
   3.6125755028281937`*^9, 3.6125755070533953`*^9}, {3.612575550958946*^9, 
   3.612575579770131*^9}, {3.612575648049129*^9, 3.612575650328463*^9}, 
   3.612575814580227*^9, {3.6125759095450897`*^9, 3.61257591375079*^9}, {
   3.6125759577881002`*^9, 3.612576070117469*^9}, {3.6125761106254997`*^9, 
   3.612576128068851*^9}, {3.612576187803419*^9, 3.61257620606968*^9}, {
   3.612576272730712*^9, 3.61257627868919*^9}, {3.6125763836613483`*^9, 
   3.6125763873903713`*^9}, 3.670636399313373*^9, 3.670636898747768*^9, 
   3.670637579665997*^9, 3.670637912090719*^9, {3.670638344189673*^9, 
   3.670638374174704*^9}, {3.670725158484767*^9, 3.6707252022306023`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"max", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"min", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ColourFunction", "[", "x_", "]"}], ":=", 
   RowBox[{"Hue", "[", 
    RowBox[{"0.66", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "-", "min"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"max", "-", "min"}], ")"}]}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nTickMarks", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5"}], ",", 
       "\"\<\!\(\*SuperscriptBox[\(10\), \(-5\)]\)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4"}], ",", 
       "\"\<\!\(\*SuperscriptBox[\(10\), \(-4\)]\)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3"}], ",", 
       "\"\<\!\(\*SuperscriptBox[\(10\), \(-3\)]\)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "\"\<0.01\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "\"\<0.1\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "\"\<1\>\""}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotCF", "=", 
   RowBox[{"ListDensityPlot", "[", 
    RowBox[{
     RowBox[{"resultsCF", "\[LeftDoubleBracket]", 
      RowBox[{"2", ";;", 
       RowBox[{"Length", "[", 
        RowBox[{"resultsCF", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "]"}]}], 
      "\[RightDoubleBracket]"}], ",", " ", 
     RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"min", ",", "max"}], "}"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ColourFunction", "[", "#", "]"}], "&"}], ")"}]}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"nTickMarks", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"nTickMarks", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "18"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\!\(\*OverscriptBox[\(m\), \(_\)]\)\>\"", ",", "26"}],
            "]"}], ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\!\(\*OverscriptBox[\(n\), \(_\)]\)\>\"", ",", "26"}],
            "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Central Fusion\>\"", ",", "26"}], "]"}]}], "}"}]}], 
       "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotTF", "=", 
   RowBox[{"ListDensityPlot", "[", 
    RowBox[{
     RowBox[{"resultsTF", "\[LeftDoubleBracket]", 
      RowBox[{"2", ";;", 
       RowBox[{"Length", "[", 
        RowBox[{"resultsTF", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "]"}]}], 
      "\[RightDoubleBracket]"}], ",", " ", 
     RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"min", ",", "max"}], "}"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ColourFunction", "[", "#", "]"}], "&"}], ")"}]}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"nTickMarks", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"nTickMarks", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "18"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\< \>\"", ",", "26"}], "]"}], ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\!\(\*OverscriptBox[\(n\), \(_\)]\)\>\"", ",", "26"}],
            "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Terminal Fusion\>\"", ",", "26"}], "]"}]}], "}"}]}], 
       "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotSex", "=", 
   RowBox[{"ListDensityPlot", "[", 
    RowBox[{
     RowBox[{"resultsSex", "\[LeftDoubleBracket]", 
      RowBox[{"2", ";;", "32"}], "\[RightDoubleBracket]"}], ",", " ", 
     RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"min", ",", "max"}], "}"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ColourFunction", "[", "#", "]"}], "&"}], ")"}]}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"nTickMarks", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "5"}], ",", "\"\< \>\""}], "}"}], "}"}], ",", 
          "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "18"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\< \>\"", ",", "26"}], "]"}], ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\< \>\"", ",", "26"}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Sex\>\"", ",", "26"}], "]"}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "135.2"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "5"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"legend", "=", 
   RowBox[{"ContourPlot", "[", 
    RowBox[{"y", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "min", ",", "max"}], "}"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"None", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "\"\<1\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "\"\<10\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "\"\<100\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "3", ",", "\"\<\!\(\*SuperscriptBox[\(10\), \(3\)]\)\>\""}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "4", ",", "\"\<\!\(\*SuperscriptBox[\(10\), \(4\)]\)\>\""}], 
             "}"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ColourFunction", "[", "#", "]"}], "&"}], ")"}]}], ",", 
     RowBox[{"Contours", "\[Rule]", "200"}], ",", 
     RowBox[{"ContourStyle", "\[Rule]", "None"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "15"}], ",", 
     RowBox[{"Frame", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"True", ",", "True"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"True", ",", "True"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\< \>\"", ",", "30"}], "]"}], ",", "None"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"55", ",", "300"}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "18"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"plotCF", ",", "plotTF", ",", "plotSex", ",", "legend"}], "}"}], 
    "}"}], ",", 
   RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.670639561688405*^9, 3.670639564196107*^9}, {
  3.670725218096169*^9, 3.670725228977771*^9}, {3.670804769228529*^9, 
  3.670804785829269*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Speed of adapatation at two linked loci", "Subsection",
 CellChangeTimes->{{3.612303620319519*^9, 3.612303643664537*^9}, {
  3.612317971717846*^9, 3.612317974472507*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mu", "=", "0.00001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxgens", "=", "1000000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"recValues", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", "0.02", ",", "0.001"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sA", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sB", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hA", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hB", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"reps", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wThresh", "=", 
   RowBox[{"1", "+", 
    RowBox[{"0.99", 
     RowBox[{"(", 
      RowBox[{"sA", "+", "sB", "+", 
       RowBox[{"sA", " ", "sB"}]}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"results", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
     "\"\<RepMode\>\"", ",", "\"\<recCA\>\"", ",", "\"\<recAB\>\"", ",", 
      "\"\<sA\>\"", ",", "\"\<hA\>\"", ",", "\"\<sB\>\"", ",", "\"\<hB\>\"", 
      ",", "\"\<mu\>\"", ",", "\"\<N\>\"", ",", "\"\<Rep\>\"", ",", 
      "\"\<gens\>\""}], "}"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</Users/jan/documents/projects/recent/RecAutomixis\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "[", "\"\<AutomixisMatrices.dat\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "[", "\"\<SexTensors.dat\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"filename", "=", "\"\<expSpeedAdapt 3.tsv\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.612341318079071*^9, 3.612341331603848*^9}, {
   3.6123413825954533`*^9, 3.61234139296367*^9}, {3.6123418026804953`*^9, 
   3.612341826333536*^9}, {3.612342120535945*^9, 3.612342150094818*^9}, {
   3.612342272486306*^9, 3.612342396915966*^9}, {3.612342492637732*^9, 
   3.6123424942553587`*^9}, {3.612342868565187*^9, 3.612342868653013*^9}, {
   3.6125601799*^9, 3.612560180793401*^9}, {3.612562145591536*^9, 
   3.6125621494081173`*^9}, {3.612563979893017*^9, 3.612563991147472*^9}, {
   3.6125686571496363`*^9, 3.612568664380651*^9}, {3.6125712654969063`*^9, 
   3.612571277272997*^9}, 3.612738224657303*^9, 3.612738354771682*^9, {
   3.612738494245344*^9, 3.612738494525394*^9}, {3.612818801464451*^9, 
   3.6128188210893087`*^9}, {3.612819765793541*^9, 3.612819772082243*^9}, 
   3.612819860549056*^9, {3.613768227156472*^9, 3.613768254321557*^9}, {
   3.6137684489016037`*^9, 3.613768460333626*^9}, {3.613768809530765*^9, 
   3.6137688099310102`*^9}, {3.6137689057006197`*^9, 3.613768914598939*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"run", " ", "simulations", " ", "with", " ", 
     RowBox[{"automixis", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"meannCA", "=", 
         RowBox[{"convertMToCOs", "[", 
          RowBox[{
          "recValues", "\[LeftDoubleBracket]", "irecCA", 
           "\[RightDoubleBracket]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"meannAB", "=", 
         RowBox[{"convertMToCOs", "[", 
          RowBox[{
          "recValues", "\[LeftDoubleBracket]", "irecAB", 
           "\[RightDoubleBracket]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"AutomixisMatrix", "=", 
           RowBox[{"N", "[", 
            RowBox[{"getAutomixisMatrix", "[", 
             RowBox[{
             "meannCA", ",", "meannAB", ",", "\"\<CentralFusion\>\""}], "]"}],
             "]"}]}], ";"}], "*)"}], "   ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"old", " ", "version"}], ",", " ", 
          RowBox[{
          "in", " ", "which", " ", "this", " ", "matrix", " ", "is", " ", 
           "calculated"}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"AutomixisMatrix", "=", 
         RowBox[{
          RowBox[{"Select", "[", 
           RowBox[{"AutomixisMatrices", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "\[LeftDoubleBracket]", 
               RowBox[{"1", ";;", "3"}], "\[RightDoubleBracket]"}], 
              "\[Equal]", 
              RowBox[{"{", 
               RowBox[{"\"\<CentralFusion\>\"", ",", 
                RowBox[{
                "recValues", "\[LeftDoubleBracket]", "irecCA", 
                 "\[RightDoubleBracket]"}], ",", 
                RowBox[{
                "recValues", "\[LeftDoubleBracket]", "irecAB", 
                 "\[RightDoubleBracket]"}]}], "}"}]}], "&"}]}], "]"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}]}], ";", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "new", " ", "version", " ", "in", " ", "which", " ", "the", " ", 
           "matrix", " ", "is", " ", "loaded", " ", "from", " ", "pre"}], "-", 
          RowBox[{"calculated", " ", "file"}]}], " ", "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"p", "=", 
         RowBox[{"{", 
          RowBox[{
          "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"g", "=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"meanw", "=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"meanw", "<", "wThresh"}], ")"}], " ", "&&", 
           RowBox[{"(", " ", 
            RowBox[{"g", "<", "maxgens"}], ")"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"p", "=", 
            RowBox[{"Recursion", "[", 
             RowBox[{
             "p", ",", "AutomixisMatrix", ",", "mu", ",", "mu", ",", "sA", 
              ",", "hA", ",", "sB", ",", "hB"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"g", "=", 
            RowBox[{"g", "+", "1"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"meanw", "=", 
            RowBox[{"getMeanFitness", "[", 
             RowBox[{"p", ",", "sA", ",", "hA", ",", "sB", ",", "hB"}], 
             "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"results", "=", 
         RowBox[{"Append", "[", 
          RowBox[{"results", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<CentralFusion\>\"", ",", 
             RowBox[{
             "recValues", "\[LeftDoubleBracket]", "irecCA", 
              "\[RightDoubleBracket]"}], ",", 
             RowBox[{
             "recValues", "\[LeftDoubleBracket]", "irecAB", 
              "\[RightDoubleBracket]"}], ",", "sA", ",", "hA", ",", "sB", ",",
              "hB", ",", "mu", ",", "\"\<Inf\>\"", ",", "rep", ",", "g"}], 
            "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"irecCA", ",", 
         RowBox[{"Length", "[", "recValues", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"irecAB", ",", 
         RowBox[{"Length", "[", "recValues", "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "same", " ", "simulations", " ", "with", " ", "sexual", " ", 
        "reproduction"}], ";", " ", 
       RowBox[{
       "here", " ", "recCA", " ", "is", " ", "not", " ", "screened", " ", 
        "because", " ", "it", " ", "is", " ", "irrelevant"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"meannAB", "=", 
         RowBox[{"convertMToCOs", "[", 
          RowBox[{
          "recValues", "\[LeftDoubleBracket]", "irecAB", 
           "\[RightDoubleBracket]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"SexTensor", "=", 
         RowBox[{
          RowBox[{"Select", "[", 
           RowBox[{"SexTensors", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "\[Equal]", 
               RowBox[{
               "recValues", "\[LeftDoubleBracket]", "irecAB", 
                "\[RightDoubleBracket]"}]}], ")"}], "&"}]}], "]"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"SexTensor", "=", 
           RowBox[{"N", "[", 
            RowBox[{"getSexTensor", "[", 
             RowBox[{"0", ",", "meannAB"}], "]"}], "]"}]}], ";"}], "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"p", "=", 
         RowBox[{"{", 
          RowBox[{
          "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
           ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"g", "=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"meanw", "=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"meanw", "<", "wThresh"}], ")"}], " ", "&&", 
           RowBox[{"(", " ", 
            RowBox[{"g", "<", "maxgens"}], ")"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"p", "=", 
            RowBox[{"RecursionSexual", "[", 
             RowBox[{
             "p", ",", "SexTensor", ",", "mu", ",", "mu", ",", "sA", ",", 
              "hA", ",", "sB", ",", "hB"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"g", "=", 
            RowBox[{"g", "+", "1"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"meanw", "=", 
            RowBox[{"getMeanFitness", "[", 
             RowBox[{"p", ",", "sA", ",", "hA", ",", "sB", ",", "hB"}], 
             "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"results", "=", 
         RowBox[{"Append", "[", 
          RowBox[{"results", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Sex\>\"", ",", "0", ",", 
             RowBox[{
             "recValues", "\[LeftDoubleBracket]", "irecAB", 
              "\[RightDoubleBracket]"}], ",", "sA", ",", "hA", ",", "sB", ",",
              "hB", ",", "mu", ",", "\"\<Inf\>\"", ",", "rep", ",", "g"}], 
            "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"irecAB", ",", 
         RowBox[{"Length", "[", "recValues", "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{"filename", ",", "results"}], "]"}], ";", "\[IndentingNewLine]",
      "ClearMemory", ";"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"rep", ",", "reps"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.612341270490143*^9, 3.612341312440858*^9}, {
   3.612341443691373*^9, 3.6123414791904907`*^9}, {3.612341602027923*^9, 
   3.612341629671208*^9}, {3.6123418236462097`*^9, 3.612341830157957*^9}, {
   3.612341951089752*^9, 3.6123420428526983`*^9}, {3.61234207695899*^9, 
   3.612342107486711*^9}, {3.612342157994946*^9, 3.612342164173675*^9}, {
   3.6123422839400454`*^9, 3.6123422965227013`*^9}, {3.6123424447895927`*^9, 
   3.6123425968041363`*^9}, {3.612342656419503*^9, 3.612342660235717*^9}, {
   3.612342732341763*^9, 3.612342774061243*^9}, {3.612342888488181*^9, 
   3.612342889067196*^9}, 3.61234292681419*^9, {3.612343005070539*^9, 
   3.612343011927772*^9}, {3.612343452151896*^9, 3.6123434585898046`*^9}, {
   3.612344667444006*^9, 3.612344668395142*^9}, {3.612344702446021*^9, 
   3.612344789691738*^9}, {3.612345520922344*^9, 3.6123455559900513`*^9}, {
   3.612559234143409*^9, 3.612559234421427*^9}, {3.61255949164211*^9, 
   3.612559499114627*^9}, {3.612559878986474*^9, 3.6125598877795877`*^9}, {
   3.6125616658275013`*^9, 3.6125617076431437`*^9}, {3.6125621558068523`*^9, 
   3.61256216251558*^9}, {3.6125640038128443`*^9, 3.612564088925879*^9}, {
   3.6125667769945087`*^9, 3.6125667919115477`*^9}, {3.612568528193511*^9, 
   3.6125685642937937`*^9}, 3.612733455178437*^9, {3.6127382499675198`*^9, 
   3.6127382773206882`*^9}, {3.61273831205966*^9, 3.612738373121983*^9}, {
   3.612814999543744*^9, 3.6128150049984713`*^9}, {3.6128197856259403`*^9, 
   3.6128198375377893`*^9}, {3.612823022590782*^9, 3.612823045118256*^9}, {
   3.612823128711104*^9, 3.612823136194489*^9}, {3.6137682475064363`*^9, 
   3.613768248629694*^9}, {3.6137687997195*^9, 3.613768840698839*^9}, 
   3.6856300156099777`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</Users/jan/documents/projects/recent/RecAutomixis\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"results", "=", 
   RowBox[{"Import", "[", "filename", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.61376282622771*^9, 3.613762833147743*^9}, {
  3.613763002192108*^9, 3.6137630223277884`*^9}, {3.6137683121534157`*^9, 
  3.613768314297035*^9}}],

Cell[BoxData[
 RowBox[{"TableForm", "[", "results", "]"}]], "Input",
 CellChangeTimes->{{3.6123433814869957`*^9, 3.612343382384193*^9}, {
  3.612343784456218*^9, 3.612343791583688*^9}, {3.612343835722905*^9, 
  3.612343836134634*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"meanAutomixisGens", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "recValues", "\[LeftDoubleBracket]", "irecCA", 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{
         "recValues", "\[LeftDoubleBracket]", "irecAB", 
          "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Mean", "[", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"results", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "\[LeftDoubleBracket]", 
                RowBox[{"1", ";;", "3"}], "\[RightDoubleBracket]"}], 
               "\[Equal]", 
               RowBox[{"{", 
                RowBox[{"\"\<CentralFusion\>\"", ",", 
                 RowBox[{"Round", "[", 
                  RowBox[{
                   RowBox[{
                   "recValues", "\[LeftDoubleBracket]", "irecCA", 
                    "\[RightDoubleBracket]"}], ",", "0.00001"}], "]"}], ",", 
                 RowBox[{"Round", "[", 
                  RowBox[{
                   RowBox[{
                   "recValues", "\[LeftDoubleBracket]", "irecAB", 
                    "\[RightDoubleBracket]"}], ",", "0.00001"}], "]"}]}], 
                "}"}]}], "&"}]}], "]"}], "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "11"}], "\[RightDoubleBracket]"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"irecCA", ",", "1", ",", 
         RowBox[{"Length", "[", "recValues", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"irecAB", ",", "1", ",", 
         RowBox[{"Length", "[", "recValues", "]"}]}], "}"}]}], "]"}], ",", 
     "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanSexGens", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "recValues", "\[LeftDoubleBracket]", "irecCA", 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{
         "recValues", "\[LeftDoubleBracket]", "irecAB", 
          "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Mean", "[", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"results", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "\[LeftDoubleBracket]", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "3"}], "}"}], "\[RightDoubleBracket]"}], 
               "\[Equal]", 
               RowBox[{"{", 
                RowBox[{"\"\<Sex\>\"", ",", 
                 RowBox[{"Round", "[", 
                  RowBox[{
                   RowBox[{
                   "recValues", "\[LeftDoubleBracket]", "irecAB", 
                    "\[RightDoubleBracket]"}], ",", "0.00001"}], "]"}]}], 
                "}"}]}], "&"}]}], "]"}], "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "11"}], "\[RightDoubleBracket]"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"irecCA", ",", "1", ",", 
         RowBox[{"Length", "[", "recValues", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"irecAB", ",", "1", ",", 
         RowBox[{"Length", "[", "recValues", "]"}]}], "}"}]}], "]"}], ",", 
     "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanRelativeGens", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "recValues", "\[LeftDoubleBracket]", "irecCA", 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{
         "recValues", "\[LeftDoubleBracket]", "irecAB", 
          "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"Mean", "[", 
            RowBox[{
             RowBox[{"Select", "[", 
              RowBox[{"results", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "\[LeftDoubleBracket]", 
                  RowBox[{"1", ";;", "3"}], "\[RightDoubleBracket]"}], 
                 "\[Equal]", 
                 RowBox[{"{", 
                  RowBox[{"\"\<CentralFusion\>\"", ",", 
                   RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "recValues", "\[LeftDoubleBracket]", "irecCA", 
                    "\[RightDoubleBracket]"}], ",", "0.00001"}], "]"}], ",", 
                   RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "recValues", "\[LeftDoubleBracket]", "irecAB", 
                    "\[RightDoubleBracket]"}], ",", "0.00001"}], "]"}]}], 
                  "}"}]}], "&"}]}], "]"}], "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "11"}], "\[RightDoubleBracket]"}], "]"}], 
           "/", 
           RowBox[{"Mean", "[", 
            RowBox[{
             RowBox[{"Select", "[", 
              RowBox[{"results", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "\[LeftDoubleBracket]", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "3"}], "}"}], "\[RightDoubleBracket]"}], 
                 "\[Equal]", 
                 RowBox[{"{", 
                  RowBox[{"\"\<Sex\>\"", ",", 
                   RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "recValues", "\[LeftDoubleBracket]", "irecAB", 
                    "\[RightDoubleBracket]"}], ",", "0.00001"}], "]"}]}], 
                  "}"}]}], "&"}]}], "]"}], "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "11"}], "\[RightDoubleBracket]"}], "]"}]}], 
          "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"irecCA", ",", "1", ",", 
         RowBox[{"Length", "[", "recValues", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"irecAB", ",", "1", ",", 
         RowBox[{"Length", "[", "recValues", "]"}]}], "}"}]}], "]"}], ",", 
     "1"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6125613356207533`*^9, 3.6125615139853907`*^9}, {
  3.612561569448886*^9, 3.61256163772622*^9}, {3.612561740780157*^9, 
  3.6125617948341007`*^9}, {3.6125618369023457`*^9, 3.6125618429878893`*^9}, {
  3.612561889047908*^9, 3.6125618906851683`*^9}, {3.612561952681185*^9, 
  3.6125619862984943`*^9}, {3.6125621210317163`*^9, 3.612562126329007*^9}, {
  3.61256216782113*^9, 3.612562176026485*^9}, {3.61256387138369*^9, 
  3.612563914284555*^9}, {3.6125639506903257`*^9, 3.612563953553583*^9}, {
  3.612570306045804*^9, 3.612570320395129*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", "meanRelativeGens", "]"}], "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.6125703280225058`*^9, 3.6125703925870647`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"max", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"min", "=", 
   RowBox[{"1", "/", "8"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RedBlueColourFunction", "[", "x_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"x", ">", "1"}], ",", 
     RowBox[{"Hue", "[", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"2", ",", "x"}], "]"}], "/", 
        RowBox[{"Log", "[", 
         RowBox[{"2", ",", "max"}], "]"}]}], ",", "1"}], "]"}], ",", 
     RowBox[{"Hue", "[", 
      RowBox[{"0.7", ",", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"2", ",", "x"}], "]"}], "/", 
        RowBox[{"Log", "[", 
         RowBox[{"2", ",", "min"}], "]"}]}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot", "=", 
   RowBox[{"ListDensityPlot", "[", 
    RowBox[{"meanRelativeGens", ",", " ", 
     RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"min", ",", "max"}], "}"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"RedBlueColourFunction", "[", "#", "]"}], "&"}], ")"}]}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "20"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(r\), \(CA\)]\)\>\"", ",", "26"}], 
         "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(r\), \(AB\)]\)\>\"", ",", "26"}], 
         "]"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"legend", "=", 
   RowBox[{"ContourPlot", "[", 
    RowBox[{"y", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "min", ",", "max"}], "}"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"None", ",", "All"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"RedBlueColourFunction", "[", "#", "]"}], "&"}], ")"}]}], ",", 
     RowBox[{"Contours", "\[Rule]", "200"}], ",", 
     RowBox[{"ContourStyle", "\[Rule]", "None"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "15"}], ",", 
     RowBox[{"Frame", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"True", ",", "True"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"True", ",", "True"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\< \>\"", ",", "30"}], "]"}], ",", "None"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"55", ",", "300"}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "20"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"plot", ",", "legend"}], "}"}], "}"}], ",", 
   RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.612562402232574*^9, 3.612562404017359*^9}, {
   3.612562444478538*^9, 3.612562509022326*^9}, 3.612562796441002*^9, 
   3.612562859811529*^9, {3.612575309222662*^9, 3.612575356548065*^9}, {
   3.6125755028281937`*^9, 3.6125755070533953`*^9}, {3.612575550958946*^9, 
   3.612575579770131*^9}, {3.612575648049129*^9, 3.612575650328463*^9}, 
   3.612575814580227*^9, {3.6125759095450897`*^9, 3.61257591375079*^9}, {
   3.6125759577881002`*^9, 3.612576070117469*^9}, {3.6125761106254997`*^9, 
   3.612576128068851*^9}, {3.612576187803419*^9, 3.61257620606968*^9}, {
   3.612576272730712*^9, 3.61257627868919*^9}, {3.6125763836613483`*^9, 
   3.6125763873903713`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Speed of adapatation at two linked loci: h=0.01", "Subsection",
 CellChangeTimes->{{3.612303620319519*^9, 3.612303643664537*^9}, {
  3.612317971717846*^9, 3.612317974472507*^9}, {3.670639709088376*^9, 
  3.670639712431254*^9}, {3.6744370566560802`*^9, 3.674437064351141*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mu", "=", "0.00001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxgens", "=", "1000000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meannCAValues", "=", 
   RowBox[{"10", "^", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "0", ",", "0.2"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meannABValues", "=", 
   RowBox[{"10", "^", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "0", ",", "0.2"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sA", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sB", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hA", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hB", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wThresh", "=", 
   RowBox[{"1", "+", 
    RowBox[{"0.99", 
     RowBox[{"(", 
      RowBox[{"sA", "+", "sB", "+", 
       RowBox[{"sA", " ", "sB"}]}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NN", "=", "Infinity"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"results", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
     "\"\<RepMode\>\"", ",", "\"\<Log(nCA)\>\"", ",", "\"\<Log(nAB)\>\"", 
      ",", "\"\<sA\>\"", ",", "\"\<hA\>\"", ",", "\"\<sB\>\"", ",", 
      "\"\<hB\>\"", ",", "\"\<mu\>\"", ",", "\"\<N\>\"", ",", "\"\<Rep\>\"", 
      ",", "\"\<gens\>\""}], "}"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.612341318079071*^9, 3.612341331603848*^9}, {
   3.6123413825954533`*^9, 3.61234139296367*^9}, {3.6123418026804953`*^9, 
   3.612341826333536*^9}, {3.612342120535945*^9, 3.612342150094818*^9}, {
   3.612342272486306*^9, 3.612342396915966*^9}, {3.612342492637732*^9, 
   3.6123424942553587`*^9}, {3.612342868565187*^9, 3.612342868653013*^9}, {
   3.6125601799*^9, 3.612560180793401*^9}, {3.612562145591536*^9, 
   3.6125621494081173`*^9}, {3.612563979893017*^9, 3.612563991147472*^9}, {
   3.6125686571496363`*^9, 3.612568664380651*^9}, {3.6125712654969063`*^9, 
   3.612571277272997*^9}, 3.612738224657303*^9, 3.612738354771682*^9, {
   3.612738494245344*^9, 3.612738494525394*^9}, {3.612818801464451*^9, 
   3.6128188210893087`*^9}, {3.612819765793541*^9, 3.612819772082243*^9}, 
   3.612819860549056*^9, {3.613768227156472*^9, 3.613768254321557*^9}, {
   3.613768614600649*^9, 3.613768625328472*^9}, {3.6138682442736464`*^9, 
   3.6138682447375097`*^9}, {3.6140513626176653`*^9, 3.614051377600778*^9}, 
   3.614052385191429*^9, {3.615152970095726*^9, 3.615152970445788*^9}, 
   3.6151615886239758`*^9, {3.61525698496488*^9, 3.615257003173935*^9}, {
   3.6706396777621937`*^9, 3.6706396848323393`*^9}, {3.670639735225419*^9, 
   3.6706397766169643`*^9}, {3.670640132947348*^9, 3.670640146232839*^9}, {
   3.6706406560891933`*^9, 3.670640657759993*^9}, {3.6708136558904*^9, 
   3.6708136870563602`*^9}, {3.670813985273247*^9, 3.670813985752097*^9}, {
   3.6708141517600527`*^9, 3.6708141713987083`*^9}, {3.670814234799446*^9, 
   3.670814247264278*^9}, {3.670814980326375*^9, 3.6708149816201973`*^9}, {
   3.670815087748901*^9, 3.670815091381983*^9}, {3.670816529785198*^9, 
   3.670816531631761*^9}, {3.6708165902573433`*^9, 3.670816590737482*^9}, {
   3.670922227620151*^9, 3.670922228490231*^9}, {3.670922272971287*^9, 
   3.670922291850895*^9}, {3.6709223466180773`*^9, 3.6709223778573103`*^9}, 
   3.670923103874403*^9, {3.6709231492438602`*^9, 3.6709231547330647`*^9}, {
   3.670923435717519*^9, 3.670923437195842*^9}, 3.6709238486407824`*^9, {
   3.670927190962932*^9, 3.670927212230906*^9}, {3.67356036815742*^9, 
   3.673560395075118*^9}, {3.6735614763289347`*^9, 3.673561482686742*^9}, {
   3.6735616519021187`*^9, 3.6735616532220507`*^9}, {3.67443707319282*^9, 
   3.674437104008519*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"run", " ", "simulations", " ", "with", " ", 
    RowBox[{"automixis", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"meannCA", "=", 
        RowBox[{
        "meannCAValues", "\[LeftDoubleBracket]", "imeannCA", 
         "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"meannAB", "=", 
        RowBox[{
        "meannABValues", "\[LeftDoubleBracket]", "imeannAB", 
         "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"AutomixisMatrix", "=", 
        RowBox[{"N", "[", 
         RowBox[{"getAutomixisMatrixPoisson", "[", 
          RowBox[{"meannCA", ",", "meannAB", ",", "\"\<CentralFusion\>\""}], 
          "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"p", "=", 
        RowBox[{"{", 
         RowBox[{
         "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
           "0", ",", "0", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"g", "=", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"meanw", "=", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"meanw", "<", "wThresh"}], ")"}], " ", "&&", 
          RowBox[{"(", " ", 
           RowBox[{"g", "<", "maxgens"}], ")"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"p", "=", 
           RowBox[{"Recursion", "[", 
            RowBox[{
            "p", ",", "AutomixisMatrix", ",", "mu", ",", "mu", ",", "sA", ",",
              "hA", ",", "sB", ",", "hB"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"g", "=", 
           RowBox[{"g", "+", "1"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"meanw", "=", 
           RowBox[{"getMeanFitness", "[", 
            RowBox[{"p", ",", "sA", ",", "hA", ",", "sB", ",", "hB"}], 
            "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"results", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"results", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<CentralFusion\>\"", ",", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"Log10", "[", "meannCA", "]"}], ",", "0.1"}], "]"}], 
            ",", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"Log10", "[", "meannAB", "]"}], ",", "0.1"}], "]"}], 
            ",", "sA", ",", "hA", ",", "sB", ",", "hB", ",", "mu", ",", "NN", 
            ",", "1", ",", "g"}], "}"}]}], "]"}]}], ";"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"imeannCA", ",", 
        RowBox[{"Length", "[", "meannCAValues", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"imeannAB", ",", 
        RowBox[{"Length", "[", "meannABValues", "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"run", " ", "simulations", " ", "with", " ", 
     RowBox[{"sex", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"meannAB", "=", 
        RowBox[{
        "meannABValues", "\[LeftDoubleBracket]", "imeannAB", 
         "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"SexTensor", "=", 
        RowBox[{"N", "[", 
         RowBox[{"getSexTensor", "[", 
          RowBox[{"meannCA", ",", "meannAB"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"p", "=", 
        RowBox[{"{", 
         RowBox[{
         "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
           "0", ",", "0", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"g", "=", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"meanw", "=", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"meanw", "<", "wThresh"}], ")"}], " ", "&&", 
          RowBox[{"(", " ", 
           RowBox[{"g", "<", "maxgens"}], ")"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"p", "=", 
           RowBox[{"RecursionSexual", "[", 
            RowBox[{
            "p", ",", "SexTensor", ",", "mu", ",", "mu", ",", "sA", ",", "hA",
              ",", "sB", ",", "hB"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"g", "=", 
           RowBox[{"g", "+", "1"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"meanw", "=", 
           RowBox[{"getMeanFitness", "[", 
            RowBox[{"p", ",", "sA", ",", "hA", ",", "sB", ",", "hB"}], 
            "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"results", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"results", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Sex\>\"", ",", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"Log10", "[", "meannCA", "]"}], ",", "0.1"}], "]"}], 
            ",", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"Log10", "[", "meannAB", "]"}], ",", "0.1"}], "]"}], 
            ",", "sA", ",", "hA", ",", "sB", ",", "hB", ",", "mu", ",", "NN", 
            ",", "1", ",", "g"}], "}"}]}], "]"}]}], ";"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"imeannAB", ",", 
        RowBox[{"Length", "[", "meannABValues", "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.612341270490143*^9, 3.612341312440858*^9}, {
   3.612341443691373*^9, 3.6123414791904907`*^9}, {3.612341602027923*^9, 
   3.612341629671208*^9}, {3.6123418236462097`*^9, 3.612341830157957*^9}, {
   3.612341951089752*^9, 3.6123420428526983`*^9}, {3.61234207695899*^9, 
   3.612342107486711*^9}, {3.612342157994946*^9, 3.612342164173675*^9}, {
   3.6123422839400454`*^9, 3.6123422965227013`*^9}, {3.6123424447895927`*^9, 
   3.6123425968041363`*^9}, {3.612342656419503*^9, 3.612342660235717*^9}, {
   3.612342732341763*^9, 3.612342774061243*^9}, {3.612342888488181*^9, 
   3.612342889067196*^9}, 3.61234292681419*^9, {3.612343005070539*^9, 
   3.612343011927772*^9}, {3.612343452151896*^9, 3.6123434585898046`*^9}, {
   3.612344667444006*^9, 3.612344668395142*^9}, {3.612344702446021*^9, 
   3.612344789691738*^9}, {3.612345520922344*^9, 3.6123455559900513`*^9}, {
   3.612559234143409*^9, 3.612559234421427*^9}, {3.61255949164211*^9, 
   3.612559499114627*^9}, {3.612559878986474*^9, 3.6125598877795877`*^9}, {
   3.6125616658275013`*^9, 3.6125617076431437`*^9}, {3.6125621558068523`*^9, 
   3.61256216251558*^9}, {3.6125640038128443`*^9, 3.612564088925879*^9}, {
   3.6125667769945087`*^9, 3.6125667919115477`*^9}, {3.612568528193511*^9, 
   3.6125685642937937`*^9}, 3.612733455178437*^9, {3.6127382499675198`*^9, 
   3.6127382773206882`*^9}, {3.61273831205966*^9, 3.612738373121983*^9}, {
   3.612814999543744*^9, 3.6128150049984713`*^9}, {3.6128197856259403`*^9, 
   3.6128198375377893`*^9}, {3.612823022590782*^9, 3.612823045118256*^9}, {
   3.612823128711104*^9, 3.612823136194489*^9}, {3.6137682475064363`*^9, 
   3.613768248629694*^9}, {3.613868189744665*^9, 3.6138682390142927`*^9}, {
   3.61386863122895*^9, 3.613868631935162*^9}, 3.615152958581355*^9, {
   3.670640154265607*^9, 3.670640168482545*^9}, 3.67064020835712*^9, {
   3.670640329682898*^9, 3.6706404077916107`*^9}, {3.670640484625889*^9, 
   3.6706405729054403`*^9}, {3.670640633675742*^9, 3.670640639136938*^9}, {
   3.670640746273157*^9, 3.670640770168084*^9}, {3.670813338522337*^9, 
   3.6708133789883137`*^9}, {3.6708135458743677`*^9, 3.670813562009759*^9}, {
   3.670813598762533*^9, 3.670813632282239*^9}, {3.670814176904147*^9, 
   3.670814185488801*^9}, {3.670814263002838*^9, 3.6708142723119373`*^9}, {
   3.67081487931046*^9, 3.670814916519958*^9}, {3.670816401435362*^9, 
   3.6708164182105513`*^9}, {3.6708166177617283`*^9, 3.67081663584802*^9}, {
   3.670816742906595*^9, 3.6708167951446753`*^9}, {3.670922243754471*^9, 
   3.6709222613899927`*^9}, {3.670922310161022*^9, 3.670922314413238*^9}, 
   3.6709223907832823`*^9, {3.670922825729659*^9, 3.67092282725382*^9}, {
   3.670923115561274*^9, 3.670923173262361*^9}, {3.670923379155553*^9, 
   3.670923392362068*^9}, {3.670923859125986*^9, 3.67092386863205*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"LogmeannCAValues", "=", 
   RowBox[{"Round", "[", 
    RowBox[{
     RowBox[{"Log10", "[", "meannCAValues", "]"}], ",", "0.1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LogmeannABValues", "=", 
   RowBox[{"Round", "[", 
    RowBox[{
     RowBox[{"Log10", "[", "meannABValues", "]"}], ",", "0.1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanAutomixisGens", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "LogmeannCAValues", "\[LeftDoubleBracket]", "inCA", 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{
         "LogmeannABValues", "\[LeftDoubleBracket]", "inAB", 
          "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Mean", "[", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"results", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "\[LeftDoubleBracket]", 
                RowBox[{"1", ";;", "3"}], "\[RightDoubleBracket]"}], 
               "\[Equal]", 
               RowBox[{"{", 
                RowBox[{"\"\<CentralFusion\>\"", ",", 
                 RowBox[{
                 "LogmeannCAValues", "\[LeftDoubleBracket]", "inCA", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "LogmeannABValues", "\[LeftDoubleBracket]", "inAB", 
                  "\[RightDoubleBracket]"}]}], "}"}]}], "&"}]}], "]"}], 
           "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "11"}], "\[RightDoubleBracket]"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"inCA", ",", "1", ",", 
         RowBox[{"Length", "[", "LogmeannCAValues", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"inAB", ",", "1", ",", 
         RowBox[{"Length", "[", "LogmeannABValues", "]"}]}], "}"}]}], "]"}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanSexGens", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "LogmeannCAValues", "\[LeftDoubleBracket]", "inCA", 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{
         "LogmeannABValues", "\[LeftDoubleBracket]", "inAB", 
          "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Mean", "[", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"results", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "\[LeftDoubleBracket]", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "3"}], "}"}], "\[RightDoubleBracket]"}], 
               "\[Equal]", 
               RowBox[{"{", 
                RowBox[{"\"\<Sex\>\"", ",", 
                 RowBox[{
                 "LogmeannABValues", "\[LeftDoubleBracket]", "inAB", 
                  "\[RightDoubleBracket]"}]}], "}"}]}], "&"}]}], "]"}], 
           "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "11"}], "\[RightDoubleBracket]"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"inCA", ",", "1", ",", 
         RowBox[{"Length", "[", "LogmeannCAValues", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"inAB", ",", "1", ",", 
         RowBox[{"Length", "[", "LogmeannABValues", "]"}]}], "}"}]}], "]"}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Log2meanRelativeGens", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "LogmeannCAValues", "\[LeftDoubleBracket]", "inCA", 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{
         "LogmeannABValues", "\[LeftDoubleBracket]", "inAB", 
          "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"N", "[", 
          RowBox[{"Log2", "[", 
           RowBox[{
            RowBox[{"Mean", "[", 
             RowBox[{
              RowBox[{"Select", "[", 
               RowBox[{"results", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "\[LeftDoubleBracket]", 
                   RowBox[{"1", ";;", "3"}], "\[RightDoubleBracket]"}], 
                  "\[Equal]", 
                  RowBox[{"{", 
                   RowBox[{"\"\<CentralFusion\>\"", ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "LogmeannCAValues", "\[LeftDoubleBracket]", "inCA", 
                    "\[RightDoubleBracket]"}], ",", "0.0000000001"}], "]"}], 
                    ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "LogmeannABValues", "\[LeftDoubleBracket]", "inAB", 
                    "\[RightDoubleBracket]"}], ",", "0.0000000001"}], "]"}]}],
                    "}"}]}], "&"}]}], "]"}], "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", "11"}], "\[RightDoubleBracket]"}], "]"}], 
            "/", 
            RowBox[{"Mean", "[", 
             RowBox[{
              RowBox[{"Select", "[", 
               RowBox[{"results", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "\[LeftDoubleBracket]", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "3"}], "}"}], "\[RightDoubleBracket]"}],
                   "\[Equal]", 
                  RowBox[{"{", 
                   RowBox[{"\"\<Sex\>\"", ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "LogmeannABValues", "\[LeftDoubleBracket]", "inAB", 
                    "\[RightDoubleBracket]"}], ",", "0.0000000001"}], "]"}]}],
                    "}"}]}], "&"}]}], "]"}], "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", "11"}], "\[RightDoubleBracket]"}], "]"}]}], 
           "]"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"inCA", ",", "1", ",", 
         RowBox[{"Length", "[", "LogmeannCAValues", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"inAB", ",", "1", ",", 
         RowBox[{"Length", "[", "LogmeannABValues", "]"}]}], "}"}]}], "]"}], 
     ",", "1"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.670814005664603*^9, {3.670922494557513*^9, 3.6709225474724607`*^9}, {
   3.6709225820499573`*^9, 3.6709226024571*^9}, {3.670922632723387*^9, 
   3.6709226663040237`*^9}, {3.670922720335682*^9, 3.670922738688917*^9}, {
   3.670922769415168*^9, 3.670923019328763*^9}, {3.67092374185922*^9, 
   3.6709237424665747`*^9}, {3.670925053026424*^9, 3.670925053889236*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"max", "=", "3.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"min", "=", 
   RowBox[{"-", "3.5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nTickMarks", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5"}], ",", 
       "\"\<\!\(\*SuperscriptBox[\(10\), \(-5\)]\)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4"}], ",", 
       "\"\<\!\(\*SuperscriptBox[\(10\), \(-4\)]\)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3"}], ",", 
       "\"\<\!\(\*SuperscriptBox[\(10\), \(-3\)]\)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "\"\<0.01\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "\"\<0.1\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "\"\<1\>\""}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RedBlueColourFunction", "[", "x_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"x", ">", "0"}], ",", 
     RowBox[{"Hue", "[", 
      RowBox[{"0", ",", 
       RowBox[{"x", "/", "max"}], ",", "1"}], "]"}], ",", 
     RowBox[{"Hue", "[", 
      RowBox[{"0.7", ",", 
       RowBox[{"x", "/", "min"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot", "=", 
   RowBox[{"ListDensityPlot", "[", 
    RowBox[{"Log2meanRelativeGens", ",", " ", 
     RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"min", ",", "max"}], "}"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"RedBlueColourFunction", "[", "#", "]"}], "&"}], ")"}]}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "18"}], "]"}]}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"nTickMarks", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"nTickMarks", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\!\(\*OverscriptBox[\(m\), \(_\)]\)\>\"", ",", "26"}],
            "]"}], ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*OverscriptBox[\(n\), \(_\)]\)\>\"", ",", "26", ",", 
            "Black"}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Recessive, no drift\>\"", ",", "26", ",", "Black"}], 
           "]"}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"legend", "=", 
   RowBox[{"ContourPlot", "[", 
    RowBox[{"y", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "min", ",", "max"}], "}"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"None", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"N", "[", 
               RowBox[{"2", "^", "i"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"RedBlueColourFunction", "[", "#", "]"}], "&"}], ")"}]}], ",", 
     RowBox[{"Contours", "\[Rule]", "200"}], ",", 
     RowBox[{"ContourStyle", "\[Rule]", "None"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "15"}], ",", 
     RowBox[{"Frame", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"True", ",", "True"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"True", ",", "True"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\< \>\"", ",", "30"}], "]"}], ",", "None"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"75", ",", "300"}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "18"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"plot", ",", "legend"}], "}"}], "}"}], ",", 
   RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.612562402232574*^9, 3.612562404017359*^9}, {
   3.612562444478538*^9, 3.612562509022326*^9}, 3.612562796441002*^9, 
   3.612562859811529*^9, {3.612575309222662*^9, 3.612575356548065*^9}, {
   3.6125755028281937`*^9, 3.6125755070533953`*^9}, {3.612575550958946*^9, 
   3.612575579770131*^9}, {3.612575648049129*^9, 3.612575650328463*^9}, 
   3.612575814580227*^9, {3.6125759095450897`*^9, 3.61257591375079*^9}, {
   3.6125759577881002`*^9, 3.612576070117469*^9}, {3.6125761106254997`*^9, 
   3.612576128068851*^9}, {3.612576187803419*^9, 3.61257620606968*^9}, {
   3.612576272730712*^9, 3.61257627868919*^9}, {3.6125763836613483`*^9, 
   3.6125763873903713`*^9}, {3.670924017236309*^9, 3.6709240756213284`*^9}, 
   3.670924106163354*^9, {3.670924446792903*^9, 3.670924545418374*^9}, {
   3.670924586676825*^9, 3.670924625989826*^9}, {3.67092470274618*^9, 
   3.670924740679989*^9}, {3.670924778176785*^9, 3.670924851773326*^9}, {
   3.670924909678256*^9, 3.670924912516374*^9}, {3.670924984882382*^9, 
   3.670925001371386*^9}, {3.673560318430377*^9, 3.673560319709251*^9}, {
   3.6735617078887377`*^9, 3.673561717343519*^9}, {3.674437144503646*^9, 
   3.674437162972398*^9}, {3.674437218674387*^9, 3.674437218841378*^9}, {
   3.68562749177633*^9, 3.6856274971699753`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Speed of adapatation at two linked loci: h=0.5", "Subsection",
 CellChangeTimes->{{3.612303620319519*^9, 3.612303643664537*^9}, {
   3.612317971717846*^9, 3.612317974472507*^9}, {3.670639709088376*^9, 
   3.670639712431254*^9}, {3.6744370566560802`*^9, 3.674437064351141*^9}, 
   3.674437237199564*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mu", "=", "0.00001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxgens", "=", "1000000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meannCAValues", "=", 
   RowBox[{"10", "^", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "0", ",", "0.2"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meannABValues", "=", 
   RowBox[{"10", "^", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "0", ",", "0.2"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sA", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sB", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hA", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hB", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wThresh", "=", 
   RowBox[{"1", "+", 
    RowBox[{"0.99", 
     RowBox[{"(", 
      RowBox[{"sA", "+", "sB", "+", 
       RowBox[{"sA", " ", "sB"}]}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NN", "=", "Infinity"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"results", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
     "\"\<RepMode\>\"", ",", "\"\<Log(nCA)\>\"", ",", "\"\<Log(nAB)\>\"", 
      ",", "\"\<sA\>\"", ",", "\"\<hA\>\"", ",", "\"\<sB\>\"", ",", 
      "\"\<hB\>\"", ",", "\"\<mu\>\"", ",", "\"\<N\>\"", ",", "\"\<Rep\>\"", 
      ",", "\"\<gens\>\""}], "}"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.612341318079071*^9, 3.612341331603848*^9}, {
   3.6123413825954533`*^9, 3.61234139296367*^9}, {3.6123418026804953`*^9, 
   3.612341826333536*^9}, {3.612342120535945*^9, 3.612342150094818*^9}, {
   3.612342272486306*^9, 3.612342396915966*^9}, {3.612342492637732*^9, 
   3.6123424942553587`*^9}, {3.612342868565187*^9, 3.612342868653013*^9}, {
   3.6125601799*^9, 3.612560180793401*^9}, {3.612562145591536*^9, 
   3.6125621494081173`*^9}, {3.612563979893017*^9, 3.612563991147472*^9}, {
   3.6125686571496363`*^9, 3.612568664380651*^9}, {3.6125712654969063`*^9, 
   3.612571277272997*^9}, 3.612738224657303*^9, 3.612738354771682*^9, {
   3.612738494245344*^9, 3.612738494525394*^9}, {3.612818801464451*^9, 
   3.6128188210893087`*^9}, {3.612819765793541*^9, 3.612819772082243*^9}, 
   3.612819860549056*^9, {3.613768227156472*^9, 3.613768254321557*^9}, {
   3.613768614600649*^9, 3.613768625328472*^9}, {3.6138682442736464`*^9, 
   3.6138682447375097`*^9}, {3.6140513626176653`*^9, 3.614051377600778*^9}, 
   3.614052385191429*^9, {3.615152970095726*^9, 3.615152970445788*^9}, 
   3.6151615886239758`*^9, {3.61525698496488*^9, 3.615257003173935*^9}, {
   3.6706396777621937`*^9, 3.6706396848323393`*^9}, {3.670639735225419*^9, 
   3.6706397766169643`*^9}, {3.670640132947348*^9, 3.670640146232839*^9}, {
   3.6706406560891933`*^9, 3.670640657759993*^9}, {3.6708136558904*^9, 
   3.6708136870563602`*^9}, {3.670813985273247*^9, 3.670813985752097*^9}, {
   3.6708141517600527`*^9, 3.6708141713987083`*^9}, {3.670814234799446*^9, 
   3.670814247264278*^9}, {3.670814980326375*^9, 3.6708149816201973`*^9}, {
   3.670815087748901*^9, 3.670815091381983*^9}, {3.670816529785198*^9, 
   3.670816531631761*^9}, {3.6708165902573433`*^9, 3.670816590737482*^9}, {
   3.670922227620151*^9, 3.670922228490231*^9}, {3.670922272971287*^9, 
   3.670922291850895*^9}, {3.6709223466180773`*^9, 3.6709223778573103`*^9}, 
   3.670923103874403*^9, {3.6709231492438602`*^9, 3.6709231547330647`*^9}, {
   3.670923435717519*^9, 3.670923437195842*^9}, 3.6709238486407824`*^9, {
   3.670927190962932*^9, 3.670927212230906*^9}, {3.67356036815742*^9, 
   3.673560395075118*^9}, {3.6735614763289347`*^9, 3.673561482686742*^9}, {
   3.6735616519021187`*^9, 3.6735616532220507`*^9}, {3.67443707319282*^9, 
   3.674437104008519*^9}, {3.67443724194409*^9, 3.6744372434474163`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"run", " ", "simulations", " ", "with", " ", 
    RowBox[{"automixis", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"meannCA", "=", 
        RowBox[{
        "meannCAValues", "\[LeftDoubleBracket]", "imeannCA", 
         "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"meannAB", "=", 
        RowBox[{
        "meannABValues", "\[LeftDoubleBracket]", "imeannAB", 
         "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"AutomixisMatrix", "=", 
        RowBox[{"N", "[", 
         RowBox[{"getAutomixisMatrixPoisson", "[", 
          RowBox[{"meannCA", ",", "meannAB", ",", "\"\<CentralFusion\>\""}], 
          "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"p", "=", 
        RowBox[{"{", 
         RowBox[{
         "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
           "0", ",", "0", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"g", "=", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"meanw", "=", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"meanw", "<", "wThresh"}], ")"}], " ", "&&", 
          RowBox[{"(", " ", 
           RowBox[{"g", "<", "maxgens"}], ")"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"p", "=", 
           RowBox[{"Recursion", "[", 
            RowBox[{
            "p", ",", "AutomixisMatrix", ",", "mu", ",", "mu", ",", "sA", ",",
              "hA", ",", "sB", ",", "hB"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"g", "=", 
           RowBox[{"g", "+", "1"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"meanw", "=", 
           RowBox[{"getMeanFitness", "[", 
            RowBox[{"p", ",", "sA", ",", "hA", ",", "sB", ",", "hB"}], 
            "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"results", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"results", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<CentralFusion\>\"", ",", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"Log10", "[", "meannCA", "]"}], ",", "0.1"}], "]"}], 
            ",", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"Log10", "[", "meannAB", "]"}], ",", "0.1"}], "]"}], 
            ",", "sA", ",", "hA", ",", "sB", ",", "hB", ",", "mu", ",", "NN", 
            ",", "1", ",", "g"}], "}"}]}], "]"}]}], ";"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"imeannCA", ",", 
        RowBox[{"Length", "[", "meannCAValues", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"imeannAB", ",", 
        RowBox[{"Length", "[", "meannABValues", "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"run", " ", "simulations", " ", "with", " ", 
     RowBox[{"sex", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"meannAB", "=", 
        RowBox[{
        "meannABValues", "\[LeftDoubleBracket]", "imeannAB", 
         "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"SexTensor", "=", 
        RowBox[{"N", "[", 
         RowBox[{"getSexTensor", "[", 
          RowBox[{"meannCA", ",", "meannAB"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"p", "=", 
        RowBox[{"{", 
         RowBox[{
         "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
           "0", ",", "0", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"g", "=", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"meanw", "=", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"meanw", "<", "wThresh"}], ")"}], " ", "&&", 
          RowBox[{"(", " ", 
           RowBox[{"g", "<", "maxgens"}], ")"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"p", "=", 
           RowBox[{"RecursionSexual", "[", 
            RowBox[{
            "p", ",", "SexTensor", ",", "mu", ",", "mu", ",", "sA", ",", "hA",
              ",", "sB", ",", "hB"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"g", "=", 
           RowBox[{"g", "+", "1"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"meanw", "=", 
           RowBox[{"getMeanFitness", "[", 
            RowBox[{"p", ",", "sA", ",", "hA", ",", "sB", ",", "hB"}], 
            "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"results", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"results", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Sex\>\"", ",", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"Log10", "[", "meannCA", "]"}], ",", "0.1"}], "]"}], 
            ",", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"Log10", "[", "meannAB", "]"}], ",", "0.1"}], "]"}], 
            ",", "sA", ",", "hA", ",", "sB", ",", "hB", ",", "mu", ",", "NN", 
            ",", "1", ",", "g"}], "}"}]}], "]"}]}], ";"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"imeannAB", ",", 
        RowBox[{"Length", "[", "meannABValues", "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.612341270490143*^9, 3.612341312440858*^9}, {
   3.612341443691373*^9, 3.6123414791904907`*^9}, {3.612341602027923*^9, 
   3.612341629671208*^9}, {3.6123418236462097`*^9, 3.612341830157957*^9}, {
   3.612341951089752*^9, 3.6123420428526983`*^9}, {3.61234207695899*^9, 
   3.612342107486711*^9}, {3.612342157994946*^9, 3.612342164173675*^9}, {
   3.6123422839400454`*^9, 3.6123422965227013`*^9}, {3.6123424447895927`*^9, 
   3.6123425968041363`*^9}, {3.612342656419503*^9, 3.612342660235717*^9}, {
   3.612342732341763*^9, 3.612342774061243*^9}, {3.612342888488181*^9, 
   3.612342889067196*^9}, 3.61234292681419*^9, {3.612343005070539*^9, 
   3.612343011927772*^9}, {3.612343452151896*^9, 3.6123434585898046`*^9}, {
   3.612344667444006*^9, 3.612344668395142*^9}, {3.612344702446021*^9, 
   3.612344789691738*^9}, {3.612345520922344*^9, 3.6123455559900513`*^9}, {
   3.612559234143409*^9, 3.612559234421427*^9}, {3.61255949164211*^9, 
   3.612559499114627*^9}, {3.612559878986474*^9, 3.6125598877795877`*^9}, {
   3.6125616658275013`*^9, 3.6125617076431437`*^9}, {3.6125621558068523`*^9, 
   3.61256216251558*^9}, {3.6125640038128443`*^9, 3.612564088925879*^9}, {
   3.6125667769945087`*^9, 3.6125667919115477`*^9}, {3.612568528193511*^9, 
   3.6125685642937937`*^9}, 3.612733455178437*^9, {3.6127382499675198`*^9, 
   3.6127382773206882`*^9}, {3.61273831205966*^9, 3.612738373121983*^9}, {
   3.612814999543744*^9, 3.6128150049984713`*^9}, {3.6128197856259403`*^9, 
   3.6128198375377893`*^9}, {3.612823022590782*^9, 3.612823045118256*^9}, {
   3.612823128711104*^9, 3.612823136194489*^9}, {3.6137682475064363`*^9, 
   3.613768248629694*^9}, {3.613868189744665*^9, 3.6138682390142927`*^9}, {
   3.61386863122895*^9, 3.613868631935162*^9}, 3.615152958581355*^9, {
   3.670640154265607*^9, 3.670640168482545*^9}, 3.67064020835712*^9, {
   3.670640329682898*^9, 3.6706404077916107`*^9}, {3.670640484625889*^9, 
   3.6706405729054403`*^9}, {3.670640633675742*^9, 3.670640639136938*^9}, {
   3.670640746273157*^9, 3.670640770168084*^9}, {3.670813338522337*^9, 
   3.6708133789883137`*^9}, {3.6708135458743677`*^9, 3.670813562009759*^9}, {
   3.670813598762533*^9, 3.670813632282239*^9}, {3.670814176904147*^9, 
   3.670814185488801*^9}, {3.670814263002838*^9, 3.6708142723119373`*^9}, {
   3.67081487931046*^9, 3.670814916519958*^9}, {3.670816401435362*^9, 
   3.6708164182105513`*^9}, {3.6708166177617283`*^9, 3.67081663584802*^9}, {
   3.670816742906595*^9, 3.6708167951446753`*^9}, {3.670922243754471*^9, 
   3.6709222613899927`*^9}, {3.670922310161022*^9, 3.670922314413238*^9}, 
   3.6709223907832823`*^9, {3.670922825729659*^9, 3.67092282725382*^9}, {
   3.670923115561274*^9, 3.670923173262361*^9}, {3.670923379155553*^9, 
   3.670923392362068*^9}, {3.670923859125986*^9, 3.67092386863205*^9}}],

Cell[BoxData[
 RowBox[{"TableForm", "[", "results", "]"}]], "Input",
 CellChangeTimes->{{3.6123433814869957`*^9, 3.612343382384193*^9}, {
  3.612343784456218*^9, 3.612343791583688*^9}, {3.612343835722905*^9, 
  3.612343836134634*^9}, {3.615159117116733*^9, 3.6151591401789427`*^9}, {
  3.670923487241726*^9, 3.67092348856805*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"LogmeannCAValues", "=", 
   RowBox[{"Round", "[", 
    RowBox[{
     RowBox[{"Log10", "[", "meannCAValues", "]"}], ",", "0.1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LogmeannABValues", "=", 
   RowBox[{"Round", "[", 
    RowBox[{
     RowBox[{"Log10", "[", "meannABValues", "]"}], ",", "0.1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanAutomixisGens", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "LogmeannCAValues", "\[LeftDoubleBracket]", "inCA", 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{
         "LogmeannABValues", "\[LeftDoubleBracket]", "inAB", 
          "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Mean", "[", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"results", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "\[LeftDoubleBracket]", 
                RowBox[{"1", ";;", "3"}], "\[RightDoubleBracket]"}], 
               "\[Equal]", 
               RowBox[{"{", 
                RowBox[{"\"\<CentralFusion\>\"", ",", 
                 RowBox[{
                 "LogmeannCAValues", "\[LeftDoubleBracket]", "inCA", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "LogmeannABValues", "\[LeftDoubleBracket]", "inAB", 
                  "\[RightDoubleBracket]"}]}], "}"}]}], "&"}]}], "]"}], 
           "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "11"}], "\[RightDoubleBracket]"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"inCA", ",", "1", ",", 
         RowBox[{"Length", "[", "LogmeannCAValues", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"inAB", ",", "1", ",", 
         RowBox[{"Length", "[", "LogmeannABValues", "]"}]}], "}"}]}], "]"}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanSexGens", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "LogmeannCAValues", "\[LeftDoubleBracket]", "inCA", 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{
         "LogmeannABValues", "\[LeftDoubleBracket]", "inAB", 
          "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Mean", "[", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"results", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "\[LeftDoubleBracket]", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "3"}], "}"}], "\[RightDoubleBracket]"}], 
               "\[Equal]", 
               RowBox[{"{", 
                RowBox[{"\"\<Sex\>\"", ",", 
                 RowBox[{
                 "LogmeannABValues", "\[LeftDoubleBracket]", "inAB", 
                  "\[RightDoubleBracket]"}]}], "}"}]}], "&"}]}], "]"}], 
           "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "11"}], "\[RightDoubleBracket]"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"inCA", ",", "1", ",", 
         RowBox[{"Length", "[", "LogmeannCAValues", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"inAB", ",", "1", ",", 
         RowBox[{"Length", "[", "LogmeannABValues", "]"}]}], "}"}]}], "]"}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Log2meanRelativeGens", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "LogmeannCAValues", "\[LeftDoubleBracket]", "inCA", 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{
         "LogmeannABValues", "\[LeftDoubleBracket]", "inAB", 
          "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"N", "[", 
          RowBox[{"Log2", "[", 
           RowBox[{
            RowBox[{"Mean", "[", 
             RowBox[{
              RowBox[{"Select", "[", 
               RowBox[{"results", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "\[LeftDoubleBracket]", 
                   RowBox[{"1", ";;", "3"}], "\[RightDoubleBracket]"}], 
                  "\[Equal]", 
                  RowBox[{"{", 
                   RowBox[{"\"\<CentralFusion\>\"", ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "LogmeannCAValues", "\[LeftDoubleBracket]", "inCA", 
                    "\[RightDoubleBracket]"}], ",", "0.0000000001"}], "]"}], 
                    ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "LogmeannABValues", "\[LeftDoubleBracket]", "inAB", 
                    "\[RightDoubleBracket]"}], ",", "0.0000000001"}], "]"}]}],
                    "}"}]}], "&"}]}], "]"}], "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", "11"}], "\[RightDoubleBracket]"}], "]"}], 
            "/", 
            RowBox[{"Mean", "[", 
             RowBox[{
              RowBox[{"Select", "[", 
               RowBox[{"results", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "\[LeftDoubleBracket]", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "3"}], "}"}], "\[RightDoubleBracket]"}],
                   "\[Equal]", 
                  RowBox[{"{", 
                   RowBox[{"\"\<Sex\>\"", ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "LogmeannABValues", "\[LeftDoubleBracket]", "inAB", 
                    "\[RightDoubleBracket]"}], ",", "0.0000000001"}], "]"}]}],
                    "}"}]}], "&"}]}], "]"}], "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", "11"}], "\[RightDoubleBracket]"}], "]"}]}], 
           "]"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"inCA", ",", "1", ",", 
         RowBox[{"Length", "[", "LogmeannCAValues", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"inAB", ",", "1", ",", 
         RowBox[{"Length", "[", "LogmeannABValues", "]"}]}], "}"}]}], "]"}], 
     ",", "1"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.670814005664603*^9, {3.670922494557513*^9, 3.6709225474724607`*^9}, {
   3.6709225820499573`*^9, 3.6709226024571*^9}, {3.670922632723387*^9, 
   3.6709226663040237`*^9}, {3.670922720335682*^9, 3.670922738688917*^9}, {
   3.670922769415168*^9, 3.670923019328763*^9}, {3.67092374185922*^9, 
   3.6709237424665747`*^9}, {3.670925053026424*^9, 3.670925053889236*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Max", "[", 
  RowBox[{"Log2meanRelativeGens", "\[LeftDoubleBracket]", 
   RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Min", "[", 
  RowBox[{"Log2meanRelativeGens", "\[LeftDoubleBracket]", 
   RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.670923731615055*^9, 3.670923732260909*^9}, {
  3.670923929220772*^9, 3.6709239319075603`*^9}, {3.670924163648964*^9, 
  3.670924190024577*^9}, {3.67092436503856*^9, 3.670924383735881*^9}, {
  3.6732362756612253`*^9, 3.673236276268086*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.06960546748586682`"}]], "Output",
 CellChangeTimes->{
  3.6709244341205997`*^9, 3.6709272226716003`*^9, 3.673236340301949*^9, 
   3.673560296618956*^9, 3.673561329858569*^9, {3.674437162133906*^9, 
   3.674437187506651*^9}, 3.674437281996068*^9}],

Cell[BoxData[
 RowBox[{"-", "0.8990710911492193`"}]], "Output",
 CellChangeTimes->{
  3.6709244341205997`*^9, 3.6709272226716003`*^9, 3.673236340301949*^9, 
   3.673560296618956*^9, 3.673561329858569*^9, {3.674437162133906*^9, 
   3.674437187506651*^9}, 3.674437282007236*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"max", "=", "3.5"}], 
  RowBox[{"(*", 
   RowBox[{"Log2", "[", "16", "]"}], "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"min", "=", 
   RowBox[{"-", "3.5"}]}], 
  RowBox[{"(*", 
   RowBox[{"Log2", "[", 
    RowBox[{"1", "/", "16"}], "]"}], "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nTickMarks", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5"}], ",", 
       "\"\<\!\(\*SuperscriptBox[\(10\), \(-5\)]\)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4"}], ",", 
       "\"\<\!\(\*SuperscriptBox[\(10\), \(-4\)]\)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3"}], ",", 
       "\"\<\!\(\*SuperscriptBox[\(10\), \(-3\)]\)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "\"\<0.01\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "\"\<0.1\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "\"\<1\>\""}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RedBlueColourFunction", "[", "x_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"x", ">", "0"}], ",", 
     RowBox[{"Hue", "[", 
      RowBox[{"0", ",", 
       RowBox[{"x", "/", "max"}], ",", "1"}], "]"}], ",", 
     RowBox[{"Hue", "[", 
      RowBox[{"0.7", ",", 
       RowBox[{"x", "/", "min"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot", "=", 
   RowBox[{"ListDensityPlot", "[", 
    RowBox[{"Log2meanRelativeGens", ",", " ", 
     RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"min", ",", "max"}], "}"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"RedBlueColourFunction", "[", "#", "]"}], "&"}], ")"}]}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "18"}], "]"}]}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"nTickMarks", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"nTickMarks", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\!\(\*OverscriptBox[\(m\), \(_\)]\)\>\"", ",", "26"}],
            "]"}], ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*OverscriptBox[\(n\), \(_\)]\)\>\"", ",", "26", ",", 
            "Black"}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Additive, no drift\>\"", ",", "26", ",", "Black"}], 
           "]"}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"legend", "=", 
   RowBox[{"ContourPlot", "[", 
    RowBox[{"y", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "min", ",", "max"}], "}"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"None", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"N", "[", 
               RowBox[{"2", "^", "i"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"RedBlueColourFunction", "[", "#", "]"}], "&"}], ")"}]}], ",", 
     RowBox[{"Contours", "\[Rule]", "200"}], ",", 
     RowBox[{"ContourStyle", "\[Rule]", "None"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "15"}], ",", 
     RowBox[{"Frame", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"True", ",", "True"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"True", ",", "True"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\< \>\"", ",", "30"}], "]"}], ",", "None"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"75", ",", "300"}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "18"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"plot", ",", "legend"}], "}"}], "}"}], ",", 
   RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.612562402232574*^9, 3.612562404017359*^9}, {
   3.612562444478538*^9, 3.612562509022326*^9}, 3.612562796441002*^9, 
   3.612562859811529*^9, {3.612575309222662*^9, 3.612575356548065*^9}, {
   3.6125755028281937`*^9, 3.6125755070533953`*^9}, {3.612575550958946*^9, 
   3.612575579770131*^9}, {3.612575648049129*^9, 3.612575650328463*^9}, 
   3.612575814580227*^9, {3.6125759095450897`*^9, 3.61257591375079*^9}, {
   3.6125759577881002`*^9, 3.612576070117469*^9}, {3.6125761106254997`*^9, 
   3.612576128068851*^9}, {3.612576187803419*^9, 3.61257620606968*^9}, {
   3.612576272730712*^9, 3.61257627868919*^9}, {3.6125763836613483`*^9, 
   3.6125763873903713`*^9}, {3.670924017236309*^9, 3.6709240756213284`*^9}, 
   3.670924106163354*^9, {3.670924446792903*^9, 3.670924545418374*^9}, {
   3.670924586676825*^9, 3.670924625989826*^9}, {3.67092470274618*^9, 
   3.670924740679989*^9}, {3.670924778176785*^9, 3.670924851773326*^9}, {
   3.670924909678256*^9, 3.670924912516374*^9}, {3.670924984882382*^9, 
   3.670925001371386*^9}, {3.673560318430377*^9, 3.673560319709251*^9}, {
   3.6735617078887377`*^9, 3.673561717343519*^9}, {3.674437144503646*^9, 
   3.674437162972398*^9}, {3.674437218674387*^9, 3.674437218841378*^9}, {
   3.674437273449628*^9, 3.674437274408231*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Speed of adapatation at two linked loci: h=0.99", "Subsection",
 CellChangeTimes->{{3.612303620319519*^9, 3.612303643664537*^9}, {
   3.612317971717846*^9, 3.612317974472507*^9}, {3.670639709088376*^9, 
   3.670639712431254*^9}, {3.6744370566560802`*^9, 3.674437064351141*^9}, 
   3.674437237199564*^9, {3.674437322951416*^9, 3.674437332590371*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mu", "=", "0.00001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxgens", "=", "1000000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meannCAValues", "=", 
   RowBox[{"10", "^", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "0", ",", "0.2"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meannABValues", "=", 
   RowBox[{"10", "^", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "0", ",", "0.2"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sA", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sB", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hA", "=", "0.99"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hB", "=", "0.99"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wThresh", "=", 
   RowBox[{"1", "+", 
    RowBox[{"0.99", 
     RowBox[{"(", 
      RowBox[{"sA", "+", "sB", "+", 
       RowBox[{"sA", " ", "sB"}]}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NN", "=", "Infinity"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"results", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
     "\"\<RepMode\>\"", ",", "\"\<Log(nCA)\>\"", ",", "\"\<Log(nAB)\>\"", 
      ",", "\"\<sA\>\"", ",", "\"\<hA\>\"", ",", "\"\<sB\>\"", ",", 
      "\"\<hB\>\"", ",", "\"\<mu\>\"", ",", "\"\<N\>\"", ",", "\"\<Rep\>\"", 
      ",", "\"\<gens\>\""}], "}"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.612341318079071*^9, 3.612341331603848*^9}, {
   3.6123413825954533`*^9, 3.61234139296367*^9}, {3.6123418026804953`*^9, 
   3.612341826333536*^9}, {3.612342120535945*^9, 3.612342150094818*^9}, {
   3.612342272486306*^9, 3.612342396915966*^9}, {3.612342492637732*^9, 
   3.6123424942553587`*^9}, {3.612342868565187*^9, 3.612342868653013*^9}, {
   3.6125601799*^9, 3.612560180793401*^9}, {3.612562145591536*^9, 
   3.6125621494081173`*^9}, {3.612563979893017*^9, 3.612563991147472*^9}, {
   3.6125686571496363`*^9, 3.612568664380651*^9}, {3.6125712654969063`*^9, 
   3.612571277272997*^9}, 3.612738224657303*^9, 3.612738354771682*^9, {
   3.612738494245344*^9, 3.612738494525394*^9}, {3.612818801464451*^9, 
   3.6128188210893087`*^9}, {3.612819765793541*^9, 3.612819772082243*^9}, 
   3.612819860549056*^9, {3.613768227156472*^9, 3.613768254321557*^9}, {
   3.613768614600649*^9, 3.613768625328472*^9}, {3.6138682442736464`*^9, 
   3.6138682447375097`*^9}, {3.6140513626176653`*^9, 3.614051377600778*^9}, 
   3.614052385191429*^9, {3.615152970095726*^9, 3.615152970445788*^9}, 
   3.6151615886239758`*^9, {3.61525698496488*^9, 3.615257003173935*^9}, {
   3.6706396777621937`*^9, 3.6706396848323393`*^9}, {3.670639735225419*^9, 
   3.6706397766169643`*^9}, {3.670640132947348*^9, 3.670640146232839*^9}, {
   3.6706406560891933`*^9, 3.670640657759993*^9}, {3.6708136558904*^9, 
   3.6708136870563602`*^9}, {3.670813985273247*^9, 3.670813985752097*^9}, {
   3.6708141517600527`*^9, 3.6708141713987083`*^9}, {3.670814234799446*^9, 
   3.670814247264278*^9}, {3.670814980326375*^9, 3.6708149816201973`*^9}, {
   3.670815087748901*^9, 3.670815091381983*^9}, {3.670816529785198*^9, 
   3.670816531631761*^9}, {3.6708165902573433`*^9, 3.670816590737482*^9}, {
   3.670922227620151*^9, 3.670922228490231*^9}, {3.670922272971287*^9, 
   3.670922291850895*^9}, {3.6709223466180773`*^9, 3.6709223778573103`*^9}, 
   3.670923103874403*^9, {3.6709231492438602`*^9, 3.6709231547330647`*^9}, {
   3.670923435717519*^9, 3.670923437195842*^9}, 3.6709238486407824`*^9, {
   3.670927190962932*^9, 3.670927212230906*^9}, {3.67356036815742*^9, 
   3.673560395075118*^9}, {3.6735614763289347`*^9, 3.673561482686742*^9}, {
   3.6735616519021187`*^9, 3.6735616532220507`*^9}, {3.67443707319282*^9, 
   3.674437104008519*^9}, {3.67443724194409*^9, 3.6744372434474163`*^9}, {
   3.674437328087957*^9, 3.674437329743445*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"run", " ", "simulations", " ", "with", " ", 
    RowBox[{"automixis", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"meannCA", "=", 
        RowBox[{
        "meannCAValues", "\[LeftDoubleBracket]", "imeannCA", 
         "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"meannAB", "=", 
        RowBox[{
        "meannABValues", "\[LeftDoubleBracket]", "imeannAB", 
         "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"AutomixisMatrix", "=", 
        RowBox[{"N", "[", 
         RowBox[{"getAutomixisMatrixPoisson", "[", 
          RowBox[{"meannCA", ",", "meannAB", ",", "\"\<CentralFusion\>\""}], 
          "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"p", "=", 
        RowBox[{"{", 
         RowBox[{
         "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
           "0", ",", "0", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"g", "=", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"meanw", "=", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"meanw", "<", "wThresh"}], ")"}], " ", "&&", 
          RowBox[{"(", " ", 
           RowBox[{"g", "<", "maxgens"}], ")"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"p", "=", 
           RowBox[{"Recursion", "[", 
            RowBox[{
            "p", ",", "AutomixisMatrix", ",", "mu", ",", "mu", ",", "sA", ",",
              "hA", ",", "sB", ",", "hB"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"g", "=", 
           RowBox[{"g", "+", "1"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"meanw", "=", 
           RowBox[{"getMeanFitness", "[", 
            RowBox[{"p", ",", "sA", ",", "hA", ",", "sB", ",", "hB"}], 
            "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"results", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"results", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<CentralFusion\>\"", ",", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"Log10", "[", "meannCA", "]"}], ",", "0.1"}], "]"}], 
            ",", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"Log10", "[", "meannAB", "]"}], ",", "0.1"}], "]"}], 
            ",", "sA", ",", "hA", ",", "sB", ",", "hB", ",", "mu", ",", "NN", 
            ",", "1", ",", "g"}], "}"}]}], "]"}]}], ";"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"imeannCA", ",", 
        RowBox[{"Length", "[", "meannCAValues", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"imeannAB", ",", 
        RowBox[{"Length", "[", "meannABValues", "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"run", " ", "simulations", " ", "with", " ", 
     RowBox[{"sex", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"meannAB", "=", 
        RowBox[{
        "meannABValues", "\[LeftDoubleBracket]", "imeannAB", 
         "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"SexTensor", "=", 
        RowBox[{"N", "[", 
         RowBox[{"getSexTensor", "[", 
          RowBox[{"meannCA", ",", "meannAB"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"p", "=", 
        RowBox[{"{", 
         RowBox[{
         "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
           "0", ",", "0", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"g", "=", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"meanw", "=", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"meanw", "<", "wThresh"}], ")"}], " ", "&&", 
          RowBox[{"(", " ", 
           RowBox[{"g", "<", "maxgens"}], ")"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"p", "=", 
           RowBox[{"RecursionSexual", "[", 
            RowBox[{
            "p", ",", "SexTensor", ",", "mu", ",", "mu", ",", "sA", ",", "hA",
              ",", "sB", ",", "hB"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"g", "=", 
           RowBox[{"g", "+", "1"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"meanw", "=", 
           RowBox[{"getMeanFitness", "[", 
            RowBox[{"p", ",", "sA", ",", "hA", ",", "sB", ",", "hB"}], 
            "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"results", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"results", ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Sex\>\"", ",", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"Log10", "[", "meannCA", "]"}], ",", "0.1"}], "]"}], 
            ",", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"Log10", "[", "meannAB", "]"}], ",", "0.1"}], "]"}], 
            ",", "sA", ",", "hA", ",", "sB", ",", "hB", ",", "mu", ",", "NN", 
            ",", "1", ",", "g"}], "}"}]}], "]"}]}], ";"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"imeannAB", ",", 
        RowBox[{"Length", "[", "meannABValues", "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.612341270490143*^9, 3.612341312440858*^9}, {
   3.612341443691373*^9, 3.6123414791904907`*^9}, {3.612341602027923*^9, 
   3.612341629671208*^9}, {3.6123418236462097`*^9, 3.612341830157957*^9}, {
   3.612341951089752*^9, 3.6123420428526983`*^9}, {3.61234207695899*^9, 
   3.612342107486711*^9}, {3.612342157994946*^9, 3.612342164173675*^9}, {
   3.6123422839400454`*^9, 3.6123422965227013`*^9}, {3.6123424447895927`*^9, 
   3.6123425968041363`*^9}, {3.612342656419503*^9, 3.612342660235717*^9}, {
   3.612342732341763*^9, 3.612342774061243*^9}, {3.612342888488181*^9, 
   3.612342889067196*^9}, 3.61234292681419*^9, {3.612343005070539*^9, 
   3.612343011927772*^9}, {3.612343452151896*^9, 3.6123434585898046`*^9}, {
   3.612344667444006*^9, 3.612344668395142*^9}, {3.612344702446021*^9, 
   3.612344789691738*^9}, {3.612345520922344*^9, 3.6123455559900513`*^9}, {
   3.612559234143409*^9, 3.612559234421427*^9}, {3.61255949164211*^9, 
   3.612559499114627*^9}, {3.612559878986474*^9, 3.6125598877795877`*^9}, {
   3.6125616658275013`*^9, 3.6125617076431437`*^9}, {3.6125621558068523`*^9, 
   3.61256216251558*^9}, {3.6125640038128443`*^9, 3.612564088925879*^9}, {
   3.6125667769945087`*^9, 3.6125667919115477`*^9}, {3.612568528193511*^9, 
   3.6125685642937937`*^9}, 3.612733455178437*^9, {3.6127382499675198`*^9, 
   3.6127382773206882`*^9}, {3.61273831205966*^9, 3.612738373121983*^9}, {
   3.612814999543744*^9, 3.6128150049984713`*^9}, {3.6128197856259403`*^9, 
   3.6128198375377893`*^9}, {3.612823022590782*^9, 3.612823045118256*^9}, {
   3.612823128711104*^9, 3.612823136194489*^9}, {3.6137682475064363`*^9, 
   3.613768248629694*^9}, {3.613868189744665*^9, 3.6138682390142927`*^9}, {
   3.61386863122895*^9, 3.613868631935162*^9}, 3.615152958581355*^9, {
   3.670640154265607*^9, 3.670640168482545*^9}, 3.67064020835712*^9, {
   3.670640329682898*^9, 3.6706404077916107`*^9}, {3.670640484625889*^9, 
   3.6706405729054403`*^9}, {3.670640633675742*^9, 3.670640639136938*^9}, {
   3.670640746273157*^9, 3.670640770168084*^9}, {3.670813338522337*^9, 
   3.6708133789883137`*^9}, {3.6708135458743677`*^9, 3.670813562009759*^9}, {
   3.670813598762533*^9, 3.670813632282239*^9}, {3.670814176904147*^9, 
   3.670814185488801*^9}, {3.670814263002838*^9, 3.6708142723119373`*^9}, {
   3.67081487931046*^9, 3.670814916519958*^9}, {3.670816401435362*^9, 
   3.6708164182105513`*^9}, {3.6708166177617283`*^9, 3.67081663584802*^9}, {
   3.670816742906595*^9, 3.6708167951446753`*^9}, {3.670922243754471*^9, 
   3.6709222613899927`*^9}, {3.670922310161022*^9, 3.670922314413238*^9}, 
   3.6709223907832823`*^9, {3.670922825729659*^9, 3.67092282725382*^9}, {
   3.670923115561274*^9, 3.670923173262361*^9}, {3.670923379155553*^9, 
   3.670923392362068*^9}, {3.670923859125986*^9, 3.67092386863205*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"LogmeannCAValues", "=", 
   RowBox[{"Round", "[", 
    RowBox[{
     RowBox[{"Log10", "[", "meannCAValues", "]"}], ",", "0.1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LogmeannABValues", "=", 
   RowBox[{"Round", "[", 
    RowBox[{
     RowBox[{"Log10", "[", "meannABValues", "]"}], ",", "0.1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanAutomixisGens", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "LogmeannCAValues", "\[LeftDoubleBracket]", "inCA", 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{
         "LogmeannABValues", "\[LeftDoubleBracket]", "inAB", 
          "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Mean", "[", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"results", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "\[LeftDoubleBracket]", 
                RowBox[{"1", ";;", "3"}], "\[RightDoubleBracket]"}], 
               "\[Equal]", 
               RowBox[{"{", 
                RowBox[{"\"\<CentralFusion\>\"", ",", 
                 RowBox[{
                 "LogmeannCAValues", "\[LeftDoubleBracket]", "inCA", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "LogmeannABValues", "\[LeftDoubleBracket]", "inAB", 
                  "\[RightDoubleBracket]"}]}], "}"}]}], "&"}]}], "]"}], 
           "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "11"}], "\[RightDoubleBracket]"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"inCA", ",", "1", ",", 
         RowBox[{"Length", "[", "LogmeannCAValues", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"inAB", ",", "1", ",", 
         RowBox[{"Length", "[", "LogmeannABValues", "]"}]}], "}"}]}], "]"}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanSexGens", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "LogmeannCAValues", "\[LeftDoubleBracket]", "inCA", 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{
         "LogmeannABValues", "\[LeftDoubleBracket]", "inAB", 
          "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Mean", "[", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"results", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "\[LeftDoubleBracket]", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "3"}], "}"}], "\[RightDoubleBracket]"}], 
               "\[Equal]", 
               RowBox[{"{", 
                RowBox[{"\"\<Sex\>\"", ",", 
                 RowBox[{
                 "LogmeannABValues", "\[LeftDoubleBracket]", "inAB", 
                  "\[RightDoubleBracket]"}]}], "}"}]}], "&"}]}], "]"}], 
           "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "11"}], "\[RightDoubleBracket]"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"inCA", ",", "1", ",", 
         RowBox[{"Length", "[", "LogmeannCAValues", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"inAB", ",", "1", ",", 
         RowBox[{"Length", "[", "LogmeannABValues", "]"}]}], "}"}]}], "]"}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Log2meanRelativeGens", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "LogmeannCAValues", "\[LeftDoubleBracket]", "inCA", 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{
         "LogmeannABValues", "\[LeftDoubleBracket]", "inAB", 
          "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"N", "[", 
          RowBox[{"Log2", "[", 
           RowBox[{
            RowBox[{"Mean", "[", 
             RowBox[{
              RowBox[{"Select", "[", 
               RowBox[{"results", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "\[LeftDoubleBracket]", 
                   RowBox[{"1", ";;", "3"}], "\[RightDoubleBracket]"}], 
                  "\[Equal]", 
                  RowBox[{"{", 
                   RowBox[{"\"\<CentralFusion\>\"", ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "LogmeannCAValues", "\[LeftDoubleBracket]", "inCA", 
                    "\[RightDoubleBracket]"}], ",", "0.0000000001"}], "]"}], 
                    ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "LogmeannABValues", "\[LeftDoubleBracket]", "inAB", 
                    "\[RightDoubleBracket]"}], ",", "0.0000000001"}], "]"}]}],
                    "}"}]}], "&"}]}], "]"}], "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", "11"}], "\[RightDoubleBracket]"}], "]"}], 
            "/", 
            RowBox[{"Mean", "[", 
             RowBox[{
              RowBox[{"Select", "[", 
               RowBox[{"results", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "\[LeftDoubleBracket]", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "3"}], "}"}], "\[RightDoubleBracket]"}],
                   "\[Equal]", 
                  RowBox[{"{", 
                   RowBox[{"\"\<Sex\>\"", ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "LogmeannABValues", "\[LeftDoubleBracket]", "inAB", 
                    "\[RightDoubleBracket]"}], ",", "0.0000000001"}], "]"}]}],
                    "}"}]}], "&"}]}], "]"}], "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", "11"}], "\[RightDoubleBracket]"}], "]"}]}], 
           "]"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"inCA", ",", "1", ",", 
         RowBox[{"Length", "[", "LogmeannCAValues", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"inAB", ",", "1", ",", 
         RowBox[{"Length", "[", "LogmeannABValues", "]"}]}], "}"}]}], "]"}], 
     ",", "1"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.670814005664603*^9, {3.670922494557513*^9, 3.6709225474724607`*^9}, {
   3.6709225820499573`*^9, 3.6709226024571*^9}, {3.670922632723387*^9, 
   3.6709226663040237`*^9}, {3.670922720335682*^9, 3.670922738688917*^9}, {
   3.670922769415168*^9, 3.670923019328763*^9}, {3.67092374185922*^9, 
   3.6709237424665747`*^9}, {3.670925053026424*^9, 3.670925053889236*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Max", "[", 
  RowBox[{"Log2meanRelativeGens", "\[LeftDoubleBracket]", 
   RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Min", "[", 
  RowBox[{"Log2meanRelativeGens", "\[LeftDoubleBracket]", 
   RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.670923731615055*^9, 3.670923732260909*^9}, {
  3.670923929220772*^9, 3.6709239319075603`*^9}, {3.670924163648964*^9, 
  3.670924190024577*^9}, {3.67092436503856*^9, 3.670924383735881*^9}, {
  3.6732362756612253`*^9, 3.673236276268086*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.06960546748586682`"}]], "Output",
 CellChangeTimes->{
  3.6709244341205997`*^9, 3.6709272226716003`*^9, 3.673236340301949*^9, 
   3.673560296618956*^9, 3.673561329858569*^9, {3.674437162133906*^9, 
   3.674437187506651*^9}, 3.674437281996068*^9}],

Cell[BoxData[
 RowBox[{"-", "0.8990710911492193`"}]], "Output",
 CellChangeTimes->{
  3.6709244341205997`*^9, 3.6709272226716003`*^9, 3.673236340301949*^9, 
   3.673560296618956*^9, 3.673561329858569*^9, {3.674437162133906*^9, 
   3.674437187506651*^9}, 3.674437282007236*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"max", "=", "3.5"}], 
  RowBox[{"(*", 
   RowBox[{"Log2", "[", "16", "]"}], "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"min", "=", 
   RowBox[{"-", "3.5"}]}], 
  RowBox[{"(*", 
   RowBox[{"Log2", "[", 
    RowBox[{"1", "/", "16"}], "]"}], "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nTickMarks", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5"}], ",", 
       "\"\<\!\(\*SuperscriptBox[\(10\), \(-5\)]\)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4"}], ",", 
       "\"\<\!\(\*SuperscriptBox[\(10\), \(-4\)]\)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3"}], ",", 
       "\"\<\!\(\*SuperscriptBox[\(10\), \(-3\)]\)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "\"\<0.01\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "\"\<0.1\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "\"\<1\>\""}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RedBlueColourFunction", "[", "x_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"x", ">", "0"}], ",", 
     RowBox[{"Hue", "[", 
      RowBox[{"0", ",", 
       RowBox[{"x", "/", "max"}], ",", "1"}], "]"}], ",", 
     RowBox[{"Hue", "[", 
      RowBox[{"0.7", ",", 
       RowBox[{"x", "/", "min"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot", "=", 
   RowBox[{"ListDensityPlot", "[", 
    RowBox[{"Log2meanRelativeGens", ",", " ", 
     RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"min", ",", "max"}], "}"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"RedBlueColourFunction", "[", "#", "]"}], "&"}], ")"}]}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "18"}], "]"}]}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"nTickMarks", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"nTickMarks", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\!\(\*OverscriptBox[\(m\), \(_\)]\)\>\"", ",", "26"}],
            "]"}], ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*OverscriptBox[\(n\), \(_\)]\)\>\"", ",", "26", ",", 
            "Black"}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Dominant, no drift\>\"", ",", "26", ",", "Black"}], 
           "]"}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"legend", "=", 
   RowBox[{"ContourPlot", "[", 
    RowBox[{"y", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "min", ",", "max"}], "}"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"None", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"N", "[", 
               RowBox[{"2", "^", "i"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"RedBlueColourFunction", "[", "#", "]"}], "&"}], ")"}]}], ",", 
     RowBox[{"Contours", "\[Rule]", "200"}], ",", 
     RowBox[{"ContourStyle", "\[Rule]", "None"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "15"}], ",", 
     RowBox[{"Frame", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"True", ",", "True"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"True", ",", "True"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\< \>\"", ",", "30"}], "]"}], ",", "None"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"75", ",", "300"}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "18"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"plot", ",", "legend"}], "}"}], "}"}], ",", 
   RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.612562402232574*^9, 3.612562404017359*^9}, {
   3.612562444478538*^9, 3.612562509022326*^9}, 3.612562796441002*^9, 
   3.612562859811529*^9, {3.612575309222662*^9, 3.612575356548065*^9}, {
   3.6125755028281937`*^9, 3.6125755070533953`*^9}, {3.612575550958946*^9, 
   3.612575579770131*^9}, {3.612575648049129*^9, 3.612575650328463*^9}, 
   3.612575814580227*^9, {3.6125759095450897`*^9, 3.61257591375079*^9}, {
   3.6125759577881002`*^9, 3.612576070117469*^9}, {3.6125761106254997`*^9, 
   3.612576128068851*^9}, {3.612576187803419*^9, 3.61257620606968*^9}, {
   3.612576272730712*^9, 3.61257627868919*^9}, {3.6125763836613483`*^9, 
   3.6125763873903713`*^9}, {3.670924017236309*^9, 3.6709240756213284`*^9}, 
   3.670924106163354*^9, {3.670924446792903*^9, 3.670924545418374*^9}, {
   3.670924586676825*^9, 3.670924625989826*^9}, {3.67092470274618*^9, 
   3.670924740679989*^9}, {3.670924778176785*^9, 3.670924851773326*^9}, {
   3.670924909678256*^9, 3.670924912516374*^9}, {3.670924984882382*^9, 
   3.670925001371386*^9}, {3.673560318430377*^9, 3.673560319709251*^9}, {
   3.6735617078887377`*^9, 3.673561717343519*^9}, {3.674437144503646*^9, 
   3.674437162972398*^9}, {3.674437218674387*^9, 3.674437218841378*^9}, {
   3.674437273449628*^9, 3.674437274408231*^9}, {3.6744373511052303`*^9, 
   3.674437353904087*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Two-locus model with finite population size", "Section",
 CellChangeTimes->{{3.605587602227026*^9, 3.605587620528407*^9}, {
  3.611734365334983*^9, 3.6117343756652727`*^9}, {3.612303387742683*^9, 
  3.612303395648987*^9}}],

Cell[CellGroupData[{

Cell["Plotting the evolutionary dynamics", "Subsection",
 CellChangeTimes->{{3.6035302482457867`*^9, 3.6035302728390427`*^9}, {
  3.6035308602183037`*^9, 3.6035308624328814`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sA", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sB", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hA", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hB", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"muA", "=", "0.00001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"muB", "=", "0.00001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meannCA", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meannAB", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gens", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NN", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p0", "=", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ps", "=", 
   RowBox[{"Simulate", "[", 
    RowBox[{
    "p0", ",", "gens", ",", "meannCA", ",", "meannAB", ",", 
     "\"\<CentralFusion\>\"", ",", "muA", ",", "muB", ",", "sA", ",", "hA", 
     ",", "sB", ",", "hB"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", "ps", "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "genotypeColours"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", "16"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<generation\>\"", ",", "20"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<ps\>\"", ",", "20"}], "]"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ps", "=", 
   RowBox[{"Simulate", "[", 
    RowBox[{
    "p0", ",", "gens", ",", "meannCA", ",", "meannAB", ",", "\"\<Sex\>\"", 
     ",", "muA", ",", "muB", ",", "sA", ",", "hA", ",", "sB", ",", "hB"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", "ps", "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "genotypeColours"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", "16"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<generation\>\"", ",", "20"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<ps\>\"", ",", "20"}], "]"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ps", "=", 
   RowBox[{"SimulateFiniteN", "[", 
    RowBox[{
    "p0", ",", "gens", ",", "meannCA", ",", "meannAB", ",", 
     "\"\<CentralFusion\>\"", ",", "muA", ",", "muB", ",", "sA", ",", "hA", 
     ",", "sB", ",", "hB", ",", "NN"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", "ps", "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "genotypeColours"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", "16"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<generation\>\"", ",", "20"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<ps\>\"", ",", "20"}], "]"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ps", "=", 
   RowBox[{"SimulateFiniteN", "[", 
    RowBox[{
    "p0", ",", "gens", ",", "meannCA", ",", "meannAB", ",", "\"\<Sex\>\"", 
     ",", "muA", ",", "muB", ",", "sA", ",", "hA", ",", "sB", ",", "hB", ",", 
     "NN"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", "ps", "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "genotypeColours"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", "16"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<generation\>\"", ",", "20"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<ps\>\"", ",", "20"}], "]"}]}], "}"}]}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.60353089187535*^9, 3.603530983226058*^9}, {
   3.603531040739498*^9, 3.6035311977091427`*^9}, {3.603531307406088*^9, 
   3.603531435528841*^9}, {3.603531676554263*^9, 3.603531696127338*^9}, {
   3.605415235804308*^9, 3.605415280166595*^9}, {3.6054720772453213`*^9, 
   3.605472080329034*^9}, {3.605847987769926*^9, 3.6058480898733473`*^9}, {
   3.605848121543867*^9, 3.60584812169101*^9}, {3.6058481872460737`*^9, 
   3.60584821840021*^9}, {3.605848296064774*^9, 3.605848297884615*^9}, {
   3.605848343970476*^9, 3.605848415682418*^9}, {3.605848450236123*^9, 
   3.6058484859469757`*^9}, {3.60584853306234*^9, 3.605848603413519*^9}, {
   3.6117345745660543`*^9, 3.611734752873127*^9}, {3.6117348416616993`*^9, 
   3.611735017653606*^9}, {3.611735380087186*^9, 3.611735380304367*^9}, {
   3.611735411478545*^9, 3.611735412159236*^9}, {3.611735449665852*^9, 
   3.611735529083827*^9}, 3.611735853963955*^9, {3.611735919266038*^9, 
   3.611735949214418*^9}, {3.611736050295849*^9, 3.6117361071774073`*^9}, 
   3.611736167918441*^9, {3.611736401232711*^9, 3.611736401314904*^9}, 
   3.61173650325434*^9, {3.611736585612144*^9, 3.61173658664916*^9}, 
   3.611736629559312*^9, 3.611736684635947*^9, {3.612338019157063*^9, 
   3.6123380245991898`*^9}, {3.612338057226308*^9, 3.612338074539177*^9}, {
   3.612338116605648*^9, 3.6123381171562757`*^9}, {3.612338449547184*^9, 
   3.612338459005831*^9}, {3.612338529529438*^9, 3.612338531167034*^9}, {
   3.612338992450275*^9, 3.6123390203330307`*^9}, {3.6125705821728773`*^9, 
   3.612570599176289*^9}, 3.612570685696248*^9, 3.612576606342208*^9, {
   3.676164831626689*^9, 3.67616484745548*^9}, {3.676164958380699*^9, 
   3.676164961218482*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0., 0, 0.], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1: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
eUZaYWEl8ffTo03j47f7fs2s1qN3Xugo+cce7PfVw33OYpXnO2a9Ho1H2O/a
3zALetz833rZrpfMZj2GnFw0+IqT2aJHu1lhX/ctZbbqEeQ9vOXdJ8w2PQrX
nWl7+BGzXY89vu/lZ4uZHXqc2qUZUfkhs1OPjrtf7wu9zywzoP7kXctf32WW
G3DzUa/E9XeYFYbP/79u7BXmYFYacMY6HN63mWHA+7ULjnjfYlYbsCwtOD70
prjfAA/LUXXmDXG/AZm18iYWXRf3GzCwKLSgjWizAR/l8R0WXhP3G1B37ibn
u6vifgO881UX4kTbDOiycXSmTLTdAL9U/+4ZReJ+A151MOzsLNppwIFParei
v8X9kbieu2fzPNHySPQJxeo+ohWRkO23DysvFPdHYk3oo/oHRSMSS3eoDHNE
qyPRZc7qa2NEayNRuEx9o4VofSQaYl71dwXi/kgE36xd+YpocyRmRK+J3S3a
EomEjteqLhNtjcTp6BNxMaJtkXhb51PyZNH2z/kLHR2DRDsiESY3BnUU7YyE
z5B3d/4nWhaFjc4pzauKlkdhWacZn8quiPuj4Pt0lfdj0cooROUWv78hGlEw
ZY65YRetjsLgCrsKTojWRmFbqO+FP0XrozD+cIucHNFCFC4NPa3bJtocheS5
DRwbRFuiYJk5v1KWaGsUbp3rdXa5aFsUlCP3NDeLtkdh5d8X3i8Q7YjChIYr
R88T7YxCxubONWeJlkXjm4J9HVNEy6OxPafTtgRpfzTmd54ZFyft/+z2lZZE
S/ujcaR1j8cGaX80/lh/c1aEtD8a0RcDvMOl/dFoZN3vEyrtj0Zhp/7pwdL+
aDyfc+xekLQ/GnV0sYEzpP3RuN7LUTVQ2h+NDe+unvOX9kdjWOncXX7S/mho
Pqq2+kr7P+e3HP9TK+2PwbPEi/emS/tj0LFpQlPJihgsO/QmbJq0PwYPirNP
T5X2x8BwsWEPyeoYfLz/1DpF2h8Dv63O7pL1MRheWjl/srT/88/v1dlfsjkG
i2JnVZZsicH0s632TJL2x+Dm/ik6ybYY9PWKbiHZHoPFv5y7P1HaHwN/xd/b
JTtjUDOnhlGyLBa5dd6oJMtj0fFVy+8lK2KheO3xViPtj4XuwJXLkhGLvk22
/C5ZHQtTWOAvkrWxGH3kTKJkfSzUE7L8JQuxMNZeN0qyORaZ9yw9JVti8SQw
qrVkayx8g542kGyLxZqFDypLtsfi/fPe7yZI+2ORfv/CM8nOWMxYPOeuZFkc
Hub2L5Isj8O2xY/OS1bEQR0Q9pdkZRzazttzWDLiEFXNuk+yOg4XtozeLVkb
h5Alpu2S9XHYNLz3ZslCHM6ujlgv2RyHP3zrrpFsiUNxcuOVkq1xqHfItFyy
LQ7nj/ZaJtkeh4bP+y9x7Y/DDu2CRa79cah+su4C134jLoYVprn2G2Fqem6u
a78Rk1u+nO3ab0RSF89Zrv1G3Jx2UHDtN2JQE02qa78R/3apl+Lab4S/9VmS
a78R3z2+k+jab8ThyNIE134jfOvXdtlqhJ99aLxrvxH77Waja78R+eGP41z7
jUhp6e2y04grmadiXfvj8Wv6SJfl8bBduhbj2h+PcRFRLivjkTKzvsuIR4s3
R6Jd++Pxqn+ky9p4bFzRzmV9PDwnPoly7Y/HyX+sLpvjsfVyosuWeOTMH+Gy
NR5F65u6bIvHgL1vI1374+EVctllRzzOBue47IzHD7oMl2UJONY03mV5AiaM
0bqsSIDm2DCXlQmIHNDNZSSgblZzl9UJKN9S22VtAs71/dplfQIu93xlcO1P
gCmx2GVzAkY+uO6yJQHqKRddtiZAkX/SZdvnfJ0jLtsTMKj1PpcdCfj61W8u
OxM+/3uy1WVZIvpGb3RZnoi91da6rEjE8+9XuqxMxKxfM1xGIqpnmF1WJ6Lh
nUUuaxNRf858l/WJ6Bkzj9ufiJCds7n9iejRysTtT8TRqync/kTk5CVx+xPR
7UYCtz8Rt5vFc/sTsXNJHLc/EeXNYrn9STAWRHP7k9B8SxS3Pwl9MyK5/UkY
tcrA7U9C9X16bn8SQkoiuP1JSGvPWZ+EPaaZ3P4kTH8Yzu1Pwg8TOVuScLAo
jNufhHJ/zrYknC8P5fYnQbWSsyMJpgGcnUnY+zyE25+Mlls5y5PRLoizIhkd
2nFWJmPjq2BufzKqHeOsTsaL5Zy1yXCGcdYnY9tQzkIyTrTkbE7Gy0qcLcl4
+ljH7U9GxEXOtmQMOsDZnowuv3J2JKPKMs7OZGQJnGUp+EvPWZ6C6X6cFSkY
Op6zMgXaYZyRgiX9OKtTsK8rZ20KjrXjrE/BuhachRR4NOZsTkFyfc6WFEyt
xe9Pwdmq/P4UHKrI709Bcxm/PwUv/w3i9qegZRlnWSp2veIsT8X855wVqdhZ
ylmZirpPOSMV+x5xVqfCXMxZm4qsB5z1qSi4x1lIRY+7nM2pOOLgbElF8G3O
1lR0ucXZloqGNznbU9HgBmdHKjpc5/enQnON3y9gxVXOVQSUFPGfhwAVbzcB
+/7mPx8BP/J2F/BnIf95CfDi7SHgSQH/+QlYxlslALzVAl5f4awRsJu3VkAU
b52APrz1AqrxNgq4fpn//D//PN7pAhbxNgsI4Z0pYARvi4COvLMF1ONtFfD+
EudcAcW8bQKu8M4XkMfbLiCHd5GAjbwdAn7hXSJgAW+ngFTeZQJieMtMCOdd
xYQA3nITpvJ2M8GHt8IENW93E4bzVprgydvDhP68YUJv3ioTPHirTejKW2NC
Z95aEzry1pnQjrfeBHfeRhNa8RZM+IF3ugnNeZtNUPDONOF73hYTmvDONqEx
b6sJjf7z/ib87z/vb8J3/3l/YjtxEbGDuITYSVxGLJv1X1chlhO7ESuI3YmV
xB7EIFYRq4k1xFpiHbGe2EgsEKcTm4kziS3E2cRW4lxiG3E+sZ24iNhBXELs
JC4jls0m708sJ3YjVhC7EyuJPYhBrCJWE2uItcQ6Yj2xkVggTic2E2cSW4iz
ia3EucQ24nxiO3ERsYO4hNhJXEYsm0Pen1hO7EasIHYnVhJ7EINYRawm1hBr
iXXEemIjsUCcTmwmziS2EGcTW4lziW3E+cR24iJiB3EJsZO4jFg2l7w/sZzY
jVhB7E6sJPYgBrGKWE2sIdYS64j1xEZigTid2EycSWwhzia2EucS24jzie3E
RcQO4hJiJ3EZsWweeX9iObEbsYLYnVhJ7EEMYhWxmlhDrCXWEeuJjcQCcTqx
mTiT2EKcTWwlziW2EecT24mLiB3EJcRO4jJiWRp5f2I5sRuxgtidWEnsQQxi
FbGaWEOsJdYR64mNxAJxOrGZOJPYQpxNbCXOJbYR5xPbiYuIHcQlxE7iMmJZ
Onl/YjmxG7GC2J1YSexBDGIVsZpYQ6wl1hHriY3EAnE6sZk4k9hCnE1sJc4l
thHnE9uJi4gdxCXETuIyYtl88v7EcmI3YgWxO7GS2IMYxCpiNbGGWEusI9YT
G4kF4nRiM3EmsYU4m9hKnEtsI84nthMXETuIS4idxGXEsgXk/YnlxG7ECmJ3
YiWxBzGIVcRqYg2xllhHrCc2EgvE6cRm4kxiC3E2sZU4l9hGnE9sJy4idhCX
EDuJy4hlC8n7E8uJ3YgVxO7ESmIPYhCriNXEGmItsY5YT2wkFojTic3EmcQW
4mxiK3EusY04n9hOXETsIC4hdhKXEcsWkfcnlhO7ESuI3YmVxB7EIFYRq4k1
xFpiHbGe2EgsEKcTm4kziS3E2cRW4lxiG3E+sZ24iNhBXELsJC4jlv1E3p9Y
TuxGrCB2J1YSexCDWEWsJtYQa4l1xHpiI7FAnE5sJs4kthBnE1uJc4ltxPnE
duIiYgdxCbGTuIxYtpi8P7Gc2I1YQexOrCT2IAaxilhNrCHWEuuI9cRGYoE4
ndhMnElsIc4mthLnEtuI84ntxEXEDuISYidxGbFsCXl/YjmxG7GC2J1YSexB
DGKVy/8HeS63Eg==
      "]]}, 
    {RGBColor[0., 0, 0.5], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1: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
xJJ8cv7EUmJHYhmxE7GcWEEMYqXd/weCD/IB
      "]]}, 
    {RGBColor[0., 0, 1.], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1: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
qn182GRPqDg/EWvjLhyLHCXOT0SfLQu3dBsszk9E3d4Jjmp9xPmJ2BX6zHys
izg/Ed9+LNOF/Eecnwifr0se72wtztdhYMjJbr94Mst1+No8pWN8A/F6dLh0
r327Lf9mVuqQdrflKV1N8fp0+NWU+vynKswqHcbuNn07+Z+67Hp1UK7uVpj4
nlmng6Z2bp07b5kFHVzVcnLXvGI266C+WCNpk4vZooNueS+P9+XMVh1sHwSP
uc+YbTokHO13SvWE2aFD0Nm0liMfMzt1KPsgm5T+G7OrMl+PxTj7kFmWBHXd
u8+GPWCWJ+Ffc1eV/uZkViTBvC348vp7zMokaDvUfCXcZUYSNh8ZsjjjDrMq
CRG7Og6ffVvMn4TrtU493nxLzJ+E37a80j28KeZPQm3h18adRZuTUPV+cte5
N8T8STi+wXfoq1IxfxKWOIe+iRNtS8LWYT2r/3FdzJ8EVXnS+FzRziT8sCvH
2VS0KwlvAwpKDlwT8ydj/6Tl1aNFy5MR8aurSjPRimSsNr38eOmqmD8Z6+1f
jfteNJJhf3k2KUS0KhkFtlWOtqI1ybg5K+3t6yti/mSYDo9JPS1aSMbxad/8
tk60ORklhxPLc0RbkoFGaX0mi7Ymo83IaTkDRNuSIds1MbWtaEcyhv02+14d
0c5kLB7wOP/NZTF/MrLyC7vfFy1LwaYF3+8/L1qeguNXbj//WbQiBfp6+UXb
RStToN7c4phFNFJQb218myWiVSmwW9ptNInWpKBH1y29ckXrUlB46khJqmgh
BYb1UU0TRJtT4Cz5zjdStCUFP3Vr0GKyaGsKfBH6wwTRthTs2TR5v0q0IwX3
f582aYRoZwpmaZobhkn5U5D+fcO6g6T8qVhwSV7dV8qfipS4ktC+Uv5UVHPN
rd5byp+K87PPfOwu5U+Fx8vk/l2l/KkYO6z1wc5S/lREN5GldpTyp2JMxa/h
7aX8qXg7uCTPW8qfiqgXU0+3k/Knoo32et+vpfypeBid7vhKyp+KhPyK2W2k
/JXXWxQ+8UspfyqeVv87QCHlT8XuP0eObS3lT0N5nWbJraT8abjoOX5DSyl/
Gh4NaveshZQ/DcK52wMlIw36Dq6NXlL+NBh1f3tJ1qQhqPGB1c2l/Gl4XaP6
fyULaRj+/sLhZlL+NNz52E4j2ZKGqkM61pJsTcM0RZMDnlL+NOT06JQs2ZGG
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
DGJ/t/8Pg8MuQg==
      "]]}, 
    {RGBColor[0.5, 0, 0.], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJxd13t8S/f/B/CUuezrFptpXWapW7vVCIqa26sURWm0RSgVqpq2tOk9vaUn
LlPXZaZdh05cRusa98416AiGmJmYIebWuUzcql/XX38Pn3Py+b77Tx/Pxzvv
vs4rn+QcvKcmhcXUkslk/9SWyf7/9/sf1wDZ//4gvlPg2+B3T/u/Z33Mcq4t
G1zrA/Y6OVq/HtLs73qNmZvhtOKMR9/6zZi90KP6rKVW4xbMrXGsqPHlQZ+0
YVZgFrQe75Z4M7fFj7679nk2a8/cHn6XZ3ve/6Ejc0ekX7I9zFR8zuyL3TFf
3D6wwY/5C4yfOzi5vEtn5k6Isf8Y4z9RydwZBw8HPb9t7sqsRMXDlEOPbndj
7orC7hsTVX7+zN0wf1WduXWTezB3h/H35SHyvT2Z/bHol65/JLzpxdwDe1fg
cfOg3sw9UZXZvH2ThV8x90JG0qdrR//WhzkAvyxpMfRKi37MvfH3laGzSqf0
Z/4Kvbr2i9hdNoC5DyK3KX98qwdzXySXJBX2+zSQuR9szR/tXXZEdH/MKYn/
XTZ9IPMATA+/Mcbwn0HMQPLTugEfbmMWAPXNuJcrw4PYPBBN2vot9a9mFgKx
McF7wqmVg9l8IEr69PNQBw5h84H4a8q7jD9uM8sG4XzpuYv9Fgxl80GYY3o9
fG7nYDYPwuxE39drfmMWgjBp3M1/FmYMY/PBmObd6Vz3lsPZfDAerFn8ZtFB
ZtkQfNSqoEeBZgSbD8HZFY+zm9UOYfOhaJr69Fabn5iFoZj8+ZC4pUNGsnkw
DjwftmbcXWYhGA/OFX0TMW8Umw/DqqoS1YyOoWw+DLuCXzgMFcyy4Ui/82rU
LqWKzYejUfryNkYDs2wEtG/sjUynxfkI7Fwy663NczSbh8By+tSwptHMQgiK
1l2ePWKLOB+JwKI7fcZVifOReDl8crm8fxibj8LLhoXbVHOYhVHIfhn+5r5N
nIfCs+zdmJ0Nwtk8FKtDG1anhDDLVLjV6unEJwuYocK6uZ/cf3pcfL0KacWx
G/1lEe9tVeGftC/fJvRklo3Gxwkl00fEMWM0BijOjjQUMwuj8Wf425tlx8T9
0ai68qLJzHvifhi+i2mUpWk4hu2H4ZbPM0vzz5mFMHi6Mua0BrM1DJHeG7P/
q2KWhaPWX+cWKCPF/XC8iEpoGhgl7ofjXFOPRqXjxf1wlHX8ZuONEHE/Ap3C
T/gm9BL3I2DQqz1/8RL3I7B1cu3n6S7x+iOgTyn1a3RIvP4xWL/m+rSORrH/
GMw/9F+/mb3F/mOQ3bvwtPkOez+tY1CyPm5kcYH4/o/F8rSH2UM+E9//sVj5
9dzdBzeK5zkWtvy96d39mK1j0aSiZ5/aq8XPxzh43l+4y9KQGeNwITD3dmWi
+HkbhxKHj/KDb9nn1ToO+/WHrjzzFz/fakQvGXT/n9Ps+wE1qrabs+PV4vdJ
jUv2mde6XWXfR6saZ207gzpOEr+/47E988v+/a+w7zvGI+zUwmv6Cez+IIxH
q7DgoONX2f3FOh5zn/+WUBUr3o8moMNrQ/fSV+x+hgn44LrPybSe7H4nTMCO
i353Dd/2ZfsTcPaq39PKBuL9NBJxq0OjMkvZ/ReRSHKduOcfx+7XQiQKNnQX
0kO7s/1I+N8rqHs9Urz/T8TD1W9m/du6C9ufiMJ611zxZ9jzRJgI69Wi4V+e
8GX7E3Fh4J0rMfXE59Ek2I+9+Hb9gnZsfxKmt4jZ23Ake54JNfP7aapzy9jz
zjoJx389fGvP65ZsPwpTTr4Q3tg82X4U/ObZC++62PNTiMJu/7NbqxM+YvtR
OFAU2fyjbnK2Pxkdguc/aprZkO1PxqF2HzSLr/Uh25+MDy9knXxcXYftT8aI
y02CFoyqzfY1GF5ZdKRztey9FRosbfL5IselN++f99Cgw+VN35YFvnxvjQYP
xoV9e+3TF+8taOD9m1f1iKhn723WwO9kiW9s1eP3tmqQrf5tROCeR+/trPGu
Zh6GOg/YvyemYNHAuHUZJyvfWzEF2ncfrBnw9DbLn4LflzdceT79Jsufgocd
s5baB99g+VPQ4nFikWXHNZY/BTfzSitWhF5h+VNw5lrWshnhDpY/BYP6rr/W
dvtFlj8Vfp8UjkiddIHlT4VRf7fOklHnWf5U1J50ud7lF2dZ/lTsNzvUIw6c
ZvlT4YgcH/zNVRvLn4rPvqj4aqbqOMufitCK5p8pGlSw/KnwCssublfnKMuP
hmr1pjv1e1lZfjT2x42fsNb/IMuPxg/faH9aFbaP5Uejy6K/vvv40F6WH43Q
OrERgxN3s/xoxMza3X5h5E6WH40Lm6Yf9cnfzvKj8cnIU9nj1m9j+dPww9EP
X+5et5nlT8PXE6KO+rnKWP40WEJ/fLVA2MDyp+Ho4D0ehaN+YvnTEJTd6fhf
4WtZ/jR0q8pvu2XBapY/DUdezG19+8oqlj8Nqqsv8kOfrGT5MTjaMGLNfNVy
lh+DffeHtZjy6HuWH4Oijot7xtoKWX4MfLZErfjz4ncsPwbGTQVF3320lOXH
QL358YMnWSaWH4OVhR7pPzVZwvJj4Lo1atgT3UKWPx2PR5UMatF0PsufDln6
/oEf3/ua5U/Hkw7Lz6ZUzWH503Hu93OV4V1ns/zp+Cpy7M6RRUaWPx3doNsZ
4y2w/Ok4Yj/7uv6PeSx/OvSLPIZd6pXD8mPhCE3Rjv9PFsuPRcyYZXED5Zks
PxYLj0ZXHQ9KZ/mxSG3ax2ham8ryY/GkbY5tu28Ky4/Frp9mL1hp17H8WNz7
N8qkVCax/Fg0ndfXlVo9g+VrUaUN9P75WTzL18JWO2aNvyKO5WuRIeubuDgj
luVrISTnNP/taQzL1+Kbqv2PE5dNY/ladOjWYkCHMdEsX4vZ5uSOtbtPZfla
rD9nN0z0m8Ly43Cv0bshFX00LD8Omde35zaqiGL5cWj+qatVcMAklh8Ha/Gp
u0X2SJYfhy0LPjmxZf4Elh+HLnWvfrZEM57lx8Ew17ExP0zN8uMgy5ry9MNJ
41h+PB6tD039N28sy4/HpE22Pu12jmH58bj+btGnZ19GsPx43L28OgjhzEI8
IrK1fZ/sC2f58RB6Dw4TlMzWeNTt8e/IDTvCWH48WrUZmxkIZlkC7lc//HuQ
YzTLT8DFBpve7M9iRgL6V14LO9OOWZMAeV/h620XVSw/Ab+uq5O/eQmzOQEB
c+L2tRnFbE2A4gv1qaSPmZ0JaBV94e6XB0JZ/gzcSR9wvUsks2IGNoZELq5d
mxkz4HBsL7yyYxTLn4Emf78NeRPHLMzAf0o86xz2YTbPwLFZpcLX90ey/BnI
a+m98MQuZucMnLqUu73WbGbZTHSce8erYgyzYiZQnq1b04kZM7Gs+9ZX/eox
a2biK6PnzgG3Q1j+TDRuYspSH2c2z4TM53x0TQmWPxNBh/6S7zExO2fCZ2tZ
U0MWsywRRy5vjZo6jVmRiHHTPvyz62hmJEJxwPPq4QHMmkQEtTPYb3YR8xNR
dnb1Gb23mJ+IKzcOBk9qJuYnQrbn5NGU+mJ+Ihw+2bNK3oxg+Un4eVh5eMVT
ZkUSCh9XhdjvMSMJRyKu/bD5b2ZNEnIizw8fcoVZSIJ94xXfRb8zm5MweNvq
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
      "]]}, 
    {RGBColor[0.5, 0, 0.5], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
PDL0XfX8LHg5aML5VYoNFvyyoff0cvV8LciIXjysTLHFguyJF7qtVM/fgj9v
7Ou6QrHDAsevTfsvV/tY0C7mj/hlil0W/Di2dP1StZ8FES+MvLlEsceCg3/v
DFXtfZzXcvIuh2KfBSvmtOiiWpOOxt98vG2x2j8dV0vfClGtS8e8Lns8pWr/
dLR42C9dNdJxoaRFG9WGdGhWFH6+SO2fjvdafDldtSUd38dl9FdtS8fRty7X
Ue1Ih8s65/RCtX/64+upzirVrnRUtrqWpNqdjh/ufAbVnnQY8sPaqPamY8cb
ve8tUPunI+F84EXVmgz0mPLTJ6q1GWh7Jmidal0GvAWn5qjWZ6Dsw1kW1cjA
rk76yaoNGYg97Byq2pSBD5vvDFZtycDATn26qLZlYE27gBdVOzKw8WHP51Q7
MzBpSlod1a4M1O/70b35av8MhB68dlO1JwM1jf74UbU3A/taHvtOte/x54tG
nletyURXU/FZ1dpMhPUfUqVal4m4K6uPqtZn4mjnlIOqkYmvmu+uVG3IxLGF
MXtUmzLx4tQMl2pLJoboL29XbcvEZ0OXblHtyMSVncs2q3Y+9sOLG1W7MpEd
PWG9v38mxs9qvs7fPxN35z9c4++fiY5Pv/Cuv38mdv8UucrfPwvH806V+ftn
oW60caW/fxbi5zRY4e+fhW0vfLPM3z8LEfP2L/X3z0Kfov1L/P2zkHvunMPf
PwuPljxY7O+fhXF3Q/x2ZOFcpL3U3z8LL4+4scjfPwut48f47c7C96mnF/r7
Z6HvIIPf3iz0uvrDAn//LHwblue3JhsD97/otzYbe8JPzPf3z8ajeKvf+mzc
Gtbdb2TjtwTfPH//bOzssddvUzba/LfEb0s2grwj/bZlo/5POr8d2Wh0+Z7d
3z8bDRK+8tuVDVtfl9/ubDzz3BK/PdlY/W6W397Hx/9got++bJTUvu23JgfP
Rwb5rc3BO5tf8FuXg81bGvitz8Fc3Jvr758Dx5Aavw05sK+97LcpB3UDz/pt
yUHnU0f9tuUgL7HSb0cO1t7+0G9nDvSGzX67crAiba3f7hyc61/mtycH5o8c
fntz0H3ffL99OQgdMNtvTS5+HmzzW5uLMQcK/Nbl4lBZrt/6XIR4MqX+uVgZ
aZH65yIpOEXqn4sbE5Kk/rn4dn+C1D8X64xxUv9cNO46Ver/+HjdoqX+uUiZ
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
      "]]}, 
    {RGBColor[0.5, 0, 0.5], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0.5, 0, 1.], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJxd13l0TPf/BvBptISiQ5VIlak1NNWhLdE2PKKItGpsEUSMSCKSSCb7ZDXW
JtZBMdSXQUrsY21apNPaYu3Yo7axtI2vaqb9KqO2n9/xuYtn/sl5nXfeee5z
P3fuOXk7OmVQrI9Go7lVQ6P5/5/PP54emhc/eKd0Se61nNXBz+mLWFf7rN8H
nBTWYqax269jqm8LN0LbiQP+2DRM0/25/dCtW2HLFj5a4Wa41L9iqlPTTFiH
b0Pv/1CzpK1wS/gcWGzo2reTcGsUr9hh/eLjbsJtYfP3qbHjSE/hAGzb88W7
F2NChTug+o936hwONwgH4kCvrpPCsocKd4Thm6o62XtHCusRODzpUM2NY4Q7
4dG2tClng+OEO8PVcfJT59ZE4fdh1GbcKG6UKvwBIqYsrrf8Zobwh1g27NVf
2kTlCHfBx9qh7fbZCoW74tjWHu9ahk0WDsLD2enThlydJtwNM6YNnLDobrHw
R9g+4/LxmuvnCH+M28ktLeF15gt/glaBa2fXa7tQOBiltS48jNxpE+6Od+6E
uesfWibcA+9VbXhSudMuDCTk3dT8PmL1c1uAVcOvVNQftUbMe2Lt2jXDfz+0
Tsx7wnTgYqvY0k1iHoJXDd1OWWpuFfMQzCz+ueR/k7eLeS9cvtbklXmDdol5
L+zu3HF+wsTvxPxTjC6/i92N9or5pzhwqHnDqXOdYt4b2rC0fi3P/STmvfGp
1/vwUewBMe+DOnPHnPiub4WY90FJXJjx/tSjYt4X3vD168YF/CzmffFbzL6E
e8tPinkoNuZUREfeOi3moThyefGOb3PPiXk/ZFTU9m078oKY98O9zR3+LFlw
SczD0HdF9qXXm7jFPAwjpnoLzvtfF/PPYPs16LJ+5E0x/wz3akS0OHPlNzH/
HFtO/9279aZbYv45uqSEtQs58YeY94cxJarWnDYeMe+P7VEP/ipv/LeYf4GW
G+6c0eKumH+B8mj9q8a198R8ADZvaWbWDn4g5gNweVtOzBthj8TcAPuC6oPe
BU+fGwacbLrslGnZS8/fAxYDLJWpXx2z13hupwHD9x++d/DiK+I9MRD1z8/L
Sxjk+9wYiGND+px6vc6rYn8g2mbH/ZHsW1/sD8SMwDWXy9Zpxf4g9F+//9X1
5oZifxC2PunZMiSjkdgfhKVHz+w+uqKx2B+EssDe15Y+8RP7g5HYrHeU5qs3
xf5ghK35pe1HY5uL/cGYfv+XEMe3OrE/GI0mae6sHdVS7A/BIt0Z46HWrcX+
EDwOdIT71W8r9ocg+PUlU0b4B4j9IVi32HfNX/06iP2haF34ddSpZYFifygu
+P/3i+SG74n9ofBpu72h64xe7A/F7yubdflc31nsh6NlwYnX4pa+L/bDYfO6
m6U3+FDshyMux+WMWtBF7IfD3zTl0dq3gsT+MOwM16+I3tRN7A9DvcSQ4k96
fCz2hyFy49msL3/+ROwPQ0mH9Qv6jugu9iPg+2XxuT4Xe4j9CORfWBXfeC3E
fgS6u9q06T+sp9iPwO4L2SdaPRLWDMdHDZb3nb8gROwPx7cDBvruebOX2B+O
DjHT/J/OF3YOx6GS3caXvMKaETi9bG/07n6fiv0R+Ee70sfypbBlBKI3Zm3W
bBV2jsAnN65e6X9QWDMSTZ9U/3X6kLQ/EpFf/bxpyC5pfyQyp524dXm+tD8S
7x7N9imPkvYj0T8v5HTWm9J+JDzvvXlvyxHp+iNxrqf1aUCydP2RGHh3Z8TG
WtL1j8Krt2d1q7FE6j8K/Vodb3W7lbBlFBLSA/3rrZfu3yi0mLxq871A6f5F
YfDSer822izuN6JwfNznLkdH6f5HYX+DQwUXR4vzcUbh1+VXJ8+Llc5vNPIG
Ll/R2RQs9kej6Y89VrWZJM7bMhov3zq+dPYS8Tw4RwPXbe0HfP+R2DciMui/
oxrfFM+Pzoic3XMrI5tIz5MRv9SdeTdliHjejEagsOXBrK+7ir9vRGFxh+PZ
f4jn027EmfDBIVF9pefViB9dGZ4nG8Tz7DZiu8+n85v5C2vGINJ307bEeR+I
/DG4Z0hsuKiBMMbA+vdSW7D0/TCOQcJLTc496SBsGYPMJXtbp+8T3yf7GHR/
bEjqPFbY+ezvx5xYdKa2sHsMvntauffvXZ1EfjQMSVH+AQnCumjUWX+/vGEr
YUTjgc7Vesg18f01RqNJqt/8eSXClmicH9HHmJEkbI9Gm/0l7dYHSd/3aNi6
1Th701fYHQ2/tpEjd34n3g+asTitnTxjVrywbiwi6+9xHXtLGGMxfN62xw8r
O4r8sajc6/Pz2iXClrEYmrp0eexoYftYfLv3dJ1T7YWdY1Ev7bulVu+7In8s
jsyON352VFgTg8G25l9vWymsi0HBcv2I/DxhxGC1j/vtmAhhYwxOTD40v0OQ
sCUGjTonNFroL2yPwa02faZMeCreh84YbPVuuD7pN2F3DGpcmdSw5GdhTSzM
V2oUr/teWBeLhfUmaxPXSu/TWGSlaYv3LxQ2xuKrsIabv5ombImFz97JV/dk
CdtjUTHv/J+68VL+s/114dVrIqX8WPhn7qjddaCUHwdrX9eg3X2k/DhsdUV/
0yJYyo9Dcpf0woEfSPlxGHp73KUegVJ+HFqnF+sutpby49Bn9Ym/GzWX8uNw
xXK0nbuJlB+H8kX/KdU3lPLHIX/CtsiHdaX8cTi4oc8bXXyl/HHI61WYe76G
lD8Op27ff3Du6TsifxzuP/hhV+AjYfuz308pyj3pFXaOQ/CReqXl/wi7x6Hx
gXkd//xbWBOPNyvCC0d4hHXx8OnlW/jkjjDiYVvw2HL2trAxHoeT+nS/eEvK
j0fYX6aKV6uk/Hicv/rvtLG/SfnxmN/H2OHqTSk/Hg2Cdm/JuyHlj4fNU2Xo
cl3KH4/pe9pPrXtNyh+Pa/s63Xt4Vcofj19WrZzmI9kyHheSrnRvfkXKH49j
o3tG9L8s5Y/HzPa2jnMuSfnjMbJTdc+rF6X8BJRfWtG5h2RdAr4I+U/5xl+k
/AQc7vhveVvJxgRMP7y6zcYLUn4CVk7//OHHku0J0CRPGXW2UspPwFPt3fxs
ye4EPD599Ou3JWsSEZrds+7p81J+IlLrfPLeTMlIhO/Wxun9JBsTMfxs4aB6
ki2JMNoSBp87J+UnojqvTc0Syc5ENEpOfTlLsvtZ3tTvPZ9J1iShVuXIzDaS
dUmY1eRuLx/JSMLOvIpG189K+UmYVv3Bmv2SLUn4dEDAnnWS7UlYvGdDi3mS
nUkw+2csz5XsTkLk+fw6cZI1E9C7+4ZugyXrJmDt4pxXQiRjAsrS1oV1lvMn
oE/Bo6pWcv4EdB/1v58ay/kTcKHO/L115PwJuPNBe+fTM1L+BNwPab3jH8ma
ZEybd3HqH5J1yTg2O6HFTclIxuujitMuSTYmA/vGJ5+VbEnGHp/FL/8s2Z6M
sMzKdoclO5OhWd342D45PxkbVob8Vi7np6DhzB5J38v5Kah9+fiQXXJ+Cs4v
MS/eJuenoEWNqYFb5PwUxBy7XHejnJ+C4m/qd14n56egqebdRWvk/BRsvOt6
v0TON+Hpe7VrrpKsNWHUSYOvXb4eE+63md5luWS9CZEdr89aJl+fCScueWp9
LdlgQr3HxSVL5Os1wbXryGibZJMJ7Ze/1nWxfP0mJPSubrdIstWEc70/1C+U
+5hwYMfl/l9JdpjwziPtxAVyPxNu1NP9NF+yy4SQ/1rekO02YW7a0ex5kj0m
NJu063er3D8VT/FGjGxtKnycZ27PlfunomLngwLZ+lQ48pY3lY1UdO/01945
cv9UdK7dOUG2MRV192x9S7YpFUnNXOdny/1Tsf/Iv4tlW1OR98rGUbLtqXhr
wfgA2Y5UjN+/7/4suX8q2s0aclS2KxW315evku1OxWt3NhbI9qRiWM7JkbI1
aTjV8ddPZGvTsFO7Vidbl4bL5Rdrytan4eGDz6tnyv3TUND58AXZhjTUfLvV
QdnGNDwe12mHbFMaGgefWC3bkoYE//NfybamoVdW4Jey7WkImLQ1V7YjDUtu
fZYi25mGl765ESPblYahe6NHynanwb/VzkGyPWmImlIRJluTjoFvz+olW5uO
t7d7PpGtS8ejnlVdZOvTsaluXCelfzquJEUFKv3TsaX8YDulfzr6hC1spfRP
R8p7P7ZQ+qejelBIM6V/Oib2b9BU6Z+ODpHtGiv909FqUOHrSv90fD9T20Dp
n44p1yvrK/3TkbPqVF2lfzq0lgd1lP4Z6Dy3X22lfwaqP/qhltI/A/eDh9VU
+mdg09f1X1H6Z+Dakus1lP4ZeGW3y0fpn4E/y869pPTPgK/lb43S/9m8Q0vF
1gykPhn7dIbcPwPu2F1PZDsysLe6iWJnBjaEfflYtisDK0NqKHZnILp8xiPZ
ngwE7G2mWJOJyUPKHsrWZiJ2c6RiXSbG1aqtWJ+JFpv2/CsbmXA8ylJsyETM
mK6KjZnIHPz4gWxTJh6HVyi2ZOLkv4sVWzOx5XyiYnsmwub2UuzIxIyjzRU7
M3Et+LFX6Z+JhcuvKHZnImDjT4o9mbjQYZ1iTRbeuDlPsTYLDdbkK9ZlYUiv
8Yr1WYiZP0wxsjBiQl/Fhiys2xqk2JiFH3q8o9iUheP/NldsycLMitcVW7Pg
tdZWbM9Ch+4axY4stN9z/77SPwvbvdWKXVloeaNKsTsLPZOuK/Zk4f3plxRr
svF56/OKtdl4/NEpxbps7P3huGJ9NqpLDytGNg7cOaDYkI3g6T8pNmajZuIP
ik3ZyFi4R7ElG0lPv1NszcaY1d8qtmejZ/5OxY5sxE7bruqfjSXfb1X1z8ZL
fg5V/2w0XrpZ1T8bq4M3qfqbn/0/vEHV34xNl9er+pvx2tl1qv5mrLpRqupv
hrGWygYzkrqvVfU3o/GXa1T9zTh79RtVfzPQV2WrGfX2lKj6m1E/WGWHGR8c
Xq3qb8bU0Sq7zPB/ukrV34y2a1X2mFEVrrImB7vqqazNgefISlX/HNSco7I+
B1nhKiMHB1qpbMhB0T92Vf8cDD+qsikHV0tUtuTg4CSVrTn4cYzK9hzM/lRl
Rw6q2qvszMHSBiq7cmB6uELVPwdBv6vseXa9Z1TW5OJ/+1TW5mLpDpV1uVi2
RmV9Li4sURm5+HCOyoZcLJqisjEXN3NUNuXitVSVLbnQjFfZmos1Y1S25+Kv
ESo7cnF6iMrOXPQYoLIrFwFh6v65mNJb3T8X/Xqq++chKVjdPw+/d1P3z8O2
Lur+edj3vrp/Hpp2UvfPw/qO6v55yAhU989DSgd1/zwsDFD3f5bfVt0/D1Ft
1P3z4G2l7p+HLS3V/fMw/W11/zxk69T981DYQt0/H0ubq/vn4+hb6v75eE1t
fT5imqn756PiTXX/fHyktjEfZf7q/vnopbYlH2ebqvvnI11tez781Xbk47Cf
un8+CtV25eNjtd35eNhE3T8f+9TWFGCO2toCGNXWFeB9tfUFqKs2ClDVWN2/
AIfUNhagVG3Tszy1LQXIUNtagFFq2wvwmdqOAnRV21mAtmq7CtBYbXcBaqnt
KcCDN9T9C3FHbW0hbqitK8QFtfWFOKk2CnFUbUMh9qltLMQetU2F2Km2pRBb
1LYWYp3a9kKUqO0oxAq1nYX4Wm1XIWxquwuxUG1PIea90H8i5rzQfyJmvtB/
Iopf6D8R01/oPxFTX+g/EVNe6D8Rk1/oPxGWF/pPxMQX+pPtZAfZSXaR3WQP
WWN50b5kLdmPrCMHkPXkIDLIoWQDOYJsJMeTTWQz2UIuIlvJNrKdXEp2kMvI
TnIF2UWuJLvJVWQP2UvWTKLzJ2vJfmQdOYCsJweRQQ4lG8gRZCM5nmwim8kW
chHZSraR7eRSsoNcRnaSK8guciXZTa4ie8hesmYynT9ZS/Yj68gBZD05iAxy
KNlAjiAbyfFkE9lMtpCLyFayjWwnl5Id5DKyk1xBdpEryW5yFdlD9pI1U+j8
yVqyH1lHDiDryUFkkEPJBnIE2UiOJ5vIZrKFXES2km1kO7mU7CCXkZ3kCrKL
XEl2k6vIHrKXrJlK50/Wkv3IOnIAWU8OIoMcSjaQI8hGcjzZRDaTLeQispVs
I9vJpWQHuYzsJFeQXeRKsptcRfaQvWTNNDp/spbsR9aRA8h6chAZ5FCygRxB
NpLjySaymWwhF5GtZBvZTi4lO8hlZCe5guwiV5Ld5Cqyh+wla6bT+ZO1ZD+y
jhxA1pODyCCHkg3kCLKRHE82kc1kC7mIbCXbyHZyKdlBLiM7yRVkF7mS7CZX
kT1kL1nzJZ0/WUv2I+vIAWQ9OYgMcijZQI4gG8nxZBPZTLaQi8hWso1sJ5eS
HeQyspNcQXaRK8luchXZQ/aSNUV0/mQt2Y+sIweQ9eQgMsihZAM5gmwkx5NN
ZDPZQi4iW8k2sp1cSnaQy8hOcgXZRa4ku8lVZA/ZS9YU0/mTtWQ/so4cQNaT
g8ggh5IN5AiykRxPNpHNZAu5iGwl28h2cinZQS4jO8kVZBe5kuwmV5E9ZC9Z
M4POn6wl+5F15ACynhxEBjmUbCBHkI3keLKJbCZbyEVkK9lGtpNLyQ5yGdlJ
riC7yJVkN7mK7CF7yZqZdP5kLdmPrCMHkPXkIDLIoWQDOYJsJMeTTWQz2UIu
IlvJNrKdXEp2kMvITnIF2UWuJLvJVWQP2UvWzKLzJ2vJfmQdOYCsJweRQQ4l
G8gRZCM5nmwim8kWchHZSraR7eRSsoNcRnaSK8guciXZTa4ie8hesmY2nT9Z
S/Yj68gBZD05iAxyKNlAjiAbyfFkE9lMtpCLyFayjWwnl5Id5DKyk1xBdpEr
yW5yFdlD9pI1c+j8yVqyH1lHDiDryUFkkEPJBnIE2UiOJ5vIZrKFXES2km1k
O7mU7CCXkZ3kCrKLXEl2k6vIHrKXrJlL50/Wkv3IOnIAWU8OIoMcqvj/AJ+u
vog=
      "]]}, 
    {RGBColor[1., 0, 0.], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[1., 0, 0.5], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1: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
gfONqqbP3aP0R+CDvVN+O/MfpT8St+ZfuxGk2BCJ7+zzH+fsVvojYSp57VgF
xeZIZDQ59OF05e/dEYltSX//WVOxKxKn7oZ0WrtT6Y/E9P67H/VQ7ItEtzuv
j7r7s9IfhZywnSu/VWyIwpOl294ephhRaPL76rffVGyOwtNBO6oX5Sv9UWj5
1fBYl2JXFDr0qbgzTrEnCpvn9pvVTbEvCmfrFVoCFeui0fVMSsWHO5T+aDwb
kaQ7oxjRCKi8o/ZWxeZo3GjU1P+VYkc09u2uPDpTsSsa8Tbr25GKPdHIGbn3
/iDFvmjs39hkW2fFOgsunw/+qIXab8GshjkDGqj9FsxtN76ohtpvwcp9Hbe8
2K70WxA3ds3uh4pdFmQan1wqVeyxYPfp508vK/ZZsG/DmRfnFesm4b1VuYUn
FRsm4bPO46MPK8ZLtytdt1exeRJOn5k5/We1fxIq//G/e9vU/kl42LDbxU1q
/yR8snN51x/U/kmodH7Qy29MpT8GJ8KXfbpK7Y+Bbc+KIyvU/hgktRiw8hu1
PwZV2g0+mKv2x+Cr9brmS9T+GNTt1//EIrU/Bh/mbVm7UO2Pwdmo1lsWqP2x
WL6mw535an8svoly9Z+n9seixfONhXPU/li06//H1C/V/ljcOjUgJFvtj8XD
6PutZqv9sah0rHurWWp/LCpOe9R9pto/GVfsV+NnqP2TMcPQcPN0tX8yFhdd
e/GF2j8ZydeWm1U7JqPvlgunP1f7J6PTtE/7q/ZMRmOsLHSo/ZNx//ytaNW6
KYidVTdAtWEKpv6IDdPU/im4sWLZSNXmKfjPkYm1VDumwFZ67/hUtX8Kas1a
kaPaMwXt038drto3BWPX/rOxal0cVu81Ps5S++NwvceIE6oRh3rpA9apNsdh
wpc7p6t2xOH3rQMiVLviMMv5n96qPXFIjTnSSrUvDse/aV1PtS4eNyvt1mn9
8SiZ0+Vuptofj5mrZpaoNscDN2OOq3bEo+dPR3ardsXjWknaZtWeeOR2D1+t
2hePr3+IyFWts2LfhOgc1XorftAPnanaYEXjaXWyVBut2DrxX8na+7MiqeO+
ONUmK3pWWWDR3q8V6WPvhqu2WlGvxumx2vu3ouI7QSNVO61o7r4bqu2xIuDX
twardlsx5+elA7R9VrSoGttXtdeKo5HZvbW9VgzV3+6h2m9FzVuzPtP229Bp
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
yLoF9PzJenIg2UAOIhvJwWSQQzT/H659Dww=
      "]]}, 
    {RGBColor[1., 0, 1.], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJxd03d00+X/BfCwBJkBQco07CrD8JVR9mWXHcpqgUK6INCV7nRBkBbKNOwq
imFXWUEQizKiCBQBCVakDCFMyw7IqID05+/wfD55uP2n53XevZ977nlOm4TG
BkSU1Wg0t8ppNP//+/WPp5fmzR/0WHKuR485S3u8ZiVEr+3zsHv3vcJaTNla
oUy9QYXCtbG/tINh2aqbwj6o9U+mLX3rU+GGaFx9beURtvI9X1uHpleC6/kG
1xRuiqGdqpc2P9VAuDl6hV1dvMzYQrglYgc4fOaf/lDYF50mBpd5pu0s/AGq
9NqS9nQihNtgd8kdrenEAOF2eM/VtHLuwBHCejxaWub6wLZjhNtDP+qj8qFB
E4X/h6EVZ3y18Vio8EeoXWN1ypodJuEOaNJh8eEyPmbhjqiT9PnpxLOJwp3Q
vuDcdysL04Q7w5QU5Hux9SxhP7x/LbtpZXe2cBf4vrWi0oEDC4S7Iuna0OiE
OUuEu2HNkMt1x9VYKdwds9//48TkbauFe2Bw/34zbSPWCvfE3W7WatNzNwr3
Qp+0HTlrL38tDBTO+6Tm79sdr20F/j14ueMnW3aLe298903Dzt9+slfceyPK
7/Tku4sOinsfpB6+Pvpc3CFx74ON7dflF947Ku59cT7qk29amU6Ke19M1d5+
cb7Kb+LeDye++bLRrPf+EPd+WJHacMbIuhfEvT9ib/uuqbrULe79kRn6/Ggy
rov7AKTPaHJ88/fF4j4AXYNXjnG3vi/uA5HYd/zHncMfiftAtDpYae/RqU/F
3R93y1WefGbAC3H3R5MFB3odWqUR/weD8PvictuOtSn/2tZB6PtqpLlRViVx
H4zYh/a8YUeqiftgzF3x6VJdrVriPgQJMXVOx9+tI+5DcPmrdX9+uqK+uA/F
zbPOSy0a6sR9KDYNKaz8eHYzcR+Gnu/7Dq27tpW4D8OZK9EBG3LbiPtwPAys
/79FQ9qL+3AMHhTb51ZxB3EfgUHDD58N7NdF3EcgLLV0ee2snuJuwG9XF469
Pr3Pa8OAoCNXer7oPED8vQHDV94vLTg2+LWdBtwMunrW0swg8iPR7ev9U7fF
jBL5kQiad/DqnpBxIj8SySuS6x1uOFHkR+KDQLS5c9Uo8gGIOLk2u7BfuMgH
YJz2wsbJw00iH4CtBW12jmgcLfIBMF30uPpExYn8KBS6+3gmFiaK/Chssuxe
vuaiReRHwfzyw6yr6zNFfhQebe6445MNs0R+NJ783HKDqSRL5Efj4bw/r394
NUfkR+NZk3qjeqQuEvnRWF3Z9/i5yCUiPwaRlU/nDFu0XOTHYEntMYOf6nNF
fgxWF38Z0Nf0uciPweLYic/KrLeL/FhU6X+7XdPY9SI/Fuvb/HSlyvpNIj8W
q16Wjdw06GuRH4vdo9MLK8RsF/lx6Le/8T8rF+0U+XEYeGRKzRttd4v8OPT1
sQTfa/idyI/DyEazW7ed/L3IB6LqLwPfii3ZL/KBOLW8vu7kE6fIB8IzxvF+
n0aHRD4QBxI6TroWf1jkg9AxaH2F4U+PinwQau//1Ri26ReRD8Jbz4wN+sw6
KfJBuFP/9MBmfVwiPx51N9Zu9vYfp0V+PP45N2vUsLRCkR+P7aWRbb5sc0bk
x+No14w25tt/iPwEfLc7Yl+5nUUiPwFL/vYfY808L/ITcL/xso/KDLso8hNw
ovy2fZsbXhL5iXB9cfzUlluXRX4ihvUqbPNtkVvkJ2Kp/pcz+flXRH4i1hkf
rz287KrIB+N+YHzcFdM1kQ+Gf8+Nlo6dr4t8MGZcmKav8UrYGYyWWy41d++7
IfKTELJ/8snuCTdFfhJ6DOj8xXndXyI/CS0vfJa56LCwcxIa/rvucr+QYpGf
DFwssFV6LIzJ2LrrRvKTzFsiPxnBltCArqXCzsnYt9+1prbltsgb8deOJ+tP
FgvrjCgu3nnou5F3xPeMWLh/ZNU2u4SNRsx953CtnGp3xfeNSB5Wvk6bEGG7
EekTEkNTtws7jZjUIeit00+E3UYEj+i6Y2nne6I/BOcio082SBTWhWBWjx1X
j2wRRgjef7bj5e1LwsYQvLdn++gL1e6L/hB8N/rT6n/5CdtDMK93bq0go7Az
BHX3Rb1MyRJ2h8BUOr/hnI3CmlCcjZkw98dDwrpQBK2a92H4ZWGE4ui7P1Ta
UCJsDMWWTXH6XTUeiP5QjL/bpYGzubA9FNM++vznJ52FnaFw6he50wcJu0Nx
/cWEailBwpow7AsyVHjbJKwLg7nZ+FOGJGGE4fytwPvTZwkbw7DxzLrFcQuV
/jAMrrBwZ8ZKpT8MPrUOj133pdIfhqZbLOufblb6w7C3pFHFhTuU/nD8MFQz
KWGP0h+OZE12zX37lP5w7N3Vs1PiT0p/OB4evbI576jSH46t3do3izih9Iej
Qbd/g3e7lP5w7Ks4vJH9d6U/HG8n/TGofZHSH4H7A4+VNV9Q+iNQLrLNjrBL
Sn8E4nr8XO2dK0p/BM6Md/TNuqb0R2CH72+39t1Q+iOgG1S73k9/Kf0ReFWY
l5R7S+mPQONHAV363VH6pyCx3anux+4q/VNQsDhK0/q+0j8FEYP+2hX1QOmf
gm/2L++xxKP0T8Gi9g+w+qHSPwU9nYubL3qk9E+B35XVdaf9rfRPgfvJkXfb
P1b6p2JfxCnPTcW6qahTsn7wwidK/1S0MbRY3/Sp0j8Vb+1ZOnaLYutUxG7O
W9vqmdI/FX9XtWzIVeyciilBL8NLFbunon5A8umJJUq/Cb8dtP20U7HOhMjf
R/37SjFMCN18p0P/f5R+E54X9K+ardhqwi9L59U9qNhuwvT5MX/+rdhpgvNy
QlGz50q/CeePv0gZoVgzDdvGDmuSolg3DSbXDP1qxZiG6nWH/PODYuM0/Ggr
PHpOsXUa6ucarjxWbJ+GlQ92ZlV7ofRPQ4tt+jvNFLun4bd7hf5+ijXT4TP7
1onBinXT0deRsG6CYkxH9ScLPdMVG6ej6PhP5y2KrdPh29Y0K1uxfTr6r3KX
WaL2T8fwgdeTV6v905Hf+0DJBrU/Etf3Zn2xTe2PhH7C0NRv1f5IrLo9ds0+
tT8SW7b2aHRI7Y9EwKO6FY6p/ZFwtFgT9qvaH4mBeYP6F6r9kVh8Iu7bs2p/
FB63nXLggtofhZkb5ky7rPZHYUuVoINX1f4oaGp8cfSG2h+FqR9Mmles9keh
uGL5KnfU/iiUDQkJuKf2R+Fm9o/hD9T+aIz4+vGAh2p/NLrUnvDvI7U/Gl8N
eLDgsdofjQoY8fSJ2h+NzCs/93qm9kej4rJhkSVqfzQOdFyb/o/aHw17ol/C
c7U/BtkfB4x+ofbHICvgue6l2h+D0rFVLqg2xqDfbx2z/lX7Y3D+p7KNX6n9
Mfgs8exXqp0xcB0o8S1V+2Pw9Omiz1VrYnFpzfoKmpdKfywW/d42QjViETyv
8j7VxljsyS5XpYxiayyO9XAFqLbH4kx63eWqnbHYcM18SrU7FhcDplQoq1hj
xrAmSZ1Ua814r1+NMNU6Mz4b+/kC1XozLs5Pc6iGGRuzSk+rNpgRpEv1qDaa
ca5Vu6rlFJvNKPNsUgvVVjNa1RzQXbXNjIpf+YxUbTcjtGHFcNUOM8aF90hS
7TRjVvq1LNUuM4q/b7RMtduMKe2q2VV7zIi5cmqLak0ciprP2qNaG4eJv3Zx
qtbFoX289phqfRxWrKp3WjXikFw8tUi1IQ4/T6x6WbUxDjdC3r3h3R+Hxa+W
3fbuj8Pwv5c88O6PQ8eiBo+9++NwsHP3Eu/+OBg2v3zh3R8Hy58Rpd79cWh3
ZGbZ8ur+OPRcMbKCak8cSv+4UlG1Jh4zZnaqrFobj4iS0VVV6+Ixu22f6qr1
8eiSW1arGvG4OeizmqoN8Qh4UvUd1cZ4DHwWXFu1OR6hk2x1VFvj0frRpndV
2+KxpMuGuqrt8dhnne+j2hGP6Zcm1FPtjMdxv/r1VbvicXXQUa/d8Vi+PryB
d388+uz622tNApocTmro3Z+ADhXveq1LQIOF4xp59ydgxrC9XiMBY9vVauzd
n4CK/4Z6bUxA+6StXpsTEN37gdfWBBS+bP2ed38CTB3CvLYnIMS0wmtHAoZX
O+S1MwGtF9312pWAAP9aOu/+BExe2cFrTwKeHRnltSYR2U3NXmsTcfn2PK91
ibgyYa3X+kQ837LHayRiY9VfvDYk4tLXF7w2JmLhjjtem//7Xq/nXlsTsSWz
YhPv/kR8Nfcdr+2J+DW1sdeORMyO9vXa+d/3Utt77UrEvV1dvHYn4kC73l57
ErHzxUCvNUlY+sFwr7VJ2HtslNe6JHS4Gei1PgmXFwR7jSTMPRzitSEJzz+P
8NqYhMYNpnltTsK7/lFeW5PQtXWstD8J/Y7HSfuTMLhdorQ/CYVBydL+JNwP
sEj7k9C6cZq0PwnfHkyX9ichsFumtD8ZHy+fIe1PxthfZ0r7k7HljlXan4z6
D2ZJ+5NRcv5jaX8yYnbOlvYnIyoxS9qfjF0tsqX9ybh+RLItGfFBc6T9ydh5
SbIjGefGzZX2J6P0sGRXMlp+kCPtT0bHbMmeZGiKJGtS4N9snrQ/BflTJetS
4NkoWZ+COZckIwVPa86X9qfgB0g2pqB3pGRzCu4ukWxNwTvfSraloPIZyfYU
NHgk2ZGCuVUXSPtTsLC5ZFcKIrpKdv/XP1yyJwUGo2SNBT+YJWst2DxTss6C
bosk6y1Y8qlkWPDLBskGC15tl2y0oF++ZLMFu5ySrRZMLpBssyDwlGS7BdvP
SHZYEHdB3v/f3S3vtyD+hrzfgoJb8n4L8u/J+1Mx7KG8PxWLH8v7U5H1TN6f
ik7P5f2pyHsp70/F1Vfy/lQUaxZK+1NxoKxkayoiy0u2pcJTQbI9FQEVJTtS
sbySZGcqvn9bsisVP1eW7E7FniqSPamwVZWsSUNgNcnaNFSvLlmXht2y9WkY
XEMy0lAo25AGg1ayMQ1O2eY0+NaU96chW7YtDedl29PQspa8Pw3Rsp1p2Crb
lYa/ZLvTUP8deX8ahsjWpCNFtjYdX8rWpeOQbH06rstGOsrWlveno6FsYzo6
yTanY6hsazomy7alI162PR2zZTvSsVy2Mx122a50bJPtTsde2Z7/9sjWZOCk
bG0GzsjWZeCSbH0GbshGBu68sT8Dj97Yn4Gnb+zPwMs39meg9I39GShXR96f
gYqyHRmoLNuZgeqyXRmoKdudgVqyPRl4V7YmE3VlazNRT7YuE/Vl6zPRSDYy
0Vi2IRPvyTaSzZloKttKtpHtmWjxxn6yk+zKRMs39pM9ZM0MtHpjP1lH1pMx
Ax+8sZ9sJJvJVrKNbCc7yM4ZaP3GfrKb7CFrZr5pLVlH1pNBNpCNZDPZSraR
7WQH2Ul2kd1kD1ljfdOVyFqyD1lH9iXryX5kkP3JBnIg2Ug2kc1kC9lKziHb
yLlkOzmP7CDnk53kArKLXER2k4vJHnIJWTOL3p+sJfuQdWRfsp7sRwbZn2wg
B5KNZBPZTLaQreQcso2cS7aT88gOcj7ZSS4gu8hFZDe5mOwhl5A1H9P7k7Vk
H7KO7EvWk/3IIPuTDeRAspFsIpvJFrKVnEO2kXPJdnIe2UHOJzvJBWQXuYjs
JheTPeQSsmY2vT9ZS/Yh68i+ZD3ZjwyyP9lADiQbySaymWwhW8k5ZBs5l2wn
55Ed5Hyyk1xAdpGLyG5yMdlDLiFrsuj9yVqyD1lH9iXryX5kkP3JBnIg2Ug2
kc1kC9lKziHbyLlkOzmP7CDnk53kArKLXER2k4vJHnIJWZNN70/Wkn3IOrIv
WU/2I4PsTzaQA8lGsolsJlvIVnIO2UbOJdvJeWQHOZ/sJBeQXeQisptcTPaQ
S8iaOfT+ZC3Zh6wj+5L1ZD8yyP5kAzmQbCSbyGayhWwl55Bt5FyynZxHdpDz
yU5yAdlFLiK7ycVkD7mErJlL70/Wkn3IOrIvWU/2I4PsTzaQA8lGsolsJlvI
VnIO2UbOJdvJeWQHOZ/sJBeQXeQisptcTPaQS8iaHHp/spbsQ9aRfcl6sh8Z
ZH+ygRxINpJNZDPZQraSc8g2ci7ZTs4jO8j5ZCe5gOwiF5Hd5GKyh1xC1syj
9ydryT5kHdmXrCf7kUH2JxvIgWQj2UQ2ky1kKzmHbCPnku3kPLKDnE92kgvI
LnIR2U0uJnvIJWTNfHp/spbsQ9aRfcl6sh8ZZH+ygRxINpJNZDPZQraSc8g2
ci7ZTs4jO8j5ZCe5gOwiF5Hd5GKyh1xC1iyg9ydryT5kHdmXrCf7kUH2JxvI
gWQj2UQ2ky1kKzmHbCPnku3kPLKDnE92kgvILnIR2U0uJnvIJWTNQnp/spbs
Q9aRfcl6sh8ZZH+ygRxINpJNZDPZQraSc8g2ci7ZTs4jO8j5ZCe5gOwiF5Hd
5GKyh1xC1iyi9ydryT5kHdmXrCf7kUH2JxvIgWQj2UQ2ky1kKzmHbCPnku3k
PLKDnE92kgvILnIR2U0uJnvIJWTNYnp/spbsQ9aRfcl6sh8ZZH+ygRxINpJN
ZDPZQraSc8g2ci7ZTs4jO8j5ZCe5gOwiF5Hd5GKyh1xC1nxC70/Wkn3IOrIv
WU/2I4Ps7/X/AXpWUNk=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"ps\"", 20, StripOnInput -> False], TraditionalForm], None}, {
     FormBox[
      StyleBox["\"generation\"", 20, StripOnInput -> False], TraditionalForm],
      None}},
  FrameStyle->16,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->400,
  Method->{},
  PlotRange->{{0., 1001.}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.605848361249523*^9, 3.605848417116027*^9}, {
   3.6058484513286877`*^9, 3.605848486651805*^9}, {3.605848533922573*^9, 
   3.605848553077237*^9}, {3.605848583852087*^9, 3.60584860421669*^9}, {
   3.6117353847433577`*^9, 3.611735413561531*^9}, {3.611735450604269*^9, 
   3.6117354705833683`*^9}, {3.6117358515826*^9, 3.61173585526303*^9}, {
   3.6117359152099247`*^9, 3.611735970327388*^9}, 3.611736111552147*^9, 
   3.611736153216011*^9, 3.611736193989946*^9, 3.6117362832073717`*^9, 
   3.611736428204136*^9, 3.6117365511434393`*^9, 3.6117365953798113`*^9, 
   3.61173664346413*^9, {3.6117366738076963`*^9, 3.611736723757802*^9}, {
   3.612338005603383*^9, 3.612338028611952*^9}, {3.6123380784315567`*^9, 
   3.612338103117982*^9}, 3.612338276674554*^9, 3.6123387078327017`*^9, 
   3.612339197700947*^9, {3.612570571945696*^9, 3.6125706015031557`*^9}, 
   3.612570688059802*^9, 3.6125766088419733`*^9, 3.676164850950182*^9, 
   3.67616492550921*^9, 3.676164962713213*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0., 0, 0.], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1: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

      "]]}, 
    {RGBColor[0., 0, 0.5], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1: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
90aUzeuq6/PI8MaRBuc4kx30eRHqzk0/up38QJ8vsTeGT2k0k45mPn/ecB82
qTQ8kj6fWm9MbvZ7g7iQPs813pgUurZmwxfm8++DAffSZuwfRRb4YF5D8BGb
v5m/Jx9MnDZ5Y54b/b0JfaAXIX866xHz9+mDyvKW0oOL6e9X44Prj2yvOLxi
/t59UPzfhKTECLoe1PggIMy6ZVJHul7o+WLBhzF7PY/T9UXgi80e24pNPJnr
kS+qzYRjEkzoeiX0hVwx+bHFS+b65ouqX61SklfT9VDji036wxstRjLXS19c
+mX738+2dH2t8YXL5S97xujT9VjPD+47P6f+6k7Xb4EfFlxs7DpuFl3v4YfC
3waBW9fQ94PQD+V5Vh7nvtH3idgPp/zey/5E0PeNxg/Xl3Y+5dabvp+0fjBM
z1/5Iom+z2r8cDu13ffrRsz3nz9uDH5Y3eMefX8K/GE9qyL7whn6voU/Hs27
f3TrXfp+FvojOqncNKkNfX+L/dFtwJKDK8vp+1/jD6G6bY3+Y+Z+wR/pc82N
FH3ofqLGH1cPjm+xW0P3I3oBGNbdOXnUErp/EQTg8p2PisEOdL+DAOivQ689
/nR/JAyAqUXSvNrABNofgMXpUqnxoljaH4DZawVth2TQ/Zs2AFOUXZdfbxNB
+wOguBf1sc015v4wEJ3CS/KF5+j+UhCIbbtXLp1wbzXtD8TO6v6r/lEE0P5A
THw8SFuxjrnfDcT5iE6Ch/V0f6wJBP4x7O64ge6ntYG41mfQWvt4uv+uCcS7
X7fsK8bS/breKtwdt7FHyd/utH8Vup2aE3XohSvtX4XH2/JvNEyg5wfhKjRr
7Jz0tIaeN8SrcLHr7eaV2fR8olmFns1en3v1hJ5ntKugeDp5/PtsO9q/CnHP
/Y9O2M88H61Gv7ygSOeu9PwkWI0hD59vP3ebnrewGm9tTXcb5Eyk/asR+6fo
SN+WNrR/NdRPxxUOez6W9q+G98SnGR1M6PlPuxqWCiff+gOjaP9q2Gx7NM3b
YCTtD8Id40n6IZOG0v4gDO35tNWF2sG0Pwhr2sUsvfjDlPYHwXZshMzPuz/t
D4LGyai5fj8B7Q9C+dKSZjYz6XlXG4Rnu1+Z7bpqTPuDsMVq1cmgE11pfzBu
++4Wipt3pv3BkHWL8Z62h56nEQx1v6oJv03b0/5gzOoQI1ks/Yv2B6PRPX5r
kXMr2h+MIyuXZRkpW9D+YISYXs0x6taM9gdDqmj7o/Dlb3qeF6Fk8tw+lwb8
bLKhCJ4PluXHVn9rskAE24ZhF3r8+txkCxEEJfmF+6I/NRm6n58xwFOi+thk
J935gdNhNwreNVkogtWzM923L3zTZJEIsVm/92/2etVksQjOAY3Xptx/3uQs
EbzjhrWJG/isyRrd739vNnjluOom54swM3PXiM6lj5qsFaHSQVa561p5k8tE
qLKpTjQzu9/kGhFW50w78Pz03SbXiXTX3wKH3aduUv4QbFq7UfhxfCnlD4HG
+undwKFXKH8IqjRxu8qTLlL+EOin93lz0FxL+UPgXXLod7upZym/zov7tS8o
KKb8IRi7/uH5DetPUv4QpG785THkWQHlD0HOtWaj9yflU/4QjJ927Nu7x4co
fwhuzDxvsd9mP+UPwQKTPHWm4V7KH4IS89m1V+fsovwhGDHIcID7Cw3l13nt
qIe1qq2UX/d6/LPsVlVvpPyhWOXRv8WPHespfyhc66Y8jCtbS/lDceWcaZub
7msofygO6fe4XeaVQflDEZ6Y92WdJo3yh2LLj6K1yxcqKH8oPt7+8LomTEb5
Q2E5f6ug5KOE8oei3uyJZlN4EuUPxY2vnmtLcuMofyhOOha162sdTflDURe3
3N5qWgTlDwW+TQgPOhRK+XWvRzpq61dfEeUPxWKfpD0vK1ZR/lDoT+py+MQS
f8ofBnP5zHbr5/pQ/jD8udN+acmOlZQ/DGM3LrTqb7+C8ofpnhfm/IkMX0b5
w2DqaDcy/9Fiyh+GnPWy8X8fXET5w9D4Pm3npxculF/3+wvC4vaInCl/GBad
9W5t6+BE+cNg0cJk8a5bcyh/GATjbNXCGHvKHwb7D44/56tnUv4w/LY3/+t1
wzTKH4YlA5yNep+YQvnDcOnfw/aH/SZT/jD8HPpQ7fBiAuUPx/ChHxPnXbWm
/OF4d+vRmTutx1L+cMxx3fo5fPNoyh8O66o2QQujRlH+cOjNCx8UO3Ak5Q/H
zmUe9t1uDaX84fAwda/u/dCM8ofr7recsx9YDaL84TgZGFrztmYA5Q9HZMDX
oQvL+lH+cHyZGLx+1re+lD8cI0eP7Vx4woTy615//ZEBx+72oPzhqP3Se1mw
bXfKH47zG33Kwj51ofzhqAyc0Mn7dSfKHwGrkv4RbzsbUf4IOD0scu/4pgPl
j4B5dNT5bn/aUv4INMx6MaXK+y/KH4HYtDm3Yzu1pvwRKEx/MM70tz7lj8Bw
14YvH/q0oPwRCC9NuHoqpBnlj8Cc04Mf2tf8mdiUPwL5F7scLTP/3WRNBL5U
3J657vTPJudHoOaLicxE2dBkbQRyvn/YdkX9rcllEbisv8o+/+KXJtdEoFGv
deMe089NrovA1ct57Vsd+dRkvUi8eWrW/cTiuiYbRiJvhHSc0dyPTRZEYtyh
8mp53w9NtojElPmHxH8GvGsyIvHFs/n0Ba61TXaKxNhFqyPeHnvdZGEk9oQ/
mpJn+U+TRZEwneTv+Lr8ZZPFkfA5vf/P0nUvKL9ufvk0x/4hzyl/JII2Lr6X
411D+SOht7Ofyemap5Q/El7i9BUX+vxN+SPRokWXyBhJNeWPxIWHd98mtqyi
/JHY5eHf7+q+SsofBZ9+koo13o8ofxQmrmx1KMC2gvJHIbylfmF384eUPwqt
Di6u3DCsnPJHoUfQvJe9pj6g/FHY8rhqUTP/+5Q/CqdN7bW3t9+j/FGYqd9R
bf5PGeWPQpsO2uXPx5GzovB0+ZkNx4bfpfxRuNkx61z/5ncofxQcLn3rMPP9
LcofhQ+a70kRb25Sft3+bpc+Wny9Qfl1+1rc9+vZmVynez2jYsvrJ1+n/NEo
XFb5eX1sKeWPhvt366JfF65R/miMOG5fYdGVbBGNO7UeeS5hVyl/NCb0r7Xa
Un2F8kej4OjwyDmOZGE02tYfLT117TLlj8bFHfukMx3I4miUvp50dEX5Jcof
jZNlN9+meJM10ZiXenSh9e+LlD8azfs+Pdp6M1kbjcpwnyjVJHJZNBrabDFf
+eYC5Y9GTbur68esI9dFY/iyEOv8WWS9GOT1Kjogb9RS/hhUff02IPQUWRCD
oi2HGy2iyRYxOHRmtKPchowY+Dk6R43XIzvFIHFN4IWh2ecpfwyOxF0d8XAI
WRSD8Vn3O3W5VkL5Y9Cs11jpWn9yVgxi5gXO1Tcia2Iws+2FHJNz5yh/DIQ5
HRdtWE3WxsB+wvjeVv3JZTFY+37PtsKqs5Q/Bov8f4e+Xk+ui8FuWeT1DFey
Xizih/QflNiDbBiLF8Z5pvJnZyh/LMZHNEyOyyNbxMJnjmSbVTgZsZjeSfpC
NZXsFAunI4JGj85kYSwGRH1oI399mvLHYvncZNM3Z8jiWDgIusz0XEvOioXA
T2xevYqsiUW37q9GjLMj58fiRIDTuKUDydpYiN6lrRujTy6LhcufPZ/2vzpF
+WPRx2+O1Z6r5LpYCLEltPMBsl4cgkNCqp9nkA3jUDG2+d7GcLIgDh/rCpq5
e5At4iC8b9D6+XQy4vDEcM9+xQiyUxzqzK0OTupBFsZh1JpJmQ36ZFEchq27
npn3qZjyx2Ht/4qzpz4jZ8VhWsKLvmdukzVx6N/i2qLW58j5cfj3yct3JofJ
2jjsjM42qt9KLovDYu9AWUImuSYONRkDIgol5Lo4yBqrFDnhZL14yIc8vNXR
j2wYD4SvPS3wIAvi0WzgbDOtE9kiHudT8u3ezCAjHrXBRnsyJ5Cd4nHnwynj
46PIwnh4/dp6a7YZWRSPkvppo136Mvl1tnyvf60bkz8eIo/3E7Z3YPLHI3Ku
nVFlKyZ/PF5tifqx6k8R5Y9Hn2UuO9wbyGXx+Okz6f3GT+SaePhN8/ww5D25
Lh4jAga/a/kPWS8BBxZeXGT+jGyYgICFtQ/WPiYLEvDRaNegyeVkiwQ4Ppsy
echdMhLg1svXct4NslMCttSPtD5yhSxMgGvziAPTLpBFCejh179F+3NkcQKM
3+ypan2KnKX7+echr0edJGsSEPR97XflMXJ+AjRWy360OcLkT8CGkn51Jw8w
+ROgNfz5XbGPyZ+AoVX7piXtZvInIHBXbK9NO5j8ifgSZPekYhuTPxGfs0O/
jd7C5E+EYffvH45uZPInosv7dBf7DUz+RLR2vXe/MYfJn4i6liG972Yz+RNR
NSr4R3EWkz8RcbN8bc5kMPkTcXTP3xfK1Uz+RFh+2JCor2LyJ2JH8O9A+1Qm
fyJMfJPW7FQw+XX7ggyad5Qz+RPxUy+sOl3G5E9EvbLVzD7JTP5EeJz/GXZe
wuRPgt5/ejtEYiZ/EqYPe2A0KonJn4T7NqWd9RKZ/EloJln960k8kz8JTqYD
h1yLY/Inoa799cZzsUz+JHSzd36rjWHyJ2FklmzJ3WgmfxI05Vvv1EYx+ZNw
IfOvi+0Ya5JQf7j7GZtIJn8SXN8UTg+NYPIn4cQSy/8VhDP5k7DJvn7erzAm
fxICTk9uNpdxnS7vnzY794Uy+cWorjrx0ICxgRi7baumhYQw74cYHt79c2tE
ZGMxXIUdpa6MBWJY5JeduB9MNhOjtKvxGxfGFmJ8WVR3/0kQ2VqMks/rxgQw
hhjDts2/+2s12U6MixKXlTmMncTY3399kQVjNzF6VhzPubeKeX/FOH7q3pVI
xn5iWPVIMBYwFolhMyrL43YgOVqMy5O6eyUyFosx5NbYFqMZK8UQDets+D6A
6UOMhd1Pee5lnCuGtVvrh16MNWJsSt44dRDjPDFW7z2ufOfP9CWGz6sR8mOM
i8WQ/PDpFcdYK4Y2x8x8FuNSMS5INOu6Mi4T4+uG2VNf+5ErxdDzedP1FOMa
MSqzVn5PZ1yr6+PpgztejOvESH7hmTKRcYMYjx1mtDRmrCeB7Mzh8V98mf4l
uGJ7ocN9xoYSXBqhDjnG2FiCFyXf52UzFkgwovJ8bjhjMwmkqf4T3BhbSPCx
erzZRMbWEvzVZbjTAMaQYL37x91tGNtJkKO9a/zZh+lfAuejF7c9YewmAbY6
mV9jLJQgd1DO0QLGfhLsFFkO2M5YJMH0apdYNeNoCbr92nkglrFYgnvPbA/4
M1ZKkJ1xMtidcZYEY8ra19szzpXg1vCjZhMYayQYNNy37XDGeRL0v+yZ3Zdx
vgTv9MwLOzEulqD61ebgVoy1ElQGvyv66c30L0HW4/XK/zEuk+Dbt9XVrxhX
SpByXXaginGNro+xY+rKGNdKoH7dc981xnUSGEw3vFHCuEGCobuHuhQy1pPC
Q3UWRxgbSFHS2V61l7GhFMUhqpHbGRtLdfcvwUNyGQukWPPaMGINYzMpRvcp
7qBibCHFAavH9TLG1lIsDjTqk8QYUtwPHJgew9hOiuYJf2zDGTtJ4Xr7sHkw
YzcpasqECwIYC6WwLPA/4c3YT4pDD61nr2AskuLPao+uSxlHS2HTL8nQnbFY
CvU5H5uFjJVSTP1dnzWfcZYUHdxNOs1lnKvb/6b+jANjjRT952xVz2Kcp5s/
vEg6nXG+bt+50M1TGBdLEXPduWISY60UBRVBo2zZ/qVodW3ewfFs/1K0S8uc
Oo7tXwo/18qvVmz/Usz98PKSJdu/rq+a2IMWbP9SHK8LOziC7V+KIo/jF4ex
/Sdj/mzzOnO2/2S0GV1hOYTtPxldZmtTB7P9J2NL89+fB7L9J6ND4kGRKdt/
Mnb2/NrYn+0/Gc7f223rx/afDPvkkY4Ctv9kZBntbNuX7T8Z8SEFlb3Z/pMx
QF143ITtPxnlLdtt6cX2nwynV93X9GT7T0aJ9czsHmz/yXh1+6/txmz/yTjy
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
mTDhG5nQpvD7z4Qf+f8AYCvEvg==
      "]]}, 
    {RGBColor[0., 0, 1.], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1: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
S1mbqfBu+f2rrM1V2LPLlLOVCpU+465w/avQvVfaZa5/Fb5ryy5x/avwdHQX
zg4qHL0Sd5HrX4Vb5eUXuP5V2G81kbO7CleGHj7P9W98vQ/tOItUcD25o4Tr
X4W6lXacxSp863zoHNe/Cr07jOcsVWHG6Dtnuf5V6OIRyjlPhca9m3Fer0JT
ScEZrn8VCq3dOBeo8PbBl9Nc/8bXk7aDc7EKfarmcS4x/n1DS86lKpyddOkU
178KVVVpnMtVUO5y4mxQIdpXwLlaBfvXl05y/atwqq+Gc70KB37O5SxQo4lL
T85maljW1J7g+ldDefM8Zys1HO+v5ixUY2pVCGc7NV7WgLO9Gu63rDk7qPGf
5FMx178aje/rObuo8eDWAc7uaqjm5XD2VqOXVwRnkRqhJbM5B6thIhvBWazG
dE0nzhI1nPUCzlI1jo2vPs71r8av63rOeWrYhp3kvF6Nc613cNap8a0gj3OB
GtIhKZwL1dBuCuVcrEb5P96cS9TQvJ/KuVQNp9JRnPXGfhbacS5Xw/VPa84G
NWpXtuRcbXx/7H4d4/pXI37+e871xve3+0vOgkzExTzibJaJZ+43OZtnoubA
Rc5WmdinPsFZmIms8oOc7TLRZ8NOzvaZWHR5M2eHTMz0XsMZmZjmquXskokn
+QrO7pm4OCOVs3cmvs6M5yzKRG6+mHNwJh6ND+UszoRHvwDOkkxsWOjLWWrM
r/fmrM7ETYUn57xMnJe4cV6ficSd0zjrMjG51WTOBZnYugucCzPRPW4s5+JM
BMc6cC4xzm8bzrk0E3/8tOesz4SvbCDn8kwUDO7H2ZAJXWNbztWZSPrRi9d/
JlZZ9eD1n4kZ87rx+s9C16Odef1nYa29Na//LMy+ZsnrPwvf0/7H6z8Lk93b
8/rPgqmjOa//LLQY24bXfxbGz23F69+4T96C138WmpaZ8frPws4ezXj9Z0Gu
bcLrPwtnWpry+s9C+kYTXv9ZaDa2Ea9/43zN7yKu/yyM2/eLs9p4nviTc14W
jsz7wXl9FvrhO2ddFlxGfuNckIVEh6+cC7MwfEo95+IsfPX9wrnEeC6r41xq
3H/wM2d9Fvz//cS5PAvBNjwbsmAT8ZFzdRYcSz5wrs0CrHmuz0JFwnvOgmwc
q6zlbJaNFHeezbNhuPyOs1U2NBN4FmZj3MW3nO2ysW86z/bZWPfwDWeHbJSE
8IxsPBfw7JKN65tqOLtnY8I4nr2z0erZf5xF2WiUzXNwNv4bxbM4GxuqX3OW
ZKNqE8/SbPw5h2d1Nna15TkvG7duvOL1n43aHJ512fjgwXNBNvZb81yYDZPn
1bz+s6E/wHNJNgQpPJdmI9qVZ302zIU8l2fj7KcqXv/ZCPiL5+psvN7Gc202
nFJ5rs/GlAU8CzSoHcWzmQY2HXk21+DJl395/WvQ9DHPQg0UZ3i208B9K8/2
GixQ8+ygwZoInqHBKy+eXTRwncCzuwbn+/PsrUHfjjyLNFA15jlYg0u1L3n9
a/D0Kc8SDS7f4FmqQfQZntUaPN/Pc54GzfN5Xq/B4zyedRp4ZPBcoIEojudC
DVqG8lyswRRfnks0MPPkuVQDNxee9RpYOPFcbjwfzrNBgx/9eK7WoGNPnms1
yLXmuV6DyHY8C7Q43JxnMy2mm/BsrsXo7y94/WuR9IlnoRat3/JspzVer/Js
r0WzZzw7aLHsb56hhcVDnl20+H6bZ3ctut/g2VuLxFKeRVq0uMRzsBb6czyL
tbhyimeJFq+O8yzVYtxRntVanCvkOU+LJft5Xq/F0D0867TovYvnAi0ct/Nc
qEXEnzwXa1G6hecS4/u7iedSLW5s4FlvfL/X8VyuxZQ1PBu0GLiK52ot+q3g
udb4enJ5rtciQMuzIAd/ZvNsloMvmTyb58BXze8/BxVKfv85CFLw+8+BqZzf
fw4Oyfj95yA8nd9/DkZJ+f3noE0av/8cfErh95+DqmR+/zmoTuL3b/z7ifz+
c2DGtyQH/RP4/efAW8LvPwfaeH7/Obgex+8/B+351uUgIJbffw5Ox/D7z0Fn
votzII3m95+DN1H8/nOwmG99Dsoj+f0bXy/fhhz8Leb3b+yD79ocfI7g92/M
x7cgF/34NsvF9eX8/nMRxbdVLjrzLcxFaTi//1wk8m2fi8F8O+Siehm//1xs
59slF37k/wO32aEh
      "]]}, 
    {RGBColor[0.5, 0, 0.], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJxV13lYjPv7B/AQshzKmiNMhGRLkiS8iVRESIpktG/a91IzU81MNU1JkT3Z
sicpQoZjiWPJlpQldMhynI41DvnN9+p+lp9/XK/r090973lPz/OMvnvwYq/2
GhoarztoaPzv/7Z/zTM0/v8/HN53xF7R8ml6G7WwK8jtniyxI/2cNqJf3/50
UqpN7gOfnKzuHfL7kXWRtvJb2q0vemQ9DBWftVh7V58swMzmBD8bp+HkoZjr
0ZTyuuMosgEueVue2NI4hjwCeZG3TFfEGZMNYde8fOWyrSZkI1gN1AtWPDQl
j4F54pAax4mTyePwTZAzUO/gFLIx3pe7n141y5I8AfaZHTSLv08nm8B5vFBU
+wbkiXCozyrP9J9FNsXMu389dftpRZ4E7wHn103fPYdshurBtotHC+eSJ+OZ
XvkIYxNbsjk0LELHeQ2cR56C1ALMbtazJ1vg1Ju/93Y0X0ieiu9nqhw/lTmQ
LaE483HSl6eLyNMwpzjBvqL/EvJ0TAgwH/SfmyN5Bh7dj5iaULaUDJyfcUPV
dciyNouAW3k1FWs3OdP5TDRert5VNmI5nc/EtskZT3deWUHns6DcfmDa5LUr
6XwWZP8kiuNsVtG5FQJ6Xv86LU9I51ZYOXl3yJic1XQ+GwmO+uO3b3Gn89k4
1Wnmk/ElHnQ+B9kBjrtSazzpfA7K4kUR87p407k18pN2h02a50Pn1uicVmGt
sc2Xzufi+rqLktBffnQ+F/Y2yzo5hwfQuQ2uHrjtrfgWSOc2GLZwwYp/c4Lo
3BZW1mP6WQhC6NwWFYvK1kvbhdK5HeZMGtat4W+yyA7+H1tdb/4VRufzEGn5
ZffT1+F0Pg+en0bGF32PoPP5+NvCfvJF3Sg6n4/bvQ9Nuj87ms7tMffFxUGp
STF0bo8+WXuNUq/G0vkCHBxeHaEcFk/nC4AA8TR3ZQKdL0R58tKp17om0vlC
WA748Sp/UxKdO0DnWdCre9tEbYYDjH9Oft8cI6afd0DLg281G90kbVY5oG/6
vuY5C5NpfhEWdHQsSZiXQvOLMFjr0PMLS1JpfhFahM8rd/tKaX4RDuZcF5Sm
y2h+MU6X/rVLXiGn+cUoj2isOteSRvOL8WW5rP/PORk0vxieteOnvylU0PwS
dNN/OG6ytpLml2D76rfmm5VZNL8E+ZOO9vTNyqb5JRg0xabvTeE6mnfEP59z
fm+cmkPzjugRtsWll/56mnfEXKNEl4vauTTviFeiHm99u+XR/FJIdyzWD9PZ
QPNL0Xxz4ZylwzbS/FJY/rbxYvrMfJpfiugnnwcoAzfRvBMWdt519PHuzTTv
hDMDTCq+v9lC806YnZnRzW/GNpp3QszWAY+PFG6n+WV4bjrC5kDXAppfBnHP
OSYf/iSLlsGs/VXtyLydNL8M8d32Lo/1KaR5Z2x82PJszqxdNO+MF0/Lc/VH
7KZ5Z9TWBExa0nsPzTvDOXVpN/2ue2neBePvuadVd91H8y7YKVn8dk/fIpp3
gctWz6oXRvtp3gXn3b9svmZ3gOaXY0/nAMv8yIM0vxy6V644yg4eovnl2NEh
7OzNd4dpfjn0RWk1BVOO0vwKLO9t6tPXtpjmV+Azwv62/Y8sWoH0FZ1MEo8f
o/kVcGjtl10ZWkLzrvDzzdbubXac5l0xclPi60SNUpp3xSMT6y+/qskqV6i+
dRil3HeC5ldiZceEz7+nlNH8SqwRjizL9i6n+ZUY2X1A9zsLTtL8SiyYWWhx
yvIUzbshSng7qb9xBc274ZPJkIBSw9M074Y1JXUT7UecoXk3XBhqoJNreJbm
V2GXkyJv/PhKml+FvuXHtSumnKP5VbiovJzQMExF86uwrlLXxP0QWUMIl22W
VgPNzrdZIFRfP/33nVWRIYTV5GytT/MutFkohG7d0b2rH5BFQiSUz7ErdP+j
zQVCPHa+P9fub7JKiB6frmx4GXWxzQ1CHLG9+PNHK1ljNXqN3+LUPfUS7V8N
/XVX3yq0LtP+1QiZ6/Nvs5wsXI0p/w0ZuKfjFdq/GsN8ZA46ieSC1Zg557Ro
079k1WqU3bqTt31VFe1fDYOSvvKkK2QNd/SdvSJ7s+FV2u8OHUObmAUSMtwh
1vXu9OMuWeiOMWfskjsPukb73eGmMnGscyUXuKPpZ+Hexhyyyh3mtbdG7qgk
N7gju/r8ecVTsoYHpu6JWGb5mSzwQP3zjBi7X2R4oK97qabHT7LQA49Fa8pm
/cPs90A/q8uKk/eY/R5oWFHQbd9hZr8HBh20s+sYx+z3wMbN56ueTmH2e8Jo
7w5Nl7+Z/J7IPHDhyv5cJr8ndtg1jNY3ZvJ7It/i6EIDFb1/Ik/or2o8PXYO
ucATerWt0dfPMe+/J4pyiqsLjckNnugemXHXM5/61PCCsH9Qas1Xpn8vBFu8
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
IA79+jeOm2xDLo7DcX+HySuHk1VxCHmTnjdJk1wdB6dfe/7d33iK8v/v9803
3XOZ3ByHVdga1vsAWSMeQaGh9c+UZO143DNrv7c1giyIx7vmknYurmTjeLjd
0er8bDYZ8ajT3rNfNo7sEI/3RqYHpw8gC+Mxft30rBZNckg8DPOuZhX9e5Ly
xyPrn5M5s56Ss+MxY+3zIadvkAviMajDlWWdz5KL49H06MUbvcNkVTx2xOTo
fNhGro6Hk1dAytosckM86pXDIsvE5OZ4JLXWyXIjyBoJEI+6f72nL1k7AVMi
1lcIXMmCBPxnMM9Q5UA2TsCp1GKbV3PISEBjsM6erKlkhwRcfXdK9/gEsjAB
wh/brs8zJIeo5z9YTXQcwuRPQIXJW80r/Zj8CQh0fTt1Rw8mfwJCFtjo1HZi
8ifg8dbob4G/yil/AnTdHHe6tJCrE/DRe/rbTf+SGxKw2sr93ai35OYEjPQf
+abjX2SNtdi99MIyo6dk7bXwWtp0d/1DsmAtmnR2jZhxj2y8FjZPZ84YdYuM
tXAc6GOy8BrZYS02fxhvfuQSWag+bx95wOo8OWQt+vkO7fDbWbJI7Vd76jqf
ImevhdOz0JcTTpAL1iLo6/qv8mPk4rUoNHX71vUIk1+9r1K/+cQBJv9aXND+
/lW2j8m/FmPq9lkl7Wbyr4XfrriBm3cy+RPxIcjmUc12Jr/aOWFfJm5l8iei
R/+v745uYvInotfbTEfbjUz+RHRyun2nNZfJn4jmjqGDbuUw+RNRNyH428ls
Jn8i4uf6WJxWMvkTUbzn8fl7CiZ/IkzebUzUzGDyJ6Ig+GeAbRqTPxF6Pknr
CmVMfvW+IK32PaVM/kR81wivz0xh8qvzyDtZD05m8ifC9dz38HNiJn8SWr9r
7AwRMfmTMGvMXZ0JSUz+JNyxqOqtkcjkT0J78ZofjxKY/ElYYDB81JV4Jn8S
/vntauvZOCZ/EvrZLn6timXyJ8E4O2XFrRgmfxIK7m272RTN5E/ChawuF7oz
LkjCx8P9T1tEMfmT4PSqbHZYJJM/CaUrTP4piWDyJ2Gz7YeFP8KZ/Enwq5jR
bgHj5iS0+9W1cF8Yk1+E+rrS+1qMtUTYbVlnFRrKvB8iuHoNzW8IIeuKsFzY
U+LEWCCCaXF16Z1gsqEIN/vqvnJkbCxCy7LmO4+CyOYiqD7mTfJnDBEmbF90
68caso0Il8WOHrmMHUQ4OnRDuTFjZxEG1xzPvR3IvL8ilJ26fSmKsa8IZgPW
6goYh4hgOSHb9UYAOUb9+6f390xkLBJh9HWzDhMZy0UIGdNb+60/04cITv1P
ue9lnC/CFOfO9z0ZF4iwJXnTrBGMi0QI2ntc/saP6UsE/8Zx0mOMT4og/eY9
MJ6xSoQLuYZGcxlXiXBRXJDXl3G1CF83zpv10pdcK4Km96u+pxg3iFCX7fE1
k3GTuo8nd296Mm5W73vunjqNcYsIj+zmdNRlrCGG9PThKZ98mP7FuGJ5vscd
xtpiXBynCD3GWFeM55VfF+YwFogxrvZcfgRjQzEkaX5TnRkbi/G+forhNMbm
YnTtM9ZhGGOIke/yfndXxjZi5Kpu6X70ZvoXY/HRC9sfMXYWA9scjK4wFqrn
R+QeLWHsK0ZhiMmwHYxDxJhV7xinYBwjRp8fhQfiGIvEuPXU8oAfY7kYSuWJ
YBfG2WKYVv/2wZZxvhjXxh41nMq4QIwRY326jWVcJIb+RfecIYyLxWjSMCrr
xfikGHWNW4I7MVaJURv8pvy7F9O/GNkPN8j/YVwtxpcva+obGdeq+7qacqCO
cYO6D7NJzdWMm8RQvPx93xXGzWJ0ma19rZJxixijd492LGOsIYFrxhkcYawl
QWVv24y9jLUlKAvNGL+Dsa4ERnnBo/IZCyTqfdqR6xgbSjBu8MkeGYyNJdhj
+vBDCmNzCZwCdAYnMYYE1QHDM2MZ20jwM+GXZQRjBwmW3DhsFMzYWYKGauES
f8ZCCUxK/Eq9GPtKcPC++bzVjEMkaF3j2ncl4xgJzPWTtF0YiyTIOOttsZSx
XIJZPz9kL2KcLUEPF71eCxjnq/e/+nDajnGBBMPmb1PMZVwkgdXhZZLZjIsl
sDgbtmUm45MSxF5dXDOdsUqC4zVBEyzZ/iXQurLw4BS2f/X+9KxZk9n+JfBz
qv1syvYvgcO7F3+YsP1LUNEQd9CY7V/dX3P4wXFs/xKUux6/MIbtPxmL5xk1
G7H9J6PbxBqTUWz/ydCdp0obyfafjO3tf34czvafDO3EgyEGbP/J2P3759ah
bP/q3/+1+3Z9tv9k2CWPtxew/SdjvU5htyFs/8kQhZbUDmL7T4ahouy4Htt/
Mmo7dt86kO0/GUsb+6/7ne0/GRfNrXMGsP0n4+2NLjt02f6TUf6wvqw/238y
9pVMfdiP7T8ZofIjHVlnJ+PHkHNT+7L9J8M352dcH7b/ZHTp+etCb7b/ZBgU
rOzNujgZig/lAb3Y/tXv35Bjf+qw/SfjcmyzCeuqZHiu0N+pzfafjIavH/qy
rlXnH6e7rifbfzKiVs/txbopGXm2Fpt6sP0n4+6dw8NZt6hf/+fV5b+x/aeg
MGfAAtZaKdBesvl1d7b/FBhLD6Wx1k1BcoeB41gLUjD4t+M13dj+U7Bh4uxk
1sYpGDC1YCJr8xQ8bbflVVe2/xQc8em6g7VNCqLMLruwdkiBoHtRf9bOKTCb
k1Hbhe0/BQVN87ey9k2Bee6f7qxDUuDi/2o065gUjNCQfNVi+0+Ban7iJdby
FOhtUuWxzk5BZcg4X9b5Kfiac8SSdUEKvjca9mZdlIJYT+nbzmz/KXj5+7FL
rE+mYJZO7k7WqhSkzx6YxLoqBes2T3RjXZ0CyYNr01nXqvtaf0vAuiEFtRMm
aLJuSoFdzdOmTmz/KShdef0m65YUtDg2nWCtkYo+/w7fzlorFcrOMTLW2qkY
1/lOKGvdVDxqHrmStSAV5ouCbFkbpqKnxWYz1sapWG2504C1eSq2usf2Zo1U
9Bs9oANrm1SUSaI/dmT7T0V3VUYja+dUBG63r2EtTIX7lBNVrH1TsUjr9GnW
Iamwrlt2lHVMKjTupOxiLUpFX/ep+azlqfCxjcxknZ2KvKwxyazzU1EpXhHL
uiBV/XzyI5h1USq6vOrqw7o4FZ1MxW6sT6ZCr365E2tVKkyc1y9gXZWK4ytG
zGVdnQqLqp5gXZuKWcXzprBuSMXnJTUmrJtSMWLIoTGsm1PhsO/qCNYtqdi9
f7Q+aw0pbLrcGshaS4rdN4r7sdaWYq/gpg5rXfXP2xv8xlogxfezxVqsDaWw
/i9Ek7WxFJ4H3DVYm6t/PiP5hybbvxQP4m63sLaRosTf7jNrByn0fd79y9pZ
iticE+9ZC6W4bLD7LWtfKar8y5pYh0jR49Kbv1jHSNF534wXrEVSjNlwvIG1
XIqho+Y8YZ0tRffOH+tZ50ux4+Xph6wLpNieuf0B6yIptKs33WddLMXWrEN3
WZ+U4m3F/dusVVLo2fepZl0lhcDe5ybraimm3bhxnXWtFKlvrP9k3SCF+/Xb
V1k3SdF795oq1s1STDk04ArrFikiDO9fYq0hw3vPHRdZa8nQviz6D9baMtyL
XnmBta4MGj0czrMWyDD5xQIVa0MZfvi6nGNtLINN/+BK1uYyzArMOsv1L8PX
t6fOcP3L0E/w/jTXvwwVG0dzdpZB+1VoBde/DMb7VKe4/mV4E9mfc4gM4Z8j
T3L9y+Bwvb6c61+9b48NZ7kMFuPOlHH9y9A4wIxzvgwXB5Wd4PqX4fuHqZyL
ZKhaeqWU61+GvI7OnE/KUHzx7+Nc/zKYOcs5V8nQIhvJuVoG+8F/lnD9y9Cx
KYxzgwzmpYM5N8kAx5vHuP5lyN4i5twiw75V5pw15PgQ/aGY61+O0rNHOWvL
8a5bCGddOZxmTOQskGOG2bejXP9yiKrPczaWw+0fBWdzOTZFLucMOYznGnG2
kSPE9scRrn85HrlXc3aWwzB+L2ehHL3iEzn7yhE135lziPrn6yZyjpHjU08d
ziI58ur+Ocz1L8eBkdWcs+XY/NcxzvlyFHbI41wgx+XQWM5FcpwUrOJcLMfr
dtacT8oR0HkcZ5X69Qzrz7lKjjt27ThXq/sJfneI618OlayWc4McprJLnJvU
r8fjOOdmOXx6F3JukUOiWMdZIw0fLok5a6ldFsZZOw3Gyzw566bhyHYnzoI0
1KbacjZMg3fHaZyN0xDebwJn8zQsLxnOGWm4d+d3zjZpuBmqzdkhDTlpnTg7
p2FHn58Huf7TUPbbJ86+6tcT/JZzSBpg9oJzTBrcXOs5i9JQ9/guZ3ka5GXX
OWenIe75Jc75aXiy8hzngjToDj/FuSgNZ0yPcy5OQ0LaYc4n02AqKOKsSsPz
z4Wcq9JwqPN2ztXq17d4E+faNFy7l8u5IQ3tMrI5N6VhcLiCc3MaHqXLObek
oXd1CmeNdBRDzFkrHWV1azlrp8Nmaxxn3XQUJEdzFqTjP2UEZ8N0VJ4J5Wyc
DsduwZzN0zEjNpAz0tGvoz9nm3REHPbh7JCOAaFenJ3T8ccCD17/6cCc1bz+
0xGyZBWv/3RYx6zk9a/OV7KC17/69bZbzutfvd/Tmdd/Oj49dOL1nw7P1Ut5
/afjw7clvP7T8bBwMa//dCxZsYjXv3r/UAde/+mwbVnA6z8d4fX2vP7Tkf7n
fF7/6dCsmsfrX52v2o7XfzquvbDl9Z+Onu15bklHnpENr/8MNLnO5fWfgdx8
a17/GZjweA6v/wwsMOJZkAFF0mxe/xnIfmTF6z8D38CzeQbiDs3i9Z+BssE8
22TAb+NMXv8ZQD+enTPwZTN4/WfAbjjPvurz0hm8/jNQYctzTAZWv5jO6z8D
h8Q8yzMQYMBzdgZ8/5zG6z8DgVE8F2TAYTjPRRlofGDJ6z8DrZk8n8xA2Fye
VRnQ0+S5KgM1f0zl9a9+v6Q812bg5TyeG9S/vzfPTRkofGLB6z8DpQd5bslQ
3y951lDgwHyetRRYLuBZWwGdL1N4/StQeoNngQJj9vFsqIBQwrOxAtareDZX
4OI0nqH2IJ5tFDD/Zc7rX4Fez3l2VgCXeRaqX89Bnn0VcM7hOUSBEXE8xyjQ
xYNnkQI/5/MsV+DDZJ6zFagbxnO+Aoe1eS5Q522dzOtfgb/e8VyswKRHPJ9U
YP51nlUK6J7luUqBvCM8VyugKuC5VoH09Tw3KPBOynOTAo1xPDcrsDqY5xYF
fD151sjEPy48a2Xi74U8a2dCaM2zbiZmT+NZkIlsU54NMzFjDM/GmVhswLN5
Js7p8YxMSPvybJOJnT14dshEDy2enTNR1Y5nodr/mfH6z4T2F55DMrG1meeY
THi85VmUiTUveZZn4sgznrMzMeIxz/mZuFvLc0EmSu7xXJQJVTXPxZn4cZ3n
k5nwvMqzKhOfLvFcpd5/gefqTGSe47k2E7lneG7IxJlTPDdlomM5z82ZCCzl
uUW97xjPGkrkHuVZSwmnwzxrKzH2IM+6Sgj28yxQwmgfz4ZK2O/h2VgJ6S6e
zZW4s5NnKGFSwLONEru38+yghOE2np2VUG3hWaiEz2Z+/0oM3sTvX4nGjfz+
lSjfwO9fiU15/P6VkOXy+1dCsp7fvzpPDr9/JTav4/evRFk2v38lnmbx+1ei
B98qJWyU/P6VSM/k969EjYLfv/r95rtBidQMfv9KvErn96+EA98tSlxI4/ef
BUu+tbJQIef3n4VZfOtm4bqM338W3Pg2zMInKb//LGTzbZ6FcXwjC3dS+f1n
IY78f4sLyQA=
      "]]}, 
    {RGBColor[0.5, 0, 0.5], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
hz6Gy9LJ4mR4N+h+LlBEliTjtelXyf4x5LxkuGdbHJ1jS9YlI0CvD5tqSi5M
hm7es+S0LymUPxmhVv3WlT8ilyUj4lDilEmXyPpkVJ/7fK1sH7kmGWEbnjWZ
tZ4sSEHi+eI1t3LIZikw1TY9OiiBLEzB0uernFKCyA4pWJUQvWjpdDJS8HlV
n3ExrmSPFGxT7ezdZiBZlALHU7O+h9mQxSnQPShuHG1JlqQgwEbdyroZOS8F
gx0vjw7+nUz5UxDZd3X38R/JhSmQFrTdcPQluTgFD98se7f/IbksBS38Ou2w
v0nWp6Dhxb6FNpfINSm4lb6r/4qTZEEqVHWdNsceJJulIqJz01On/yELU9E+
Y3lq1GayQyq0vcdYyNeSkYqZez78/LKM7JGKNwFv759Wk0WpEN93yX0sJ4sN
578/CadkkCWpePnu5YOmSeS8VHSM62vTKobJn4oGC4zW+oYz+VMhMt/0vXoh
kz8Vzs6z+p4IYPKn4vW/GpT4MvlTMfxqiyDT2Uz+VKyxdnubO53Jn4ZtpXsn
jvBg8qfB44lrq26TmPxp6JzcrHqQO5M/De2tD2xNdmXyp2HKvTFdX4HJnwbP
p4/8Mocz+dPQxDZHPGoIkz8N+/9pndVzEJM/DXt7/L7X34nJnwa3lvEX/Poz
+dNwInzuoV32TP40aA95d2/fh8mfhkU9v+q29mLyp+FMq1uXJ/dk8qdhdsiF
aa16MPnTcGdAny/vujL505E8tmfWCyGTPx3WD6vvfbJm8qdDv0H4yLITkz8d
t3YNyPHqwORPxzDHq483WTH502E3zqm6kSWTPx0nt9+4nGLB5E/H8tpVGxq0
ZfKno8J544p1rZn86ejqkF851pzJn46a6MC7v82Y/OnIO7K94GJLJn86dDNE
B9aZMvnT8e9y2VRJCyZ/On6v3fJY3JzJn47483ml4c2Y/BnY36mhJL4pkz8D
w6o9E1VNmPwZWP65Y78dJkz+DNjMb9Dz1l9M/gzs7hFQ1ZCxRwbs1c2NRjVm
8mfgXJMWDbMbMfkzoHu/MOd2QyZ/Bsx/6/v2YpyXgaId55ZmN2DyZ6DZ592+
b4yZ/BlILvJ1mcW4OANZHpKyUiMmfwZ+RMvujWasz4B0QITxWQGTPwOvTXY3
GcdYIEHE2U8FN/8k1dtEgtjp5hv9GZtJ0Gnhzd21v8mWEuiW3Fidx1gogdJe
ZNePsa0E3w+F9br1i+wgQUHutPlJjF0k2NTvyrbujCFBnzNl52//JLtL4H4+
PS+bsYcEb9v/ejyMsbcEe7stVNT+IIskmFtzMOAA42AJNiq2ToxhLDbk67HT
2plxouHxI24d/fGdLDE8f9XRn+cYKyVYYR1bomWcJ4GHRcafOYzzJdAO3ivv
zVgnQZWkC359IxdIIOrSp+1NxoWGfeM8qrcxLpIgP6HPnnTGxRLsyot09WZc
IkFhwNXVAxiXSWBx/+1qM8YVEjjvCev/vo6sl6B20+nJNxhXSTDEaeijQsY1
Eqwr+XV9GeM6CTZ4vDFPZCzIRMD0zat9GZtkoiQkcborY7NMtDINHtiHsWUm
Dj4279eWsTAT//Y55PTnK9N/JqSVnYe8ZuyQCYeKfQPKGbtkIsd+msU5xsjE
iFlB9woZu2die/ubizYy9jDsF7y9qmXsnYlZHzPfpTMWZcK82/mSSMbBmRjU
a4qXP2NxJvZ4d8z2YpyYCVsP5Ww3xpJMPD7menEwY2Um8sbMvtCXcV4myg5b
e3RlnJ+JRZ5DRe0Y6zJxbOTG980ZF2TitXNmnTHjwkysGz8n7lst038mDt+q
FNUwLs5EY5X14UrGJZm4erS/+D/GZZn4tTxXdY9xRSZG7boiKGOsNzw/yfnr
JYyrMpEwIKnmDOOaTGRM6RBwnHFdJtJ2mAgPMRZIsT6o1GYvYxMpfIxMY3Yw
NpPivHS30RbGllLoD2++sYGxUIpd8pYPVjO2lSJzdn/rFYwdpPiZH7I6j7GL
FFcdB41XM4YUbkOceysZu0vRZ7n1cBljDyk+7D+bKmHsLcUJf9OqVMYiKVzX
N0pLYhwsxeTkc4PjGYuleGmZ1DGGcaIU/25e1E3MWCJF0Zy6SeGMlVJ02Z2z
KpRxnhT7p+mMghnnS1GdfC0niLFOim+ND9jPZ1wgxbpTxu9FjAulqFmbVurH
9i/FRqtPJ+ay/UvRRoUSH7Z/KcLjPV57s/1LoWvYvusstn/D6xeoi5jB9i9F
07Efr3ux/RvyTOw12pPtX4rSVSGXPNj+pXjt9sR3Ktt/FkYYlTScwvafhQkq
v+OT2P6zUDvznWQi238WYm1Lp09g+8/Cmn/cncez/WfhfMfr3d3Z/rPw4P2Z
zuPY/g2Pn7rMxo3tPwvPdhW5jGX7z8KoA7tnuLL9Z+Hdqc+pY9j+sxB6pO2e
0Wz/Wbj5bX3VKLb/LNhZCfuwFmfh+98DDBeZTP9Z6KqPvTqS7T8L5dtltqyV
WdgnNFGPYPvPQtqygtrhbP9ZsB7SOpi1Lgu7Wn37bxjbfxYK95j6sS7MwvTW
zZ8OZfvPglqxK4x1cRYqo/d8H8L2n4XJLre1rMuyML71fz1ZV2ThXm3+hcFs
/1l4En55IeuqLBinjTRlXZOFU/KLRS5s/1n4YeewkLVAhhLnqVasTWSYnFl3
fRDbvwxVFcZK1pYyeL1xc2UtlOFWv40NWNvKkHCr8oIz278MTrrfKtYuMgg+
n/VkDRn2bGnbibW7DFs+VbwayPYvQ2RqTRFrbxmMeoxSsRbJsN90ny/rYBnK
FT0HsBbL0O23uinrRBnWfrj8zIntXwbzqiunWCtlcPVPWcs6T4bsKxeSWOfL
8F9i/mzWOhkOLn8yhHWBDC+t8jqxLpRhQekyI9ZFMgzq8ujlALZ/Gc57+V5j
XSLD2ZGND7Euk8En+PJ61hUyrHm7TsFaL0OsPCqadZUMF2OH+bGukcE45+ME
1nUyPGqV48JaIEf0wy82rE3k0Nr2s2BtJkfg7t6NWVvK4aJ6WuvI9i/HfreJ
Vaxt5fh81fcBawc5nIPMr7F2kSN3n38xa8hxYofrQdbucvitOljA2kOOvub/
rGftLUfkzy7LWIvkyM9oncM6WA6TJskZrMVy/HbziGedKMe6HkvCWUvkaH11
UBBrpRyN14z0ZZ0nx+vuW2awzpdj+UD/Kax1cry7ED2OdYHh9fh9B6wL5XAb
KBvCukiOY69SnVgXy/Hy/HF71iVyxK8c3ot1mRyOXn+6sa6QY0rr39as9XKU
mA1qz7pKjg9bt7dlXSPH04mTW7Guk6PN6h4tWAuy0R72TVibZGO6aVAj1mbZ
2Pv6khFry2xI70z/3Z/tPxuxT5v8YG2bjUWjXnxl7ZAN5YAXn1m7ZMOupclH
1shGxxGT3rN2z0bOsMJq1h7ZcMt3fM3aOxs/39+sZC3KxoKP6hesg7Ox1Dfg
GWtxNvr+9njCOjEbT/bM+o+1JBt7ZsU9Yq3Mxpi3BQ9Z52VDLf5wn3V+Nj6/
nVzBWpeNxmkny1kXZEM/cuRd1oXZ2B1w6zbromyM6hB/i3VxNjYU9LrJusSw
z7P6BuuybDiEnLzOusLwfF3XXWOtz0aZq/Iq66psbC6TXGFdY3i9Z8ovs67L
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
8e2+GKHk/wNGKOPV
      "]]}, 
    {RGBColor[0.5, 0, 0.5], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
hvx/ngvXHA==
      "]]}, 
    {RGBColor[0.5, 0, 1.], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJxV2Hdczf37B/BDRtxGdvYhd4UQkox4ycpOSLJOaUly2qd9dmdWsrKSHUJm
2VnJzuiWEUey485tZeXb7+H6jJ9/PJ6Pd9e5zuu8TufzOXXzWebuV1cgELw2
Ewj+7/8//6pGCv7/P1y7ubp4q1n58D80x5bN/hX1/Vs5/7EFSjyrLp3e0p/c
Gt2ar5p4RzOObIlhqqUZ7qdmkztB//vm7CNW/mQhxk74a9Dgn2Hk7jiy+mCQ
bVYiuQcaiGalz1yRTLZG3sPXe7cnLifbQrDv9/Spg9aSe+GwPMAs69hmsh1u
+8ZZPgjOJvdF77/PSLbrcsn2iDQ9yNjY6ii5P6TaFWVP254iD4DOZteD/I/n
yAMRNfrqrhYRRWQHzJtUpho8/iZ5EAJnl9wKvn+H7IgJngOczta7Tx6MjUPz
jwZ6PCE7oXd663r1lc/IQzBuZR/XO31fkYfiR01y9/133pGHYY7785Qnbv+R
h2NWTO/4IYFfyM5wjVk1I8LtB3kEIuUVn8vXCEb88UhM1h/ySGxfjwxcv7t+
zuTx5n8sBWLqm81shKZ0PgqfSje+K1nRgs5Hwaq4yzlh6zZ07gJ1xu/d0UPa
07kLmvfsXmwUdqHz0UiSHfsY+rkbnY9G4br/oooW/k3nY4DTfsY2/j3pfAyK
K0a1edu9L52PxQV94dBND/rT+Vh4Ni12ShUOovNxMJ3c9dul2onOx+HomkZe
trHOdD4eIdPbqmZ5j6Lz8Rh6sV9McMwYOndFcbhFjzRLVzp3hW+F6FObWZPp
fAJsbdy2SLa50fkEOL4rMFppZ9D5RHzcW72xyRsPOp+IJYcSW6sfetH5JJy1
NO9pHbmQziehjaeq+O/FPnQ+GeYJ79fN1frR+WSUVAbJM/sspvMpaNvo91PX
JUvpfApqhrasm9InlM6noiLr0LaKJhF0PhUPfDvNdvWNpvNpEIs2/voxLo7O
p6Hhf4WDpl1NonM3RA9rPNGgkv8x3GBzwC6wW7qKft4Nw6fgWV4n7R8XuGH/
hCg3ryFGmp+O+zukBRt+p9H8dFicED1feWEFzU9HwzEnC9v/WE3z05GvLX/f
6cg6mneH655nHvMbbqJ5d1R/jG/5tt4WmndHbsjcHl0rt9G8O8wmHz41ZUI2
zc9AbNjDC5/75tD8DHz/VHp9yJxcmp+BHmGTtjh9OUjzM5A7YcyhQz+P0PxM
9HAe9I9lwjGanwmP9I575ulO0fxM+I9RTe3b+SzNz4TX3g7Hbe6cp/lZuN4q
f+LWz4U0PwuJT3v19l51heZn4fXWni32XbxB87Pw6/rwRT43btG8B8Zv137p
su4uzXvAYcG935fu3qN5D3TaJHrjlvqQ5j3guSux45CyJzQ/GxE2dk8ig8pp
fjYaDf+8tq3rc5qfjd5DW9aZvPoVzc/GsiNeOW38K2neE10P2XrH+VXRvCfe
nZzlvOvdfzTvid555w8ElX6meU/kWH9LjnL4RvNz0GrrTrPslr9ofg52X9kl
sD4v+HMdkc7B69TT/U66m/1xwRzkZ26KzRvTgK4zXnAemXZKvbPRH8MLW9dF
fN2ub0rzXpj0NKDovzotaN4Lb25cnF6W3orm58K2QrjlmrItzc9Fn4X7P+Q8
b0/zc+EwaUjMrIudaX4uVmX9NKvo0I3m52Hjx7H1Tm63ovl5aNw0ouRaijXN
z8PoNuO+DX/Wk+bnweFB5eCqA31ofj7Skuc/ely/P83Px6Vp4U9KZANpfj76
hvU/ljHbkebnozJpvnHkiiE0vwB9Ioyr/V2caX4B8hOObLY7DppfAJc2Ko2w
82iaXwDhSaMw585Yml+ILpebIu2VK80vxPw3grM3AibT/EIInhwr9+3nRvML
cbRuq9ABIe40L0KfrVsbraye+cdCERr2trI9eG82PZ4Izj3tz+a0mfvHIhFO
Vd4v3HdqAT2+CCNvSuvUCfH+4ywRNirOKFqcWUT7RHC68iMsaI7/H5tE2Lu7
Sc8OYxfTfm94Bk80VeiCab83xG1qpNYdxLTfGz4bcwdd/zuM9nvjYkhdu6ql
EbTfG94f11+VVkfRfm8sy7Ccdf9qDO33xtA7Abkn38fTfm88F9l593KQ0n4f
HCkRJ7cTymm/DxK+jj7acaSS9vtg+pyCcZ6r1LTfB2PWJLZsY6Ol/T5Y/nvp
kOPVetrvgzqOX+RFzVJpvw9+LHO3euW4nPb7oPvX5gEDm66g/YtwMVXc2thk
Fe1fhLpOA471H7yG9i+Cqyj8yqTUtbR/EcKan5r6tu0G2l97HvHR9PNmJu1f
hG/PZrQQPs6i/YvQd5BPWWbIFtq/CFEDmsi7dNhG+33R9szdK52ebqf9vljv
4RFUeX4n7feFXd/s8v3ndtF+XyyOfr9rZtke2u8L+/eBu1Ja7aP9vmjftXXH
oAG5tN8XXt6u0/sEHqD9vlA/FJ/X7j5I+/3wLlAdUlJ9iPb7odhqU73R7kdo
vx/aHBz339MjR2m/H6Z1c36X2T2f9vtho0enlmPXHKP9fnDpN3xFUssTtN8P
qQsufX2YfpL2+0HpFPTiWtvTtN8fUa2iw/duOEP7/SHLjgj3WV5A+/1xqf7J
yO0zztJ+f/z1XdnYsfU52u+PciunWTa3yVn+mPfW8YbecJ72+8N1oN/laJcL
tN8fje5c+WH2kSwIwJ2G/p+mbbxI+wOwY/e2eCUKaX8A2jvvLCl5SBYF4OKC
gCJVyCXaH4COXyykz7+SswJgNniczezoItofAGuHVS7TKsmmANQo/7owy+My
7Q9E1hxFSYMjZGEg7vb917OV+RXaH4iB3rKuo6aRRYFQFTV8EKQjSwNRes+m
MOkYOSsQQcKpnRWPyAWB8JrbbpL+I9kUiIR5Rz8U1JAFi1G2V3R+PmPhYlj0
6uS05z9m/2L4x/vZ1GEeT7QYO7q2nXLhOLN/MTrEHCnwTWX2L4blzzr+87yY
/YvRcLDZ/D6dmP2L0eKWT7SohMkfhAYjbPIVaiZ/EJQ+zuW29mQE4aiNoX3F
bXr9REEQtVu/duIysjQIJ0ttlB/qk7OC8Mnb+3LwGuqjIAgnzj/vNbUH2RQE
p4KWXj32Up+CJVg1+0T/2AFk4RJ8rX7e+J/D9H7AEmzzKe19zIEsWoKdkwPc
Nh2k9490CZwcMLGmLzlrCcb1P5g3djfz/lsCxXqPm497kE1LoOpfPsJuE71f
BcFItfbqqGtPFgYjZmWFacpKer8jGCO/LZMWNmfe/8GwmCqJGW6g3w9pMMz2
oeZDI3JWMJTxD0aNa0m/TwXBqNuhrkWT1vT7ZgrGw/IT01e3P0X7l6JuqqDZ
MCv6/RQuxehXa9+N7U+/v1iK1O2XL1aPPk77l8KpXgdrw1z6fZcuxcyO+172
k9DnQdZSNMjbcPKvdXm0fykerG95euRZ+vwwLcWhhrbVFe/o80UQgjHl0v+a
CsnCEEzu+9Xh0uzDtD8E8yoOXWq3ij6fRCEYET5sX51S+vyShqD0ksV8uZCc
FQJTm5yeK0Lo864gBOeurT3c8xx9HppCkCnaPcWpI1mwDH1beG2b95E+P4XL
cK9uQuMPx/fS/mWo/Ci/UNeYQ/uX4VfKqDs+i5nP32WQdDQvfjxtN+1fBtuT
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
xrdTKhbzjdrH59s1FV3I/wPsL8gD
      "]]}, 
    {RGBColor[1., 0, 0.], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1: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
ZHEKeh96F6nMIEtSsKBxzzPBYrIsBR8sPsn2jyfnp8A727pkrgPZkIIoozFi
hgW5KAU75j9OSf8YQflTkGA7cO3t++SKFKQckk6fdoFsTMHnMx8uV+wj16Yg
ef3jZj7ryIJUKM+W/nE9l2yZivb65iXDksjCVKx7ssopNYTsmIpNSbGLf/cm
IxU/VvWbFOdGFqViv2ZH39+cyeJUjD3h8yXCjixJxZ67pb/E2pBlqYi207bp
0oKcn4oJgy+OC/0RTvlTkdJ/dc/J78hFqdAVWq0v+Y9cmoonL5a93n+PXJGK
3wI6bx9wjWxMRavz/YvsLpBrU/EgY9egFcfJgjQsq++8Kf4g2TINCV2bnzi5
kyxMQ/fM5Wkxm8iOaVjZd7y1ag0ZaQjY8/bbx2VkURreBr3656SWLDY93z8u
eQ9UZEkaPvx4L5yeSZalofb1f3ebJ5Pz0+CQ0N+uTRyTPw0tFzZa4x/J5E9D
aNuNX14uYvKnAUN9+h8LYvKn4eO/OpT5M/nTMOlSqxCLOUz+NGzuMvFVnjeT
Px17y/dOHSNi8qdj7iO3Nj2mMfnT4ZDS4uUwdyZ/Onp2ObAlxY3Jnw6fO+O7
PwOT3zRfdT8gazSTPx1tHXIlY0cw+dNxbGc7hf0wJn86jvb6cWeQE5M/HV6t
E88FDGLyp6M8ct6hXQOY/OlYe8i3Z4d+TP50pNh/MmzpzeRPx9U21y962DP5
07Eo7NzMNr2Y/OkwDun38XV3Jn8GcibYK54KmfwZ6H3v5Z33XZj8GXi5Xnjf
pjOTPwOPdw3J9erI5M/AtMGXHmy0ZfJnYMQkp5dNbZj8GSjfdvViqjWTPwOG
ulXrG1sx+U3PN3TDirXtmPwZ6OdYUD2hLZM/A/Wxwbd+WDL5M7Dm8LbC862Z
/BnYMUt8YK0Fkz8Dz5crZ8haMfkzYLF28wNJSyZ/BrLP5pdHtmDyZ+Jk5yay
xOZM/kxMeekp1TRj8mdi44dOA7ebM/kz4bSgsf31X5n8mSjpFVTThLEoEyO0
LRuN/YXJn4mKZq2aZDdl8mdi95tFuTeaMPkz0emHsX9vxvmZOLv9zO/ZjZn8
mbD5sNv/hRmTPxPKYn8XH8almVgiklWUN2LyZ+KXOOWdcYyNmdANiTI7LWDy
Z+Kz+e5mkxgLZEg7/b7w2s+wBpvLIPduuyGQsaUM/Rdd2133g2wjw8GlV1fn
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
BJZ8YwkuLeb3vwR55P8BPYmrsQ==
      "]]}, 
    {RGBColor[1., 0, 0.5], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJxV2Hdczf37B/BD3OI2kpWVY1UIoVKIl519ioZ9pCWV0z7t0zmd05mVrKwc
65adkbKzNxmRnYQQd2Rk3Pz6Plyf8fOPx/Px7jrXeZ3X6Xw+p64+S9z96gsE
gtcmAsH//v/zr3qE4P//w5UbK4s3m5QP+0NTbNroX9HQv5XLH5uh1Lv6wolN
A8it0a3Fiom31ePIFhiqDMl2P+5F7gTt7xte+d39yUKMmfC3w+Cf4eRuKFy5
P8jGmETugUZij6wZy9LIVih4+Hr31qSlZBsI9vx2m+qwmtwbB+QBJsbDG8m2
uO0bb/EgOJfcD716npRu1eaR7RBR9iB7fatD5AGI1yx7/KztcfJApFlvf1BY
c5o8COGjr2xvGXmRbA+vSY+Vg8ffIDvAz6vkZvD922RHjPce6HSqwX3yYGQP
KTwU6PmU7ASbrNYNGqY+Jztj9PK+rrf7VZKHoOZXWre9t9+Rh8LT/UX6U9FH
8jB4xPZJcA78QnbBxNgV0yNFP8jDES2v+Fy+SjD8j0dgsu6AZ1L7BmTg+p21
MyePN/1jGZDQ0GRGYzSj85H4VLr+XcmylnQ+Et2LLU8LW7eh81FQZv/eEePc
ns5HoXmvbsUGoSWdj0ZyyuGasM9d6Xw0Lqz5GH1xfk86H4MRJ/wMbfx70fkY
XK4Y2eZtt350PhandOeHbHgwgM7HYkazYqcMoQOdj8OjY9t/j6p1ovNxOLCq
8SybOBc6H48Qt7ZKjwUj6Xw8nM71jw2OHUPnrrgaYdYj08KVzl0hrhB/auMx
mc4nwNpatEm6RUTnE+D4rsjQXTOdzieiZnft+qZvPOl8IhYfSGqtejiLzieh
yMK0l1XUfDqfhFbeyuKei3zofDIaJr5fM1vjR+eTcbMqSJ7TdxGdT0Hrxr+f
uS4OofMp+D3EvH563zA6n4oK44EtFU0j6Xwq7vl28nL1jaHzaQgRr//vx7h4
Op+Ghh/PO0y7kkznIkQMbTJRr5T/MUTosc82sGuWkn5eBOcpeF7QSfPHRSJs
nRAtmuVsoHk33PlHVrTudybNu+Hvo+IXy88uo3k31B9z7Hz7Hytp3g15mvL3
nfLX0Lw7Ru587jm30Qaad8enmgTztw020bw7doXO7tGlagvNu+P3pIPHp0zI
pfnpiAp/ePZzv100Px1fPpVec56ZR/PT0SV80ianL/tpfjp2Txhz4MDPfJqf
gS4uDnctEg/T/Ay4Z3XcOUd7nOZnwHeMcmq/zqdofga8dnc4Yn37DM174Eqr
wombP5+neQ/EP+vdZ8GKyzTvgZebe7Xcc+46zXvgx7VhC32u36R5T4zbqvli
ueYOzXvCbt693xfu3KN5T1hsEL8RZTykeU/M2J7U0fnxU5r3Qri17dOooHKa
90LDYZ9Xt3V9QfNe6D3EvN7klZU074Ul+bN2tfGvonlvdDlgsyDer5rmvfHv
MQ+X7e8+0rw37ArO7Asq/Uzz3jho9S0t2v4bzc9E+83bTHLN/6P5mdh9ebvA
6ozgz3VENhNVGSf6H3M3+eOimTiasyGuYMxfdJ2ZBYzIPK7a1viPMQs71kR+
3aprRvOzIHoWcPFjvZY0Pwsfr59ze5zViuZno3+FcNPV1LY0PxsO8/d+2PWi
Pc3PhvMk51iPc51pfjayjT9NKjp0pfk52FQztsGxrd1pfg6aN4ssuZpuRfNz
4Npm3Ldhz3vR/Bw4P6gaXL2vL83PRVba3EdPGg6g+bm4MC3iaUnKIJqfC9vw
AYezvRxpfi7eJs81jFjmTPPz0CvSsNJ/lAvNz0NhYv5G2yOg+XkY0UapFnYe
TfPzYHnMINx1eyzNz0fHS82QWelK8/Mx+43g1PWAyTQ/H7+fHC737S+i+fk4
WL9V2MBQd5oXo+/mzY2X1874Y6EYf/XpbrP/nhc9nhjDetmd2tVm9h+LxThS
df/8nuPz6PHFcLkhq1cvdMEfG8VYrTipaHlyIe0Tw/7yj/Cgmf5/XCbGjh1N
e3UYu4j2L4B78MSyCm0w7V+A4Da/ZFYdJLR/Aeasz3O41jOc9i/AidD6ttUh
kbR/AWbXrL0iq42m/QsQkG3hcf9KLO1fALvbAXnH3ifQ/gV4KrZd0NteRvt9
sLtEktZOKKf9Poj8OvpQxxGptN8HE2YWjfNeoaL9PhiyKsm8jbWG9vsg9XeI
85FaHe33wReHL/KLzTNovw8+L3HvXum4lPb7oNPXFgGDmi2j/QtxIkPS2tB0
Be1fiB+DBx4eMHgV7V8IiCMuT8pYTfsXYlGL41Pftl1H+xfCJbKm7OeNHNq/
EJ+fT28pfGKk/QvRx8HncU7oJtq/EOEDm8otO2yh/b5offLO5U7PttJ+X6zy
9AyqOrON9vuiV7/c8r2nt9N+X/jGvN8+4/FO2u8L2/eB29Nb7aH9vmjbpXXH
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
jW+nDCTzjQzM5Ns1Aw7k/wPKXsvR
      "]]}, 
    {RGBColor[1., 0, 1.], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1: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
GkfS+6eiC22bVAyhbZeKybT5qfCk7ZCKANqOqYih7ZQKFW2kYhVtl1Rsoy1I
RTZtz1Scoi1MRR7tgFTcpi1KxUPa4lS8pi1JxUfamlR8p21IhVUUvX/N74u2
MRWtaWelohPt7FTY085JRX/aplQ40s5PxUjaRakA7ZJUONM2p2Ia7dJUuNMu
r9mHdlUqvGjz9PChba2HL20bPQJo2+kRSpuvRwRtBz0iaTvqIabtpEcybegh
oe2ih4y2QA8VbU89NLSFeuhpB+iRTlukx0raYj1W05ZYWKPHetoGC2da2KjH
5lr767Gl1v4WztFje639LZyvx45a++uRVWt/C5stXKrHoVr767Gv1v4W77w0
ZNfa38I2FrazMD8NR2vtb2HHNByrtb+FkYYTtfa3sCANObX2t7DQ4ucDLN5F
aThda3+Ld4nFu8bCBgtnpuFcrf3TcLbW/hbOtnBOGky19rf4vPw0nK+1v4VL
LGy2+LzSNFystb/Fe1Uacmvtn17786wtbGNhu/Tan8dPr53nYGFHCztZGBZ2
Sa/9/QQWeZ4WFlo4wOLzROm4XGt/C0ssrLGwwcKZFjZaOMvC2RbOsbDJwvkW
LrJwiYXN6bhUa38Ll1u4yuKel1Hb1ha2sbCdhfkWdrCwo4WdLAwLu3D+PySM
Nh8=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"ps\"", 20, StripOnInput -> False], TraditionalForm], None}, {
     FormBox[
      StyleBox["\"generation\"", 20, StripOnInput -> False], TraditionalForm],
      None}},
  FrameStyle->16,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->400,
  Method->{},
  PlotRange->{{0., 1001.}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.605848361249523*^9, 3.605848417116027*^9}, {
   3.6058484513286877`*^9, 3.605848486651805*^9}, {3.605848533922573*^9, 
   3.605848553077237*^9}, {3.605848583852087*^9, 3.60584860421669*^9}, {
   3.6117353847433577`*^9, 3.611735413561531*^9}, {3.611735450604269*^9, 
   3.6117354705833683`*^9}, {3.6117358515826*^9, 3.61173585526303*^9}, {
   3.6117359152099247`*^9, 3.611735970327388*^9}, 3.611736111552147*^9, 
   3.611736153216011*^9, 3.611736193989946*^9, 3.6117362832073717`*^9, 
   3.611736428204136*^9, 3.6117365511434393`*^9, 3.6117365953798113`*^9, 
   3.61173664346413*^9, {3.6117366738076963`*^9, 3.611736723757802*^9}, {
   3.612338005603383*^9, 3.612338028611952*^9}, {3.6123380784315567`*^9, 
   3.612338103117982*^9}, 3.612338276674554*^9, 3.6123387078327017`*^9, 
   3.612339197700947*^9, {3.612570571945696*^9, 3.6125706015031557`*^9}, 
   3.612570688059802*^9, 3.6125766088419733`*^9, 3.676164850950182*^9, 
   3.67616492550921*^9, 3.6761649630512743`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0., 0, 0.], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJxd1nuYG3W9x/EBQeKj+MxBhKDAGTk8nBygPsM93L9QCqGl7fSy27TdtrO7
3RLLpSmUEiqUQcCGiyWCl4gog8hD0KrDRV14EAYQCSI4BcVQFKeIkqLS8RyQ
5XI4J9l+R513/tnntd/5zOc31+RTI6vmju1sGMa2DxhG/++OT3Jy9q8hWedk
/zu7pU//33a1Ce8pJ8za/MWh91PnMd8Xc0tqt3zrP+5/L/UB8IHIH4R5Qb4y
9bpzX3039cHwodJvm/pO6k/L7vGUhj+R2paXVl+78ZX/Tn2YvJe/8Dd7/MOH
yyfCxdYpf0t9hAx+dMo939ie+ki5vbeaDW+kPgr5o6V49mmfWZWkPgb7K8qN
/eX9NfWxsuaHH3/3qddTHyf/6V8TbN2W+nh55ju//PXgX1KfIB962z/73tdS
nwifJLeecOivbv5T6pNl9PVFp57UTS0yd7JA7Ykc2D+cF9P5KfLm9IWfLz6f
zk+RdU/813E3PpXOT5VXrvzm09/5ZTo/VU66pNw66ul0PlWGekc7+ot0PlUm
D+/JdH6anPfqu3f97dl0flp2e2OabLhzwc8P/2k6nyZXhj+/bdqP0vnp8u7Q
eY+/f086P11e+/I9H1m9KZ2fIQ9/9JYjvnVfOj9D9tmlfwXTeUkuf+HE3orT
eUlu/lr/k87PlNtvPG6nmVel8zPlqO3FaWdckM6ny7qjv3vSgsXpfLps/fBN
d31uTjqfIebkBul8hjx82X69WyKdnyXf3H7nz2Yck87PksXPPfiHPfdL5zPl
7q3bekeUzmfKvF37K0rns6R51sevn/7a6zqfJdG9C9+8f4vamC3HXHOK+8co
nc+Wvfqn/7F07sjfv/q7mzZcrRZHNn2vs2zt7HR7Rw7YeNHqT+6uDh3pXdzj
Z23+q+bnyKo9+ldELXOk+8Kmd4bOU3tzZLLuVHU4R46Y/KT5ufLAlmv/d+yt
v2h+rswaMcvH3qf25sqjex/UO2R1OFcGb/1ub4VqY54+z3/W/Dx5/dKTj1r6
gNqbJyO3PX/k9qI6nCerkqufnP/Ia5qfL5PLn6aW+Xq/bdP8fJn9gy+N1UfV
4Xw9v13ND8hn9/z+GVvXqWVAuisP6Z3SVzU/IL2XRe8Cq8MBiR/q35B/0vyg
HLJhrxeeeeuPmh+UXR+/4bCLp6i9Qbl4yqf+/Y1zX9H8oPzPxnlrDvzqHzS/
QHoP9353dl/W/AL5xr/d8ZNH9lZ7C+SKXfo73Kr5BbL3jzcbL+2sNspiTb4Q
Ys2XZXI5836v+bI0z++fod9pPt3+t5pfKK3+6bp7i+YXysyrdu+dshc0v1D2
Wjmzt+SO5hfK7P37/3le84vklp9awQWVX2t+kWzad9Hy43//nOYXyc4P7rrH
nic/q/lF8sw+c7Z88tLNml8smw948e31KyPNL9b33dOaX6zvw6c0v1iftyc1
PyTv/6q27aDD2pofkkPH9nm5vPcTmh+SydM/+Ljmh/T9/Zjml+j98Kjml8i9
vbfPdS+Gml8i/bfZkhnqcInc+NTlpYcv+4nml4r17Kpluz1zv+aX6vvqx5pf
KvU3XvzNFRf+SPNL5fv9x3N/tbFM77/7NL9Mj/dezS/T5/VuzS+T9dfff86H
3g4078qM9m4nfn3gBztsufJS722w6LlNuj9Xah8+sLD++rt22HXlnJsv7n0D
qz1X6qNLfnv6B1o77Lvy2JuFoRsevUP7XHnI/trB+S9/e4djV9dzm/YPS+9i
Dh8+4Gv/sHx9oP+A36r9w3Jubd0dh069RfuH5f2xt14Zvu0r2j8sk7fTxpu0
f1gmT+c+X9T+YTl8wD74ro81tH9YPjb82HOHjF2j/SNZWyPyzvqVD665qa79
I/r9e7X2j8hOkzf4Vdo/Imt7b8d4iqf96f4u0f4RvV5rtX9ESk7/F8IF2j8q
X/r7B5c1z7pI+0flgTM/svMhG3R7GZVj72uvfejWddqPuQf7cDgquyV79Spr
2j+q98sa7V8uA4+0vj1LLtT+5dL/NtnlyNXav1zOv32n3hOo27vL9ffSKu1f
Lu/1vr1njlS1f7kMT57wUe1frse/QvthY0z6V2vOlsXaPyZPPDD+hQ8mg9o/
pudnQPvHdP9TtX9Mpkzd988vHz1d+8d0PaL96fw47U/zR2j/iuz21gp9Pmdq
P+buCl3f6dq/IrseH/kQ28fYn3F2dn0WLKkP1v7Un9B+2Mf2IeYx5kYlawuW
Sjbvwl5FjH/9+HAIx7DxmawtWGAX9mAfDuEYNlaiHxbYhT3Yh0M4ho1z0A8L
7MIe7MMhHMPGueiHBXZhD/bhEI5h4zz0wwK7sAf7cAjHsHE++mGBXdiDfTiE
Y9hYhX5YYBf2YB8O4Rg2qlmbsAXbsMAO7MJV2IMbsA8HcAhHcAwnsLE6axO2
YBsW2IFduAp7cAP24QAO4QiO4QQ2LsjahC3YhgV2YBeuwh7cgH04gEM4gmM4
gY0LszZhC7ZhgR3YhauwBzdgHw7gEI7gGE5gY03WJmzBNiywA7twFfbgBuzD
ARzCERzDCWxclLUJW7ANC+zALlyFPbgB+3AAh3AEx3ACG2uzNmELtmGBHdiF
q7AHN2AfDuAQjuAYTmDj4qxN2IJtWGAHduEq7MEN2IcDOIQjOIYT2KhlbcIW
bMMCO7ALV2EPbsA+HMAhHMExnMDGJVmbsAXbsMAO7MJV2IMbsA8HcAhHcAwn
sLEuaxO2YBsW2IFduAp7cAP24QAO4QiO4QQ2Ppu1CVuwDQvswC5chT24Aftw
AIdwBMdwAhuXZm3CFmzDAjuwC1dhD27APhzAIRzBMZzAxmVZm7AF27DADuzC
VdiDG7APB3AIR3AMJ7CxPmsTtmAbFtiBXbgKe3AD9uEADuEIjuEENi7P2oQt
2IYFdmAXrsIe3IB9OIBDOIJjOIENL+scbMJ52IILsA0XYYFLsAOXYReuwFW4
BntwHW7ATdiHW3AAj8Mh3IYjuAPHcBdO4AnYuCLrHGzCediCC7ANF2GBS7AD
l2EXrsBVuAZ7cB1uwE3Yh1twAI/DIdyGI7gDx3AXTuAJ2Phc1jnYhPOwBRdg
Gy7CApdgBy7DLlyBq3AN9uA63ICbsA+34AAeh0O4DUdwB47hLpzAE7BxZdY5
2ITzsAUXYBsuwgKXYAcuwy5cgatwDfbgOtyAm7APt+AAHodDuA1HcAeO4S6c
wBOwcVXWOdiE87AFF2AbLsICl2AHLsMuXIGrcA324DrcgJuwD7fgAB6HQ7gN
R3AHjuEunMATsHF11jnYhPOwBRdgGy7CApdgBy7DLlyBq3AN9uA63ICbsA+3
4AAeh0O4DUdwB47hLpzAE7Dx+axzsAnnYQsuwDZchAUuwQ5chl24AlfhGuzB
dbgBN2EfbsEBPA6HcBuO4A4cw104gSdgY0PWOdiE87AFF2AbLsICl2AHLsMu
XIGrcA324DrcgJuwD7fgAB6HQ7gNR3AHjuEunMATsFHPOgebcB624AJsw0VY
4BLswGXYhStwFa7BHlyHG3AT9uEWHMDjcAi34QjuwDHchRN4AjauyToHm3Ae
tuACbMNFWOAS7MBl2IUrcBWuwR5chxtwE/bhFhzA43AIt+EI7sAx3IUTeAI2
rs06B5twHrbgAmzDRVjgEuzAZdiFK3AVrsEeXIcbcBP24RYcwONwCLfhCO7A
MdyFE3gCNq7LOgebcB624AJsw0VY4BLswGXYhStwFa7BHlyHG3AT9uEWHMDj
cAi34QjuwDHchRN4AjauzzoHm3AetuACbMNFWOAS7MBl2IUrcBWuwR5chxtw
E/bhFhzA43AIt+EI7sAx3IUTeAI2vpB1DjbhPGzBBdiGi7DAJdiBy7ALV+Aq
XIM9uA434Cbswy04gMfhEG7DEdyBY7gLJ/AEbGzMOgebcB624AJsw0VY4BLs
wGXYhStwFa7BHlyHG3AT9uEWHMDjcAi34QjuwDHchRN4AjZuyDoHm3AetuAC
bMNFWODSP/3/zfKQCA==
      "]]}, 
    {RGBColor[0., 0, 0.5], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1: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

      "]]}, 
    {RGBColor[0., 0, 1.], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJxd23t8FNXZwPF50dZYq269NVqtY2s19bpWxBUvPOBtQZEFBJb7JCFkE5Iw
UZGgXAaQsJCA29dWU+tlWquN931RP8Rrp7VoVNQVLwQVHK3WIGpXa2281Xc3
PPN53/Pbf/x8Oec5z5mZc5t1c1TN/Al1QyzL2rmHZZX/u/tTHGGZHzFZAcfg
g+BK+HDYhn8CHw0fA1fBx8mJ5x6+651hh+l1nCDVv5gUP+7OU9UnaflwdVy+
vvOTLWNrRH0K/Autf5z6VLQ3FO2dBg+DT9f4c9UJefqRnnXfLV6gPkPzp9TD
5culjY9dcV1afSbKz5L/fm5Z8k9LxqrPhs/RfBPVIxAvZn1P0L+RZn1vJPoz
Sn71+Xdnd108SctHof1zEX8u+nOeae88tH++zN7rhUPHvz5dy8+XTdeesvDE
o2Zr+QWIvwDxFyL+QrO/VhLXn8TzGK2erOWjzfasMXJf3+wrx/14rpaP0et1
tfwiObhzzAd7Dm3V8os0/wItv1gOrH7y5ePrFmn5xdLUdtXtJ5y7WMvHyk1/
tfOXZZZr+Vh544vyBa7U8ktk6A+GnfX4hHYtv0Q+zafm3biwU8vHya1nnfDK
jX9fp+Xj5OLT14x03stpeUrKd6tyz+t3W1Ky/aFrFhce+I3WT2n8zbsdpGTE
U2+WavgaP162Dv1H4vwLf6/x46W/8fjPb9h+m8aPl3dX3vL8XS/ervHj5TeP
Xp/b/6o7NH6C7FU8JJn6ulvjJ0jsqmF3nzPlbo2fINNHndO/7Z67NH6CzNk8
86Leve7V+InivFf4yRtf3KfxE2WLtWPI3mvv1/iJcvEd37vgZws2aPxE2Xqb
e/b3tj6g8ZfKy4/97aAjnnlI4y+VO35bvuE9Gn+pnPFg75VP3PqIxl8qsZ0b
79/j/cc0fpLMsEd+Urv5cY2fJK//aHFpSAYaP0nWVX207xPxP2v8JPnyo13B
GT/9i8ZPlh5Z8c7TXU9q/GRpn1bu0SaNnywn1B36TvqHT2v8ZLnh29zSr4b3
avwU6Wo5YGXw7DMaP0XOWZTuPu355zR+ivz8uVhpCD+v8VOkNJh++dHiFzU+
LbXLtp29KF3Q+LQsfOLWw07ervbSsmbLjnCf617S+LS8fdVB91349haNnyrn
X3jZF/vvfFnjp8qdBxbO6yu+ovFTJTkY8KrGT5Vt5elyyGsaP026tl+3etW0
rRo/Tezaj6eNOqdP46fJx4tHnDbrkW0aP00++WzM1PbE6xo/Xb4a7r6Q3aKW
6Tr+3tD46XLsKRX3HD7tTY2frvNvu8bPkMHpc71aZsgVDx381XMfq70Zctj4
8hPdofEzZI+91x5Z+7HaminvH/HH/uRJb2n8TBnqbSw9UbU3U362YMiNFT8K
NX6mhCfm/IFT1NYsaU+8tql5qFpm6fxXe7OktNgd+VlTFD9LSotd6Q5H8bPl
mn3H3f+ruih+tpQWsyMS9VH8bFl3Q3mARPGz5aZTf//g6QNRvCPlu92/TW07
Oh+j9hwpdf6WWT9/e7cdR8pX++1Ras/R8an2Hala2vnwvL3VgaPzRdsLYata
SpP57N9O0vp2tbz36ZFb5s9WS7VcOuFYf00+yl8tg8O1O8pfLeVsX/hR/mo5
dM/J+524IcpfreuBOqyWu5xyi2qrRvbf56E7Fj0d5a8x25MaqX/1/dKIivLX
SKmw/oEPovw1On6i/DUyrzz8rovy18iQ41cfsu2FKH+NDB/ccKL8tXLgpyNf
nPtqlL9W9h0cIFH+Wnn2yVH3NuyI8qO+VyuDy9uQdzR/rWRrZ755wR7qoFa6
n7qotOKrw1q5+Qe3P/7nH6qtObJ2/bulOx7ln6PzLco/R0qLyZmXvBTlnyOD
0+OZKP8cKbw6+cOTH42uf44c/fDXqz97I7r+OdJgzV++56bo+lHfqjOfj10n
FaXRcOvdUf462a88vLNR/joZHC63Rvnr5Mk55Sca5a+T0mbx5YzmKH+dfPbN
K207j4ny1+l+Ho2/ubp/RON/rpQ6d+z++0T558rzm8sfLXfmSnm0b3wpml9z
pTQ5Jy+5T+3PlUdGf7/0yKP5Nldy5ePKkdH4nyuvHF+eMLo+WPUy8fqj1i9o
Vdv1UlocG8f+U9cXqZeZzZv+s+FqtVMv0/718Otrv4nWp3rZcFLLbf/1mNqv
l5rfvVbakdVBve4n6rBeDjiovIPremhlZPB236u2M7q/qCWjz0vXUycjpw5+
ovU1I/+p+/e71b/T9dfPyMrxo2/2jlEHGSlN5tKJSdfvMKPrm67vVoP8u7wc
H6y2G+Sg8vbxme4P0iClw0lpQqudBn2eup94Deb+4jfIAx9cXhqiuh8FDXL9
hu+33tOhDhtkMP3haqtR55vub3ajni/U0ij/XD/xiqNv0P3SaZRvj/rm8wXh
Zs3fKOMGT3C63/qNuj88q/kb5TuDB1bdn8NGnR+6n1vzZPD4NfkpzT9PlpSn
3+i/av55UtqsS/+i5wVnnp7fovPFPJlx7V/+VTXjT5p/nnkeCaL29LwSzpNV
u8b3/HjVo5q/STaXj79H6HnHbpINN//jj09dtFHzN8l5DfOLq555UPM3yeDt
26XnKa9J/jbssGC6/T+av0nXQ3XQJNeWb9+3ec3fZJ7XrGYZ3N4m63nObtbz
0p2av1lGlo9Hj+p50WmWsYMH6j9o/mYpbXalLup51G+Wv4/4w1tP7HeT5m+W
jTXlHaNL8zeb512rRbYeUF5Qf635W/Q8cp3mb5EPy7dr1y81f4ue59Vei5Rn
56d5PU/7LbqeXav5WyT48JbSCXqt5m/R8R+dz+fr+0pW88+Xk8vT+TsrNP98
bW+Z5p8v9uCEit4X5uv8XqL5UT+AQ9S3XLO9mGu+n9iuhDeVN4yFux13ZbB7
B1yh/XMlu6rcoDrlyplvjSsdOS7T/rpyz73lF6SW3XZdWbTzmNKJrEn77+r7
V/Nu51x9n7tcr8eVHa3lHWr+buddff9TB64+j+rdLrhSOrxUXr61Rq83an/m
bhddvD+2mu9zsVbz/c9uNb8PiLea7/MCp1rN7wucVvP7Ahf2UD/Xan5/4cN5
OGg139cLaD9E/SJsXSbW///EYBuOwwKnYAd2YQ/OwT6chwO4AIdwEbYuNx2D
bTgOC5yCHdiFPTgH+3AeDuACHMJF2LrCdAy24TgscAp2YBf24Bzsw3k4gAtw
CBdha4HpGGzDcVjgFOzALuzBOdiH83AAF+AQLsLWlaZjsA3HYYFTsAO7sAfn
YB/OwwFcgEO4CFsLTcdgG44vNNdPQXkK5Q7KXdiDc7CP9vIoD+ACHMJF2Goz
HYNtOA4LnIId2IU9OAf7cB4O4AIcwkXYWmQ6BttwHBY4BTuwC3twDvbhPBzA
BTiEi7B1lekYbMNxWOAU7MAu7ME52IfzcAAX4BAuwtbVpmOwDcdhgVNX4/wH
u7B3tTm/c2jPh/NwABfgEC7C1mLTMdiG47DAKdiBXdhbjOtfbN4fH84jPoAL
cAgXYWuJ6Rhsw3FYlpj9T8EO7MLeEpz/l5jndx/leeQP4AIcIl8R7VlLTceW
mu8z9lKzP/Gl5vuQwKml5vuIA7toz0N8Lso/Rq8f8XnUD1BeWGq+v4VLzf+/
V0S5tczsT2yZeb/sZeb9icOC+inYQX13mfl8PDgH+3AeDuACHMJF9M/yTFd4
Zv0YyithG65CfBxOwIL4pGferxScRn0H7WVQ7sJtqO/BWTgHd8E+3A3n4R44
gHvhAtwHh3A/XIQHYGu56Qo4BlfCNlwFx+EELHASTsFp2FluPt/Mcsw3lLfB
HtrLwjm4C/bRXvdycz3Jwz3LzfUqQHkvXED9vuVY35ab62H/cnP9LsIDsLXC
jK+AYyvM+1kJ2ysw/1dgv4ATsKC9JJxC++kV5v134Azswm2wB2fhHNwF+3A3
nId74ADuhQtwHxzC/XARHsD9tFZi/YdjcCVsw1UrzecXX2nmT8ACJ+EUnIYd
OAO7cBvswVk4B3fBPtwN5+EeOIB74QLcB4dwP1yEB2DrGtMVcAyuhG24Co7D
CVjgJJyC07ADZ2AXboM9OAvn4C7Yh7vhPNwDB3AvXID74BDuh4vXmPNzALZW
mfUr4BhcCdtwFRyHE7DASTgFp2EHzsAu3AZ7cBbOwV2wD3evwvd1cM8qc/8L
VpnrZS/KC3AfHK4y9/N+tFeEBxBvtZvni4p2830p1m62Xwnb7eZ5oaod63+7
ef0JlEu7ef+ScApOww7az6DchdtgD87CObgL9uFuOA/3wAH639uO5w/3IT6E
++EiPABbq01XwDG4ErbhKjgOJ2CBk3AKTsMOnIFduA324Cycg7tgH+6G86sx
/+FgtTmfeleb86OwGs8f5SHcv9qcj0V4ALayZvsVWbM/saxZvzJr5rOz5vVW
wXE4AQuchFNwGnbgDOyiv22wB2fhHNwF+1lz/eyOyvX7q3zWfF/rQf0A7oUL
cB8cwv3IV8TzHEB9aw3W/zVmfGwN1v815nixUV61xhzfcTixxnw+AifhFJyG
HTgDu3Ab7MFZOAd3wT7cDefhHjiAe+EC3AeHcD9chAdga63pCjgGV8I2XAXH
4QQscBJOwWnYgTOwC7fBHpyFc3AX7MPdcB7ugQO4Fy7AfXAI98NFeAC2OkxX
wDG4ErbhKjgOJ2CBkx34Pr3DXG/TsIP6mQ783gpug70Oc3/LdpjrYQ7u6jDP
xz7KuzvM9TAP93To7/sm6PofxevfL/V2mOtvAfn6Osz9JUT/+1FeRPxAB/4+
q9OsX9Fp/l4u1mn+Xq6y0/x9nR3FT9P1v9P8e6k4nICl0+xPstPsb6rTfF7p
Tjz/TnP8ZGAXboM9OAvn4C7Yh7vhPNwDB3AvXID74BDuh4vwAGytM10Bx+BK
2Iar4DicgAVOwik4DTtwBnbhNtiDs3AO7oL9dfj+H+V5uAcO4F64APfBIdwP
F+EB2FpvugKOwZWwDVfBcTgBC5yEU+vx/T/srDfXg8x6rP+o3wZ7iM8ifw7u
gn24G84jXw/KA7gXLsB9cAj3w0V4ALauNV0Bx+BK2Iar4DicgAVO/p//F5lx
+/Y=
      "]]}, 
    {RGBColor[0.5, 0, 0.], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJxd1l+oLVUdB/DJyrZvAxXs/hCTROxMazSznf1bdjW3ljr36r1u71XvqPde
d2Y6pdbO/DP9P5Xlpno4DxETFRyhYkMEhxCaiOhAEBt76NBDTD0d7WV6kUMY
RDQQ6zMvhw+/9V2/NWvW7DlvvvvBY2fPS5Lk+ZcnyX///u/qP5TEV4g5Cpcc
eeM//n7F64dxKX4N48f4jTjDF+K34LcO/S4a+k3CXZcdzy965l2DL8IX43cM
+SsH54OvH3zpMP7I4MvCS8/887kb7g6D38V8l3P/78ZXsN734Cnzv5f1XYnf
R//34w/Q/4PUP0Q9xOupcXJVPL6+ivqH4/XVODkS3199hPrVzH81819D/ZqQ
RNdHYtc4uZb6tdz/jPln5K+jfh3ruz7e3/p66h+lP04+Rh0nN1C/gfXfSP8b
2d+b2P+bON9FXA9F/D7URXjnAz962bOvPPY/tzg5Gv71xH3PPvzd+ZA/OuRP
Dvmj4Xsvnn96+2PHh/zR8Ptf7X7r/P7EkD8W18Ox8LunL/3sJW8+PeSPhe/8
4cnZrx+/Y8gfC6996voXXnH5XUP+5uF+7hnyNw/znxvyuL05/Hz/9GduetPg
5Ja4Hm4Z1nN2yN8y3O/dQ/6W8PnX/Pzavz16ZsgfD7PipfFDfx7q4Xg8vj4e
j2+Px/2SE/F6wolwwRt+cOfb/lAN+RPhh/f+4oWHfvnIkD8R7l8++pOLjzw2
5G8NzyV/Pe+Cbzw55G8dnsdyyN8ajv9m58c3hoeG/K3Dej895Ofhwn+/+Ej3
/U8N+Xn46c/+u6AHhvx8OB/Detp5+Nzzb7109NP7h/xtcT3cFl5912//9Paz
Hx/yt8XPs70t3p/kJPt/Mt6v+mT8vNuT4fSr/vi6o385NeRPDf3LIX8qPl/1
qeH83DDkT3F+b+f83s75u53zezvfizuG/sWQv2Po/5Ehj9s7+L2/M34fw528
f9TbO3m/T5M/ze/x6fj3qD0dkugqY2c44BLXuMEt7nByF/1xwCWucYNb3OHk
bvrjgEtc4wa3uMPJPfHveYbDPfTHNW5wizucnKE/Drg8w/8L1Jsz8feoPROf
zw4nZ2NnZ+N8wOVZvmfkm7Px+9Oejd+HjvmSc/Q/F48PuMT1uXg9DW7Pxf26
c3y/72X/ccAlru+Nn0dzL88fd4xPFvH6MhwWcb7ENW5wizucfDx2hgMucY0b
3OIOJ/fRHwdc4ho3uMUdTj5BfxxwiWvc4BZ3OLmf/jjgEte4wS3ucPJJ+uOA
S1zjBre4w8kD9McBl7jGDW5xh5MH6Y8DLnGNG9ziDidV7BRnOMcBF7jEFa7x
Cjd4jVu8wR3ucfKp2CnOcI4DLnCJK1zjFW7wGrd4gzvc4+TTsVOc4RwHXOAS
V7jGK9zgNW7xBne4x8lDsVOc4RwHXOASV7jGK9zgNW7xBne4x8nDsVOc4RwH
XOASV7jGK9zgNW7xBne4x8kjsVOc4RwHXOASV7jGK9zgNW7xBne4x8lnYqc4
wzkOuMAlrnCNV7jBa9ziDe5wj5PPxk5xhnMccIFLXOEar3CD17jFG9zhHifL
2CnOcI4DLnCJK1zjFW7wGrd4gzvc4+RzsVOc4RwHXOASV7jGK9zgNW7xBne4
x8mjsVOc4RwHXOASV7jGK9zgNW7xBne4x8nnY6c4wzkOuMAlrnCNV7jBa9zi
De5wj5PHYqc4wzkOuMAlrnCNV7jBa9ziDe5wj5PHY6c4wzkOuMAlrnCNV7jB
a9ziDe5wj5MnYqc4wzkOuMAlrnCNV7jBa9ziDe5wj5MnY6c4wzkOuMAlrnCN
V7jBa9ziDe5wj5M69gineIwzPME5nuKAZ7jAc1ziBa7wEtd4C6/wNm7wDl7j
XdziPbzB+7jDB7jHhzj5QuwRTvEYZ3iCczzFAc9wgee4xAtc4SWu8RZe4W3c
4B28xru4xXt4g/dxhw9wjw9x8sXYI5ziMc7wBOd4igOe4QLPcYkXuMJLXOMt
vMLbuME7eI13cYv38Abv4w4f4B4f4uRLsUc4xWOc4QnO8RQHPMMFnuMSL3CF
l7jGW3iFt3GDd/Aa7+IW7+EN3scdPsA9PsTJl2OPcIrHOMMTnOMpDniGCzzH
JV7gCi9xjbfwCm/jBu/gNd7FLd7DG7yPO3yAe3yIk6/EHuEUj3GGJzjHUxzw
DBd4jku8wBVe4hpv4RXexg3ewWu8i1u8hzd4H3f4APf4ECdfjT3CKR7jDE9w
jqc44Bku8ByXeIErvMQ13sIrvI0bvIPXeBe3eA9v8D7u8AHu8SFOvhZ7hFM8
xhme4BxPccAzXOA5LvECV3iJa7yFV3gbN3gHr/EubvEe3uB93OED3ONDnGzF
HuEUj3GGJzjHUxzwDBd4jku8wBVe4hpv4RXexg3ewWu8i1u8hzd4H3f4APf4
ECdfjz3CKR7jDE9wjqc44Bku8ByXeIErvMQ13sIrvI0bvIPXeBe3eA9v8D7u
8AHu8SFOvhF7hFM8xhme4BxPccAzXOA5LvECV3iJa7yFV3gbN3gHr/EubvEe
3uB93OED3ONDnHwz9gineIwzPME5nuKAZ7jAc1ziBa7wEtd4C6/wNm7wDl7j
XdziPbzB+7jDB7jHhzh5KvYIp3iMMzzBOZ7igGe4wHNc4gWu8BLXeAuv8DZu
8A5e413c4j28wfu4wwe4x4c4+VbsEU7xGGd4gnM8xQHPcIHnuMQLXOElrvEW
XuFt3OAdvMa7uMV7eIP3cYcPcI8PcfLt2COc4jHO8ATneIoDnuECz3GJF7jC
S1zjLbzC27jBO3iNd3GL9/AG7+MOH+AeH+Lk6dgjnOIxzvAE53iKA5793/8B
Dy1QCw==
      "]]}, 
    {RGBColor[0.5, 0, 0.5], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
4Rk/cPjX0itc4DUu8QZXeIsj3v3f/wGMPonD
      "]]}, 
    {RGBColor[0.5, 0, 0.5], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
4Rk/cPjX0itc4DUu8QZXeIsj3v3f/wGMPonD
      "]]}, 
    {RGBColor[0.5, 0, 1.], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJxd2kuMHEcZwPHiFebYhyANKIcOQmhkEeg8CEN4pMCQDCaGzsPO4NfWvmd3
7bhjr3fGXu9u2bveba+9mxZwmGNLXCYX1McRikRdECMhoRYXRpwaTgNcmgsa
oRwQclv4++8l+umr+r6q6qrunnaenbv61uInlVJ//5RS//vvo7/yVSX/tGQN
9uCn4Tr8DOzDX4S/BH8ZbsAn4K/AX4UD+Hn4BfhF+CX46/DL8DfgJvxN+BX4
W/C34e/A34VfhbW0hdX3EIfV9xGH1UnEYfUDxGH1Q8Rh9RrisHodcVi1EIfV
jxCH1SnEYfVjxGH1BuKwOo04rH6COKx+ijisQmkNW9iF+rmTz/zzby9/obpP
vIn+sIUdrN5Cf9jCDlZvoz9sYQerd9AftrCD1Rn0hy3sYHUW/WELu7NY/3el
9bvoDztYtVEftrCD1c9QH7aPfeKRHazOVX6l6n9Of/zhv/50ek5X/R/HT1X9
z+nf/2Z49FT5WtX/PPqfl/nteT37wpngxIcvVv0RVxek9QXUh92FKt/Jqv9F
Gdewhd1FOV51SebTsL2E8V+S+dSMjOsZrP8Mrh+sjLQPayPzGYP1NbJ+auT1
cUZ/7b1ffeKjz7z1yIWpxh9W45/Vv/z3UzP9N848sj9b5T9XzWdW//wPO63f
bl2s6iNu4XS2ym+q+rP6cw9P/ePTL81W9Wer8c5X9edk3J/TM5/94+ff/Mv5
qv6c3nz616//9dZCVX8O9dE+hd2c/s/26kfrv2hX9eeq+m9X9edle39ejkfP
69998Hz3uWdnqvrzMp+dx/znq/U6XdWfl+tdwGpBXi9/Aft5QV5fs4D9Baew
g4sFub/UorS/iPO4iPqL8vxYOF2U58ctyv1VwGpJ3l/8Jcx/Sa6PWZLra+F0
Se53t4T1X0L9ZXk9/WUZ18tyf5hleR7ssqyXIp9blvutWMb178jz4new/zsy
v+nI9bAdmS/tyHoO/YsO5r8i+/srOP8r8jyYFTk+u1KN52xVfwXzR74C/dWq
jPurmP8qzv+qvH9YOF2t5rdY1Uf/YlW3wo/r1/88V9Vfk/bX5Pj1GtYfcbuG
878m18OtYf+tyf2uLsvz5V/G8/yyPI8G7e1lnD/YoX2BfOqKtA/rK3j+XNHq
yT8Lp7CDC1i9J+3DGjawhVPYwQWsrqI+rGEDWziF3VXcf2EVyfYe7MMBrCOZ
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
BRd8HA4=
      "]]}, 
    {RGBColor[1., 0, 0.], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJxd2HmcFOWZwPGK56hRW6Mw3iXrMfGiVdTxIDyiYosiDQg0d80MA80cTM2B
NoNoMVwNIrb3aIyWq4Yhrthx4zrGI2W8xrs9GY/EipvoGF3TuhudrDFud/PU
Z/P+5p/5fD9PPfW89dZ7VR9Z3za1cSfLsj7d2bLK/3f8FcdZ5p+YrIJj8AFw
NXwobMOj4KPgY+Aa+Dj4BPgkOC4nnnfoZx+dfrA+98nwKerj1KfCY9RnqU+T
53/df+1uxQnq0+WGl65O/GblJPUZ8vetX74xqT6proXPRP5Z8Nm4/hyNz1CP
1fbMVv9E/veqpse7bkypxyEuMnrpPT94fNf6HfZEJhy9bKfbq5o1fq62v1Xj
58qz1518xYlHtml8vPyo7uk3j29covHxiJ8nyz895uSqf2vROGydr+1fpPHz
5aavd1vQe0mjxi+QBbu/etCU97Q93gVy9oeTr711aYfGJ+j1yzQ+QaY/1Xfv
pdKp8QvN670L9Xmj/IS2f7nGEzLtliM3L2tfofGLpO+0V86+9PVVGr9I779a
4xPl1xf9cKfj16/T+ER56/jGgz5Krdf4xXKsvyH/h0/Xavxi8R6Rno+ez2r8
Eq2/QeOXyLiZc375m883a3ySvNFW7oHrNT5JRn339bLwDrV1qbz/t8oL1vil
sv99Tzw18hi1NVkOH9E06b83R/HJMtR0/Ne3/i6KJ2Xb4ILLJx9+yw5LUq6t
+a+9n4zfptcn5fTy419/xw4HSRn33AcPr7nS1/wpYrWt2uXZ6+7W/ClSHJFI
/r36Hs2fIpXu3v9ezZ8ib06qj6XOVFtTZf7FA7uP/el9mj9Vrt+3+/T7f7JF
86fKaX+pveDCjq2aP1Vi5fDM+zV/mvx0+l33PzD4oOZPk+KW5y4+Y8MvNX+a
lFvTuf0hzZ8m8Ut+vueEox/W/Mtk7Alv3f7xYY9o/mUyWPyfibPW9Wv+ZTJj
5bb/qL/6Uc2/TMa/tujtT5oe0/zp8k3pbex33xOaP13KrSu9Qc2fLgdumvjn
XcY8pfnTJfj8znNOeOu3mj9DPh5374dP7vOM5s+Q0s1LL+hZzZ8htz12S27f
7uc0f4bc/NYe6VEtA5o/Uz4M97pxa88Lmj9Tjrr1+9xV376o+TPl27mtz/7j
oZc0f6bctH7t7DcfV1spadt/dfDi3a9ofkpuPOsHk9bs/Zrmp+TY0mw9dHZB
81NSGZ53qq1ZOj5f1/xZcsy0Xe+54Sy1N0u+LHdn7RuaP0tGfPvSFy88rbZm
y6eJk74/8ju1zJYDD3vhT+PufVPzZ8uJD/3sL1ueUwezdTy9pflz5IElv2/f
uFktc2TkI69bv9/pbc2fo+NBHcyRz6f0H772M7U1VyrL0aHvaP5c2T6mPODU
3lwpt+bDJ9XBXLnj1H/91RnDamueHNS5ff+vzt2u+fOkuTK91N48WftZuaA6
mCd3D5/88bajBzV/vvgHj/7dUbu9q/nzxSnNxhFNam++TH7wpsZsgzqYLw+d
VO4BtbVA3t/4XeM3f4zyF0hluO33nuYvkNJidsjeYZS/QF4u9f74B6J8R9+P
Xm874u5YcPV+jqw65rfrtsxUO45Ups+y6P6OxB87dt+9Hlb7jpxQXv5Gvq/1
HCnPzgWXq0NHSovliHdfVVt1kv73P3c+fKDarpOezgmlJV0tdfKP0tPV3R3V
r9P9SeNendz9TvmFqX04qJNdZuxTGkJR/TqpO2V6/LitUf16+dNXR5SGcFS/
Xjr+tu+njzwY1a836zn1UlpMp3UdFdWvl/Lo++NXUf16mffBhJ0ze32g9etl
y/Lnf3zWDVH9ep2PUf0GGVlZoKL6DfLJYVuGEidF9RukNDhW3XxeVL9B95eo
foPsvMfGIxq+iPq/QSZXFnx10CDPjC/PEHXYIGvufOUXr72tthbqfhbVXyiV
5Xh6VH+h+T4dXO8tNNvjL5Q9t9/jjt0z6v+FZn+FC2VUS6b7vhOi52+U1soC
G9VvlEPunP/jl2JR/Ua5/7W3Z3w+OqrfKJXl4cNo/DVKeXS8Myaq36jrS/T8
jbqeRfUbdX+J6i+SH1YGZDT+F8mMyoCNxv8i2b10ujhwUzT+FsmY/U4/54mp
Uf1FcsC2C//QfUDU/4tkl082lXbQqP4iCU/M+cMnR/2/SMqrw/q1Uf8v1vOB
zkd7sZQ38+pdovqLZfZfH31v43cadxbLyHdf/Wbaf0brw2K54xk735FW+4ul
PHq+PzKa74ulsr1t0fUmXCyjKgtCtP6kdT/T9clOyz6VBTdaD9My1z73y4aX
db100lJ6OaUjW7S+pmXKe4dcWXeK2k/LcVt/VDh/UNfjIC2Plk53IxLqMK3z
X9dza4nuv2p7iTzXOqZ0RIr2gyUy7rT5pSOW2lmi+220vyyRHdut7kf+Ej2f
RPvVEinvXgvP1v0sXCIrVo8uLWGvav0mqTS3+LLWb5LSZLum5RPdH6VJxlYG
tO6nTpOUZ++Kr3T/9ZqkPPuPeON5rd+k/Rft101S2gxLA1D387BJ5//TWr9Z
3i5v5xk9D9jNsn7LzBdPeUbPC9IsleXkqEDrN+t6rucNr1nuKk/nGY9r/Wa5
pdz8b6PzSrNUXv+QnmfCZrntuOrSEUJttUilOyboechukb++v31V54Rfaf0W
Oba8/L+o5yenRdsXna9aZNfKgV/tt8itufIE26b1W+SLz4Iz/2WintfCFrny
q3yy+XY931mtUtp83nm2Vc+DdqucX27+1ug82arngbu0fqu8cPmTdx08+mda
v1Xnz81av1Uqw+sbPd8GrbJHZUHJaf1WXc+v0fpLTdtLzfO5LJXFlQOZnued
pbKiMuHXaH3YXyqHlLfzVXreD5bq94k6XGp+L1htcl1pdbz1e0/rt+n3WbfW
b9Pvo8u1fpvW69L6bXoeUvttet5s1/pt5vdc2IbvJ9f8voq5+v22QNsDx6Pr
52j7XP2emrrDSdf8XnVcfZ6JO+y6uv+ep+2Hc5FP1edx9XtXdjjvmt/TQXT9
tB0uuOb3bYj2Fl19H9P1+dvN7+dYu9l+u9383o7jemk3v6+T7Wb7HNhtN9vr
4X451PPbzf7NIz9oN/u3gPaHcBH3tzpMxzrM57E7zP6Kd5jtkQ6zfrID77/D
fL9uh/k+vQ6zf3K43u8wx0O+w/x9JugQ65//CnAIF2Gr03QMtuE4LHASdmAX
9uAc7Heaz5vvNPsjQLzQafZv2Gn+XlWErS7TMdjuMt9HvMt8v4J4ssv8Pczp
Mtvjwl6X+Tw51Pe78Pxw0GX2VwEO4SJsLTMdg204DguchB3YhT04B/twHg7g
AhzCRdi63HQMtuE4LHASdmAX9uAc7MN5OIALcAgXYesK0zHYhuOwwEnYgV3Y
g3OwfwXGPxzABTiEi1dg/mfMeAy2M+b8jGfM+SsZrP8Zcz9xMub+4Waw/yM/
lzHXFx/xPBygXiFj7k8h7ldEfWu5+Tyx5eb6ZSMeR1yWm/2TXG72rwO7y83+
9RDPIe4jnocD1C/AIe5XRL7VjfW/W6x//rPhOCxwstus5+D+brfZf1632b+5
brx/OI/rg248P+qHqF+ErRVmfmwF9j/E4yvw/uEkrndwP3cF3j+cg304v8Ls
7wAuwCFchK0rTcdgG47DAidhB3ZhD87B/pV4fsQDuACHcBG2VmL9W2m+PxuO
43pZad4vCTuwC3twDvbhPBzABTiEi7B1FZ4ftq8yr4/DAidhB3ZhD87BPpyH
A7gAh3ARtq42HYNtOA4LnIQd2IU9OAf7cB4O4AIcwkXY8kxXwTG4GrbhGjgO
18ICJ+AknIIdOA27cAb24Cycg3thH+6D83A/HMADcAEehEN4CC7Cw7C1ynQV
HFtlrgfViNtwDRyHa2GBE3ASTsEOnIZdOAN7cBbOwb3oDx/xPjgP98MBPAAX
4EE4hIfgIjwMWz2mq+AYXA3bPWZ/1CAeh2thgRNwEvdP9eB81WOeB9Ow22Oe
HzM95veB12N+n2R78Hscru/F/X20r68H5/Ue83zYj/ygx/z9awDtLcCDuF+I
ekOIFyPr99IwbK0286tWm/0fQ7watnF9DRyHa2GBE3ASTsEOnIZdOAN7cBbO
rTbfby/iPtwH5+F+OIAH4AI8CIfwEFyEh2FrjekqOAZXwzZcA8fhWljgBJyE
U7ADp2EXzsAenIVza/D+YR/uQ34e7ocDeAAuwINwCA/BRXgYttaaroJjcDVs
wzVwHK6FBU7ASTgFO3AaduEM7MFZOAf3wj7cB+fhfjiAB+ACPAiHa83xN4R4
ER6GrXWmq+AYXA3bcA0ch2thgRNwEk7BDpyGXTgDe3AWzq3D/If9deZ+2If8
PNwPB/AAXIAH4RAegovwMGytN10Fx+Bq2IZr4DhcCwucgJNwCnbgNOzCGdiD
s3AO7oV9uA/Ow/1wAA/ABXgQDuEhuAgPw1bWdBUcg6thG66B43AtLHACTsIp
2Mma8y+dNc+/btY8b2ey5veDlzXncxbxHO7fi7iPeB+cR3v74QAegAvwIBzC
Q3ARzzeM9lkbcP7fYPZfDPHqDeb97Q34/sP1ccRrERc4ASfh1AZ8/6G96Q3m
95KL6zO4n4f2ZfF8ObgX9pHfB+fhfjhAewZw/wI8CIfwEFyEh2Fro+kqOAZX
wzZcA8fhWljgBJyEU7ADp2EXzsAenIVzcC/sw31wHu6HA3gALsCDcAgPwUV4
GLauMV0Fx+Bq2IZr4DhcCwucgJNwCnbgNOzCGdiDs3AO7r0G5z+47xqs/8jv
hwN4AC7Ag3AID8FFeBi2NpmugmNwNWzDNXAcroUFTsBJOAU7cBp24QzswVk4
B/fC/ia8f8TzcD8cwANwAR6EQ3gILsLDsHWt6So4BlfD9rXY/xGPw7WwwAk4
CadgB07DLpyBPTgL5+Be2If74DzcDwfwAFyAB+EQHoKL8DBsbTZdBcfgatiG
a+A4XAsLnNhsjqfkZvP8loIdOA27cAb391A/C+fgXtiH++A83I/6ATyA9hY2
m/vJIK4Pcf8huAgPw9Z1pqvgGFwN23ANHIdrYYET/+//A1wozyY=
      "]]}, 
    {RGBColor[1., 0, 0.5], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[1., 0, 1.], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJxdmnt4nHWVx1+RxfCswqwLGpHFgYJGroOITAG3BwsyFCgDlJpWaN8mTTPN
9c2lyeT+ZnKbya0jKxIBl0HkId5gLAum4OLLI5cgLjsgShSFAYGGluKIiGEF
2Znk9z4+59N/+nyec37ne87vcn6/mcnxVc1X1RxiWdZrH7Ss0v8r/wprLP1P
NJaBA+CjwOXgY8FB8AngE8GfBleATwafCj4dHAKfCf4c+Czw58Fng78APgcc
Bq8Gnws+D3w++IvgfwevAYtmF2xdADvY+hLsYGst7GDrQtjB1kWwg60vww62
LoYdbEVgB1uXwA621sEOti6FHWxdBjvYuhx2sLUedrB1BexgK6pZwC7YA1tX
YjzYBXtg6yqMB7tgD2xdjfFgF+yBrQ0YD3bBHti6BuPBLtgDWxsxHuyCPbD1
FYwHu2APbFViPNgFe2BrE8aDXbAHtjbLaWuPPfDSF45ZuXfE55NX2IXd24zx
X4U+2AV7YOtajAe7YA9sXYfxYBfsga0tGA92t6D+LXp+rK2aBexulXe/+6en
L68SM963n2vG25qDYLFl2+euCZ383bNW2Aa7ttbL2MjX1vXkYbe2mXhrjf42
Y19n9ME22N0mZzTd/oGf/NNVRn+bPHb/3NRhhY1Gf5tc/8RA5Kd9161w3h+/
2ehXaf9glTyy+8zO047favSrzPzZRr9K7lrY2nHFcTuMPjhTZfQajX6VnPfC
FVM3NrUafV+vw+hXy9ffPmzrzGW7jH619hfY7WpZ/V/zHQ/e2m30q41en9Gv
lsRLj8088A3X6FfL4Z/8zy2ffcJwvlp2X91+4o3vG7a2m/xHjf52uafnzWy0
ftzob5dX13znhQePmDT62+XLJ+065KayCaMPe2a77C1W97FI2uhvN/qG89vN
el1v9Gtky6XzH/rizTcY/Rp55pSaT7xUeaPRr5GNfXfdVzXwTaNfIw3x7jtO
XXuL0a+RDX+44+aHgxmjXyOvXzl33MiB24x+jZwy9rHfPPnX241+jVxy+vvH
v/f2HUZ/hywU3lq3aXTW6O+QNw54q1et+77R3yG3nn/qMze9+kOjv0NK2X/0
qLuN/g454b23d+Vv+ZHR3yGbPv7jp6zn9xj9HbLn9FLB9xr9HfLNk8tveObw
OaNfK/PF1Uofeb/Rr5X9N+z5cMsPHjD6tfJIMNsa+9p/G/1a+WP4ootb3/mp
0a+Vwp2PXnpO6iGjXytfef2MBz5z5M+Mfq3c/fWaZPV1Dxv9Wlm1rmfojMse
NfoxKUU/2PuY0Y/Ju+Vtz370zceNfkwu3NlcGHn8F0Y/Jofum6w4+JEnjX5M
PvTkJ6787SdzRj8mxy8HNOwV7cXde/Tk00Y/Jjdfc+v3f7jwS6O/U1Y9905/
3U+eMfo7ZXk5s782+jvlyvqbOm/59rNGf6cc8WCoOIW/Mfo75arPZFLZFw1n
dsrul9/81NPNzxl9P/7vjP5O+fva/zt4wPu90a+Tj0eixZJfMPp1Unf5n6ev
bs8b/TopZbu140WjXyeBytIJfMno18nZW+6/5MOH/MHo18nt15/7gcuHDXt1
ckhpu6x52ejXSUX/5N76w18x+vVSXMwjX/ux4WC9FJvPp95qeNXo18vy9G/Y
Z/TrJX7Lt1ftfdewWy/XNT7y9z09i0a/XpbDv2PYq5d/27y92FJeM/r1MnKg
dEAMWw3y8w0PzX5n/X6j3yAnHTZ4w9oJw9JgzvsBo98gf9n72/H3agy7DZLO
LJ356l2GMw1yWLHaR39n2GuQ20rmk143+g2yodR+0oatRul88NZjzvi94WCj
5C4snciDRr9R7ux67LPnXm/YbpTGfX8rdmTDbqPpN28Y/UYpit873GvYa5T1
VaUVM5xvlBe7j7rr4hcNW01y2TmpC+xXDAebTH80LE2yunTcjvyj0W+S5e1x
omG3Sebu/mDxRBjONMnydjjFsNckbaXjtcZwvkmOnly3/9DPG7aa5b7h3tw9
mwwHm+Wh1aUTaliaJfX08/l//g9fv1nOevhHxY7i6zeb/uPrN8uhG484bc+3
fP1m+WvR+i93+PrN8j17Q/HI+PqObFg+QIYDjly6aTT860f8fBxzXgyHHLn3
6L898cbjfn6OXBu84E/VvzAcdeTM5Qbn5+vI1uUGYdhx5MS974699ZyfP+xp
R2bP/p/z1j/l1+PIsvuzhrOOXCH/uu1nv/Trc+QHx5Y2uOGcI1+yX8md4MfP
w15wTL/w62/RHGiRlenz62+RbGl5D/r1t0jpdDTs8+tvMfeDXz/87RbTT/36
W+QY76vFGfPrb5H25Qn162+R21eVKvbrh3+2RZ5vGZ9+2Y/ngXMtMlLaTn/x
628x959fP+xWq7YHWuWhn9920X1/9utv1f6hVnN/+vW3mvvIr79VnvratcUt
49ffKvfsbytW6NffKt8oTZ/Pbqt8JH9asYX49WN8ptX0O7/+Vtm83ID8+lvl
/PWlEX79rbJSl/keKw8uwN9qk+PuXIyc/r5fPzjYpv1DYAFH23R+dpvO32nT
8+G26flIw55p0/ORbdPz5YFzbVL7q311p/jrk8f4QpteL6td2wPt2h5s1+sd
Ags4inh2u95fDuK7sKfbUX+7Xo9su55vD5xrx/qDC2BrF9Z/l44XhD20S6+v
7NLrG92l49sY74Bd6KUxPgPOwt+Dfg755cEF6FsdqB8cBIc6dD4CjsLfht0B
u/BPd+j6Mh04/2CvA/u/Q++/fIfenwX4W53aHujE/u/U8UJg6dT7N9qp+7GN
+A7Y7dT3Q7pT9/tMpz7PWeh74Bw4D70C8rXi6P9xPT/BuO5Pobg+nxLX+UXj
+v6y4/o+ceI6Pxd66bie/ww4C/aQfw755KFXQP5Wl64v0KX3VxD2EOzSpc9X
tEvvXxvsdOH8w54GZ7p0vtkuXa/Xpe/nXJeenzzGF2C3urH+3breYDfuP7CA
o2C7W8+P0437r1vnk+7W9WTAWeTrdev9nUP++W6sP/StHq0f6NH2YA/Wvwfn
H+OjYBvxnB69f9wePT/pHqx/D+6/HlnJ2/RPD/Yc4uXBBehbvVov0Iv+36v1
QmABR8E24jnQc3tRfy/u/170f8T3wDlwHvoFsNWn9QN92P/gUB/WHxzt0/vT
RnynD/u/T/erNMZn4J/tw/0Hew56eXABbPWj//Xj/gOH+nV+0o/6Ybcx3oG/
26/Pb7pfz0emX98PWcT3+vH5p1/fP/l+ff8UwNYA+t+A7jfBAX0/hwb05zUB
Rwd0/vYA7j/EdxE/PSDh2tI3bn79A/rzaBZ63oCuNzeg5zM/oN8TBcS3XB2/
zNX+AVfPb7mL+XG1fgU4BA67ej8I4kVcPR9R2CtdfL5w9XmIgR34x129/11w
0sV97Op+MQN7Bjzr6vOUhf4c8vNcfX7n4Z8DL2B8HvkvIt8CeAlsDer8ywbR
Dwe1Xjk4OKjjVYBDg7KiY/pxGHaBfgT2KOyVsNvgGPwd2OOwu6g3ifrSg3o9
Z+CfAc/CPzuI9R9E/4L/PPRzg/q8LIDziL+I8QXwEthKaP0ycCCh56scHEzo
+isSej+HwOEE3s+IF0G8KLgSbCd0/bEE7puE7ofxhO53bkL3w2QC38eBZxAv
A73ZBN6rCd0/58BeQvfbedhzCX2fLCRwv4EXUU8hob+vXErI4e9kau/Z76//
kM63bAjrDy4fwvkf0utXAXsIHB7C9yeIHwFHh/T+qUQ8G/4x5OPAHoe+C/8k
7Okhvb4ziJdBPrOIl4V9DuzBfx6cQz4LQ7Kybv77Frw4hP6PeEuwW8M6fhk4
MIz+P4z3MbhiGOcf48NggV5kGJ8nh3V9lWB7GP0f+TjQi8PugpPIJz2M9R/G
99PgWYzPop455OvBfx755ob1+3dhGO876C+ingJ4CWyN4P4f0fMbGNH5lsMe
hL0C8ULgMMYLOIJ4UXDlCPo/OAY9B/HjYBfxk+A04s1ALzOi9/ssOAv/uRE9
/x7iz8M/N6L3wwI4j3iLiFcALyG+NarzLRvV+y0wivMPDmJ8xSjWHxweRf9H
vMgo+j/iV8JuI98Y7A44DnahnwSnkf8M7BnwLOrLgufAHsbPg3PwX0A++VG9
XxdHZWVd/d87YF8CW2Oay8bwfRC4HBwEVyBeaEznE4ZdwBH4RxG/EnYbHAM7
iB8Hu/BPgtPgmTGc/zG9n2bH9Ps+O6bfb3Nj+P1uTPfzeYzPYfwCOD+m32+L
Y/o9WIB9CWwltX9ZEr+HwF6exO8DSX0/VoBD8A8ncf8n9f0VgX80qeejEvnZ
Sf3ejSX1e91Jmr8H89c/ifd/Un8/kwSnUf9MEr/PIP5sUpb/XOQ1f/3hP5fE
+z+p13Me85EDL4DzmO9FzE8B8ZdQn5XC+qd0foGU9i9P6fUIpvT3NRWIFwKH
MV7AkRR+T0rp+irBdgr9P6X3t4P48RS+f0zh/ZfS900a/jPwz6Tw/U8K39fD
Pgf2Unj/wZ5DvAVwHryYkpV19fs/eAlsjaP/j2t7AFwO/yC4Ahwax/0PlnG8
/8dx/8Neifg24sVgd5B/HHYX9iQ4Df8Z5JMZx/tvHH+vAf+5cXz+Q73z4BzG
L6DePPQWkU8B/ktgawLvf3AAXD6h8wnCXjGBz/+wh8Eygf6P8dEJvP8m8P4D
xxDPgT0Odid0P0mC0xO6v8xM4PfJCd3fZuGfRT5zE7qfehO6f85DPzeh+/kC
4ucRfxH2wgT6P+JZk1qvbFLfp4FJfV+WT8qT3/vfX2183V//SfT/SV1fCBwG
y6TOLzKJvyea1OtVOYnflydlpQ7//TeJ8w//OPxdcBKcRryZSZx/xJ/F+Cx4
DvE88Dw4h/gLiJeH/yK4AF4CW1Po/+DAFM7/FM4/7BVTOr8QOAwW6EUQLzqF
8w+7jXxiU/j9Zwq//4DdKdz/sKcRbwb5ZKb0+2IW/lnkN4f6PdQ/j/E5jF+A
fx72RXAB87UEfWtac9k01n9axyufxvd/0/j8D3toWs9PGCzTuh9EpvH3FNO6
P1RO4++LEC82jfcf4sWRrwtOIv/0NNYf9gzGz2L+spi/OcTzwPOIn5vG+Uf8
PNZvEVwALyGetRv3PziwW48vBwd34/23W9cbgn8YLODIP/j/AWQJdCc=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"ps\"", 20, StripOnInput -> False], TraditionalForm], None}, {
     FormBox[
      StyleBox["\"generation\"", 20, StripOnInput -> False], TraditionalForm],
      None}},
  FrameStyle->16,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->400,
  Method->{},
  PlotRange->{{0., 1001.}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.605848361249523*^9, 3.605848417116027*^9}, {
   3.6058484513286877`*^9, 3.605848486651805*^9}, {3.605848533922573*^9, 
   3.605848553077237*^9}, {3.605848583852087*^9, 3.60584860421669*^9}, {
   3.6117353847433577`*^9, 3.611735413561531*^9}, {3.611735450604269*^9, 
   3.6117354705833683`*^9}, {3.6117358515826*^9, 3.61173585526303*^9}, {
   3.6117359152099247`*^9, 3.611735970327388*^9}, 3.611736111552147*^9, 
   3.611736153216011*^9, 3.611736193989946*^9, 3.6117362832073717`*^9, 
   3.611736428204136*^9, 3.6117365511434393`*^9, 3.6117365953798113`*^9, 
   3.61173664346413*^9, {3.6117366738076963`*^9, 3.611736723757802*^9}, {
   3.612338005603383*^9, 3.612338028611952*^9}, {3.6123380784315567`*^9, 
   3.612338103117982*^9}, 3.612338276674554*^9, 3.6123387078327017`*^9, 
   3.612339197700947*^9, {3.612570571945696*^9, 3.6125706015031557`*^9}, 
   3.612570688059802*^9, 3.6125766088419733`*^9, 3.676164850950182*^9, 
   3.67616492550921*^9, 3.6761649670716953`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0., 0, 0.], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJxd1nu8FHX9x/HJW2sXnZRqS9PR+NlmXtZLtt4/iOiKIst9OYDMuS+Isijq
ioSj3FZEXG95fmUxP80fB4LctHQptTFTD5GyoOiaieMtFlAcu9jRtH67y2d+
Na/95zye5zOfec/Md77f7xzRMXts916GYezY2zCaf/f8grOjfw2JOgabctiq
evq4f72nHiJtf1v/h2WfhI7Dh0rhnnu/vv7j0JY8tPPKX3zxH6GPhIfCR8l7
qRHnX/Fh6IR8a+mXXn7u76GPls23Tf3n8I9CH4O843C+pHzeP7bkDoY+AT5R
ts1ZtuKtP4c+SZ5bs2nrxHdCnyz7f+j2PrQz9Ldx/ClS3nv78sS7ob8jtzcv
7/+dks7dbeecVQ99Ks53mtxw1/CbZ20PfbrMbVz9xt2hz8DxZ8rKM4554ft/
Cn2WDF3/8dK/vhL6bBktB7c/+XxoidYdkYP/PGxTz9awPixqBzbOkdblbAjr
58j7nb+fduFAWB8uDx53+X2fejSsD5ej3lr4o2fXhPVzpSI3vvFMX1g/V5av
v7RxS2F9hDQGd9yb94f1EdHjjfNk1KLPj37gzrB+npzx2NjvHbEirJ8vT1nl
K3K3hfXz5dQXn7rsZCesp6V1+FVhPS0rf7KuNv3qsH6BPPeVMX84ZH5Yv0C+
nM58HL8yrI+Ulw5qPpCwPlL2aw1YWL8Q9Qvl4UXzqw9NDusXSWztoW1dp4f1
i+SnD3dc//KZYX2U3DTMfrt6ZFgfJZ98cJV/zxfC+sVywOPJ/z46HtYvlubd
zDkkrI+WJW3PP/rmkLA+WlrT9YiwnpFjur/yRvbLasnIhwfueOSBvcPjMzJu
3/tuP+1Tai8jqw+unlsLdmv/GHl93pCfnv+6WsbIN36zZNWk36mdMfLovgcN
OftptTdGDmlNsLB/rMxp/SPsHyuTpvzs1+/8KOwfK+tmNGdU2D9WTn9t9C13
Xx72j5P3Njx5zroZYf84OfMzL92XPzPsHydr3t8yqsMM+8fpfHtX+8dLc7Ye
vkUt4+WbG81nfllRO+MlWPX0hd+5Se2Nl1ubh88O+ydItv/bz55+cdg/Qa4e
fdiXZo4K+yeINaw5I8L+CTK//cQJyaPD/omy7Y6li9uef0f7J0rj5g5a6Kmd
iTKrNcHV3kTZ1JwOP1Abk6QR9pcV48L+SXJt64LC/knSeFkbr+Au7Z8k8uPX
Hj/gHrWRlbU3v5IzZqslKwuPv+h/P3Oe2slK42G9vPajndqflee3+Z+9Y7Xa
mCyNwf3jLxapZbI8cGd3sXOa2pksp7QmZNg/WfLPFbds83dof5vOL7W0yZW5
296df7baaZPi4uYLXNf+Nmm+rY9sVhtT5O7SgfNO+Ylapsiswrz7jxmudqZI
qvfcGbOD7do/Rd7xTv36yOvUxlQ5qfVTy1RZ99HUy57655+0f6o0JmtjB1N7
U2Xkdc0npDamycTWgqGWadLcnQ7c8bb2T9M8tTdNDl+8a0zlMLVxibSPH/sN
96a3tP8Smfno3Dvi+6idS+Sy7f9Y/f6WN7X/EjmhtWCojely74iH//LJC29o
//Q9w3uS2pkuO+968HNz1r6u/dPli8tH7tznZLVhy7Dmcvorf48tW77WemBq
seWzQxMLlq9/bY9tWxY1Vu9NW7fp+W25+ZPuv7/V/uoeu7Zc8/jKrx7/6h81
z5Ytxra99l/2yh77tlzwQ+eo3yxRG+3SuPny6zte1vx2mR0s3jD+iZrmt8vc
oXf/q7TgJc1vl1N/PnD14ytf1Px2+dvIyUtSL27V/HbNf0Hz26W1nJyh9ttl
V3P737hF8zukMdl+9z8j1FaH2K0JvFnzO3S+VTW/Qz63V+uLQ/M75IZ9nrr1
hGue1fwOaX1uLP295ndI36vNCb5R8ztkjd0c8A2a3ymPvTnkaxvefkbzO+WA
Yx/84Xurntb8Ttl85CsfLpj5W83v1PF/UvM7pbX8bH5C8zvlx/nmCuhpfqec
dvvG69O/fkzzO2V0a4KqjS7Zvav5gv5K87vk7ebyNv0Rze+S9//afMAPa36X
NHfzfQ/6ueZ36fffzzS/S98vtdclrfjvrtP8Ltl7/2WHd+5eo/nd0ly95g5d
pfnd0lwN2k+8X/O7pfV63HWv5nfr++lqfrfO93s0v1vX55Wa3y1mY3U4a9IP
NL9bGov7LfsF39P8HvnlBc0RVVs90vo82XSX5vdIa7t/6XbN75H/umqv78cO
WaH5PdK7dfvMb32wVPN7pLGZN3Yotdej7/dize+R1vK/eqHm9+r5b9T8Xmls
7vc/9sQ1mt8ra5ufI6MXaH6vHN8agCs0v1eua26/8+Zqfq+Oj9rrlWt3HNV4
ZWZpfq98vLq5Idqan9Pv1dman5Ppn26uyJdqfk7u/GC/6X0XdWt+Tq+3Q/Nz
ej+dmp/T8Z6m+bCfk48WNFe4rObPkGOHH7rrjVPaNH+Gjs95mj9Dzz9O88Pj
T9P8sH6S5qPfw/F+ePxwzZ+p9aM1f6Y+H9F81O3QX9X8mcifKcZ//jwc76Nu
XBqtW5dG6wLbsAO7sAf7sDEragsW2IYd2IU92IeNy5APC2zDDuzCHuzDxuXI
hwW2YQd2YQ/2YWM28mGBbdiBXdiDfdjIR23CFpyEBc7ANpyHHbgEu3AZ9uAq
7MMBbMyJ2oQtOAkLnIFtOA87cAl24TLswVXYhwPYuCJqE7bgJCxwBrbhPOzA
JdiFy7AHV2EfDmDjyqhN2IKTsMAZ2IbzsAOXYBcuwx5chX04gI25UZuwBSdh
gTOwDedhBy7BLlyGPbgK+3AAG1dFbcIWnIQFzsA2nIcduAS7cBn24CrswwFs
XB21CVtwEhY4A9twHnbgEuzCZdiDq7APB7BxTdQmbMFJWOAMbMN52IFLsAuX
YQ+uwj4cwEYhahO24CQscAa24TzswCXYhcuwB1dhHw5g49qoTdiCk7DAGdiG
87ADl2AXLsMeXIV9OICNeVGbsAUnYYEzsA3nYQcuwS5chj24CvtwABvXRW3C
FpyEBc7ANpyHHbgEu3AZ9uAq7MMBbMyP2oQtOAkLnIFtOA87cAl24TLswVXY
hwPY+G7UJmzBSVjgDGzDediBS7ALl2EPrsI+HMDGgqhN2IKTsMAZ2IbzsAOX
YBcuwx5chX04gI3rozZhC07CAmdgG87DDlyCXbgMe3AV9uEANpyoY7AJx2EL
TsBJOAULnIYzcBa24RychwuwAxfhEtwHu3A/XIYrsAcPwFW4BvtwHQ7gQdi4
IeoYbMJx2IITcBJOwQKn4QychW04B+fhAuzARbgE98Eu3A+X4QrswQNwFa7B
PlyHA3gQNm6MOgabcBy24ASchFOwwGk4A2dhG87BebgAO3ARLsF9sAv3w2W4
AnvwAFyFa7AP1+EAHoSNhVHHYBOOwxacgJNwChY4DWfgLGzDOTgPF2AHLsIl
uA924X64DFdgDx6Aq3AN9uE6HMCDsLEo6hhswnHYghNwEk7BAqfhDJyFbTgH
5+EC7MBFuAT3wS7cD5fhCuzBA3AVrsE+XIcDeBA2Fkcdg004DltwAk7CKVjg
NJyBs7AN5+A8XIAduAiX4D7YhfvhMlyBPXgArsI12IfrcAAPwsaSqGOwCcdh
C07ASTgFC5yGM3AWtuEcnIcLsAMX4RLcB7twP1yGK7AHD8BVuAb7cB0O4EHY
WBp1DDbhOGzBCTgJp2CB03AGzsI2nIPzcAF24CJcgvtgF+6Hy3AF9uABuArX
YB+uwwE8CBvFqGOwCcdhC07ASTgFC5yGM3AWtuEcnIcLsAMX4RLcB7twP1yG
K7AHD8BVuAb7cB0O4EHYuCnqGGzCcdiCE3ASTsECp+EMnIVtOAfn4QLswEW4
BPfBLtwPl+EK7MEDcBWuwT5chwN4EDaWRR2DTTgOW3ACTsIpWOA0nIGzsA3n
4DxcgB24CJfgPtiF++EyXIE9eACuwjXYh+twAA/Cxs1Rx2ATjsMWnICTcAoW
OA1n4Cxswzk4DxdgBy7CJbgPduF+uAxXYA8egKtwDfbhOhzAg7CxPOoYbMJx
2IITcBJOwQKn4QychW04B+fhAuzARbgE98Eu3A+X4QrswQNwFa7BPlyHA3gQ
Nm6JOgabcBy24ASchFOwwGk4A2dhG87BebgAO3ARLsF9sAv3w2W4AnvwAFyF
a7AP1+EAHoSNFVHHYBOOwxacgJNwChY4DWfgLGzDOTgPF2AHLsIluA924X64
DFdgDx6Aq3AN9uE6HMCDsHFr1DHYhOOwBSfgJJyCBU7/2/8HfDvxLw==
      "]]}, 
    {RGBColor[0., 0, 0.5], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJxd1nmwHFUVx/E2sgwUYqMIg1DaUJoaCGizxWHNCYEwBEI6hITJ3m+f9xKS
ZgsDYWm2MCwhw6IMyNIUoIMGbEWK0UJoQGUsFpuAxYOyoAXEB2rZUIKvEErz
wnml9zv/TH3q3N89t7fbvW/v2tMGpliW9e7nLWvi/7NfPsMyf2KyANty0Kx9
/vrm9K9qbnf1AeoivA/sqI9U7yc9hyx0D3jgUPU3MH4qXML4A1A/EP4W+rny
yQPvb5nbK+qDUT8EPhQ+TJ75ZWfjDvls9eGYbzrGfwfrKWP9R8BHwkchfzSu
xzG4HsfCM5AXc/5QcDwzzfHhTKznOPP4QtiahTpsHW/2C4/X+hytn4D6CajP
lls+2mFl65SFWp+t59/T+omaX6T1E+WmZy+tPHHxcq1XdL4lWq/Ix5eMPHbu
zVWtn4T8SajPQf858pXr57y33WE9Wj9Z1+Nr/WT0P0V+s+ng8w/ad6XWT5GH
Rleum/e1Qa3PlW+vufdzj23fq/W5up7J+qny5Z6nX5o2MKz1U2Xlji/sNf+1
pVqfZzqcZ67H8sz1iCcV75PiOa9M9vPM8YlnrseaL+t3f+jEP13Yr/n5en5q
moeT+fL6Wdfe8PYHazV/mh6/Wk7T9a7S/Gnm8SWoWwtk84MTJ2yN5hfIBe9O
PbiwebXmF5j9Eoy3Tped9r5rxf7PBpo/Xfb79KPzsjvO0jycnC73DD383jmP
nKf5hbJhyUuPvbX7xZpfKHcffeDLt7+jDhdKdsdu9//qyfM1v1C2nb4vnav5
RXr/6HwCh4v0flin+UV6vifzZ8hRb8zbeOuaszV/hnl8IerJGdK4amLBk/mq
Ob9U5e9feNy97YC65qt6/UPNV/V8XKb5xebxymLZYr0+ZadrL9X8Ymkf/vxR
p76o45PF8tSeUxdsf+/lml9izidL5JEfXPDM/kdqPVyi69ug+SV6/q/S/FJ5
bvnJ3R2PuU7zcLhUdsz32HpLNzS/VGacsfSnT/ztBs0vQ36Z/GffiQVdr/ll
MuO3f3zkyouaml+m679J88t1P7xZ88tl/mt7X9RzyHc1v1ymXb3Hqy/8S+vJ
ctn5lXuDY3a+VfMr5O0r7nr+R7/X8bJCn+/vaX6FhI/K5W8+09L8Cr0+amul
Hp9a4HClHPHz7rrH775d8ytl/2WbnvqwdIfmfXG2rN36SN32mR1frpnp/znd
7/s6ny+zv3nelNsLat/X++sund+X3bYtOPrMka/nS53AmS/zfnLLQKPvTu3f
o/vlPdq/R/59ZPBCY4vOLz3yz09frr87Vet+j/zjd08f9+DwZP8eKWzeZ0n/
UXdr/x7Z5eYHLp9/ks6f9Mj0idvvRj3erEf+8JeRaR/dOtm/V96s7vnoi5bO
5/SaeenV/VHt95rnJ+yVl6cN7PVmVa9n1CsXpw8v/vAXk+e7V++nyf69+rxM
9u+T22/b9tP+ffLw+g9ib5XmpU/fT2q/T7beTAveun+yf5/ZL8J8SZ8sc2a+
3/ec9sv65Lhjx17d/PHk9e83r6fTL9u6n6916Uf/ftlru0W7HvQznS/s1/1Z
+0X9cu7sbTuY9u83z0/WL3N2mbL1kdDx1oDcGU59asMPte4MyI1fvHD6j49V
y4D5PPkDMvE2KW43+XwM6H52i/YfkLMntvuv6/OZDMg7M+574/Fd9XnOBvR9
sEn7D+r+vVH7D+p+dKP2H9Trr3V/UI9P95NwUJ+fa7T/oOw68XgWdX9KBnU/
V2eD+n6d3P+GZOGT7ftOlSu0/5C+D3X/lCG549dOfHZN90d/CPvrkKyuX3j/
gbMu0v5D+ryu1/5D+nxpPhvC+6Nmvh+cGt4HNfN958NhzXy/RnBSM99HGWwN
m+9zZ9j8vpBh8/vBH9b9tk/7D+v1mav9h83vsWTY/B7Mhs3vOWvEHO+M6Pyz
tP+ImfdH8D04Yn7vR8gncDaC799VZt5ZZdZllfn97a8yv+dDOML4BPUMtlab
453V5ve9rDbH+6vF+v9fiPERxicYn6GfdaY53oEF9s9EfziCEziDrTXoD8sa
c7wPhxgfoZ6gnqFurTXtwAL7a3H9UY/gBM5gKzBtww7swgJ7sA8HcAg34QiO
4QRO4QzOYess0zbswC4ssAf7cACHcBOO4BhO4BTO4By2zjZtww7swgJ7sA8H
cAg34QiO4QRO4QzOYesc0zbswC4ssAf7cACHcBOO4BhO4BTO4By2zjVtww7s
wgJ7sA8HcAg34QiO4QRO4QzOYes80zbswC4ssAf7cACHcBOO4BhO4BTO4By2
1pm2YQd2YYE92IcDOISbcATHcAKncAbnsHW+aRt2YBcW2IN9OIBDuAlHcAwn
cApncA5bddM27MAuLLAH+3AAh3ATjuAYTuAUzuActi4wbcMO7MICe7APB3AI
N+EIjuEETuEMzmHrQtM27MAuLLAH+3AAh3ATjuAYTuAUzuActtabtmEHdmGB
PdiHAziEm3AEx3ACp3AG57B1kWkbdmAXFtiDfTiAQ7gJR3AMJ3AKZ3AOWxeb
tmEHdmGBPdiHAziEm3AEx3ACp3AG57B1iWkbdmAXFtiDfTiAQ7gJR3AMJ3AK
Z3AOW5eatmEHdmGBPdiHAziEm3AEx3ACp3AG57AVmi7ANlyEHbgEu3AZFrgC
e3AV9uEaHMB1OIQbcBNuwRHchmO4AydwF07hUTiDx+AcHoety0wXYBsuwg5c
gl24DAtcgT24CvtwDQ7gOhzCDbgJt+AIbsMx3IETuAun8CicwWNwDo/D1uWm
C7ANF2EHLsEuXIYFrsAeXIV9uAYHcB0O4QbchFtwBLfhGO7ACdyFU3gUzuAx
OIfHYesK0wXYhouwA5dgFy7DAldgD67CPlyDA7gOh3ADbsItOILbcAx34ATu
wik8CmfwGJzD47B1pekCbMNF2IFLsAuXYYErsAdXYR+uwQFch0O4ATfhFhzB
bTiGO3ACd+EUHoUzeAzO4XHYusp0AbbhIuzAJdiFy7DAFdiDq7AP1+AArsMh
3ICbcAuO4DYcwx04gbtwCo/CGTwG5/A4bG0wXYBtuAg7cAl24TIscAX24Crs
wzU4gOtwCDfgJtyCI7gNx3AHTuAunMKjcAaPwTk8DltXmy7ANlyEHbgEu3AZ
FrgCe3AV9uEaHMB1OIQbcBNuwRHchmO4AydwF07hUTiDx+AcHoethukCbMNF
2IFLsAuXYYErsAdXYR+uwQFch0O4ATfhFhzBbTiGO3ACd+EUHoUzeAzO4XHY
usZ0AbbhIuzAJdiFy7DAFdiDq7AP1+AArsMh3ICbcAuO4DYcwx04gbtwCo/C
GTwG5/A4bF1rugDbcBF24BLswmVY4ArswVXYh2twANfhEG7ATbgFR3AbjuEO
nMBdOIVH4Qweg3N4HLauM12AbbgIO3AJduEyLHAF9uAq7MM1OIDrcAg34Cbc
giO4DcdwB07gLpzCo3AGj8E5PA5b15suwDZchB24BLtwGRa4AntwFfbhGhzA
dTiEG3ATbsER3IZjuAMncBdO4VE4g8fgHB6HrY2mC7ANF2EHLsEuXIYFrsAe
XIV9uAYHcB0O4QbchFtwBLfhGO7ACdyFU3gUzuAxOIfHYesG0wXYhouwA5dg
Fy7DAldgD67CPlyDA7gOh3ADbsItOILbcAx34ATuwik8CmfwGJzD47C1yXQB
tuEi7MAl2IXLsMCV//m/UWDQ1g==
      "]]}, 
    {RGBColor[0., 0, 1.], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJxd1kuILFcZB/Dju5clKLQiUhGVJvioPIxtfJVGYxu9WsYktrnGW3funZm+
74rP8REt3+O7UReNuCgQYQSRXg4SsVyIA4I0bhxcSCkuJropXcggLkRSFz2/
3gw//uc73zmnXnPL1o37t58aQnjiaSH89++Tv/6NIf7lMUc4wc/BY/wCnOIX
4Rfjl+IJvhW/DL8CZ/g2fDu+A9+JX4Xvwq/GU/wafDd+LX4dfj1+A34jzmPX
OLyJHIc3k+NwDzkObyHH4a3kONxLjsPbyHGYkePwdnIc7iPH4R3kOLyTHIcz
5Gfyl9/zgr/9+a7nD8/pu8hxeDc5DkXsHNe4xeE91OMatzjcTz2ucYvDe6nH
NW5xeIB6XOP2Ac7/QepxjVscHqIe17jF4X3U4xq3OMypxzVucXg/9e+Pz6cm
b3F4mHpcPxzP15KHs9SfHcbfOvQ/m5+//cHs1h/fMdQzPnwgnj//AP1xi8Mj
1D9C/0eoJw8fpB7XuL3pu4f6c/H+clyfo548lIPvedIpzsv83z/+++/ObOVP
usR1Ga+nIW/JO/Jwnv7nh/H3Df3JS1wzvjk/zF8M/c/H/brznN9WXJ9u5d/5
zWdnv3jszNCfvMQ1brbyV17/4VMef8b9Q/+teL3dVry+cIH+Fzj/C/F6ygtx
fU19czMvh/4357sw9L+Qn3vWb5/3nj+cHfpfzL/3z2eeW71ze+h/Mf/Vt2/7
+MtvOTf0vxjXlxfzX//s8JvP7HeG/oxvLub3vuSjT/3+6MrQ/2L+qef89G1/
+uTFof/N+oeG/ttxnm7H68u380888dLbRj+5OvTfzrsfPPtHP//l7tB/O//j
o1/71l/+cWPov50/9xv3/fXpd54f+m8P12Nr6L8d7yfs5LPi3+MP/37I0524
X74znP+1of9O/tPjcx979wtv7n8nPr9mJ95Pu8P57wzX6+Gh/y7nv5v/6zOX
H//Id+dD/914vnI3nq/ejc+rwe1uvL9uNz6/sIivR7qIr1++iOvLBftf0H8R
768l7xbx/sKleHx6Kb5/80vx/VVeGvb/3qH/pfj5aC7x/F0azvfBof8l7v/L
PH+X4/nzy/HzVl6O3x819c3l4TzvHfpfjtfTMX+4Qv8rPP9X4vnKK7x/Gd+Q
t1fi9313hfff1dgpzq/G34/yKt8X3FDfXo2/d91V3v/X4v2l1+h/LZ6/xPW1
eH3Ntbhfy/iO+cP1OE+v8z3G5fU8/P+vxg3jW/IOhxvx+PRGnOfkJXmNG9zi
jvlCFedJxXrIM5wzvsAl4ytc4yVu8Bq3eIM71tPj8Gg8PsEpzh7l/iAvyEvy
Ctd4iRu8xi39NrhjfI/Dh2InOMUZznGBS1zhGi9xg9e4xRvc4R6HD8dOcIoz
nOMCl7jCNV7iBq9xize4wz0OH4md4BRnOMcFLnGFa7zEDV7jFm9wh3scPho7
wSnOcI4LXOIK13iJG7zGLd7gDvc4fCx2glOc4RwXuMQVrvESN3iNW7zBHe5x
+HjsBKc4wzkucIkrXOMlbvAat3iDO9zjsBc7wSnOcI4LXOIK13iJG7zGLd7g
Dvc4fCJ2glOc4RwXuMQVrvESN3iNW7zBHe5x+GTsBKc4wzkucIkrXOMlbvAa
t3iDO9zj8KnYCU5xhnNc4BJXuMZL3OA1bvEGd7jH4dOxE5ziDOe4wCWucI2X
uMFr3OIN7nCPw2OxE5ziDOe4eIz//8krXOMlbvAat3iDO9zj8JnYCU5xhnNc
4BJXuMZL3OA1bvEGd7jH4bOxE5ziDOe4wCWucI2XuMFr3OIN7nCPQx17hBM8
xime4AxPcY5nuMBzXOIFrvAervE+XuIVbvABXuND3OIjvMHHuMMnuMenOHwu
9ggneIxTPMEZnuIcz3CB57jEC1zhPVzjfbzEK9zgA7zGh7jFR3iDj3GHT3CP
T3H4fOwRTvAYp3iCMzzFOZ7hAs9xiRe4wnu4xvt4iVe4wQd4jQ9xi4/wBh/j
Dp/gHp/i8IXYI5zgMU7xBGd4inM8wwWe4xIvcIX3cI338RKvcIMP8Bof4hYf
4Q0+xh0+wT0+xeGLsUc4wWOc4gnO8BTneIYLPMclXuAK7+Ea7+MlXuEGH+A1
PsQtPsIbfIw7fIJ7fIrDl2KPcILHOMUTnOEpzvEMF3iOS7zAFd7DNd7HS7zC
DT7Aa3yIW3yEN/gYd/gE9/gUhy/HHuEEj3GKJzjDU5zjGS7wHJd4gSu8h2u8
j5d4hRt8gNf4ELf4CG/wMe7wCe7xKQ5fiT3CCR7jFE9whqc4xzNc4Dku8QJX
eA/XeB8v8Qo3+ACv8SFu8RHe4GPc4RPc41Mc9mOPcILHOMUTnOEpzvEMF3iO
S7zAFd7DNd7HS7zCDT7Aa3yIW3yEN/gYd/gE9/gUh6/GHuEEj3GKJzjDU5zj
GS7wHJd4gSu8h2u8j5d4hRt8gNf4ELf4CG/wMe7wCe7xKQ5fiz3CCR7jFE9w
hqc4xzNc4Dku8QJXeA/XeB8v8Qo3+ACv8SFu8RHe4GPc4RPc41Mcvh57hBM8
xime4AxPcY5nuMBzXOIFrvAervE+XuIVbvABXuND3OIjvMHHuMMnuMenOHwj
9ggneIxTPMEZnuIcz3CB57jEC1zhPVzjfbzEK9zgA7zGh7jFR3iDj3GHT3CP
T3H4ZuwRTvAYp3iCMzzFOZ7hAs9xiRe4wnu4xvt4iVe4wQd4jQ9xi4/wBh/j
Dp/gHp/i8K3YI5zgMU7xBGd4inM8wwWe4xIvcIX3cI338RKvcIMP8Bof4hYf
4Q0+xh0+wT0+xeHbsUc4wWOc4gnO8BTnePY//wdue16U
      "]]}, 
    {RGBColor[0.5, 0, 0.], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJxd13mUG9WVwOEKIURMgAjwgAhLyj4OI9YRu4CAr7Exwsa47PYit7fqXd12
u2Vsk8bYUBAvYrNFiKEDQ1KExXISiDCBiCWZwoYgY0KKJSCWQJGQSTMMiVjM
NJBAJPnqzNRP//T5zq37blfVe/e9Gt0+MKNrL8Mw3vmyYdT/7vlVxxnhn4QZ
gaPwKDlhwhHv/vH0b+g4MfgI9bFqEx4jbSfPShy79RT1WI2fpT5a4xPUcXnq
kdIN+1QnqY+Vv299//mp7aI+HuOfCCcw/knIP1nrtahP0bitPlWe3HTSd04Y
vUh9mvz70ju/9NhXZqhPR/wM5Cfl+x/vs2jooi71mZKy/h5b/nK7+iy5r7Lo
0mlHdavPxnjfRv458ukVfY+tuCmjPlfG/OPjlcF/LFOP0+tXqkX2PfyHC4/Z
ld1jR+TsN6fdcMvSSzQ+Xi4fdd8Fb61aofHx0ri9g9TGeXJw244Xjuu6TOPn
6fNcpfEJcumyw/cPTnA0PkHHW6vxifLe/r9O/ODYnMYn6v2u1/j5ckA9HFun
8fPD1xuTkD9JHrj8g6K1+FqNX6DPoxm/QJYMrrr7+AnXazwlU8pfPee2WZs0
DhsXymF7zz7ghG03aPxCeWPZtRvf/qAZnyxdh/0xfegvb9T4ZL3fvManyPMD
i7767GHN+BR9v9/T+EXyedf/vt12x80av0hePuiD8b/r3qzxqeJPrFQ/mvwD
jU+Vj2/5w00b1t2q8YvFbBRoxi8W739++O3jX2zGp0nLzaM3rlx2m8an6fvS
6w1Lrhlv/9kfo3Gx5IvRjQmj11sy7eff78p13L7HniVXL59Um0I/0vzpMu43
rz+4drWr+dNlw5Y5T5/8xB2aP10Kp/327IufU3vTpXG5f6fmz5AvTV27/7Sf
36X5M3R+qZ0ZOl/v1vwZut7v0fwWmfrhxpYVY7dofousW+0/MHf3Vs1vkdPr
5W/8mea3SP1uX/vkPs2fKWNqT+fw/YuaP1Mar/M5tTNTjtoynDrxi/s1f6a8
8EbwtZu2btP8WTJUfx2tD2j+LGksn4PUziw55LNdf925Q6/3ZklyZHvnT+xf
aP5seac2+uh/PKT5s+V25+jt67f8UvNnS8eVr5xzWbqk+bNl8n57HbfhkIc1
f47cGqkv4Ec1f448cf+J9Ueo+XPk8afvOP+hD3+l+XNk/PsdzyyY4ml+Wu9X
LWm576H2WsXHNT8tl9Sn+ze3a35avthWX2A7NH+u1Gf39FfVMle8eWatxBOa
P1dezxgDV+39pObPlbO+t+vK1H+qjVbZVBv9+YGnNL9VnqlF1xxZ1vxWOeMb
9RF3an6r9EzsHaiuUxvzpLrlN1POuEYt82RUY8E8rfnz5Jj5m7bvjj+j+fPk
obX1CfJbzZ8vM1eMveWL/LOaP1+cevnk7zR/vvYDtTdfVtfby61qY4HUu8Pt
f1PLAtn84r6ZMUt8zV8gR7Z21lrqc5q/QH4xd/fDr16rNhbK+p0zHy/c9bzm
L5Q/jN3nqs0TXtD8hXJ2Y4GovYVSf/uvPKs2FsmoxgJ8UfMXye//0nfcx7f8
XvMXye0H3v2rxw99SfMXydza2zbeUBu2zp+X99i0tV+oxdb+Wtlj29b+pnZs
Obm2G33zI7Vry/1vvbN5236vaD1b71cd2JJ6a1VtB1AbbXL95P/e+9QDX9X6
bfLu8gf/9bNdammTUxq/17R+m9Qmb+2NqJ026W1ML7Xbpv1F7bXJ6T89d868
+9VBm/zbSZGfHdH6utZvl5/Ut+Oo2myXt0cdufPP49TSLns6ZrN+u+x+7eWr
lk/SuNMu/bPX1JZMs3671Lv5S6c267fL8Y0Nolm/Xf50921PmEW9P6ND36/G
zQ6pFb/rzV83779D/rZzx3n39qrtDrFru+Mhffr8nA5pbI+bm8+/Qx6tt8dD
1F6HfDa//8nPt+n7DDqknj31w+b775SJ1y35y2dbdb6YnXLm+Rdc8snX1dIp
9dPPwb7OL7tTGsehg9VOZ3i+up3af5vzvVM+n/Dpe+966qA5nq4Po0tWPXVM
rSXo+jG7ZPfkueuTL+n6lC75a+t55w6/ouvX7pJHFu/7iduzS+t36X6n693t
kgMbG4T2D69Lznzpyf5THe0vQZeub7XRLTt2x2sdQvuR2a3nE+1f0i33flp/
gNr/7G4pDz16c/7raqdb91Ptl2639i/tp163/Ff9dR6g/TjoltMWPnLhfntp
vzZ6pNZcfvTTe7W/mz26vrX/S48sz9z43upxD2r9HklcdM+/TPqW2umRRnt8
X/cbt0fPb839pkcay2OT7l9Bj7x6+OrakVb3NyOj+4Xuj2ZGBr82Nn7F9bp/
SkbXR0HrZ6Qx3Em63zoZXb+6H7sZqc+ujS26f3sZefCey2pv+MdaP6P9vnl+
6NXzrNrslTX16fOwnl+kV+qnt9jeej6ye+X9j+oTpHle6pXthx7d8pU79Tzl
wl6vvFnfrq/W81fQi/Nbn+5f12n9PplV68YXy3e1fl/4/Gn36Xm5eZ7tk0nf
WrnXrZHLtX6flI5a9+700hVav0/qb/u4DZdq/T7JrWt94bE/Nc/Pi6WxHa7p
1/qL9XkMaH3YXqzzrVfrL9b/f57WX6zno9lavzn+Aq2/GN8PS8LfI+YSvX6q
1l8S/v6xYQfXu0vC32ceHCzR74PJWr8//P1m9oe//6Q/PL7dH/5ec/rD32su
7PWHv/cC2FgaHs9cGv5/BLZxvQO7S1F/Ke4fcWMgbHMg/L0ssA07sDsgxv//
eXAAG9mwo9nweCacwPUCW7ANZzGeg3geduEi7ME+HMBV2FgWdhQ24QQssAXb
cBZ24DzswkXYg304gKuwcUnYUdiEE7DAFmzDWdiB87ALF2EP9uEArsLG8rCj
sAknYIEt2IazsAPnYRcuwh7swwFchY0VYUdhE07AAluwDWdhB87DLlyEPdiH
A7gKGyvDjsImnIAFtmAbzsIOnIdduAh7sA8HcBU2Lg07CptwAhbYgm04Cztw
HnbhIuzBPhzAVdj4TthR2IQTsMAWbMNZ2IHzsAsXYQ/24QCuwsZg2FHYhBOw
wBZsw1nYgfOwCxdhD/bhAK7CxmVhR2ETTsACW7ANZ2EHzsMuXIQ92IcDuAob
q8KOwiacgAW2YBvOwg6ch124CHuwDwdwFTYuDzsKm3ACFtiCbTgLO3AeduEi
7ME+HMBV2FgddhQ24QQssAXbcBZ24DzswkXYg304gKuwsSbsKGzCCVhgC7bh
LOzAediFi7AH+3AAV2HjirCjsAknYIEt2IazsAPnYRcuwh7swwFchY0rw47C
JpyABbZgG87CDpyHXbgIe7APB3AVNpywI3AUjsEmHIcTcBIWOAVbcBq24Qyc
hQdhB87BeXgIduECXIRLsAeXYR+uwAE8DFfhEdi4KuwIHIVjsAnH4QSchAVO
wRachm04A2fhQdiBc3AeHoJduAAX4RLswWXYhytwAA/DVXgENq4OOwJH4Rhs
wnE4ASdhgVOwBadhG87AWXgQduAcnIeHYBcuwEW4BHtwGfbhChzAw3AVHoGN
74YdgaNwDDbhOJyAk7DAKdiC07ANZ+AsPAg7cA7Ow0OwCxfgIlyCPbgM+3AF
DuBhuAqPwMbasCNwFI7BJhyHE3ASFjgFW3AatuEMnIUHYQfOwXl4CHbhAlyE
S7AHl2EfrsABPAxX4RHYWBd2BI7CMdiE43ACTsICp2ALTsM2nIGz8CDswDk4
Dw/BLlyAi3AJ9uAy7MMVOICH4So8Ahvrw47AUTgGm3AcTsBJWOAUbMFp2IYz
cBYehB04B+fhIdiFC3ARLsEeXIZ9uAIH8DBchUdgY0PYETgKx2ATjsMJOAkL
nIItOA3bcAbOwoOwA+fgPDwEu3ABLsIl2IPLsA9X4AAehqvwCGzkwo7AUTgG
m3AcTsBJWOAUbMFp2IYzcBYehB04B+fhIdiFC3ARLsEeXIZ9uAIH8DBchUdg
45qwI3AUjsEmHIcTcBIWOAVbcBq24QychQdhB87BeXgIduECXIRLsAeXYR+u
wAE8DFfhEdi4NuwIHIVjsAnH4QSchAVOwRachm04A2fhQdiBc3AeHoJduAAX
4RLswWXYhytwAA/DVXgENq4LOwJH4RhswnE4ASdhgVOwBadhG87AWXgQduAc
nIeHYBcuwEW4BHtwGfbhChzAw3AVHoGN68OOwFE4BptwHE7ASVjgFGzBadiG
M3AWHoQdOAfn4SHYhQtwES7BHlyGfbgCB/AwXIVHYOOGsCNwFI7BJhyHE3AS
FjgFW3AatuEMnIUHYQfOwXl4CHbhAlyES7AHl2EfrsABPAxX4RHY2Bh2BI7C
MdiE43ACTsICp2ALTsM2nIGz8CDswDk4Dw/BLlyAi3AJ9uAy7MMVOICH4So8
Ahubwo7AUTgGm3AcTsBJWODU//mfdn0v3g==
      "]]}, 
    {RGBColor[0.5, 0, 0.5], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0.5, 0, 0.5], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxd2n2UJFV5x/ErSbTRkJSRJB1BU2uIaReIhSK2COwji9gisLXvvS/s1rz3
vNfsstDAshS4QC8sbKnItgRJEZbYy2v7RjoGtdSg4+EkdjDIhBylJBoa8aVM
IplEPWZm9plj7nf+2fM5z336d+vWrar7x67on143dJwx5sXfMGbx32N/+Spj
/4nNAuzAJ8JF+GTYhd8EnwK/GS7BK+HT4D+HPfgM+G3w2+Ez4XfAZ8HvhMvw
u+Cz4XfD58DnwufBq2CxHcHmPajD5nzUYbMaddhcIKevPvml5896/bF9F12A
+nvRD5sLUYfN+1CHTQV12LwfddhchDpsPoA6bC5GHTaXoA6bS1GHzRrU19jr
bXy7LnDk2+NT2Ky1LWvRD6ewWYf+dehfrq/UfIw36zH/9dhPcAqbDejfYOdF
qKcb0L/RHi9wtBH5yz5b+zfZFjjahH7YbJa+t230Vh59u/Zvll8c/elTl/SL
9m/G+m2Wr32uc9sr8wu1v2qPl6pdj1BPq/LhJ6+rfPHaS7R/i+av1/4t6N8i
b5267xWP/9Y67V+ub9L+rdq/Wvu3Yv7L9rUf4802ez6yTccH2r9Nnjh0xpWn
r9ip/dt0Pv3av13nM6z92+WOl1+5s3nxkPajnm6XR+Z2XrHmjWpzmeaF2g9H
l8l3Zm65/Xv/Ma39l8lVL775jMJDE9q/Q37/4EU/+M0zZ7R/h7z7uTW3HZ7a
pf075HPv/+3jTr35Cu3fIa/r+8o3Tx26Svt32pad8qMTvuB9bGVd+3fKQw8v
Tnif9u+UvzzntH++69+v1f5ANn6pdeRS+eAxu4Hm36C/F8jScv3e/mMOAnlV
/gcV/xcN/f1A8w8ccxLIyNMvjJ368s2aF8ivVvzy5T3ZwWPOAl3/D2t+n9y0
9ZuP/9uJt2l+n67HhzS/T44/6Z4db3ky1vw+eS57zUeO3qD1qE8++cUf3nPO
aXdofp/0FtIPf/sjmt8n91+6OEV11id/lhxof/fFj2p+v9w78ukf7P6s2u2X
M1971jmfX3en5vfLq5+5Lzz31Yc1v18uv3Bph2h+v0zUr77/tNV3a36/rsfH
NL9fBn689fzzeuqsX5ae3vQvNH9AfvL1r5z/8Og9mj8gtQ/9aO+qd6hlQC5+
54H3BN9PNH9A+jasW7gEdTQgCzejuPuZv9L8ARn+7+/13futI5o/INf9y7lX
VVv3a/6A7o+W5g/KI4/1Lww5qvmDshS/4wHNH5T1d664fc/Mg5o/KE8fX3vT
RF3r0aA+fw9r/qBc/9HVt068oOPTQd1vWs8G5fQVf/xfE5vUZkjesv3Ql39W
ekjzh6S9a3EFHtX8Ibmp/K0nJs9sa/6QvKE8csHotDoaksO/ivf9/Gx1MiRD
DwQLK6ROh+T56h/+zT+ZRzR/SJ596H+3Tz6hNsOy8uzFK9A8d1g+s+Vnf/vs
LTo/GZY3fP37q448p+ODYXnhYGlhCZfzh+Vw/LtXn/Wg1pNhfb71etJh2XD5
KQtTXM4floXNvbDDlq9/RB78xtObfvhWXS93xF4PGZFH7xhqDFymDkbkxy+l
7/qTi3R8NCLf/uz+vd1P6/1LRmQp/mS9P+mInHRCdnqc6P3ORnT/Lt//mtRf
c0pp38Hl+1+T/ff8wwPfePqvNb8mn/r4Tz7x1Q98QvNrsvhwrLhd91NUk91L
G1ad1OSxxelsUac1kSPPfeF37r5P82vyikv2n7DmUd2fZtTev+6ovH7tsyft
7VPLqBxZePqeuW95/4/K0uvl8Mc1f1QWXk4nrvrq8vM3KuHOV/3jH629S/NH
xVm4O+dt1uctG5Xs7tfe//kv6fNsxuTJe9/72H/+Ut8f7phcubRBl5//Mfv9
EIzJ/JcHF3aYvr+iMft9lozJU+Y7xx1/yyHNH5OFh+HnR3+q9WxM3xf6PjTj
cuGf7jnursKtmj+u3wvtl3F9/rQejNvv12hcGjcuvkD1/ZyMy91/7y48Qtdr
/rjc8PzXmn93Z6T547r+Ot5M6Prr+96d0O+rfg9kQv71f/aNPX65OpiQzhtv
fGltR78n0YRez17Nn9DruUbzJ+TQ+sUHYDl/Qtynphfu0PL3a1K/z9dp/qR+
X/T7JZO6/ns0fxLf10n7+5lM6vdst+ZP6nzGNX9S7/+I5k/Z5wF3CueBKbnm
xEfe992rBzV/StdnQPOnZGm7PbtN86f0vLVV86fs80c2pfPt0/xpPW9s1Pxp
+3wk0/b5J8D4aNo+XyWop9P2+TDDeBPa5ykntM9vbmifx7wQ5030+6H9+0Fo
zz/E70WhrtdFxxzj95PQPu+2Q5xnQ/u83MXvZ3AOmxm734HdGTH//8+bwXl1
xp6fDwcz9vWEqEcz9nxi5CUY34ZTuAtncA6bXbadXfb6uqh7u+z5Ceo+HMAh
+iM4hhP0t+EU47twBuew2W3bgV3YgwX24QAO4QiO4QRuwynchTM4h83lth3Y
hT1YYB8O4BCO4BhO4Dacwl04g3PY7LHtwC7swQL7cACHcATHcAK34RTuwhmc
w+YK2w7swh4ssA8HcAhHcAwncBtO4S6cwTlsrrTtwC7swQL7cACHcATHcAK3
4RTuwhmcw6Zu24Fd2IMF9uEADuEIjuEEbsMp3IUzOIfNVbYd2IU9WGAfDuAQ
juAYTuA2nMJdOINz2Fxt24Fd2IMF9uEADuEIjuEEbsMp3IUzOIfNNbYd2IU9
WGAfDuAQjuAYTuA2nMJdOINz2Oy17cAu7MEC+3AAh3AEx3ACt+EU7sIZnMPm
WtsO7MIeLLAPB3AIR3AMJ3AbTuEunME5bPbZdmAX9mCBfTiAQziCYziB23AK
d+EMzmFznW0HdmEPFtiHAziEIziGE7gNp3AXzuAcNpHtAuzARdiFS7AHl2GB
K7APV+EArsEhXIcjuAHHcBNO4BbchjtwCs/CXXgOzuAenMPzsLnedgF24CLs
wiXYg8uwwBXYh6twANfgEK7DEdyAY7gJJ3ALbsMdOIVn4S48B2dwD87hedjc
YLsAO3ARduES7MFlWOAK7MNVOIBrcAjX4QhuwDHchBO4BbfhDpzCs3AXnoMz
uAfn8DxsPmi7ADtwEXbhEuzBZVjgCuzDVTiAa3AI1+EIbsAx3IQTuAW34Q6c
wrNwF56DM7gH5/A8bPbbLsAOXIRduAR7cBkWuAL7cBUO4BocwnU4ghtwDDfh
BG7BbbgDp/As3IXn4AzuwTk8D5sbbRdgBy7CLlyCPbgMC1yBfbgKB3ANDuE6
HMENOIabcAK34DbcgVN4Fu7Cc3AG9+AcnofNTbYLsAMXYRcuwR5chgWuwD5c
hQO4BodwHY7gBhzDTTiBW3Ab7sApPAt34Tk4g3twDs/D5mbbBdiBi7ALl2AP
LsMCV2AfrsIBXINDuA5HcAOO4SacwC24DXfgFJ6Fu/AcnME9OIfnYdOwXYAd
uAi7cAn24DIscAX24SocwDU4hOtwBDfgGG7CCdyC23AHTuFZuAvPwRncg3N4
HjYHbBdgBy7CLlyCPbgMC1yBfbgKB3ANDuE6HMENOIabcAK3DuD/K6DegVN4
Fu7Cc/j9DPUenMPzsLnFdgF24CLswiXYg8uwwBXYh6twANfgEK7DEdyAY7gJ
J3ALbsMdOIVn4S48B2dwD87hedjcarsAO3ARduES7MFlWOAK7MNVOIBrcAjX
4QhuwDHchBO4BbfhDpzCs3AXnoMzuAfn8DxsDtouwA5chF24BHtwGRa4Avtw
FQ7gGhzCdTiCG3AMN+EEbsFtuAOn8CzchefgDO7BOTwPm9tsF2AHLsIuXII9
uAwLXIF9uAoHcA0O4TocwQ04hptwArfgNtyBU3gW7sJzcAb34Byeh83ttguw
AxdhFy7BHlyGBa7APlyFA7gGh3AdjuAGHMNNOIFbcBvuwCk8C3fhOTiDe3AO
z8PmkO0C7MBF2IVLsAeXYYErv/b/Abr6pkQ=
      "]]}, 
    {RGBColor[0.5, 0, 1.], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJxd2n10ZGV9wPGn+NJptT2jUoiVQy8e5KQg7YCKEVB+CF0HysvACozgujfv
k2ST3CS7m0k2yd6ZbDaTsJtMFWFElLEghlrptJYaKeL1raS2tSPSY1pbuKXW
BvWPccvhxB6szctvTvf3zT+cD7/neX7P233uMzN7Xsfwrd1nOOdefJVz2//d
/Wtc5eyfWCbgJHwm3AKfA3vwW+Hz4QvgVvhC+O3w78Ep+BL4Uvgd8Dvhd8GX
we+G2+D3wJfDV8BXwu+F3wdfBYt1CLurEYfd+xGH3TWIw+5axGH3B4jDbg/i
sPsA4rBLIw676xCH3fWIw+4PEYfdDYjD7kbEYXcT4rC7GXHYZawFDuEIdreg
PhzCEexuRX04hCPY7UV9OIQj2H0Q9eEQjmB3G+rDIRzB7nbUh0M4gt0dqA+H
cAS7LOrDIRzB7kOoD4dwBLs7UR8O4Qh2d6E+HMIR7D6M+nAIR7DbJxdfc85P
Xrjswt33pjT927sO90n7pbelLnz0HbuO9qH+R2x5gcOP2PYj2O1H/aYv1/pw
tB/1fRv3fNtfgX2UD315+onVk69t7Nl1tVn+Gs3nyyuP/uyZGztk13Gz/vWa
v13uefm1+ys33Kb527V8RvO32/J+u/zPTP+TBz+W1fzt8vtDD/3Kk6+5VfO3
y0f/7mj6q9M3an60Hzfj+zR/h3xr+ZLxi8/br/k7tP+dmr/Dlvc7JJ15pWXs
+x2av0N+68T1P371O9s1f4f2R+NRh85Pj+bvkPiBN3z2K1/r1fydcsXzN5+8
b2hU83fqePs1f6fs/9XvvPmWfxnQ/J1Smrvze0/+x0HN36njO6T5O3V+8pq/
2d6k5u+Ut/7i5UPxAwXN3yVfP/uCva95qKj5YemSH/x8u8FZzd8lG/0XvXzf
v6nDLnn2ou43v5Cd1/xd8siv73nboTMWNX+XnKplBu4fP6H5u2QreH/iLUua
v1ueGd4e4R9p/m7JrrzrH664SS3dcnjkLb8RX1zW/N06/ns0f7c8cd3rz7ho
/l7N3y3bo295tTrqlq3FfFP92orm75anUp+4sOXjWt/1yPlffmX+pR/cp/l7
bHnpkRcvuCTxp+fcr/l7JDl52effd8cnNX+PHN/uzpmf0vw9kn3PX64dfupB
zd8j//Rf2xOm8Rhx1ysvZM/+0nfdpzV/r9z8Z/d0lzq1vPTKTnfWq5q/V176
xbP5Fy/4jObvlefj133s0aK62ivf/sb7v9D3nDrqFXn4+ad+84GHNH+vPDHw
az+v9qpdTvfzH2v+nDTO2v4/Gpec/M2/Pn5sqq72c5K6YXuFP6v5c/L9N566
+h971NWc7Gz/Nz6s+XPyV1u1v/ghjcc5uf3Bz39hff8jmr/Ptuf1yXbvvvjj
Zv4+ufIrt9573pLG/T7d7838iFcRj/p0/zbH3yf9z40sLv1Qx+v65eg/v3ci
u9LM3y/7Br/1v39xROPSL8t7D55/3y+b898v85+749uXfrM5//2yvfvP/lJz
/vvltq+tPHyTaL6oX0a3sp36HW0v7pdzz+q/8b+XmvM/oM+T2huQB77p1UZz
2p4MyE53TjXzD+jz0cw/IDvb8a5mfpSPBuQNOweQOh7Q50/3mzsgu2zuvwNy
6Y8ee9sPZ9VyQD7sXf2zzr/X/egfkF+et3OAaP4Den7qfq4esPszQvvxAbnq
jrv+/Ks/beYftM+HN2jLy6DsPA77NJ8/KFsP451dV2i+cFCKY3u2lryZf1D2
bu2GQyP6fEaDsvXwNF66/hOaf9CeH25Iru0bbsz9rdob0vOxef4M6fqq/SH5
6S2r5879RB0OyQ3vXrja/089n6pDsvn1rj/xP/hRzY/68ZDsbL9Ty5p/WF6/
9fTect1JzT+s54lahvX90sw/LI8/MvH0716u7YfD8uWtt8tZ6Wb+YXteRojH
w/LglW9/9v4fafsukN3jSM/rJOwFur7a31Rg25PAjicT6Pmm9gM7niCw74cw
kIPby7e/tOtyoOt3t44nkDe1f+N7F3Uv7LoWiLfzwlBHgb5P9f1TD2Rrc2y9
UdUx3Aikd2fDqd2Ivj+O6/hH7PvNG5HvlJ55Ln6dOjWi83FUxz8iO4/jd/V9
mhnR81Tfn/6InkdzOn6UD0f0vhPq+Eek+MLTlb++V10d0fFP6PhH9HzV9380
oufNmI4fjkfkyJmPfeDfJ7V8Y0TvI4d1/KPy2Pr+wzefq06O2vLeqHxm6zQe
e1zvF6lR7W+g4x/V+0ZOxz+K+8qojr9bxz9q70chXB7V+8qdOv5Rex+sjer9
bK+Of9Te9+qjuO+hfAPl3ZiNJ2FvzN5vU2P2PiuIZ8bs/dcfs/mCMXufDVG+
PGbv51W4Nibu9L8IrsMx3IDdQesk7B20ny9SsMAZ1PfhAA7hMlyFa3AE1+EY
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
/wN+d12x
      "]]}, 
    {RGBColor[1., 0, 0.], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJxd23uUHFWdwPFaRGhEd1sX2FZeRcRsG0AK5NEKwg+Q0AQCnUCSziSTqXn3
vGsSHk0QqRBIOlkevQLSsGy2lFeDyDYia4MoRRAYCGAZUFsRLRCxAXVrETgD
out0z2+O1rf/yfmcW7/7u7fq1u/emnNyUM/E0v5dDMN47QOG0fp39hedaMR/
EmcCTsJ7wSl4P9iE58EHw/PhNLwAPhT+DGzBR8BHwp+Fj4KPho+Bj4Uz8Ofg
z8PHwcfDX4BPgE+EJW4XNk5CO2ycjHbYOAXtsPFFtMPGqWiHjYVoh43T5LBT
9nvj5WM+Mbuu3dPQnkU8bJyu8Qs0/vR4f8Yi9A8bZ6D/M9B+JtrPRPti9L9Y
uo9cZi2487PafhbiYeNsjB82cvH+JRfv34X9nLx/5//tXNwjGr8k3p8swXiX
xK/3l2D8S9WnaPzS+PXu0nj//lJ54sH6VbtFCzX+nLjlnHh/7jnIj+uNc7U9
p/Hnar5FGj/Xbmv8uXLdO7t1Vc5cpvHLMP5l8t6Xhx8679q8xi/T/jo0fpns
feWi13c9qlvjl2t//Rq/XMKbP3rb9x4Z1Pjl8tg1R1x42EFdGr9cLt7rntNe
Wt+n8SvkKzsuzT58yZjGr9DrJzR+hRz3q7OvumF8rcavkK7dn/34kp+PaHxe
xm/5h4c++LHzND6v+S/U+Lz8/iPft25cUNT4vDx/SP/HX85ru7FSNnU899Cv
97pE41dq/ks1fqXM+/M754c3b9D4ldIcPuSdG17cqPEdsuyR6q1niVo6ZPDH
v525YrPGd0hHX2sGar9Dbrqx9dui8avk/w9qJbhS41fJRa/NPyJxt9pdJb+c
3Hr1K29eo/Gr5PD2hL+i8aulevQzx531o3/X+NWy/V/mn/PBW7TdXS0H7DO8
+I9XX6vxq2Xfw188eLcN12t8p47vBo3vFP93244/9PmbNL5Tnu48Y2r3L/yH
xndK/YAr3lhS36bxa3R9eRq/Rj4SHlb2pr+m8Wukc+yxv3zr4q9r/BpZuSnz
k8fGbtX4LvnYRv+pr516u8Z3yaPPtR5QVeO7dDx3aXyXLPzU+bvclPiGxtty
5Kv3fOqVjffM2rRl7/2f/M2Jt/639mfLr4/5hL/KvHfWti2VF6/dfEXHfdq/
LZ984d2ZFf/tWXu2XLzx8DNv/9D/aD5bn+d3Zh3aMnNvXt3/jrrm75YN87dv
umPFg5q/W5xnSzt/GX5X83fLzMuU2nX59zV/t8xM/ij3O77m75Z92zdM7XXL
6B7veoP3bdf83XLLJx94f/Nbj2r+brnyhYIxseEHmr9HPr0jOVMSHtP8PfLH
A3dOdO3+uObvkfmvbNz2zF1PaP4eaT2NN2tTmr9HfhPMm7kDT2n+HrkkuG/l
2w+o/R4p3Pf6uvv33qH5e/T5Pa35e+XOfw6+2IjUZq9sPbD3Dx0nP6v5e6XU
2/mLhR8INH+vfHOotaLVbq/8accfnnz05B9p/l6tB2q/V9rl5qM7NX+v/Kzr
grMP2Edt9El1xVNH/uBetdmn831O8/dJu5r7artPblyQuv75PZ7X/H36PNVe
n7Tu/uvrfqz5++Tel167/lsfVod9sv6Yb5ywYpXa6Je77HOX/qunNvvl2zN3
7+db1dIvdmu4w2q7X2Yu3lJ7Se32y6Nvp1dfs13t9ctv/9R6oX6i+fu1/qrD
fmlP74dz+QekVb32f3Iu/4Bs2LVVwebyD8iWmdW457Vz+QdkQfuBzc1/QDr/
csp7v39jbv4DWv/V/oBc9vITle9+VR0OSPXxM47dcpLaGJT/zZx62tp39f6a
g9LYsG7hde/o85BB+cxMNTjiVbU9KKc2orcWrVS7gzr+uec/KG8vaq2wuec/
KEe3E6jDQSnMGy2uv03Xj1GQu/drVbAfav6CLD39P9352+fWX0HOb71+//iM
5i/IXic+/ov7L9f16hZkuF1g59Z/QevV3Pov6PN+UvMXtB7r+2QMSemtF366
YZ2+b+aQrte5929Innm69dP31R6S1uorzFO7Q/H33RuSf9rz/tsveuIRzT8k
7du1SetDOCSt7AfufFjzD8uKVfc+/LttD2n+YZ3v9zT/sCxqFzStT/awtJd7
U+uXOxyvZ96wtMvfwvs1/7B8qH3D1eFwvH4aI9J+HIeqzRE5tlVuT9J6KyPy
wMxpZZ9sTfOP6P6h9dodkWT7Bms990Yk1d6+5ur9iBzcKn8v3KH5R+TpVnnY
X/cHY1RmNusD3xrV/cMclfbr9dptmn9UWrt/6nrdb+xRufnrrYKqdkd1/9T9
yhuV9uN/U/czf1S6W6/3FnU4Gt/vjDE5+YTmz+5+72bNPyYPnv7hXQ7Z/FXN
P6bjU9tjup/ofuuO6fiu0/xj0nqaxx+q9sfkv1q78atXaX7YGJe7v9mYqYhX
a/7x+PlBxuPnD3tc3++S5h+XCyZbO5Cr+cclm3s/te6nl2n+cWlvZ3vq+SYc
1/qs5yVjQsejNidkj323rfn0Du1PJrR+rdf8EzifzV3vaP4JnPcmdL/X8144
ET8fGo72PzzrpBM/v5qOnpcHZm3NtRd0fI6ef3tnnXP0fLlKx+vo/eiZtePo
/Dt1/Li+7MTPyx7aa078/O1jvIETP7+HTvx8H6E/Y1LHs1jnP6nzXa7zn4yf
761JfG9Mar7P6/wRb6N/ZxLfN2gvT8a/nzz0X0N+H+ML0H+I+Ajtxtr491gS
NteK8fc/ay2+99bGx5uDbcQ7sAuXEe+hvYZ2H+0BHOL6CO3GuriTsAlb6/C9
jPYcbMMO7MJl2INrsA8HcAhHsHFe3EnYhC1Y4Bxsww7swmXYg2uwDwdwCEew
cX7cSdiELVjgHGzDDuzCZdiDa7APB3AIR7BxQdxJ2IQtWOAcbMMO7MJl2INr
sA8HcAhHsHFh3EnYhC1Y4Bxsww7swmXYg2uwDwdwCEewUYw7CZuwBQucg23Y
gV24DHtwDfbhAA7hCDYuijsJm7AFC5yDbdiBXbgMe3AN9uEADuEINtbHnYRN
2IIFzsE27MAuXIY9uAb7cACHcAQbF8edhE3YggXOwTbswC5chj24BvtwAIdw
BBtfijsJm7AFC5yDbdiBXbgMe3AN9uEADuEINi6JOwmbsAULnINt2IFduAx7
cA324QAO4Qg2vhx3EjZhCxY4B9uwA7twGfbgGuzDARzCEWxcGncSNmELFjgH
27ADu3AZ9uAa7MMBHMIRbLhxJ+AknIJNOA1bcAYWOAvn4DxswwXYgYuwC5fg
MlyBPbgK1+A67MNTcAA34BBuwhE8DRsb4k7ASTgFm3AatuAMLHAWzsF52IYL
sAMXYRcuwWW4AntwFa7BddiHp+AAbsAh3IQjeBo2Los7ASfhFGzCadiCM7DA
WTgH52EbLsAOXIRduASX4QrswVW4BtdhH56Cg8vif29qoD2Em3AET8PGxrgT
cBJOwSachi04AwuchXNwHrbhAuzARdiFS3AZrsAeXIVrcB324Sk4gBtwCDfh
CJ6GjcvjTsBJOAWbcBq24AwscBbOwXnYhguwAxdhFy7BZbgCe3AVrsF12Ien
4ABuwCHchCN4GjauiDsBJ+EUbMJp2IIzsMBZOAfnYRsuwA5chF24BJfhCuzB
VbgG12EfnoIDuAGHcBOO4GnY2BR3Ak7CKdiE07AFZ2CBs3AOzsM2XIAduAi7
cAkuwxXYg6twDa7DPjwFB3ADDuEmHMHTsLE57gSchFOwCadhC87AAmfhHJyH
bbgAO3ARduESXIYrsAdX4Rpch314Cg7gBhzCTTiCp2GjFHcCTsIp2ITTsAVn
YIGzcA7OwzZcgB24CLtwCS7DFdiDq3ANrsM+PAUHcAMO4SYcwdOwsSXuBJyE
U7AJp2ELzsACZ+EcnIdtuAA7cBF24RJchiuwB1fhGlyHfXgKDuAGHMJNOIKn
YWNr3Ak4CadgE07DFpyBBc7COTgP23ABduAi7MIluAxXYA+uwjW4DvvwFBzA
DTiEm3AET2/F/y/5t3h7Ak7CKdiE07AFZ2CBs3AOzsM2XIAduAi7cAkuwxXY
g6twDa7DPjwFB3ADDuEmHMHTsHFl3Ak4CadgE07DFpyBBc7COTgP23ABduAi
7MIluAxXYA+uwjW4DvvwFBzADTiEm3AET8PGVXEn4CScgk04DVtwBhY4C+fg
PGzDBdiBi7ALl+AyXIE9uArX4Drsw1NwADfgEG7CETwNG1fHnYCTcAo24TRs
wRlY4Cycg/OwDRdgBy7CLlyCy3AF9uAqXIPrsA9PwQHcgEO4CUfwNGxcE3cC
TsIp2ITTsAVnYIGzf/NfAWRwLz8=
      "]]}, 
    {RGBColor[1., 0, 0.5], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJxdmnl8G9W1x6cEWqWFVlAKasunCB7NE6EUsQRESh6nEIISSFESAiJkGe/y
PpLtIOPEHkmWLcuJLZaA2rIMBIqStiAIi6ABJlBAkBJUCEU0XQZKX02BVz3g
UVOWz9PYR5/m/PSPP9/Puff8zrnLuXdmfEJ998qmQxRFeXuOoth/Z3+V8xX5
I4kOYCfw0cAu4OOA3cAnAp8EPA/YAzwf+HvA3wf2Ap8OfAbwmcBnAS8APhv4
HGAf8LnAC4F/AHwe8CLg/wI+H5gk68DKD8EOrFwAdmDlQrADK4vBDqxcBHZg
ZQnYgZWLwQ6s+MEOrCwFO7CyDOzAyiVgB1YuBTuwshzswMqPwA6sXAZ2YCUg
mYB1YBNYWQH9gXVgE1hZCf2BdWATWFkF/YF1YBNYuRz6A+vAJrCymk698Lh3
3jz7W7N1k1ZDf7CbNZ7PdfYK0AfWgU1g5UroD6xfCfpgV4LQH1gHNoGVqyD/
q6A/sHkV1Z2x2jt/x5mc/xrov0aOj17jhRz/Guh/NfQH1oHNq7n/hdx/rfRP
a+nTHf/78vJ64v5rpZ65lp57rLD1i5Ul3H+dZFrH/pZx/3V0Wtf2L+w+bCX3
X0f/Gmzb3XtDkPuvl0zr6fq9Q/4nN6/j/uvp3vKGjZd9p5n7r6eBo++9+I1r
G7n/Brrxoy9uyF7axP03sH4b99/A/kPcfwO9d8QT3h/Pj3J/VbJbZX997E+l
x5YefsgpoxtnWVVpZM0ru/9y9Gb2r1LhO8l3VhQGZ9lQacl3+w75iWOA9VT6
wvLhIy67b3iWLWCljtwvd2/40r4x1q+jKnxzxe/HWR9YraNzHyxufOL2NOvX
0Te2LPv7oWddx/p1FH/zueyvbsqwfh1NtZ3y0c1/vIH168jO1rXtRtavZ38/
YX1gqqd4z5LqkNzO+vX07go74ztYv5793cX69bTj66XF5QqzWU9HJcwX7rjo
Z6xfT4/UD72+qD/H+g204B++iy6O7GD9Bjr8hh3xFUt/yfoNZK+eo46+j/Ub
6BTXtv1zQw+wfgOd96PfXrf2812s30DdM4IPsX4DvZW47cWdLzFbDXSsP/Cp
q+cR1m/kfB9j/UYqfmnRT1ff/ivWb6RqsMHcgsdZv5FGfL97pvMsk/Ubafyz
pn++VbeH9RvpzgfPmX6q8SnWb6TRY17f989VT7N+IyVOu/RnX17yDOs3UTlm
D/CzrN9E+3a+9OoV7z7H+k30x4eGN5V2Pc/6TXSB+tfSiQeY9SY68LG9wPey
fhN99lGfdcuRL7J+EzX+4M+Xbb15H+s30UmPfjr64YGXWL+ZthwIKd2xEus3
04ef7Y++Pe+3rN/M88OsNtOrc0MndkRfZv1mmgnnY2ajmezVsH/uftZvpvC3
j7BOzTBbzRzfq6zfQovHO/72yQ5mdwu9ca29wX/H+i108swGZVZbaP5Cu0K8
xvot9KdweuKt95mNFtr1956HvvEJs9lC6/6wZE70K2XWb6EXf2P/mJUQ15vX
WT9EZ/76/u93bWemEN315ye+esuZv2f9ED2+8qYTJvrYrod4/bDdCNFep10R
mc0Qdcz92GjZxWyF6Klj5606bDuz0koPf2APOLO7lbbe3FVdwczUSqGZhA6w
fitta0o1rPsD2/VWWvyv994xz2W70Uoff+3tR+6bw2y20py56eMb/qem30oz
0zVY02+j29afXA25pt9GwRfOqI5ATb+NjrWX7184X7WNTvIMbnm0vZZ/GxXu
m/O3LR5mo41eePqCX7b+idlso+dOtiesNv5t9H8HXquu+Nr4t9Ml1ep15NnM
7nY6caKvumSYqZ0m33r/+Je7eT7Vdhp5/vI9ubt4PejtVO183uMrmY128rUs
bu2u8Hoy20mtnh7HtDFb7fTM5w8MvJ/n9ah0UCppF3RmdwdtPn/B+seWMlMH
PVo93Y7xM6sddMNCu4K/wvodZLc+/BBmo4O+euoDt/7jHt4PZgfXS94/VgfX
C2alk+5/4+1tDxzO7O6kOy+yVwTvR+qkz+3teDqz2knv2Mt7L+9nvZPrHe93
o5Myp19z6gnH/4b1O2n3TZmvXXs21werkw6bGbAXWL+L1yezu4vnl+sLddH8
mYJeZP0uWnqrPu+pEa5PeheFfzFerSDMRpUXffm17RrXN7OL7pg+/b/v/e6v
Wb+LDtt+fXUEmZVuqk7O8g8muD66uzkerp/UTc92nqU/QsxqN68vrrd6N1Xu
efaSc8Zq9beb9pz7H8sGEk+yfjevlydYv5tuf9EusLtZX+P1x+zU6Od2+T2N
679bo+M22TcgPh+8Gs2kt4iZNLJP8xubCrMc0MiONv4mny+qRjurp9mt+sOz
rFXb28fRq8y6RvbtxHUoc0bj8XqQ89Fo6JOF2r4Un3d5jevP/ZyfRv6Zgslc
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
f2DvpBw/HzBNyvz8/+b/B40k4Zo=
      "]]}, 
    {RGBColor[1., 0, 1.], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJxdmnl0W+XRxl8oi2lLo0IK7semAKX+UiAKqwlLhoTFUEKUhIBIgShe5SX2
tWTH8n4lWbYsO7aghJjti0qgOCypIKUVAfrdAKWCQBAhnDgEgtjFFsRuCJTq
ynNPzzz+J+d3ZuZ9Zu68273KjPKmxVX7K6U++IlS5r9Tf7m5Sv6RxCJgG/B0
4GLgo4HtwMcDnwh8EnAJ8Ezgk4FPBXYAzwY+Dfh04DOAzwQ+C/hs4FLgc4Dn
AJ8LfB7w+cAXAM8FJsk6sLoQ7MBqHtiB1XywA6uLwA6sLgY7sLoE7MDqUrAD
qzKwA6vLwA6sLgc7sPo92IHVFWAHVgvADqyuBDuwWgh2YOWUTMA6sAGsFkE8
sA5sAKvFEA+sAxvAagnEA+vABrC6CuKBdWADWC2F+KV0yvyjP3rrrP+Z2kd1
sBvA6mqIB9aBDWB1DcQD68AGsHJBPLAObACrayEeWAc2gNUyiAfWgQ1g9QeI
B9aBDWB1HcQD68AGsLoe4oF1YANY3QDxwPoNPJ9mTs0nA+xquZxvtBzigQ3w
V25acdpSx8wNp0+x3Q35ALvBX3fL8eLABvhngNUK6W9fwfb5XM8Kumlrb9n/
dy+YYvcK+n7DZ9sXlBPrg38c7AZwxmIn65ez/hzWL5f+VE7/HJ3ddsqM5axf
Tjd/fdDysSuWsn45/WtzcvVBuatZv5zKnN8X+3aWs345538964NdVdAlv2nd
/7aietavoAcenFi+amEj61fQrMb1+z1+oJf1K6hz+sZL3+xoYf0K2mi6H7uK
9Sto6Zbxu68kH+tX0CeH/sNx60w/61dQ8tjwR4uSPaxfyf4h1q+kr3bvDPgu
6WP9Ssrc8ct7ntgywPqVdMYvzzrvicX9rF9JS26ZMdLaPMT6lTT3mdce6euK
sX4lbf3TxX/74oebWb+Sjiw8gLWsX0X3mY/bNsb6VWTrOOv+C665nfWrqOiB
o5dVnruO9avo0Mwpsfjkn1i/ilZctfi38cE461fxfFjP+lW04FfDl394wN2s
X0XT7jj9rr+ePc761fTZl5df21/6Z9avpvtffOXqj2fdz/rV3I+NrF9Np/44
44evWxOsX025e5/5/dmDD7F+NfXum6NtizzM+tUUMp7LP4FNrF9NpTUX1Tbl
HmH9Glqz4xDP8Q1J1q+hD06anS95M+vX0G1td9x1wqOPs34Nzbsgu+uB75j1
GirIbf8H69dwvw3Wr6E3f/bHDcFFW1i/htKbrv3q0VefZH0P9dY93vLH4qdZ
30P5hzv7vY3/ZH0PramKVFz/2jOs76EDCwviWdb3UM/wo/WHfJtifQ9d8/Gs
x347bSvre2jJgetvmrPfC6zvocpz31i4eu021q/l+tOsX0u7zm93jZ/5EuvX
krlaDvuc2V1L++3Z/5DocS+zfi0V5OPM8Vq6y5xuO3awfi2Nn/nCuVe+9Arr
11LuCHMC7mT9Ojrg6l+c8vCdzPY6en+4JP8IJ1i/jro3/q28d9cu1q+jo/7v
hv/datvN+nWUOvj825euY47X0U3X/Xv+d58wG3W0b+veZ5+a9zrr19HOMz4t
vfjSPaxfT2/fc/vT9gSzvZ62nHPC5Z2hN1i/nhYXFmyG9etpw+HpiyZyzHo9
r6c3Wb+envqq5LrRJ5mNemrwd9xz8vy3WL+eflbYcJhVA+XFZl3xZ2Z7A21+
NfpD1TfM1ECF5X3U26zfQAvp8BVPvcysN1Bh+hzwDus3UNV97vyKZDYa6MVv
luRLZM7k4489om7BF8xqJd04zVzw77L+SlrQd+jCv9zMTCvplvlDDe/vY3av
5PX4HuuvpOX5bvxrM3PcGu991l9Je7vmnnnDZuaMNR6zaqTzrnzpxuv+zWxv
pGMKCzTL+o10t3b+T3euZ3Y3khm94TNmvZF+bU7PCz9g/Uaa9fqJBwXWMBuN
PB+YM430luvIv7+kPmT9Jt5vme1N5Fy9tvGwEDM1kbl6L7uT2d3E+zez3kQz
El7PjZ8wx5so3/z8DPiI9Zt4f2LONFF05J3Pj9vOrDT6eJE5IrNNo8fM4+yI
jzkfjZ43j69jmB0a3WkeB0cyk0brXrjP3DGn2KnRp/nZ/mAts1ujh5z1+S2M
WdN4vjHrGk2a0+Np5phGJ679Mdazjzmu0UmFDeSTKU5oZL/ws4rnr2c2NLoj
v3q8Hua0Rhvyp9nhK5gzGj8P5pzG651ZNdNFhYYy25p5/TDbm+nER78f+HI3
s6OZUmOP3RKbtpfrb6YvjtvetPxgZmczvVj9yvt1v2N2N9NVhQXOrDXzecOs
N9Omzs8TznrmWDOZlyHjD8zxZop8aU4Q5kQzDe/2qKYAs9FMRxUOROZ0M728
J5Pf8ZkzzVRuc53z1xRzLq/38+YHhnYzKy/lN4f8BYjZ5qWvzfK/YrZ7aWZh
w2F2eKlwfE5a9Xt5f/iU6/eSeVs5bDqz28v7LbPmpeMLGxKz7iVffvZ2zWWO
eemYZeYJwRz30o8Pmw+IOeHl84zZ8NJmc/uvYU576bnTnn7o1EbmjJcKy6OL
Oeel2241/5iVj/dvZpuP7tRPerL/Xma7j+cHs8NHz5vb+YPM5KM5hQueVb+P
Bu69Jp+CVb+P709W/T4qXI/SVv0+nl9W/T7abW6/71j1++jiS73fTvvAqt/H
+4lVv4/vE1b9Pqoxp9/XVv0+3t+s+n3kN68T31v1t9CmD32P/GqfVX8Lmd7z
v7PqbyHztPJ+a9XfQr8bOGLXtm+s+luknrOFLitckKz6IV5r4f3Xqh/0Y8Dx
FplvAuwG5JsGvQxwDvJTrXyftOpvhfpbKdxl3pis+lvl86ZWKmwnn1r1t1J+
8ea3KKt+8Ndaaf0JZsOt+ltpi3k9/MKqv1XmF2+F+ltlPw3gdCtN1cXfcTPA
OWC1SsbbgO2rpL9jFR17b7bs1B+t+sHfCewG1iBeh/FjwHHwT4DdAHsa7Bng
HLBqk2xrk+PZgR1tsh4CdgK72+R819pkP3XgGHAc4hNtcn4awOk2uT4zwDlg
5Yf575d6dr+sxwF28kt9p1+uT7cf1r9fzm8d9GN+qB84AeMbMH7aT8vybzfR
H6z6If8c5KvaZbytXe5n9naZrwPs1C7Xr7Ndrm93O6z/dmrJZ791r1U/jBdr
h/2vHfrfDusf7Ol2WV8GONcO/e+Qz9fWAftfhxzfAUwQ7wR2w3gasN4hn2+s
Q+YXB/9Eh+yX0UF7ms0brVV/h5xPGeAc5Kc6Yf8DtgM7OuX8IrA7O+XzcXdK
Pa0T9j/gGHAc9BIwvtEJ878T1j/Yc8CqSz5fW5e027vk83OAP3XJ+e7sgvMf
7FoXv89b9XfJ+0wM/ONdcv0kIN4AvXQX3H+65PrMAatueb7buuX5be+Weo5u
Od+oG9Z/t7wPuMGugV3vhvq7Zb1xiE9APgbkn+6G+sGe65b9VD3S39YD/e+B
/vfI/hCws0fOPzeMr4FdB71YD+x/PbD+gY0eub7SPXJ9ZCD/HPirXlj/vdJu
75X5OICpV65PJ8S7YXytl6Z0+b6h98L6B3scOAFsAKeBMzB+Dljp0r9Il3Yb
cDH424FLgB3ApTAe6fL5lOlwnuiy3y5dzme3LvvrAX9Nl/PPD/E6+Ed0OT9j
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
kwfC
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"ps\"", 20, StripOnInput -> False], TraditionalForm], None}, {
     FormBox[
      StyleBox["\"generation\"", 20, StripOnInput -> False], TraditionalForm],
      None}},
  FrameStyle->16,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->400,
  Method->{},
  PlotRange->{{0., 1001.}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.605848361249523*^9, 3.605848417116027*^9}, {
   3.6058484513286877`*^9, 3.605848486651805*^9}, {3.605848533922573*^9, 
   3.605848553077237*^9}, {3.605848583852087*^9, 3.60584860421669*^9}, {
   3.6117353847433577`*^9, 3.611735413561531*^9}, {3.611735450604269*^9, 
   3.6117354705833683`*^9}, {3.6117358515826*^9, 3.61173585526303*^9}, {
   3.6117359152099247`*^9, 3.611735970327388*^9}, 3.611736111552147*^9, 
   3.611736153216011*^9, 3.611736193989946*^9, 3.6117362832073717`*^9, 
   3.611736428204136*^9, 3.6117365511434393`*^9, 3.6117365953798113`*^9, 
   3.61173664346413*^9, {3.6117366738076963`*^9, 3.611736723757802*^9}, {
   3.612338005603383*^9, 3.612338028611952*^9}, {3.6123380784315567`*^9, 
   3.612338103117982*^9}, 3.612338276674554*^9, 3.6123387078327017`*^9, 
   3.612339197700947*^9, {3.612570571945696*^9, 3.6125706015031557`*^9}, 
   3.612570688059802*^9, 3.6125766088419733`*^9, 3.676164850950182*^9, 
   3.67616492550921*^9, 3.6761649711518593`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Speed of adapatation at two linked loci", "Subsection",
 CellChangeTimes->{{3.612303620319519*^9, 3.612303643664537*^9}, {
  3.612317971717846*^9, 3.612317974472507*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mu", "=", "0.00001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxgens", "=", "1000000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"recValues", "=", 
   RowBox[{"Round", "[", 
    RowBox[{
     RowBox[{"10", "^", 
      RowBox[{"Range", "[", 
       RowBox[{
        RowBox[{"-", "5"}], ",", 
        RowBox[{"-", "1"}], ",", "0.25"}], "]"}]}], ",", "0.0000000001"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sA", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sB", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hA", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hB", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NN", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"reps", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wThresh", "=", 
   RowBox[{"1", "+", 
    RowBox[{"0.99", 
     RowBox[{"(", 
      RowBox[{"sA", "+", "sB", "+", 
       RowBox[{"sA", " ", "sB"}]}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"results", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
     "\"\<RepMode\>\"", ",", "\"\<recCA\>\"", ",", "\"\<recAB\>\"", ",", 
      "\"\<sA\>\"", ",", "\"\<hA\>\"", ",", "\"\<sB\>\"", ",", "\"\<hB\>\"", 
      ",", "\"\<mu\>\"", ",", "\"\<N\>\"", ",", "\"\<Rep\>\"", ",", 
      "\"\<gens\>\""}], "}"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</Users/jan/documents/projects/recent/RecAutomixis\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "[", "\"\<AutomixisMatrices.dat\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "[", "\"\<SexTensors.dat\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"filename", "=", "\"\<expSpeedAdapt 8\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.612341318079071*^9, 3.612341331603848*^9}, {
   3.6123413825954533`*^9, 3.61234139296367*^9}, {3.6123418026804953`*^9, 
   3.612341826333536*^9}, {3.612342120535945*^9, 3.612342150094818*^9}, {
   3.612342272486306*^9, 3.612342396915966*^9}, {3.612342492637732*^9, 
   3.6123424942553587`*^9}, {3.612342868565187*^9, 3.612342868653013*^9}, {
   3.6125601799*^9, 3.612560180793401*^9}, {3.612562145591536*^9, 
   3.6125621494081173`*^9}, {3.612563979893017*^9, 3.612563991147472*^9}, {
   3.6125686571496363`*^9, 3.612568664380651*^9}, {3.6125712654969063`*^9, 
   3.612571277272997*^9}, 3.612738224657303*^9, 3.612738354771682*^9, {
   3.612738494245344*^9, 3.612738494525394*^9}, {3.612818801464451*^9, 
   3.6128188210893087`*^9}, {3.612819765793541*^9, 3.612819772082243*^9}, 
   3.612819860549056*^9, {3.613768227156472*^9, 3.613768254321557*^9}, {
   3.613768614600649*^9, 3.613768625328472*^9}, {3.6138682442736464`*^9, 
   3.6138682447375097`*^9}, {3.6140513626176653`*^9, 3.614051377600778*^9}, 
   3.614052385191429*^9, {3.615152970095726*^9, 3.615152970445788*^9}, 
   3.6151615886239758`*^9, {3.61525698496488*^9, 3.615257003173935*^9}, {
   3.6706396777621937`*^9, 3.6706396848323393`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"run", " ", "simulations", " ", "with", " ", 
      RowBox[{"automixis", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"meannCA", "=", 
          RowBox[{"convertMToCOs", "[", 
           RowBox[{
           "recValues", "\[LeftDoubleBracket]", "irecCA", 
            "\[RightDoubleBracket]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"meannAB", "=", 
          RowBox[{"convertMToCOs", "[", 
           RowBox[{
           "recValues", "\[LeftDoubleBracket]", "irecAB", 
            "\[RightDoubleBracket]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"AutomixisMatrix", "=", 
            RowBox[{"N", "[", 
             RowBox[{"getAutomixisMatrix", "[", 
              RowBox[{
              "meannCA", ",", "meannAB", ",", "\"\<CentralFusion\>\""}], 
              "]"}], "]"}]}], ";"}], "*)"}], "   ", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"old", " ", "version"}], ",", " ", 
           RowBox[{
           "in", " ", "which", " ", "this", " ", "matrix", " ", "is", " ", 
            "calculated"}]}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"AutomixisMatrix", "=", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"AutomixisMatrices", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "\[LeftDoubleBracket]", 
                RowBox[{"1", ";;", "3"}], "\[RightDoubleBracket]"}], 
               "\[Equal]", 
               RowBox[{"{", 
                RowBox[{"\"\<CentralFusion\>\"", ",", 
                 RowBox[{
                 "recValues", "\[LeftDoubleBracket]", "irecCA", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "recValues", "\[LeftDoubleBracket]", "irecAB", 
                  "\[RightDoubleBracket]"}]}], "}"}]}], "&"}]}], "]"}], 
           "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}]}], ";", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "new", " ", "version", " ", "in", " ", "which", " ", "the", " ", 
            "matrix", " ", "is", " ", "loaded", " ", "from", " ", "pre"}], 
           "-", 
           RowBox[{"calculated", " ", "file"}]}], " ", "*)"}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"p", "=", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
            ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"g", "=", "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{"meanw", "=", "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"meanw", "<", "wThresh"}], ")"}], " ", "&&", 
            RowBox[{"(", " ", 
             RowBox[{"g", "<", "maxgens"}], ")"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"p", "=", 
             RowBox[{"RecursionFiniteN", "[", 
              RowBox[{
              "p", ",", "AutomixisMatrix", ",", "mu", ",", "mu", ",", "sA", 
               ",", "hA", ",", "sB", ",", "hB", ",", "NN"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"g", "=", 
             RowBox[{"g", "+", "1"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"meanw", "=", 
             RowBox[{"getMeanFitness", "[", 
              RowBox[{"p", ",", "sA", ",", "hA", ",", "sB", ",", "hB"}], 
              "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"results", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"results", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<CentralFusion\>\"", ",", 
              RowBox[{
              "recValues", "\[LeftDoubleBracket]", "irecCA", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
              "recValues", "\[LeftDoubleBracket]", "irecAB", 
               "\[RightDoubleBracket]"}], ",", "sA", ",", "hA", ",", "sB", 
              ",", "hB", ",", "mu", ",", "NN", ",", "rep", ",", "g"}], 
             "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"irecCA", ",", 
          RowBox[{"Length", "[", "recValues", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"irecAB", ",", 
          RowBox[{"Length", "[", "recValues", "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "same", " ", "simulations", " ", "with", " ", "sexual", " ", 
         "reproduction"}], ";", " ", 
        RowBox[{
        "here", " ", "recCA", " ", "is", " ", "not", " ", "screened", " ", 
         "because", " ", "it", " ", "is", " ", "irrelevant"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"meannAB", "=", 
          RowBox[{"convertMToCOs", "[", 
           RowBox[{
           "recValues", "\[LeftDoubleBracket]", "irecAB", 
            "\[RightDoubleBracket]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"SexTensor", "=", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"SexTensors", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "\[Equal]", 
                RowBox[{
                "recValues", "\[LeftDoubleBracket]", "irecAB", 
                 "\[RightDoubleBracket]"}]}], ")"}], "&"}]}], "]"}], 
           "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"SexTensor", "=", 
            RowBox[{"N", "[", 
             RowBox[{"getSexTensor", "[", 
              RowBox[{"0", ",", "meannAB"}], "]"}], "]"}]}], ";"}], "*)"}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"p", "=", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
            ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"g", "=", "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{"meanw", "=", "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"meanw", "<", "wThresh"}], ")"}], " ", "&&", 
            RowBox[{"(", " ", 
             RowBox[{"g", "<", "maxgens"}], ")"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"p", "=", 
             RowBox[{"RecursionSexualFiniteN", "[", 
              RowBox[{
              "p", ",", "SexTensor", ",", "mu", ",", "mu", ",", "sA", ",", 
               "hA", ",", "sB", ",", "hB", ",", "NN"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"g", "=", 
             RowBox[{"g", "+", "1"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"meanw", "=", 
             RowBox[{"getMeanFitness", "[", 
              RowBox[{"p", ",", "sA", ",", "hA", ",", "sB", ",", "hB"}], 
              "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"results", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"results", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Sex\>\"", ",", "0", ",", 
              RowBox[{
              "recValues", "\[LeftDoubleBracket]", "irecAB", 
               "\[RightDoubleBracket]"}], ",", "sA", ",", "hA", ",", "sB", 
              ",", "hB", ",", "mu", ",", "NN", ",", "rep", ",", "g"}], 
             "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"irecAB", ",", 
          RowBox[{"Length", "[", "recValues", "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"StringJoin", "[", 
         RowBox[{"filename", ",", "\"\< \>\"", ",", " ", 
          RowBox[{"ToString", "[", "rep", "]"}], ",", "\"\<.tsv\>\""}], "]"}],
         ",", "results"}], "]"}], ";", "\[IndentingNewLine]", "ClearMemory", 
      ";"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"rep", ",", "1", ",", "reps"}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.612341270490143*^9, 3.612341312440858*^9}, {
   3.612341443691373*^9, 3.6123414791904907`*^9}, {3.612341602027923*^9, 
   3.612341629671208*^9}, {3.6123418236462097`*^9, 3.612341830157957*^9}, {
   3.612341951089752*^9, 3.6123420428526983`*^9}, {3.61234207695899*^9, 
   3.612342107486711*^9}, {3.612342157994946*^9, 3.612342164173675*^9}, {
   3.6123422839400454`*^9, 3.6123422965227013`*^9}, {3.6123424447895927`*^9, 
   3.6123425968041363`*^9}, {3.612342656419503*^9, 3.612342660235717*^9}, {
   3.612342732341763*^9, 3.612342774061243*^9}, {3.612342888488181*^9, 
   3.612342889067196*^9}, 3.61234292681419*^9, {3.612343005070539*^9, 
   3.612343011927772*^9}, {3.612343452151896*^9, 3.6123434585898046`*^9}, {
   3.612344667444006*^9, 3.612344668395142*^9}, {3.612344702446021*^9, 
   3.612344789691738*^9}, {3.612345520922344*^9, 3.6123455559900513`*^9}, {
   3.612559234143409*^9, 3.612559234421427*^9}, {3.61255949164211*^9, 
   3.612559499114627*^9}, {3.612559878986474*^9, 3.6125598877795877`*^9}, {
   3.6125616658275013`*^9, 3.6125617076431437`*^9}, {3.6125621558068523`*^9, 
   3.61256216251558*^9}, {3.6125640038128443`*^9, 3.612564088925879*^9}, {
   3.6125667769945087`*^9, 3.6125667919115477`*^9}, {3.612568528193511*^9, 
   3.6125685642937937`*^9}, 3.612733455178437*^9, {3.6127382499675198`*^9, 
   3.6127382773206882`*^9}, {3.61273831205966*^9, 3.612738373121983*^9}, {
   3.612814999543744*^9, 3.6128150049984713`*^9}, {3.6128197856259403`*^9, 
   3.6128198375377893`*^9}, {3.612823022590782*^9, 3.612823045118256*^9}, {
   3.612823128711104*^9, 3.612823136194489*^9}, {3.6137682475064363`*^9, 
   3.613768248629694*^9}, {3.613868189744665*^9, 3.6138682390142927`*^9}, {
   3.61386863122895*^9, 3.613868631935162*^9}, 3.615152958581355*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</Users/jan/documents/projects/recent/RecAutomixis/Exploration results\
\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"results", "=", 
   RowBox[{"Import", "[", "\"\<expSpeedAdapt 6.tsv\>\"", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.61376282622771*^9, 3.613762833147743*^9}, {
  3.613763002192108*^9, 3.6137630223277884`*^9}, {3.6137683121534157`*^9, 
  3.613768314297035*^9}, {3.614051813175742*^9, 3.61405183488795*^9}, {
  3.6151531206953793`*^9, 3.615153134822605*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"meanAutomixisGens", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "recValues", "\[LeftDoubleBracket]", "irecCA", 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{
         "recValues", "\[LeftDoubleBracket]", "irecAB", 
          "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Mean", "[", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"results", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "\[LeftDoubleBracket]", 
                RowBox[{"1", ";;", "3"}], "\[RightDoubleBracket]"}], 
               "\[Equal]", 
               RowBox[{"{", 
                RowBox[{"\"\<CentralFusion\>\"", ",", 
                 RowBox[{
                 "recValues", "\[LeftDoubleBracket]", "irecCA", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "recValues", "\[LeftDoubleBracket]", "irecAB", 
                  "\[RightDoubleBracket]"}]}], "}"}]}], "&"}]}], "]"}], 
           "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "11"}], "\[RightDoubleBracket]"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"irecCA", ",", "1", ",", 
         RowBox[{"Length", "[", "recValues", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"irecAB", ",", "1", ",", 
         RowBox[{"Length", "[", "recValues", "]"}]}], "}"}]}], "]"}], ",", 
     "1"}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"meanAutomixisGens", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "recValues", "\[LeftDoubleBracket]", "irecCA", 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{
         "recValues", "\[LeftDoubleBracket]", "irecAB", 
          "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Mean", "[", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"results", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "\[LeftDoubleBracket]", 
                RowBox[{"1", ";;", "3"}], "\[RightDoubleBracket]"}], 
               "\[Equal]", 
               RowBox[{"{", 
                RowBox[{"\"\<CentralFusion\>\"", ",", 
                 RowBox[{
                 "recValues", "\[LeftDoubleBracket]", "irecCA", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "recValues", "\[LeftDoubleBracket]", "irecAB", 
                  "\[RightDoubleBracket]"}]}], "}"}]}], "&"}]}], "]"}], 
           "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "11"}], "\[RightDoubleBracket]"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"irecCA", ",", "1", ",", 
         RowBox[{"Length", "[", "recValues", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"irecAB", ",", "1", ",", 
         RowBox[{"Length", "[", "recValues", "]"}]}], "}"}]}], "]"}], ",", 
     "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanSexGens", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "recValues", "\[LeftDoubleBracket]", "irecCA", 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{
         "recValues", "\[LeftDoubleBracket]", "irecAB", 
          "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Mean", "[", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"results", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "\[LeftDoubleBracket]", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "3"}], "}"}], "\[RightDoubleBracket]"}], 
               "\[Equal]", 
               RowBox[{"{", 
                RowBox[{"\"\<Sex\>\"", ",", 
                 RowBox[{"Round", "[", 
                  RowBox[{
                   RowBox[{
                   "recValues", "\[LeftDoubleBracket]", "irecAB", 
                    "\[RightDoubleBracket]"}], ",", "0.0000000001"}], "]"}]}],
                 "}"}]}], "&"}]}], "]"}], "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "11"}], "\[RightDoubleBracket]"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"irecCA", ",", "1", ",", 
         RowBox[{"Length", "[", "recValues", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"irecAB", ",", "1", ",", 
         RowBox[{"Length", "[", "recValues", "]"}]}], "}"}]}], "]"}], ",", 
     "1"}], "]"}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"meanRelativeGens", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "recValues", "\[LeftDoubleBracket]", "irecCA", 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{
         "recValues", "\[LeftDoubleBracket]", "irecAB", 
          "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"Mean", "[", 
            RowBox[{
             RowBox[{"Select", "[", 
              RowBox[{"results", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "\[LeftDoubleBracket]", 
                  RowBox[{"1", ";;", "3"}], "\[RightDoubleBracket]"}], 
                 "\[Equal]", 
                 RowBox[{"{", 
                  RowBox[{"\"\<CentralFusion\>\"", ",", 
                   RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "recValues", "\[LeftDoubleBracket]", "irecCA", 
                    "\[RightDoubleBracket]"}], ",", "0.0000000001"}], "]"}], 
                   ",", 
                   RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "recValues", "\[LeftDoubleBracket]", "irecAB", 
                    "\[RightDoubleBracket]"}], ",", "0.0000000001"}], "]"}]}],
                   "}"}]}], "&"}]}], "]"}], "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "11"}], "\[RightDoubleBracket]"}], "]"}], 
           "/", 
           RowBox[{"Mean", "[", 
            RowBox[{
             RowBox[{"Select", "[", 
              RowBox[{"results", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "\[LeftDoubleBracket]", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "3"}], "}"}], "\[RightDoubleBracket]"}], 
                 "\[Equal]", 
                 RowBox[{"{", 
                  RowBox[{"\"\<Sex\>\"", ",", 
                   RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    "recValues", "\[LeftDoubleBracket]", "irecAB", 
                    "\[RightDoubleBracket]"}], ",", "0.0000000001"}], "]"}]}],
                   "}"}]}], "&"}]}], "]"}], "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "11"}], "\[RightDoubleBracket]"}], "]"}]}], 
          "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"irecCA", ",", "1", ",", 
         RowBox[{"Length", "[", "recValues", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"irecAB", ",", "1", ",", 
         RowBox[{"Length", "[", "recValues", "]"}]}], "}"}]}], "]"}], ",", 
     "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6125613356207533`*^9, 3.6125615139853907`*^9}, {
  3.612561569448886*^9, 3.61256163772622*^9}, {3.612561740780157*^9, 
  3.6125617948341007`*^9}, {3.6125618369023457`*^9, 3.6125618429878893`*^9}, {
  3.612561889047908*^9, 3.6125618906851683`*^9}, {3.612561952681185*^9, 
  3.6125619862984943`*^9}, {3.6125621210317163`*^9, 3.612562126329007*^9}, {
  3.61256216782113*^9, 3.612562176026485*^9}, {3.61256387138369*^9, 
  3.612563914284555*^9}, {3.6125639506903257`*^9, 3.612563953553583*^9}, {
  3.612570306045804*^9, 3.612570320395129*^9}, {3.615156257395836*^9, 
  3.6151562996092167`*^9}, {3.6151592466637173`*^9, 3.615159248663357*^9}, {
  3.615160663067668*^9, 3.6151607132404413`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"max", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"min", "=", 
   RowBox[{"1", "/", "8"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RedBlueColourFunction", "[", "x_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"x", ">", "1"}], ",", 
     RowBox[{"Hue", "[", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"2", ",", "x"}], "]"}], "/", 
        RowBox[{"Log", "[", 
         RowBox[{"2", ",", "max"}], "]"}]}], ",", "1"}], "]"}], ",", 
     RowBox[{"Hue", "[", 
      RowBox[{"0.7", ",", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"2", ",", "x"}], "]"}], "/", 
        RowBox[{"Log", "[", 
         RowBox[{"2", ",", "min"}], "]"}]}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot", "=", 
   RowBox[{"ListDensityPlot", "[", 
    RowBox[{"meanRelativeGens", ",", " ", 
     RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"min", ",", "max"}], "}"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"RedBlueColourFunction", "[", "#", "]"}], "&"}], ")"}]}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "20"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(r\), \(CA\)]\)\>\"", ",", "26"}], 
         "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(r\), \(AB\)]\)\>\"", ",", "26"}], 
         "]"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"legend", "=", 
   RowBox[{"ContourPlot", "[", 
    RowBox[{"y", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "min", ",", "max"}], "}"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"None", ",", "All"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"RedBlueColourFunction", "[", "#", "]"}], "&"}], ")"}]}], ",", 
     RowBox[{"Contours", "\[Rule]", "200"}], ",", 
     RowBox[{"ContourStyle", "\[Rule]", "None"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "15"}], ",", 
     RowBox[{"Frame", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"True", ",", "True"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"True", ",", "True"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\< \>\"", ",", "30"}], "]"}], ",", "None"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"55", ",", "300"}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "20"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"plot", ",", "legend"}], "}"}], "}"}], ",", 
   RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.612562402232574*^9, 3.612562404017359*^9}, {
   3.612562444478538*^9, 3.612562509022326*^9}, 3.612562796441002*^9, 
   3.612562859811529*^9, {3.612575309222662*^9, 3.612575356548065*^9}, {
   3.6125755028281937`*^9, 3.6125755070533953`*^9}, {3.612575550958946*^9, 
   3.612575579770131*^9}, {3.612575648049129*^9, 3.612575650328463*^9}, 
   3.612575814580227*^9, {3.6125759095450897`*^9, 3.61257591375079*^9}, {
   3.6125759577881002`*^9, 3.612576070117469*^9}, {3.6125761106254997`*^9, 
   3.612576128068851*^9}, {3.612576187803419*^9, 3.61257620606968*^9}, {
   3.612576272730712*^9, 3.61257627868919*^9}, {3.6125763836613483`*^9, 
   3.6125763873903713`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Speed of adapatation at two linked loci - Improved screening with h=0.01\
\>", "Subsection",
 CellChangeTimes->{{3.612303620319519*^9, 3.612303643664537*^9}, {
  3.612317971717846*^9, 3.612317974472507*^9}, {3.670639709088376*^9, 
  3.670639712431254*^9}, {3.673562148995611*^9, 3.673562152730441*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mu", "=", "0.00001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxgens", "=", "1000000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meannCAValues", "=", 
   RowBox[{"10", "^", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "0", ",", "0.2"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meannABValues", "=", 
   RowBox[{"10", "^", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "0", ",", "0.2"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sA", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sB", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hA", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hB", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NN", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"reps", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wThresh", "=", 
   RowBox[{"1", "+", 
    RowBox[{"0.99", 
     RowBox[{"(", 
      RowBox[{"sA", "+", "sB", "+", 
       RowBox[{"sA", " ", "sB"}]}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"results", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
     "\"\<RepMode\>\"", ",", "\"\<Log(nCA)\>\"", ",", "\"\<Log(nAB)\>\"", 
      ",", "\"\<sA\>\"", ",", "\"\<hA\>\"", ",", "\"\<sB\>\"", ",", 
      "\"\<hB\>\"", ",", "\"\<mu\>\"", ",", "\"\<N\>\"", ",", "\"\<Rep\>\"", 
      ",", "\"\<gens\>\""}], "}"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</Users/janengelstaedter/dropbox/projects/RecAutomixis\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"filename", "=", "\"\<expSpeedAdapt 9\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.612341318079071*^9, 3.612341331603848*^9}, {
   3.6123413825954533`*^9, 3.61234139296367*^9}, {3.6123418026804953`*^9, 
   3.612341826333536*^9}, {3.612342120535945*^9, 3.612342150094818*^9}, {
   3.612342272486306*^9, 3.612342396915966*^9}, {3.612342492637732*^9, 
   3.6123424942553587`*^9}, {3.612342868565187*^9, 3.612342868653013*^9}, {
   3.6125601799*^9, 3.612560180793401*^9}, {3.612562145591536*^9, 
   3.6125621494081173`*^9}, {3.612563979893017*^9, 3.612563991147472*^9}, {
   3.6125686571496363`*^9, 3.612568664380651*^9}, {3.6125712654969063`*^9, 
   3.612571277272997*^9}, 3.612738224657303*^9, 3.612738354771682*^9, {
   3.612738494245344*^9, 3.612738494525394*^9}, {3.612818801464451*^9, 
   3.6128188210893087`*^9}, {3.612819765793541*^9, 3.612819772082243*^9}, 
   3.612819860549056*^9, {3.613768227156472*^9, 3.613768254321557*^9}, {
   3.613768614600649*^9, 3.613768625328472*^9}, {3.6138682442736464`*^9, 
   3.6138682447375097`*^9}, {3.6140513626176653`*^9, 3.614051377600778*^9}, 
   3.614052385191429*^9, {3.615152970095726*^9, 3.615152970445788*^9}, 
   3.6151615886239758`*^9, {3.61525698496488*^9, 3.615257003173935*^9}, {
   3.6706396777621937`*^9, 3.6706396848323393`*^9}, {3.670639735225419*^9, 
   3.6706397766169643`*^9}, {3.670640132947348*^9, 3.670640146232839*^9}, {
   3.6706406560891933`*^9, 3.670640657759993*^9}, {3.6708136558904*^9, 
   3.6708136870563602`*^9}, {3.670813985273247*^9, 3.670813985752097*^9}, {
   3.6708141517600527`*^9, 3.6708141713987083`*^9}, {3.670814234799446*^9, 
   3.670814247264278*^9}, {3.670814980326375*^9, 3.6708149816201973`*^9}, {
   3.670815087748901*^9, 3.670815091381983*^9}, {3.670816529785198*^9, 
   3.670816531631761*^9}, {3.6708165902573433`*^9, 3.670816590737482*^9}, {
   3.6709271632011433`*^9, 3.670927184121669*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"run", " ", "simulations", " ", "with", " ", 
      RowBox[{"automixis", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"meannCA", "=", 
          RowBox[{
          "meannCAValues", "\[LeftDoubleBracket]", "imeannCA", 
           "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"meannAB", "=", 
          RowBox[{
          "meannABValues", "\[LeftDoubleBracket]", "imeannAB", 
           "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AutomixisMatrix", "=", 
          RowBox[{"N", "[", 
           RowBox[{"getAutomixisMatrixPoisson", "[", 
            RowBox[{"meannCA", ",", "meannAB", ",", "\"\<CentralFusion\>\""}],
             "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"p", "=", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
            ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"g", "=", "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{"meanw", "=", "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"meanw", "<", "wThresh"}], ")"}], " ", "&&", 
            RowBox[{"(", " ", 
             RowBox[{"g", "<", "maxgens"}], ")"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"p", "=", 
             RowBox[{"RecursionFiniteN", "[", 
              RowBox[{
              "p", ",", "AutomixisMatrix", ",", "mu", ",", "mu", ",", "sA", 
               ",", "hA", ",", "sB", ",", "hB", ",", "NN"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"g", "=", 
             RowBox[{"g", "+", "1"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"meanw", "=", 
             RowBox[{"getMeanFitness", "[", 
              RowBox[{"p", ",", "sA", ",", "hA", ",", "sB", ",", "hB"}], 
              "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"results", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"results", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<CentralFusion\>\"", ",", 
              RowBox[{"Round", "[", 
               RowBox[{
                RowBox[{"Log10", "[", "meannCA", "]"}], ",", "0.1"}], "]"}], 
              ",", 
              RowBox[{"Round", "[", 
               RowBox[{
                RowBox[{"Log10", "[", "meannAB", "]"}], ",", "0.1"}], "]"}], 
              ",", "sA", ",", "hA", ",", "sB", ",", "hB", ",", "mu", ",", 
              "NN", ",", "rep", ",", "g"}], "}"}]}], "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"imeannCA", ",", 
          RowBox[{"Length", "[", "meannCAValues", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"imeannAB", ",", 
          RowBox[{"Length", "[", "meannABValues", "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"run", " ", "simulations", " ", "with", " ", 
        RowBox[{"sex", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"meannAB", "=", 
          RowBox[{
          "meannABValues", "\[LeftDoubleBracket]", "imeannAB", 
           "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"SexTensor", "=", 
          RowBox[{"N", "[", 
           RowBox[{"getSexTensor", "[", 
            RowBox[{"meannCA", ",", "meannAB"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"p", "=", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
            ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"g", "=", "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{"meanw", "=", "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"meanw", "<", "wThresh"}], ")"}], " ", "&&", 
            RowBox[{"(", " ", 
             RowBox[{"g", "<", "maxgens"}], ")"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"p", "=", 
             RowBox[{"RecursionSexualFiniteN", "[", 
              RowBox[{
              "p", ",", "SexTensor", ",", "mu", ",", "mu", ",", "sA", ",", 
               "hA", ",", "sB", ",", "hB", ",", "NN"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"g", "=", 
             RowBox[{"g", "+", "1"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"meanw", "=", 
             RowBox[{"getMeanFitness", "[", 
              RowBox[{"p", ",", "sA", ",", "hA", ",", "sB", ",", "hB"}], 
              "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"results", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"results", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Sex\>\"", ",", 
              RowBox[{"Round", "[", 
               RowBox[{"Log10", "[", "meannCA", "]"}], "]"}], ",", 
              RowBox[{"Round", "[", 
               RowBox[{
                RowBox[{"Log10", "[", "meannAB", "]"}], ",", "0.1"}], "]"}], 
              ",", "sA", ",", "hA", ",", "sB", ",", "hB", ",", "mu", ",", 
              "NN", ",", "rep", ",", "g"}], "}"}]}], "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"imeannAB", ",", 
          RowBox[{"Length", "[", "meannABValues", "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"rep", ",", "10"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{"Export", "[", 
         RowBox[{
          RowBox[{"StringJoin", "[", 
           RowBox[{"filename", ",", "\"\< Rep\>\"", ",", " ", 
            RowBox[{"ToString", "[", "rep", "]"}], ",", "\"\<.tsv\>\""}], 
           "]"}], ",", "results"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "ClearMemory", ";"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"rep", ",", "801", ",", "1000"}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.612341270490143*^9, 3.612341312440858*^9}, {
   3.612341443691373*^9, 3.6123414791904907`*^9}, {3.612341602027923*^9, 
   3.612341629671208*^9}, {3.6123418236462097`*^9, 3.612341830157957*^9}, {
   3.612341951089752*^9, 3.6123420428526983`*^9}, {3.61234207695899*^9, 
   3.612342107486711*^9}, {3.612342157994946*^9, 3.612342164173675*^9}, {
   3.6123422839400454`*^9, 3.6123422965227013`*^9}, {3.6123424447895927`*^9, 
   3.6123425968041363`*^9}, {3.612342656419503*^9, 3.612342660235717*^9}, {
   3.612342732341763*^9, 3.612342774061243*^9}, {3.612342888488181*^9, 
   3.612342889067196*^9}, 3.61234292681419*^9, {3.612343005070539*^9, 
   3.612343011927772*^9}, {3.612343452151896*^9, 3.6123434585898046`*^9}, {
   3.612344667444006*^9, 3.612344668395142*^9}, {3.612344702446021*^9, 
   3.612344789691738*^9}, {3.612345520922344*^9, 3.6123455559900513`*^9}, {
   3.612559234143409*^9, 3.612559234421427*^9}, {3.61255949164211*^9, 
   3.612559499114627*^9}, {3.612559878986474*^9, 3.6125598877795877`*^9}, {
   3.6125616658275013`*^9, 3.6125617076431437`*^9}, {3.6125621558068523`*^9, 
   3.61256216251558*^9}, {3.6125640038128443`*^9, 3.612564088925879*^9}, {
   3.6125667769945087`*^9, 3.6125667919115477`*^9}, {3.612568528193511*^9, 
   3.6125685642937937`*^9}, 3.612733455178437*^9, {3.6127382499675198`*^9, 
   3.6127382773206882`*^9}, {3.61273831205966*^9, 3.612738373121983*^9}, {
   3.612814999543744*^9, 3.6128150049984713`*^9}, {3.6128197856259403`*^9, 
   3.6128198375377893`*^9}, {3.612823022590782*^9, 3.612823045118256*^9}, {
   3.612823128711104*^9, 3.612823136194489*^9}, {3.6137682475064363`*^9, 
   3.613768248629694*^9}, {3.613868189744665*^9, 3.6138682390142927`*^9}, {
   3.61386863122895*^9, 3.613868631935162*^9}, 3.615152958581355*^9, {
   3.670640154265607*^9, 3.670640168482545*^9}, 3.67064020835712*^9, {
   3.670640329682898*^9, 3.6706404077916107`*^9}, {3.670640484625889*^9, 
   3.6706405729054403`*^9}, {3.670640633675742*^9, 3.670640639136938*^9}, {
   3.670640746273157*^9, 3.670640770168084*^9}, {3.670813338522337*^9, 
   3.6708133789883137`*^9}, {3.6708135458743677`*^9, 3.670813562009759*^9}, {
   3.670813598762533*^9, 3.670813632282239*^9}, {3.670814176904147*^9, 
   3.670814185488801*^9}, {3.670814263002838*^9, 3.6708142723119373`*^9}, {
   3.67081487931046*^9, 3.670814916519958*^9}, {3.670816401435362*^9, 
   3.6708164182105513`*^9}, {3.6708166177617283`*^9, 3.67081663584802*^9}, {
   3.670816742906595*^9, 3.6708167951446753`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</Users/janengelstaedter/dropbox/projects/RecAutomixis/Exploration \
Results\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.61376282622771*^9, 3.613762833147743*^9}, {
   3.613763002192108*^9, 3.6137630223277884`*^9}, {3.6137683121534157`*^9, 
   3.613768314297035*^9}, {3.614051813175742*^9, 3.61405183488795*^9}, {
   3.6151531206953793`*^9, 3.615153134822605*^9}, 3.670815075412462*^9, {
   3.670925113996955*^9, 3.6709251306597853`*^9}, 3.670925204301106*^9, {
   3.670925234681427*^9, 3.6709252383160963`*^9}, 3.670926546854744*^9, {
   3.67323456857314*^9, 3.6732346192611237`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"results", "=", 
   RowBox[{"Import", "[", "\"\<expSpeedAdapt 9 Means.tsv\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.673563413339082*^9, 3.673563418045672*^9}, {
   3.673565550596087*^9, 3.673565557925625*^9}, 3.673565687444828*^9, {
   3.673569222293827*^9, 3.6735692264226217`*^9}, 3.6735692857693043`*^9, 
   3.673569338622119*^9, {3.6735744128666887`*^9, 3.673574414576701*^9}}],

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"results", "\[LeftDoubleBracket]", 
   RowBox[{"1", ";;", "50"}], "\[RightDoubleBracket]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6123433814869957`*^9, 3.612343382384193*^9}, {
   3.612343784456218*^9, 3.612343791583688*^9}, {3.612343835722905*^9, 
   3.612343836134634*^9}, {3.615159117116733*^9, 3.6151591401789427`*^9}, 
   3.673234630309713*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"LogmeannCAValues", "=", 
   RowBox[{"Round", "[", 
    RowBox[{
     RowBox[{"Log10", "[", "meannCAValues", "]"}], ",", "0.1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LogmeannABValues", "=", 
   RowBox[{"Round", "[", 
    RowBox[{
     RowBox[{"Log10", "[", "meannABValues", "]"}], ",", "0.1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanAutomixisGens", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "LogmeannCAValues", "\[LeftDoubleBracket]", "inCA", 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{
         "LogmeannABValues", "\[LeftDoubleBracket]", "inAB", 
          "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Mean", "[", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"results", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "\[LeftDoubleBracket]", 
                RowBox[{"1", ";;", "3"}], "\[RightDoubleBracket]"}], 
               "\[Equal]", 
               RowBox[{"{", 
                RowBox[{"\"\<CentralFusion\>\"", ",", 
                 RowBox[{
                 "LogmeannCAValues", "\[LeftDoubleBracket]", "inCA", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "LogmeannABValues", "\[LeftDoubleBracket]", "inAB", 
                  "\[RightDoubleBracket]"}]}], "}"}]}], "&"}]}], "]"}], 
           "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "11"}], "\[RightDoubleBracket]"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"inCA", ",", "1", ",", 
         RowBox[{"Length", "[", "LogmeannCAValues", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"inAB", ",", "1", ",", 
         RowBox[{"Length", "[", "LogmeannABValues", "]"}]}], "}"}]}], "]"}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanSexGens", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "LogmeannCAValues", "\[LeftDoubleBracket]", "inCA", 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{
         "LogmeannABValues", "\[LeftDoubleBracket]", "inAB", 
          "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Mean", "[", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"results", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "\[LeftDoubleBracket]", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "3"}], "}"}], "\[RightDoubleBracket]"}], 
               "\[Equal]", 
               RowBox[{"{", 
                RowBox[{"\"\<Sex\>\"", ",", 
                 RowBox[{
                 "LogmeannABValues", "\[LeftDoubleBracket]", "inAB", 
                  "\[RightDoubleBracket]"}]}], "}"}]}], "&"}]}], "]"}], 
           "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "11"}], "\[RightDoubleBracket]"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"inCA", ",", "1", ",", 
         RowBox[{"Length", "[", "LogmeannCAValues", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"inAB", ",", "1", ",", 
         RowBox[{"Length", "[", "LogmeannABValues", "]"}]}], "}"}]}], "]"}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Log2meanRelativeGens", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"meanAutomixisGens", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
      RowBox[{"meanAutomixisGens", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
      RowBox[{"Log2", "[", 
       RowBox[{
        RowBox[{"meanAutomixisGens", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}], "/", 
        RowBox[{"meanSexGens", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}]}], "]"}]}], 
     "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.670814005664603*^9, {3.670922494557513*^9, 3.6709225474724607`*^9}, {
   3.6709225820499573`*^9, 3.6709226024571*^9}, {3.670922632723387*^9, 
   3.6709226663040237`*^9}, {3.670922720335682*^9, 3.670922738688917*^9}, {
   3.670922769415168*^9, 3.670923019328763*^9}, {3.67092374185922*^9, 
   3.6709237424665747`*^9}, {3.670925053026424*^9, 3.670925053889236*^9}, {
   3.6760828373906612`*^9, 3.676082884892804*^9}, {3.6760829441192207`*^9, 
   3.676083008260622*^9}, {3.67608307564473*^9, 3.676083080229229*^9}, {
   3.676083497492641*^9, 3.67608350134278*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"max", "=", "3.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"min", "=", 
   RowBox[{"-", "3.5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nTickMarks", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5"}], ",", 
       "\"\<\!\(\*SuperscriptBox[\(10\), \(-5\)]\)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4"}], ",", 
       "\"\<\!\(\*SuperscriptBox[\(10\), \(-4\)]\)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3"}], ",", 
       "\"\<\!\(\*SuperscriptBox[\(10\), \(-3\)]\)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "\"\<0.01\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "\"\<0.1\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "\"\<1\>\""}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RedBlueColourFunction", "[", "x_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"x", ">", "0"}], ",", 
     RowBox[{"Hue", "[", 
      RowBox[{"0", ",", 
       RowBox[{"x", "/", "max"}], ",", "1"}], "]"}], ",", 
     RowBox[{"Hue", "[", 
      RowBox[{"0.7", ",", 
       RowBox[{"x", "/", "min"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot", "=", 
   RowBox[{"ListDensityPlot", "[", 
    RowBox[{"Log2meanRelativeGens2", ",", " ", 
     RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"min", ",", "max"}], "}"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"RedBlueColourFunction", "[", "#", "]"}], "&"}], ")"}]}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "18"}], "]"}]}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"nTickMarks", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"nTickMarks", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\!\(\*OverscriptBox[\(m\), \(_\)]\)\>\"", ",", "26"}],
            "]"}], ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*OverscriptBox[\(n\), \(_\)]\)\>\"", ",", "26", ",", 
            "Black"}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Recessive, with drift\>\"", ",", "26", ",", "Black"}],
            "]"}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"legend", "=", 
   RowBox[{"ContourPlot", "[", 
    RowBox[{"y", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "min", ",", "max"}], "}"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"None", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"N", "[", 
               RowBox[{"2", "^", "i"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"RedBlueColourFunction", "[", "#", "]"}], "&"}], ")"}]}], ",", 
     RowBox[{"Contours", "\[Rule]", "200"}], ",", 
     RowBox[{"ContourStyle", "\[Rule]", "None"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "15"}], ",", 
     RowBox[{"Frame", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"True", ",", "True"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"True", ",", "True"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\< \>\"", ",", "30"}], "]"}], ",", "None"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"75", ",", "300"}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "18"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"plot", ",", "legend"}], "}"}], "}"}], ",", 
   RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.612562402232574*^9, 3.612562404017359*^9}, {
   3.612562444478538*^9, 3.612562509022326*^9}, 3.612562796441002*^9, 
   3.612562859811529*^9, {3.612575309222662*^9, 3.612575356548065*^9}, {
   3.6125755028281937`*^9, 3.6125755070533953`*^9}, {3.612575550958946*^9, 
   3.612575579770131*^9}, {3.612575648049129*^9, 3.612575650328463*^9}, 
   3.612575814580227*^9, {3.6125759095450897`*^9, 3.61257591375079*^9}, {
   3.6125759577881002`*^9, 3.612576070117469*^9}, {3.6125761106254997`*^9, 
   3.612576128068851*^9}, {3.612576187803419*^9, 3.61257620606968*^9}, {
   3.612576272730712*^9, 3.61257627868919*^9}, {3.6125763836613483`*^9, 
   3.6125763873903713`*^9}, {3.670924017236309*^9, 3.6709240756213284`*^9}, 
   3.670924106163354*^9, {3.670924446792903*^9, 3.670924545418374*^9}, {
   3.670924586676825*^9, 3.670924625989826*^9}, {3.67092470274618*^9, 
   3.670924740679989*^9}, {3.670924778176785*^9, 3.670924851773326*^9}, {
   3.670924909678256*^9, 3.670924912516374*^9}, {3.670924984882382*^9, 
   3.670925001371386*^9}, 3.670926622717641*^9, {3.670926913899651*^9, 
   3.670926916539022*^9}, {3.673235478853794*^9, 3.673235491229218*^9}, {
   3.673235544436802*^9, 3.673235584172956*^9}, 3.674436553979226*^9, {
   3.6744428825677433`*^9, 3.674442889654958*^9}, {3.67608240146472*^9, 
   3.6760824094950333`*^9}, 3.676083016790395*^9, {3.6856276853125677`*^9, 
   3.6856276908837233`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Speed of adapatation at two linked loci - Improved screening with h=0.5\
\>", "Subsection",
 CellChangeTimes->{{3.612303620319519*^9, 3.612303643664537*^9}, {
   3.612317971717846*^9, 3.612317974472507*^9}, {3.670639709088376*^9, 
   3.670639712431254*^9}, {3.673562148995611*^9, 3.673562152730441*^9}, 
   3.6735624781382113`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mu", "=", "0.00001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxgens", "=", "1000000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meannCAValues", "=", 
   RowBox[{"10", "^", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "0", ",", "0.2"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meannABValues", "=", 
   RowBox[{"10", "^", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "0", ",", "0.2"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sA", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sB", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hA", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hB", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NN", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"reps", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wThresh", "=", 
   RowBox[{"1", "+", 
    RowBox[{"0.99", 
     RowBox[{"(", 
      RowBox[{"sA", "+", "sB", "+", 
       RowBox[{"sA", " ", "sB"}]}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"results", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
     "\"\<RepMode\>\"", ",", "\"\<Log(nCA)\>\"", ",", "\"\<Log(nAB)\>\"", 
      ",", "\"\<sA\>\"", ",", "\"\<hA\>\"", ",", "\"\<sB\>\"", ",", 
      "\"\<hB\>\"", ",", "\"\<mu\>\"", ",", "\"\<N\>\"", ",", "\"\<Rep\>\"", 
      ",", "\"\<gens\>\""}], "}"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</Users/janengelstaedter/dropbox/projects/RecAutomixis\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"filename", "=", "\"\<expSpeedAdapt 10\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.612341318079071*^9, 3.612341331603848*^9}, {
   3.6123413825954533`*^9, 3.61234139296367*^9}, {3.6123418026804953`*^9, 
   3.612341826333536*^9}, {3.612342120535945*^9, 3.612342150094818*^9}, {
   3.612342272486306*^9, 3.612342396915966*^9}, {3.612342492637732*^9, 
   3.6123424942553587`*^9}, {3.612342868565187*^9, 3.612342868653013*^9}, {
   3.6125601799*^9, 3.612560180793401*^9}, {3.612562145591536*^9, 
   3.6125621494081173`*^9}, {3.612563979893017*^9, 3.612563991147472*^9}, {
   3.6125686571496363`*^9, 3.612568664380651*^9}, {3.6125712654969063`*^9, 
   3.612571277272997*^9}, 3.612738224657303*^9, 3.612738354771682*^9, {
   3.612738494245344*^9, 3.612738494525394*^9}, {3.612818801464451*^9, 
   3.6128188210893087`*^9}, {3.612819765793541*^9, 3.612819772082243*^9}, 
   3.612819860549056*^9, {3.613768227156472*^9, 3.613768254321557*^9}, {
   3.613768614600649*^9, 3.613768625328472*^9}, {3.6138682442736464`*^9, 
   3.6138682447375097`*^9}, {3.6140513626176653`*^9, 3.614051377600778*^9}, 
   3.614052385191429*^9, {3.615152970095726*^9, 3.615152970445788*^9}, 
   3.6151615886239758`*^9, {3.61525698496488*^9, 3.615257003173935*^9}, {
   3.6706396777621937`*^9, 3.6706396848323393`*^9}, {3.670639735225419*^9, 
   3.6706397766169643`*^9}, {3.670640132947348*^9, 3.670640146232839*^9}, {
   3.6706406560891933`*^9, 3.670640657759993*^9}, {3.6708136558904*^9, 
   3.6708136870563602`*^9}, {3.670813985273247*^9, 3.670813985752097*^9}, {
   3.6708141517600527`*^9, 3.6708141713987083`*^9}, {3.670814234799446*^9, 
   3.670814247264278*^9}, {3.670814980326375*^9, 3.6708149816201973`*^9}, {
   3.670815087748901*^9, 3.670815091381983*^9}, {3.670816529785198*^9, 
   3.670816531631761*^9}, {3.6708165902573433`*^9, 3.670816590737482*^9}, {
   3.6709271632011433`*^9, 3.670927184121669*^9}, {3.673562494378183*^9, 
   3.673562497169923*^9}, {3.673562534137526*^9, 3.673562534665267*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"run", " ", "simulations", " ", "with", " ", 
      RowBox[{"automixis", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"meannCA", "=", 
          RowBox[{
          "meannCAValues", "\[LeftDoubleBracket]", "imeannCA", 
           "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"meannAB", "=", 
          RowBox[{
          "meannABValues", "\[LeftDoubleBracket]", "imeannAB", 
           "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AutomixisMatrix", "=", 
          RowBox[{"N", "[", 
           RowBox[{"getAutomixisMatrixPoisson", "[", 
            RowBox[{"meannCA", ",", "meannAB", ",", "\"\<CentralFusion\>\""}],
             "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"p", "=", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
            ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"g", "=", "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{"meanw", "=", "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"meanw", "<", "wThresh"}], ")"}], " ", "&&", 
            RowBox[{"(", " ", 
             RowBox[{"g", "<", "maxgens"}], ")"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"p", "=", 
             RowBox[{"RecursionFiniteN", "[", 
              RowBox[{
              "p", ",", "AutomixisMatrix", ",", "mu", ",", "mu", ",", "sA", 
               ",", "hA", ",", "sB", ",", "hB", ",", "NN"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"g", "=", 
             RowBox[{"g", "+", "1"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"meanw", "=", 
             RowBox[{"getMeanFitness", "[", 
              RowBox[{"p", ",", "sA", ",", "hA", ",", "sB", ",", "hB"}], 
              "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"results", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"results", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<CentralFusion\>\"", ",", 
              RowBox[{"Round", "[", 
               RowBox[{
                RowBox[{"Log10", "[", "meannCA", "]"}], ",", "0.1"}], "]"}], 
              ",", 
              RowBox[{"Round", "[", 
               RowBox[{
                RowBox[{"Log10", "[", "meannAB", "]"}], ",", "0.1"}], "]"}], 
              ",", "sA", ",", "hA", ",", "sB", ",", "hB", ",", "mu", ",", 
              "NN", ",", "rep", ",", "g"}], "}"}]}], "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"imeannCA", ",", 
          RowBox[{"Length", "[", "meannCAValues", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"imeannAB", ",", 
          RowBox[{"Length", "[", "meannABValues", "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"run", " ", "simulations", " ", "with", " ", 
        RowBox[{"sex", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"meannAB", "=", 
          RowBox[{
          "meannABValues", "\[LeftDoubleBracket]", "imeannAB", 
           "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"SexTensor", "=", 
          RowBox[{"N", "[", 
           RowBox[{"getSexTensor", "[", 
            RowBox[{"meannCA", ",", "meannAB"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"p", "=", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
            ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"g", "=", "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{"meanw", "=", "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"meanw", "<", "wThresh"}], ")"}], " ", "&&", 
            RowBox[{"(", " ", 
             RowBox[{"g", "<", "maxgens"}], ")"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"p", "=", 
             RowBox[{"RecursionSexualFiniteN", "[", 
              RowBox[{
              "p", ",", "SexTensor", ",", "mu", ",", "mu", ",", "sA", ",", 
               "hA", ",", "sB", ",", "hB", ",", "NN"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"g", "=", 
             RowBox[{"g", "+", "1"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"meanw", "=", 
             RowBox[{"getMeanFitness", "[", 
              RowBox[{"p", ",", "sA", ",", "hA", ",", "sB", ",", "hB"}], 
              "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"results", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"results", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Sex\>\"", ",", 
              RowBox[{"Round", "[", 
               RowBox[{"Log10", "[", "meannCA", "]"}], "]"}], ",", 
              RowBox[{"Round", "[", 
               RowBox[{
                RowBox[{"Log10", "[", "meannAB", "]"}], ",", "0.1"}], "]"}], 
              ",", "sA", ",", "hA", ",", "sB", ",", "hB", ",", "mu", ",", 
              "NN", ",", "rep", ",", "g"}], "}"}]}], "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"imeannAB", ",", 
          RowBox[{"Length", "[", "meannABValues", "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"rep", ",", "10"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{"Export", "[", 
         RowBox[{
          RowBox[{"StringJoin", "[", 
           RowBox[{"filename", ",", "\"\< Rep\>\"", ",", " ", 
            RowBox[{"ToString", "[", "rep", "]"}], ",", "\"\<.tsv\>\""}], 
           "]"}], ",", "results"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "ClearMemory", ";"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"rep", ",", "1", ",", "1000"}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.612341270490143*^9, 3.612341312440858*^9}, {
   3.612341443691373*^9, 3.6123414791904907`*^9}, {3.612341602027923*^9, 
   3.612341629671208*^9}, {3.6123418236462097`*^9, 3.612341830157957*^9}, {
   3.612341951089752*^9, 3.6123420428526983`*^9}, {3.61234207695899*^9, 
   3.612342107486711*^9}, {3.612342157994946*^9, 3.612342164173675*^9}, {
   3.6123422839400454`*^9, 3.6123422965227013`*^9}, {3.6123424447895927`*^9, 
   3.6123425968041363`*^9}, {3.612342656419503*^9, 3.612342660235717*^9}, {
   3.612342732341763*^9, 3.612342774061243*^9}, {3.612342888488181*^9, 
   3.612342889067196*^9}, 3.61234292681419*^9, {3.612343005070539*^9, 
   3.612343011927772*^9}, {3.612343452151896*^9, 3.6123434585898046`*^9}, {
   3.612344667444006*^9, 3.612344668395142*^9}, {3.612344702446021*^9, 
   3.612344789691738*^9}, {3.612345520922344*^9, 3.6123455559900513`*^9}, {
   3.612559234143409*^9, 3.612559234421427*^9}, {3.61255949164211*^9, 
   3.612559499114627*^9}, {3.612559878986474*^9, 3.6125598877795877`*^9}, {
   3.6125616658275013`*^9, 3.6125617076431437`*^9}, {3.6125621558068523`*^9, 
   3.61256216251558*^9}, {3.6125640038128443`*^9, 3.612564088925879*^9}, {
   3.6125667769945087`*^9, 3.6125667919115477`*^9}, {3.612568528193511*^9, 
   3.6125685642937937`*^9}, 3.612733455178437*^9, {3.6127382499675198`*^9, 
   3.6127382773206882`*^9}, {3.61273831205966*^9, 3.612738373121983*^9}, {
   3.612814999543744*^9, 3.6128150049984713`*^9}, {3.6128197856259403`*^9, 
   3.6128198375377893`*^9}, {3.612823022590782*^9, 3.612823045118256*^9}, {
   3.612823128711104*^9, 3.612823136194489*^9}, {3.6137682475064363`*^9, 
   3.613768248629694*^9}, {3.613868189744665*^9, 3.6138682390142927`*^9}, {
   3.61386863122895*^9, 3.613868631935162*^9}, 3.615152958581355*^9, {
   3.670640154265607*^9, 3.670640168482545*^9}, 3.67064020835712*^9, {
   3.670640329682898*^9, 3.6706404077916107`*^9}, {3.670640484625889*^9, 
   3.6706405729054403`*^9}, {3.670640633675742*^9, 3.670640639136938*^9}, {
   3.670640746273157*^9, 3.670640770168084*^9}, {3.670813338522337*^9, 
   3.6708133789883137`*^9}, {3.6708135458743677`*^9, 3.670813562009759*^9}, {
   3.670813598762533*^9, 3.670813632282239*^9}, {3.670814176904147*^9, 
   3.670814185488801*^9}, {3.670814263002838*^9, 3.6708142723119373`*^9}, {
   3.67081487931046*^9, 3.670814916519958*^9}, {3.670816401435362*^9, 
   3.6708164182105513`*^9}, {3.6708166177617283`*^9, 3.67081663584802*^9}, {
   3.670816742906595*^9, 3.6708167951446753`*^9}, 3.673562549170751*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"run", " ", "simulations", " ", "with", " ", 
      RowBox[{"automixis", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"meannCA", "=", 
          RowBox[{
          "meannCAValues", "\[LeftDoubleBracket]", "imeannCA", 
           "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"meannAB", "=", 
          RowBox[{
          "meannABValues", "\[LeftDoubleBracket]", "imeannAB", 
           "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AutomixisMatrix", "=", 
          RowBox[{"N", "[", 
           RowBox[{"getAutomixisMatrixPoisson", "[", 
            RowBox[{"meannCA", ",", "meannAB", ",", "\"\<CentralFusion\>\""}],
             "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"p", "=", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
            ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"g", "=", "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{"meanw", "=", "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"meanw", "<", "wThresh"}], ")"}], " ", "&&", 
            RowBox[{"(", " ", 
             RowBox[{"g", "<", "maxgens"}], ")"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"p", "=", 
             RowBox[{"RecursionFiniteN", "[", 
              RowBox[{
              "p", ",", "AutomixisMatrix", ",", "mu", ",", "mu", ",", "sA", 
               ",", "hA", ",", "sB", ",", "hB", ",", "NN"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"g", "=", 
             RowBox[{"g", "+", "1"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"meanw", "=", 
             RowBox[{"getMeanFitness", "[", 
              RowBox[{"p", ",", "sA", ",", "hA", ",", "sB", ",", "hB"}], 
              "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"results", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"results", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<CentralFusion\>\"", ",", 
              RowBox[{"Round", "[", 
               RowBox[{
                RowBox[{"Log10", "[", "meannCA", "]"}], ",", "0.1"}], "]"}], 
              ",", 
              RowBox[{"Round", "[", 
               RowBox[{
                RowBox[{"Log10", "[", "meannAB", "]"}], ",", "0.1"}], "]"}], 
              ",", "sA", ",", "hA", ",", "sB", ",", "hB", ",", "mu", ",", 
              "NN", ",", "rep", ",", "g"}], "}"}]}], "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"imeannCA", ",", 
          RowBox[{"Length", "[", "meannCAValues", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"imeannAB", ",", 
          RowBox[{"Length", "[", "meannABValues", "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"run", " ", "simulations", " ", "with", " ", 
        RowBox[{"sex", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"meannAB", "=", 
          RowBox[{
          "meannABValues", "\[LeftDoubleBracket]", "imeannAB", 
           "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"SexTensor", "=", 
          RowBox[{"N", "[", 
           RowBox[{"getSexTensor", "[", 
            RowBox[{"meannCA", ",", "meannAB"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"p", "=", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
            ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"g", "=", "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{"meanw", "=", "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"meanw", "<", "wThresh"}], ")"}], " ", "&&", 
            RowBox[{"(", " ", 
             RowBox[{"g", "<", "maxgens"}], ")"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"p", "=", 
             RowBox[{"RecursionSexualFiniteN", "[", 
              RowBox[{
              "p", ",", "SexTensor", ",", "mu", ",", "mu", ",", "sA", ",", 
               "hA", ",", "sB", ",", "hB", ",", "NN"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"g", "=", 
             RowBox[{"g", "+", "1"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"meanw", "=", 
             RowBox[{"getMeanFitness", "[", 
              RowBox[{"p", ",", "sA", ",", "hA", ",", "sB", ",", "hB"}], 
              "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"results", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"results", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Sex\>\"", ",", 
              RowBox[{"Round", "[", 
               RowBox[{"Log10", "[", "meannCA", "]"}], "]"}], ",", 
              RowBox[{"Round", "[", 
               RowBox[{
                RowBox[{"Log10", "[", "meannAB", "]"}], ",", "0.1"}], "]"}], 
              ",", "sA", ",", "hA", ",", "sB", ",", "hB", ",", "mu", ",", 
              "NN", ",", "rep", ",", "g"}], "}"}]}], "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"imeannAB", ",", 
          RowBox[{"Length", "[", "meannABValues", "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"rep", ",", "10"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{"Export", "[", 
         RowBox[{
          RowBox[{"StringJoin", "[", 
           RowBox[{"filename", ",", "\"\< Rep\>\"", ",", " ", 
            RowBox[{"ToString", "[", "rep", "]"}], ",", "\"\<.tsv\>\""}], 
           "]"}], ",", "results"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "ClearMemory", ";"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"rep", ",", "500", ",", "1000"}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.612341270490143*^9, 3.612341312440858*^9}, {
   3.612341443691373*^9, 3.6123414791904907`*^9}, {3.612341602027923*^9, 
   3.612341629671208*^9}, {3.6123418236462097`*^9, 3.612341830157957*^9}, {
   3.612341951089752*^9, 3.6123420428526983`*^9}, {3.61234207695899*^9, 
   3.612342107486711*^9}, {3.612342157994946*^9, 3.612342164173675*^9}, {
   3.6123422839400454`*^9, 3.6123422965227013`*^9}, {3.6123424447895927`*^9, 
   3.6123425968041363`*^9}, {3.612342656419503*^9, 3.612342660235717*^9}, {
   3.612342732341763*^9, 3.612342774061243*^9}, {3.612342888488181*^9, 
   3.612342889067196*^9}, 3.61234292681419*^9, {3.612343005070539*^9, 
   3.612343011927772*^9}, {3.612343452151896*^9, 3.6123434585898046`*^9}, {
   3.612344667444006*^9, 3.612344668395142*^9}, {3.612344702446021*^9, 
   3.612344789691738*^9}, {3.612345520922344*^9, 3.6123455559900513`*^9}, {
   3.612559234143409*^9, 3.612559234421427*^9}, {3.61255949164211*^9, 
   3.612559499114627*^9}, {3.612559878986474*^9, 3.6125598877795877`*^9}, {
   3.6125616658275013`*^9, 3.6125617076431437`*^9}, {3.6125621558068523`*^9, 
   3.61256216251558*^9}, {3.6125640038128443`*^9, 3.612564088925879*^9}, {
   3.6125667769945087`*^9, 3.6125667919115477`*^9}, {3.612568528193511*^9, 
   3.6125685642937937`*^9}, 3.612733455178437*^9, {3.6127382499675198`*^9, 
   3.6127382773206882`*^9}, {3.61273831205966*^9, 3.612738373121983*^9}, {
   3.612814999543744*^9, 3.6128150049984713`*^9}, {3.6128197856259403`*^9, 
   3.6128198375377893`*^9}, {3.612823022590782*^9, 3.612823045118256*^9}, {
   3.612823128711104*^9, 3.612823136194489*^9}, {3.6137682475064363`*^9, 
   3.613768248629694*^9}, {3.613868189744665*^9, 3.6138682390142927`*^9}, {
   3.61386863122895*^9, 3.613868631935162*^9}, 3.615152958581355*^9, {
   3.670640154265607*^9, 3.670640168482545*^9}, 3.67064020835712*^9, {
   3.670640329682898*^9, 3.6706404077916107`*^9}, {3.670640484625889*^9, 
   3.6706405729054403`*^9}, {3.670640633675742*^9, 3.670640639136938*^9}, {
   3.670640746273157*^9, 3.670640770168084*^9}, {3.670813338522337*^9, 
   3.6708133789883137`*^9}, {3.6708135458743677`*^9, 3.670813562009759*^9}, {
   3.670813598762533*^9, 3.670813632282239*^9}, {3.670814176904147*^9, 
   3.670814185488801*^9}, {3.670814263002838*^9, 3.6708142723119373`*^9}, {
   3.67081487931046*^9, 3.670814916519958*^9}, {3.670816401435362*^9, 
   3.6708164182105513`*^9}, {3.6708166177617283`*^9, 3.67081663584802*^9}, {
   3.670816742906595*^9, 3.6708167951446753`*^9}, 3.673562549170751*^9, {
   3.673656805945684*^9, 3.6736568064633703`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</Users/janengelstaedter/dropbox/projects/RecAutomixis/Exploration \
Results\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.61376282622771*^9, 3.613762833147743*^9}, {
   3.613763002192108*^9, 3.6137630223277884`*^9}, {3.6137683121534157`*^9, 
   3.613768314297035*^9}, {3.614051813175742*^9, 3.61405183488795*^9}, {
   3.6151531206953793`*^9, 3.615153134822605*^9}, 3.670815075412462*^9, {
   3.670925113996955*^9, 3.6709251306597853`*^9}, 3.670925204301106*^9, {
   3.670925234681427*^9, 3.6709252383160963`*^9}, 3.670926546854744*^9, {
   3.67323456857314*^9, 3.6732346192611237`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"results1", "=", 
   RowBox[{"Import", "[", "\"\<expSpeedAdapt 10 Rep500.tsv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"results2", "=", 
   RowBox[{"Import", "[", "\"\<expSpeedAdapt 10 Rep1000.tsv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"results", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"results1", ",", 
     RowBox[{"Drop", "[", 
      RowBox[{"results2", ",", "1"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6709257310465717`*^9, 3.670925756780451*^9}, {
   3.670925880189115*^9, 3.670925910123434*^9}, {3.6709262888317823`*^9, 
   3.6709262939275303`*^9}, {3.6709264111123943`*^9, 3.6709264172774763`*^9}, 
   3.670926579484535*^9, {3.673234534528998*^9, 3.673234550560075*^9}, {
   3.673562553074543*^9, 3.673562553113082*^9}, {3.673661490270317*^9, 
   3.673661525885556*^9}, {3.673832834215199*^9, 3.673832835172619*^9}, 
   3.674249168710086*^9, {3.6742672478889303`*^9, 3.674267272048318*^9}, {
   3.674267328744196*^9, 3.6742673433677177`*^9}, 3.674267692535987*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"LogmeannCAValues", "=", 
   RowBox[{"Round", "[", 
    RowBox[{
     RowBox[{"Log10", "[", "meannCAValues", "]"}], ",", "0.1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LogmeannABValues", "=", 
   RowBox[{"Round", "[", 
    RowBox[{
     RowBox[{"Log10", "[", "meannABValues", "]"}], ",", "0.1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanAutomixisGens", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "LogmeannCAValues", "\[LeftDoubleBracket]", "inCA", 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{
         "LogmeannABValues", "\[LeftDoubleBracket]", "inAB", 
          "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Mean", "[", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"results", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "\[LeftDoubleBracket]", 
                RowBox[{"1", ";;", "3"}], "\[RightDoubleBracket]"}], 
               "\[Equal]", 
               RowBox[{"{", 
                RowBox[{"\"\<CentralFusion\>\"", ",", 
                 RowBox[{
                 "LogmeannCAValues", "\[LeftDoubleBracket]", "inCA", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "LogmeannABValues", "\[LeftDoubleBracket]", "inAB", 
                  "\[RightDoubleBracket]"}]}], "}"}]}], "&"}]}], "]"}], 
           "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "11"}], "\[RightDoubleBracket]"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"inCA", ",", "1", ",", 
         RowBox[{"Length", "[", "LogmeannCAValues", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"inAB", ",", "1", ",", 
         RowBox[{"Length", "[", "LogmeannABValues", "]"}]}], "}"}]}], "]"}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanSexGens", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "LogmeannCAValues", "\[LeftDoubleBracket]", "inCA", 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{
         "LogmeannABValues", "\[LeftDoubleBracket]", "inAB", 
          "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Mean", "[", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"results", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "\[LeftDoubleBracket]", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "3"}], "}"}], "\[RightDoubleBracket]"}], 
               "\[Equal]", 
               RowBox[{"{", 
                RowBox[{"\"\<Sex\>\"", ",", 
                 RowBox[{
                 "LogmeannABValues", "\[LeftDoubleBracket]", "inAB", 
                  "\[RightDoubleBracket]"}]}], "}"}]}], "&"}]}], "]"}], 
           "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "11"}], "\[RightDoubleBracket]"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"inCA", ",", "1", ",", 
         RowBox[{"Length", "[", "LogmeannCAValues", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"inAB", ",", "1", ",", 
         RowBox[{"Length", "[", "LogmeannABValues", "]"}]}], "}"}]}], "]"}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Log2meanRelativeGens", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"meanAutomixisGens", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
      RowBox[{"meanAutomixisGens", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
      RowBox[{"Log2", "[", 
       RowBox[{
        RowBox[{"meanAutomixisGens", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}], "/", 
        RowBox[{"meanSexGens", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}]}], "]"}]}], 
     "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.670814005664603*^9, {3.670922494557513*^9, 3.6709225474724607`*^9}, {
   3.6709225820499573`*^9, 3.6709226024571*^9}, {3.670922632723387*^9, 
   3.6709226663040237`*^9}, {3.670922720335682*^9, 3.670922738688917*^9}, {
   3.670922769415168*^9, 3.670923019328763*^9}, {3.67092374185922*^9, 
   3.6709237424665747`*^9}, {3.670925053026424*^9, 3.670925053889236*^9}, 
   3.6760843690435057`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"max", "=", "3.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"min", "=", 
   RowBox[{"-", "3.5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nTickMarks", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5"}], ",", 
       "\"\<\!\(\*SuperscriptBox[\(10\), \(-5\)]\)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4"}], ",", 
       "\"\<\!\(\*SuperscriptBox[\(10\), \(-4\)]\)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3"}], ",", 
       "\"\<\!\(\*SuperscriptBox[\(10\), \(-3\)]\)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "\"\<0.01\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "\"\<0.1\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "\"\<1\>\""}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RedBlueColourFunction", "[", "x_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"x", ">", "0"}], ",", 
     RowBox[{"Hue", "[", 
      RowBox[{"0", ",", 
       RowBox[{"x", "/", "max"}], ",", "1"}], "]"}], ",", 
     RowBox[{"Hue", "[", 
      RowBox[{"0.7", ",", 
       RowBox[{"x", "/", "min"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot", "=", 
   RowBox[{"ListDensityPlot", "[", 
    RowBox[{"Log2meanRelativeGens", ",", " ", 
     RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"min", ",", "max"}], "}"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"RedBlueColourFunction", "[", "#", "]"}], "&"}], ")"}]}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "18"}], "]"}]}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"nTickMarks", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"nTickMarks", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\!\(\*OverscriptBox[\(m\), \(_\)]\)\>\"", ",", "26"}],
            "]"}], ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*OverscriptBox[\(n\), \(_\)]\)\>\"", ",", "26", ",", 
            "Black"}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Additive, with drift\>\"", ",", "26", ",", "Black"}], 
           "]"}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"legend", "=", 
   RowBox[{"ContourPlot", "[", 
    RowBox[{"y", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "min", ",", "max"}], "}"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"None", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"N", "[", 
               RowBox[{"2", "^", "i"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"RedBlueColourFunction", "[", "#", "]"}], "&"}], ")"}]}], ",", 
     RowBox[{"Contours", "\[Rule]", "200"}], ",", 
     RowBox[{"ContourStyle", "\[Rule]", "None"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "15"}], ",", 
     RowBox[{"Frame", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"True", ",", "True"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"True", ",", "True"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\< \>\"", ",", "30"}], "]"}], ",", "None"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"75", ",", "300"}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "18"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"plot", ",", "legend"}], "}"}], "}"}], ",", 
   RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.612562402232574*^9, 3.612562404017359*^9}, {
   3.612562444478538*^9, 3.612562509022326*^9}, 3.612562796441002*^9, 
   3.612562859811529*^9, {3.612575309222662*^9, 3.612575356548065*^9}, {
   3.6125755028281937`*^9, 3.6125755070533953`*^9}, {3.612575550958946*^9, 
   3.612575579770131*^9}, {3.612575648049129*^9, 3.612575650328463*^9}, 
   3.612575814580227*^9, {3.6125759095450897`*^9, 3.61257591375079*^9}, {
   3.6125759577881002`*^9, 3.612576070117469*^9}, {3.6125761106254997`*^9, 
   3.612576128068851*^9}, {3.612576187803419*^9, 3.61257620606968*^9}, {
   3.612576272730712*^9, 3.61257627868919*^9}, {3.6125763836613483`*^9, 
   3.6125763873903713`*^9}, {3.670924017236309*^9, 3.6709240756213284`*^9}, 
   3.670924106163354*^9, {3.670924446792903*^9, 3.670924545418374*^9}, {
   3.670924586676825*^9, 3.670924625989826*^9}, {3.67092470274618*^9, 
   3.670924740679989*^9}, {3.670924778176785*^9, 3.670924851773326*^9}, {
   3.670924909678256*^9, 3.670924912516374*^9}, {3.670924984882382*^9, 
   3.670925001371386*^9}, 3.670926622717641*^9, {3.670926913899651*^9, 
   3.670926916539022*^9}, {3.673235478853794*^9, 3.673235491229218*^9}, {
   3.673235544436802*^9, 3.673235584172956*^9}, {3.674436437212995*^9, 
   3.674436455083445*^9}, {3.674436494852502*^9, 3.674436520894643*^9}, {
   3.674443012367552*^9, 3.674443023750718*^9}, {3.685627620088573*^9, 
   3.685627624526972*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Speed of adapatation at two linked loci - Additional, very coarse but broader \
screening with h=0.5\
\>", "Subsection",
 CellChangeTimes->{{3.612303620319519*^9, 3.612303643664537*^9}, {
   3.612317971717846*^9, 3.612317974472507*^9}, {3.670639709088376*^9, 
   3.670639712431254*^9}, {3.673562148995611*^9, 3.673562152730441*^9}, 
   3.6735624781382113`*^9, {3.6761644918907967`*^9, 3.676164512274239*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mu", "=", "0.00001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxgens", "=", "1000000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meannCAValues", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{"10", "^", 
      RowBox[{"Range", "[", 
       RowBox[{
        RowBox[{"-", "8"}], ",", "0", ",", "2"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meannABValues", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{"10", "^", 
      RowBox[{"Range", "[", 
       RowBox[{
        RowBox[{"-", "8"}], ",", "0", ",", "2"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sA", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sB", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hA", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hB", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NN", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"reps", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wThresh", "=", 
   RowBox[{"1", "+", 
    RowBox[{"0.99", 
     RowBox[{"(", 
      RowBox[{"sA", "+", "sB", "+", 
       RowBox[{"sA", " ", "sB"}]}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"results", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
     "\"\<RepMode\>\"", ",", "\"\<Log(nCA)\>\"", ",", "\"\<Log(nAB)\>\"", 
      ",", "\"\<sA\>\"", ",", "\"\<hA\>\"", ",", "\"\<sB\>\"", ",", 
      "\"\<hB\>\"", ",", "\"\<mu\>\"", ",", "\"\<N\>\"", ",", "\"\<Rep\>\"", 
      ",", "\"\<gens\>\""}], "}"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</Users/janengelstaedter/dropbox/projects/RecAutomixis\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"filename", "=", "\"\<expSpeedAdapt 11\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.612341318079071*^9, 3.612341331603848*^9}, {
   3.6123413825954533`*^9, 3.61234139296367*^9}, {3.6123418026804953`*^9, 
   3.612341826333536*^9}, {3.612342120535945*^9, 3.612342150094818*^9}, {
   3.612342272486306*^9, 3.612342396915966*^9}, {3.612342492637732*^9, 
   3.6123424942553587`*^9}, {3.612342868565187*^9, 3.612342868653013*^9}, {
   3.6125601799*^9, 3.612560180793401*^9}, {3.612562145591536*^9, 
   3.6125621494081173`*^9}, {3.612563979893017*^9, 3.612563991147472*^9}, {
   3.6125686571496363`*^9, 3.612568664380651*^9}, {3.6125712654969063`*^9, 
   3.612571277272997*^9}, 3.612738224657303*^9, 3.612738354771682*^9, {
   3.612738494245344*^9, 3.612738494525394*^9}, {3.612818801464451*^9, 
   3.6128188210893087`*^9}, {3.612819765793541*^9, 3.612819772082243*^9}, 
   3.612819860549056*^9, {3.613768227156472*^9, 3.613768254321557*^9}, {
   3.613768614600649*^9, 3.613768625328472*^9}, {3.6138682442736464`*^9, 
   3.6138682447375097`*^9}, {3.6140513626176653`*^9, 3.614051377600778*^9}, 
   3.614052385191429*^9, {3.615152970095726*^9, 3.615152970445788*^9}, 
   3.6151615886239758`*^9, {3.61525698496488*^9, 3.615257003173935*^9}, {
   3.6706396777621937`*^9, 3.6706396848323393`*^9}, {3.670639735225419*^9, 
   3.6706397766169643`*^9}, {3.670640132947348*^9, 3.670640146232839*^9}, {
   3.6706406560891933`*^9, 3.670640657759993*^9}, {3.6708136558904*^9, 
   3.6708136870563602`*^9}, {3.670813985273247*^9, 3.670813985752097*^9}, {
   3.6708141517600527`*^9, 3.6708141713987083`*^9}, {3.670814234799446*^9, 
   3.670814247264278*^9}, {3.670814980326375*^9, 3.6708149816201973`*^9}, {
   3.670815087748901*^9, 3.670815091381983*^9}, {3.670816529785198*^9, 
   3.670816531631761*^9}, {3.6708165902573433`*^9, 3.670816590737482*^9}, {
   3.6709271632011433`*^9, 3.670927184121669*^9}, {3.673562494378183*^9, 
   3.673562497169923*^9}, {3.673562534137526*^9, 3.673562534665267*^9}, {
   3.6761645241976852`*^9, 3.6761645920358057`*^9}, {3.676165130341161*^9, 
   3.6761651352123623`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"run", " ", "simulations", " ", "with", " ", 
      RowBox[{"automixis", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"meannCA", "=", 
          RowBox[{
          "meannCAValues", "\[LeftDoubleBracket]", "imeannCA", 
           "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"meannAB", "=", 
          RowBox[{
          "meannABValues", "\[LeftDoubleBracket]", "imeannAB", 
           "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AutomixisMatrix", "=", 
          RowBox[{"N", "[", 
           RowBox[{"getAutomixisMatrixPoisson", "[", 
            RowBox[{"meannCA", ",", "meannAB", ",", "\"\<CentralFusion\>\""}],
             "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"p", "=", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
            ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"g", "=", "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{"meanw", "=", "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"meanw", "<", "wThresh"}], ")"}], " ", "&&", 
            RowBox[{"(", " ", 
             RowBox[{"g", "<", "maxgens"}], ")"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"p", "=", 
             RowBox[{"RecursionFiniteN", "[", 
              RowBox[{
              "p", ",", "AutomixisMatrix", ",", "mu", ",", "mu", ",", "sA", 
               ",", "hA", ",", "sB", ",", "hB", ",", "NN"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"g", "=", 
             RowBox[{"g", "+", "1"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"meanw", "=", 
             RowBox[{"getMeanFitness", "[", 
              RowBox[{"p", ",", "sA", ",", "hA", ",", "sB", ",", "hB"}], 
              "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"results", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"results", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<CentralFusion\>\"", ",", 
              RowBox[{"Round", "[", 
               RowBox[{
                RowBox[{"Log10", "[", "meannCA", "]"}], ",", "0.1"}], "]"}], 
              ",", 
              RowBox[{"Round", "[", 
               RowBox[{
                RowBox[{"Log10", "[", "meannAB", "]"}], ",", "0.1"}], "]"}], 
              ",", "sA", ",", "hA", ",", "sB", ",", "hB", ",", "mu", ",", 
              "NN", ",", "rep", ",", "g"}], "}"}]}], "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"imeannCA", ",", 
          RowBox[{"Length", "[", "meannCAValues", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"imeannAB", ",", 
          RowBox[{"Length", "[", "meannABValues", "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"run", " ", "simulations", " ", "with", " ", 
        RowBox[{"sex", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"meannAB", "=", 
          RowBox[{
          "meannABValues", "\[LeftDoubleBracket]", "imeannAB", 
           "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"SexTensor", "=", 
          RowBox[{"N", "[", 
           RowBox[{"getSexTensor", "[", 
            RowBox[{"meannCA", ",", "meannAB"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"p", "=", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
            ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"g", "=", "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{"meanw", "=", "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"meanw", "<", "wThresh"}], ")"}], " ", "&&", 
            RowBox[{"(", " ", 
             RowBox[{"g", "<", "maxgens"}], ")"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"p", "=", 
             RowBox[{"RecursionSexualFiniteN", "[", 
              RowBox[{
              "p", ",", "SexTensor", ",", "mu", ",", "mu", ",", "sA", ",", 
               "hA", ",", "sB", ",", "hB", ",", "NN"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"g", "=", 
             RowBox[{"g", "+", "1"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"meanw", "=", 
             RowBox[{"getMeanFitness", "[", 
              RowBox[{"p", ",", "sA", ",", "hA", ",", "sB", ",", "hB"}], 
              "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"results", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"results", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Sex\>\"", ",", 
              RowBox[{"Round", "[", 
               RowBox[{"Log10", "[", "meannCA", "]"}], "]"}], ",", 
              RowBox[{"Round", "[", 
               RowBox[{
                RowBox[{"Log10", "[", "meannAB", "]"}], ",", "0.1"}], "]"}], 
              ",", "sA", ",", "hA", ",", "sB", ",", "hB", ",", "mu", ",", 
              "NN", ",", "rep", ",", "g"}], "}"}]}], "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"imeannAB", ",", 
          RowBox[{"Length", "[", "meannABValues", "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"rep", ",", "10"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{"Export", "[", 
         RowBox[{
          RowBox[{"StringJoin", "[", 
           RowBox[{"filename", ",", "\"\< Rep\>\"", ",", " ", 
            RowBox[{"ToString", "[", "rep", "]"}], ",", "\"\<.tsv\>\""}], 
           "]"}], ",", "results"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "ClearMemory", ";"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"rep", ",", "1", ",", "500"}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.612341270490143*^9, 3.612341312440858*^9}, {
   3.612341443691373*^9, 3.6123414791904907`*^9}, {3.612341602027923*^9, 
   3.612341629671208*^9}, {3.6123418236462097`*^9, 3.612341830157957*^9}, {
   3.612341951089752*^9, 3.6123420428526983`*^9}, {3.61234207695899*^9, 
   3.612342107486711*^9}, {3.612342157994946*^9, 3.612342164173675*^9}, {
   3.6123422839400454`*^9, 3.6123422965227013`*^9}, {3.6123424447895927`*^9, 
   3.6123425968041363`*^9}, {3.612342656419503*^9, 3.612342660235717*^9}, {
   3.612342732341763*^9, 3.612342774061243*^9}, {3.612342888488181*^9, 
   3.612342889067196*^9}, 3.61234292681419*^9, {3.612343005070539*^9, 
   3.612343011927772*^9}, {3.612343452151896*^9, 3.6123434585898046`*^9}, {
   3.612344667444006*^9, 3.612344668395142*^9}, {3.612344702446021*^9, 
   3.612344789691738*^9}, {3.612345520922344*^9, 3.6123455559900513`*^9}, {
   3.612559234143409*^9, 3.612559234421427*^9}, {3.61255949164211*^9, 
   3.612559499114627*^9}, {3.612559878986474*^9, 3.6125598877795877`*^9}, {
   3.6125616658275013`*^9, 3.6125617076431437`*^9}, {3.6125621558068523`*^9, 
   3.61256216251558*^9}, {3.6125640038128443`*^9, 3.612564088925879*^9}, {
   3.6125667769945087`*^9, 3.6125667919115477`*^9}, {3.612568528193511*^9, 
   3.6125685642937937`*^9}, 3.612733455178437*^9, {3.6127382499675198`*^9, 
   3.6127382773206882`*^9}, {3.61273831205966*^9, 3.612738373121983*^9}, {
   3.612814999543744*^9, 3.6128150049984713`*^9}, {3.6128197856259403`*^9, 
   3.6128198375377893`*^9}, {3.612823022590782*^9, 3.612823045118256*^9}, {
   3.612823128711104*^9, 3.612823136194489*^9}, {3.6137682475064363`*^9, 
   3.613768248629694*^9}, {3.613868189744665*^9, 3.6138682390142927`*^9}, {
   3.61386863122895*^9, 3.613868631935162*^9}, 3.615152958581355*^9, {
   3.670640154265607*^9, 3.670640168482545*^9}, 3.67064020835712*^9, {
   3.670640329682898*^9, 3.6706404077916107`*^9}, {3.670640484625889*^9, 
   3.6706405729054403`*^9}, {3.670640633675742*^9, 3.670640639136938*^9}, {
   3.670640746273157*^9, 3.670640770168084*^9}, {3.670813338522337*^9, 
   3.6708133789883137`*^9}, {3.6708135458743677`*^9, 3.670813562009759*^9}, {
   3.670813598762533*^9, 3.670813632282239*^9}, {3.670814176904147*^9, 
   3.670814185488801*^9}, {3.670814263002838*^9, 3.6708142723119373`*^9}, {
   3.67081487931046*^9, 3.670814916519958*^9}, {3.670816401435362*^9, 
   3.6708164182105513`*^9}, {3.6708166177617283`*^9, 3.67081663584802*^9}, {
   3.670816742906595*^9, 3.6708167951446753`*^9}, 3.673562549170751*^9, 
   3.676164752872168*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"run", " ", "simulations", " ", "with", " ", 
      RowBox[{"automixis", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"meannCA", "=", 
          RowBox[{
          "meannCAValues", "\[LeftDoubleBracket]", "imeannCA", 
           "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"meannAB", "=", 
          RowBox[{
          "meannABValues", "\[LeftDoubleBracket]", "imeannAB", 
           "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AutomixisMatrix", "=", 
          RowBox[{"N", "[", 
           RowBox[{"getAutomixisMatrixPoisson", "[", 
            RowBox[{"meannCA", ",", "meannAB", ",", "\"\<CentralFusion\>\""}],
             "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"p", "=", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
            ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"g", "=", "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{"meanw", "=", "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"meanw", "<", "wThresh"}], ")"}], " ", "&&", 
            RowBox[{"(", " ", 
             RowBox[{"g", "<", "maxgens"}], ")"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"p", "=", 
             RowBox[{"RecursionFiniteN", "[", 
              RowBox[{
              "p", ",", "AutomixisMatrix", ",", "mu", ",", "mu", ",", "sA", 
               ",", "hA", ",", "sB", ",", "hB", ",", "NN"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"g", "=", 
             RowBox[{"g", "+", "1"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"meanw", "=", 
             RowBox[{"getMeanFitness", "[", 
              RowBox[{"p", ",", "sA", ",", "hA", ",", "sB", ",", "hB"}], 
              "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"results", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"results", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<CentralFusion\>\"", ",", 
              RowBox[{"Round", "[", 
               RowBox[{
                RowBox[{"Log10", "[", "meannCA", "]"}], ",", "0.1"}], "]"}], 
              ",", 
              RowBox[{"Round", "[", 
               RowBox[{
                RowBox[{"Log10", "[", "meannAB", "]"}], ",", "0.1"}], "]"}], 
              ",", "sA", ",", "hA", ",", "sB", ",", "hB", ",", "mu", ",", 
              "NN", ",", "rep", ",", "g"}], "}"}]}], "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"imeannCA", ",", 
          RowBox[{"Length", "[", "meannCAValues", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"imeannAB", ",", 
          RowBox[{"Length", "[", "meannABValues", "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"run", " ", "simulations", " ", "with", " ", 
        RowBox[{"sex", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"meannAB", "=", 
          RowBox[{
          "meannABValues", "\[LeftDoubleBracket]", "imeannAB", 
           "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"SexTensor", "=", 
          RowBox[{"N", "[", 
           RowBox[{"getSexTensor", "[", 
            RowBox[{"meannCA", ",", "meannAB"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"p", "=", 
          RowBox[{"{", 
           RowBox[{
           "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
            ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"g", "=", "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{"meanw", "=", "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"meanw", "<", "wThresh"}], ")"}], " ", "&&", 
            RowBox[{"(", " ", 
             RowBox[{"g", "<", "maxgens"}], ")"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"p", "=", 
             RowBox[{"RecursionSexualFiniteN", "[", 
              RowBox[{
              "p", ",", "SexTensor", ",", "mu", ",", "mu", ",", "sA", ",", 
               "hA", ",", "sB", ",", "hB", ",", "NN"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"g", "=", 
             RowBox[{"g", "+", "1"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"meanw", "=", 
             RowBox[{"getMeanFitness", "[", 
              RowBox[{"p", ",", "sA", ",", "hA", ",", "sB", ",", "hB"}], 
              "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"results", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"results", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Sex\>\"", ",", 
              RowBox[{"Round", "[", 
               RowBox[{"Log10", "[", "meannCA", "]"}], "]"}], ",", 
              RowBox[{"Round", "[", 
               RowBox[{
                RowBox[{"Log10", "[", "meannAB", "]"}], ",", "0.1"}], "]"}], 
              ",", "sA", ",", "hA", ",", "sB", ",", "hB", ",", "mu", ",", 
              "NN", ",", "rep", ",", "g"}], "}"}]}], "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"imeannAB", ",", 
          RowBox[{"Length", "[", "meannABValues", "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"rep", ",", "10"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{"Export", "[", 
         RowBox[{
          RowBox[{"StringJoin", "[", 
           RowBox[{"filename", ",", "\"\< Rep\>\"", ",", " ", 
            RowBox[{"ToString", "[", "rep", "]"}], ",", "\"\<.tsv\>\""}], 
           "]"}], ",", "results"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "ClearMemory", ";"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"rep", ",", "500", ",", "1000"}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.612341270490143*^9, 3.612341312440858*^9}, {
   3.612341443691373*^9, 3.6123414791904907`*^9}, {3.612341602027923*^9, 
   3.612341629671208*^9}, {3.6123418236462097`*^9, 3.612341830157957*^9}, {
   3.612341951089752*^9, 3.6123420428526983`*^9}, {3.61234207695899*^9, 
   3.612342107486711*^9}, {3.612342157994946*^9, 3.612342164173675*^9}, {
   3.6123422839400454`*^9, 3.6123422965227013`*^9}, {3.6123424447895927`*^9, 
   3.6123425968041363`*^9}, {3.612342656419503*^9, 3.612342660235717*^9}, {
   3.612342732341763*^9, 3.612342774061243*^9}, {3.612342888488181*^9, 
   3.612342889067196*^9}, 3.61234292681419*^9, {3.612343005070539*^9, 
   3.612343011927772*^9}, {3.612343452151896*^9, 3.6123434585898046`*^9}, {
   3.612344667444006*^9, 3.612344668395142*^9}, {3.612344702446021*^9, 
   3.612344789691738*^9}, {3.612345520922344*^9, 3.6123455559900513`*^9}, {
   3.612559234143409*^9, 3.612559234421427*^9}, {3.61255949164211*^9, 
   3.612559499114627*^9}, {3.612559878986474*^9, 3.6125598877795877`*^9}, {
   3.6125616658275013`*^9, 3.6125617076431437`*^9}, {3.6125621558068523`*^9, 
   3.61256216251558*^9}, {3.6125640038128443`*^9, 3.612564088925879*^9}, {
   3.6125667769945087`*^9, 3.6125667919115477`*^9}, {3.612568528193511*^9, 
   3.6125685642937937`*^9}, 3.612733455178437*^9, {3.6127382499675198`*^9, 
   3.6127382773206882`*^9}, {3.61273831205966*^9, 3.612738373121983*^9}, {
   3.612814999543744*^9, 3.6128150049984713`*^9}, {3.6128197856259403`*^9, 
   3.6128198375377893`*^9}, {3.612823022590782*^9, 3.612823045118256*^9}, {
   3.612823128711104*^9, 3.612823136194489*^9}, {3.6137682475064363`*^9, 
   3.613768248629694*^9}, {3.613868189744665*^9, 3.6138682390142927`*^9}, {
   3.61386863122895*^9, 3.613868631935162*^9}, 3.615152958581355*^9, {
   3.670640154265607*^9, 3.670640168482545*^9}, 3.67064020835712*^9, {
   3.670640329682898*^9, 3.6706404077916107`*^9}, {3.670640484625889*^9, 
   3.6706405729054403`*^9}, {3.670640633675742*^9, 3.670640639136938*^9}, {
   3.670640746273157*^9, 3.670640770168084*^9}, {3.670813338522337*^9, 
   3.6708133789883137`*^9}, {3.6708135458743677`*^9, 3.670813562009759*^9}, {
   3.670813598762533*^9, 3.670813632282239*^9}, {3.670814176904147*^9, 
   3.670814185488801*^9}, {3.670814263002838*^9, 3.6708142723119373`*^9}, {
   3.67081487931046*^9, 3.670814916519958*^9}, {3.670816401435362*^9, 
   3.6708164182105513`*^9}, {3.6708166177617283`*^9, 3.67081663584802*^9}, {
   3.670816742906595*^9, 3.6708167951446753`*^9}, 3.673562549170751*^9, {
   3.673656805945684*^9, 3.6736568064633703`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</Users/janengelstaedter/dropbox/projects/RecAutomixis/Exploration \
Results\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.61376282622771*^9, 3.613762833147743*^9}, {
   3.613763002192108*^9, 3.6137630223277884`*^9}, {3.6137683121534157`*^9, 
   3.613768314297035*^9}, {3.614051813175742*^9, 3.61405183488795*^9}, {
   3.6151531206953793`*^9, 3.615153134822605*^9}, 3.670815075412462*^9, {
   3.670925113996955*^9, 3.6709251306597853`*^9}, 3.670925204301106*^9, {
   3.670925234681427*^9, 3.6709252383160963`*^9}, 3.670926546854744*^9, {
   3.67323456857314*^9, 3.6732346192611237`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"results1", "=", 
   RowBox[{"Import", "[", "\"\<expSpeedAdapt 11 Rep500.tsv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"results2", "=", 
   RowBox[{"Import", "[", "\"\<expSpeedAdapt 11 Rep1000.tsv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"results", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"results1", ",", 
     RowBox[{"Drop", "[", 
      RowBox[{"results2", ",", "1"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6709257310465717`*^9, 3.670925756780451*^9}, {
   3.670925880189115*^9, 3.670925910123434*^9}, {3.6709262888317823`*^9, 
   3.6709262939275303`*^9}, {3.6709264111123943`*^9, 3.6709264172774763`*^9}, 
   3.670926579484535*^9, {3.673234534528998*^9, 3.673234550560075*^9}, {
   3.673562553074543*^9, 3.673562553113082*^9}, {3.673661490270317*^9, 
   3.673661525885556*^9}, {3.673832834215199*^9, 3.673832835172619*^9}, 
   3.674249168710086*^9, {3.6742672478889303`*^9, 3.674267272048318*^9}, {
   3.674267328744196*^9, 3.6742673433677177`*^9}, 3.674267692535987*^9, {
   3.67623553720238*^9, 3.676235538816593*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"results", "=", 
   RowBox[{"results", "/.", 
    RowBox[{"{", 
     RowBox[{"\"\<-Infinity\>\"", "\[Rule]", 
      RowBox[{"-", "\[Infinity]"}]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LogmeannCAValues", "=", 
   RowBox[{"Round", "[", 
    RowBox[{
     RowBox[{"Log10", "[", "meannCAValues", "]"}], ",", "0.1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LogmeannABValues", "=", 
   RowBox[{"Round", "[", 
    RowBox[{
     RowBox[{"Log10", "[", "meannABValues", "]"}], ",", "0.1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanAutomixisGens", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "LogmeannCAValues", "\[LeftDoubleBracket]", "inCA", 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{
         "LogmeannABValues", "\[LeftDoubleBracket]", "inAB", 
          "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"N", "[", 
          RowBox[{"Mean", "[", 
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{"results", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "\[LeftDoubleBracket]", 
                 RowBox[{"1", ";;", "3"}], "\[RightDoubleBracket]"}], 
                "\[Equal]", 
                RowBox[{"{", 
                 RowBox[{"\"\<CentralFusion\>\"", ",", 
                  RowBox[{
                  "LogmeannCAValues", "\[LeftDoubleBracket]", "inCA", 
                   "\[RightDoubleBracket]"}], ",", 
                  RowBox[{
                  "LogmeannABValues", "\[LeftDoubleBracket]", "inAB", 
                   "\[RightDoubleBracket]"}]}], "}"}]}], "&"}]}], "]"}], 
            "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "11"}], "\[RightDoubleBracket]"}], "]"}], 
          "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"inCA", ",", "1", ",", 
         RowBox[{"Length", "[", "LogmeannCAValues", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"inAB", ",", "1", ",", 
         RowBox[{"Length", "[", "LogmeannABValues", "]"}]}], "}"}]}], "]"}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanSexGens", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "LogmeannCAValues", "\[LeftDoubleBracket]", "inCA", 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{
         "LogmeannABValues", "\[LeftDoubleBracket]", "inAB", 
          "\[RightDoubleBracket]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"N", "[", 
          RowBox[{"Mean", "[", 
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{"results", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "\[LeftDoubleBracket]", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "3"}], "}"}], "\[RightDoubleBracket]"}], 
                "\[Equal]", 
                RowBox[{"{", 
                 RowBox[{"\"\<Sex\>\"", ",", 
                  RowBox[{
                  "LogmeannABValues", "\[LeftDoubleBracket]", "inAB", 
                   "\[RightDoubleBracket]"}]}], "}"}]}], "&"}]}], "]"}], 
            "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "11"}], "\[RightDoubleBracket]"}], "]"}], 
          "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"inCA", ",", "1", ",", 
         RowBox[{"Length", "[", "LogmeannCAValues", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"inAB", ",", "1", ",", 
         RowBox[{"Length", "[", "LogmeannABValues", "]"}]}], "}"}]}], "]"}], 
     ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Log2meanRelativeGens", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"meanAutomixisGens", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
      RowBox[{"meanAutomixisGens", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
      RowBox[{"Log2", "[", 
       RowBox[{
        RowBox[{"meanAutomixisGens", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}], "/", 
        RowBox[{"meanSexGens", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}]}], "]"}]}], 
     "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.670814005664603*^9, {3.670922494557513*^9, 3.6709225474724607`*^9}, {
   3.6709225820499573`*^9, 3.6709226024571*^9}, {3.670922632723387*^9, 
   3.6709226663040237`*^9}, {3.670922720335682*^9, 3.670922738688917*^9}, {
   3.670922769415168*^9, 3.670923019328763*^9}, {3.67092374185922*^9, 
   3.6709237424665747`*^9}, {3.670925053026424*^9, 3.670925053889236*^9}, 
   3.6760843690435057`*^9, {3.676235667838407*^9, 3.676235701528483*^9}, {
   3.676235733760468*^9, 3.676235737491727*^9}, {3.676236583268302*^9, 
   3.6762366411218367`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{"meanAutomixisGens", "\[IndentingNewLine]", "meanSexGens", "\
\[IndentingNewLine]", "Log2meanRelativeGens"}], "Input",
 CellChangeTimes->{{3.676236797569659*^9, 3.676236801480673*^9}, {
  3.6762372095184603`*^9, 3.676237209983079*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "778.2837162837163`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], ",", 
     RowBox[{"-", "8.`"}], ",", "788.2067932067932`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], ",", 
     RowBox[{"-", "6.`"}], ",", "782.5124875124875`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], ",", 
     RowBox[{"-", "4.`"}], ",", "711.3506493506494`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], ",", 
     RowBox[{"-", "2.`"}], ",", "624.2527472527472`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], ",", "0.`", ",", "604.7372627372628`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "8.`"}], ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "787.0749250749251`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "8.`"}], ",", 
     RowBox[{"-", "8.`"}], ",", "783.4125874125874`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "8.`"}], ",", 
     RowBox[{"-", "6.`"}], ",", "771.8591408591409`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "8.`"}], ",", 
     RowBox[{"-", "4.`"}], ",", "709.8761238761239`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "8.`"}], ",", 
     RowBox[{"-", "2.`"}], ",", "632.3876123876124`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "8.`"}], ",", "0.`", ",", "592.2617382617383`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6.`"}], ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "772.5144855144855`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6.`"}], ",", 
     RowBox[{"-", "8.`"}], ",", "772.1678321678322`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6.`"}], ",", 
     RowBox[{"-", "6.`"}], ",", "767.7932067932068`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6.`"}], ",", 
     RowBox[{"-", "4.`"}], ",", "700.3876123876124`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6.`"}], ",", 
     RowBox[{"-", "2.`"}], ",", "623.7642357642358`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6.`"}], ",", "0.`", ",", "600.992007992008`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.`"}], ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "577.8411588411589`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.`"}], ",", 
     RowBox[{"-", "8.`"}], ",", "576.7782217782218`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.`"}], ",", 
     RowBox[{"-", "6.`"}], ",", "566.9410589410589`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.`"}], ",", 
     RowBox[{"-", "4.`"}], ",", "557.4635364635365`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.`"}], ",", 
     RowBox[{"-", "2.`"}], ",", "521.5114885114886`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.`"}], ",", "0.`", ",", "493.56243756243754`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.`"}], ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "349.72127872127874`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.`"}], ",", 
     RowBox[{"-", "8.`"}], ",", "348.43956043956047`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.`"}], ",", 
     RowBox[{"-", "6.`"}], ",", "345.01898101898104`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.`"}], ",", 
     RowBox[{"-", "4.`"}], ",", "347.7842157842158`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.`"}], ",", 
     RowBox[{"-", "2.`"}], ",", "334.02897102897106`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.`"}], ",", "0.`", ",", "320.1928071928072`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "279.34065934065933`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     RowBox[{"-", "8.`"}], ",", "279.04995004995004`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     RowBox[{"-", "6.`"}], ",", "276.23676323676324`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     RowBox[{"-", "4.`"}], ",", "276.5564435564436`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     RowBox[{"-", "2.`"}], ",", "283.3686313686314`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "277.04695304695304`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6762356328083563`*^9, 3.6762357120178843`*^9, {3.67623574801507*^9, 
   3.6762357520704737`*^9}, 3.676235786776703*^9, 3.676236674770027*^9, 
   3.6762368018509083`*^9, 3.676237210935309*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "443.20479520479523`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], ",", 
     RowBox[{"-", "8.`"}], ",", "445.2297702297702`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], ",", 
     RowBox[{"-", "6.`"}], ",", "446.54045954045955`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], ",", 
     RowBox[{"-", "4.`"}], ",", "428.98101898101896`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], ",", 
     RowBox[{"-", "2.`"}], ",", "356.87312687312686`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], ",", "0.`", ",", "332.31968031968034`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "8.`"}], ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "443.20479520479523`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "8.`"}], ",", 
     RowBox[{"-", "8.`"}], ",", "445.2297702297702`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "8.`"}], ",", 
     RowBox[{"-", "6.`"}], ",", "446.54045954045955`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "8.`"}], ",", 
     RowBox[{"-", "4.`"}], ",", "428.98101898101896`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "8.`"}], ",", 
     RowBox[{"-", "2.`"}], ",", "356.87312687312686`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "8.`"}], ",", "0.`", ",", "332.31968031968034`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6.`"}], ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "443.20479520479523`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6.`"}], ",", 
     RowBox[{"-", "8.`"}], ",", "445.2297702297702`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6.`"}], ",", 
     RowBox[{"-", "6.`"}], ",", "446.54045954045955`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6.`"}], ",", 
     RowBox[{"-", "4.`"}], ",", "428.98101898101896`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6.`"}], ",", 
     RowBox[{"-", "2.`"}], ",", "356.87312687312686`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6.`"}], ",", "0.`", ",", "332.31968031968034`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.`"}], ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "443.20479520479523`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.`"}], ",", 
     RowBox[{"-", "8.`"}], ",", "445.2297702297702`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.`"}], ",", 
     RowBox[{"-", "6.`"}], ",", "446.54045954045955`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.`"}], ",", 
     RowBox[{"-", "4.`"}], ",", "428.98101898101896`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.`"}], ",", 
     RowBox[{"-", "2.`"}], ",", "356.87312687312686`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.`"}], ",", "0.`", ",", "332.31968031968034`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.`"}], ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "443.20479520479523`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.`"}], ",", 
     RowBox[{"-", "8.`"}], ",", "445.2297702297702`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.`"}], ",", 
     RowBox[{"-", "6.`"}], ",", "446.54045954045955`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.`"}], ",", 
     RowBox[{"-", "4.`"}], ",", "428.98101898101896`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.`"}], ",", 
     RowBox[{"-", "2.`"}], ",", "356.87312687312686`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.`"}], ",", "0.`", ",", "332.31968031968034`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "443.20479520479523`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     RowBox[{"-", "8.`"}], ",", "445.2297702297702`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     RowBox[{"-", "6.`"}], ",", "446.54045954045955`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     RowBox[{"-", "4.`"}], ",", "428.98101898101896`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     RowBox[{"-", "2.`"}], ",", "356.87312687312686`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "332.31968031968034`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6762356328083563`*^9, 3.6762357120178843`*^9, {3.67623574801507*^9, 
   3.6762357520704737`*^9}, 3.676235786776703*^9, 3.676236674770027*^9, 
   3.6762368018509083`*^9, 3.676237210948358*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "10"}], ",", 
     RowBox[{"-", "10"}], ",", "0.8123226819630884`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "10"}], ",", 
     RowBox[{"-", "8.`"}], ",", "0.8240241219633128`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "10"}], ",", 
     RowBox[{"-", "6.`"}], ",", "0.8093228760343287`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "10"}], ",", 
     RowBox[{"-", "4.`"}], ",", "0.7296470749274233`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "10"}], ",", 
     RowBox[{"-", "2.`"}], ",", "0.806718997081113`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "10"}], ",", "0.`", ",", "0.8637367443268269`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "8.`"}], ",", 
     RowBox[{"-", "10"}], ",", "0.8285274881171089`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "8.`"}], ",", 
     RowBox[{"-", "8.`"}], ",", "0.8152222473316708`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "8.`"}], ",", 
     RowBox[{"-", "6.`"}], ",", "0.7895466902487777`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "8.`"}], ",", 
     RowBox[{"-", "4.`"}], ",", "0.7266534761673715`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "8.`"}], ",", 
     RowBox[{"-", "2.`"}], ",", "0.8253978393472913`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "8.`"}], ",", "0.`", ",", "0.8336631536013244`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6.`"}], ",", 
     RowBox[{"-", "10"}], ",", "0.8015884948740067`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6.`"}], ",", 
     RowBox[{"-", "8.`"}], ",", "0.7943643926077665`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6.`"}], ",", 
     RowBox[{"-", "6.`"}], ",", "0.7819268966524282`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6.`"}], ",", 
     RowBox[{"-", "4.`"}], ",", "0.7072397527852778`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6.`"}], ",", 
     RowBox[{"-", "2.`"}], ",", "0.8055895683193607`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6.`"}], ",", "0.`", ",", "0.8547740725943969`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.`"}], ",", 
     RowBox[{"-", "10"}], ",", "0.3826994782219109`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.`"}], ",", 
     RowBox[{"-", "8.`"}], ",", "0.3734666302348582`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.`"}], ",", 
     RowBox[{"-", "6.`"}], ",", "0.3444078565868788`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.`"}], ",", 
     RowBox[{"-", "4.`"}], ",", "0.37796362727370036`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.`"}], ",", 
     RowBox[{"-", "2.`"}], ",", "0.5472877664033399`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.`"}], ",", "0.`", ",", "0.5706608692722156`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.`"}], ",", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"-", "0.34176791135191753`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.`"}], ",", 
     RowBox[{"-", "8.`"}], ",", 
     RowBox[{"-", "0.35364163043500396`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.`"}], ",", 
     RowBox[{"-", "6.`"}], ",", 
     RowBox[{"-", "0.3721151659462607`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.`"}], ",", 
     RowBox[{"-", "4.`"}], ",", 
     RowBox[{"-", "0.30272135726492366`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.`"}], ",", 
     RowBox[{"-", "2.`"}], ",", 
     RowBox[{"-", "0.09543803211975935`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.`"}], ",", "0.`", ",", 
     RowBox[{"-", "0.05363083393698544`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"-", "0.6659479106305513`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     RowBox[{"-", "8.`"}], ",", 
     RowBox[{"-", "0.6740266733731141`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     RowBox[{"-", "6.`"}], ",", 
     RowBox[{"-", "0.6928855642125042`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     RowBox[{"-", "4.`"}], ",", 
     RowBox[{"-", "0.6333398584086422`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     RowBox[{"-", "2.`"}], ",", 
     RowBox[{"-", "0.33273120603437617`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", 
     RowBox[{"-", "0.26244123305456574`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6762356328083563`*^9, 3.6762357120178843`*^9, {3.67623574801507*^9, 
   3.6762357520704737`*^9}, 3.676235786776703*^9, 3.676236674770027*^9, 
   3.6762368018509083`*^9, 3.6762372109587727`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"max", "=", "3.5"}], 
  RowBox[{"(*", 
   RowBox[{"Log2", "[", "16", "]"}], "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"min", "=", 
   RowBox[{"-", "3.5"}]}], 
  RowBox[{"(*", 
   RowBox[{"Log2", "[", 
    RowBox[{"1", "/", "16"}], "]"}], "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Log2meanRelativeGens", "=", 
    RowBox[{"Log2meanRelativeGens", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "\[Infinity]"}], "\[Rule]", 
       RowBox[{"-", "10"}]}], "}"}]}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"so", " ", "it", " ", "can", " ", "be", " ", "plotted"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nTickMarks", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "10"}], ",", "\"\<0\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "8"}], ",", 
       "\"\<\!\(\*SuperscriptBox[\(10\), \(-8\)]\)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "6"}], ",", 
       "\"\<\!\(\*SuperscriptBox[\(10\), \(-6\)]\)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4"}], ",", 
       "\"\<\!\(\*SuperscriptBox[\(10\), \(-4\)]\)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "\"\<0.01\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "\"\<1\>\""}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RedBlueColourFunction", "[", "x_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"x", ">", "0"}], ",", 
     RowBox[{"Hue", "[", 
      RowBox[{"0", ",", 
       RowBox[{"x", "/", "max"}], ",", "1"}], "]"}], ",", 
     RowBox[{"Hue", "[", 
      RowBox[{"0.7", ",", 
       RowBox[{"x", "/", "min"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot", "=", 
   RowBox[{"ListDensityPlot", "[", 
    RowBox[{"Log2meanRelativeGens", ",", " ", 
     RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"min", ",", "max"}], "}"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"RedBlueColourFunction", "[", "#", "]"}], "&"}], ")"}]}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "18"}], "]"}]}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"nTickMarks", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"nTickMarks", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\!\(\*OverscriptBox[\(m\), \(_\)]\)\>\"", ",", "26"}],
            "]"}], ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*OverscriptBox[\(n\), \(_\)]\)\>\"", ",", "26", ",", 
            "Black"}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Additive, with drift\>\"", ",", "26", ",", "Black"}], 
           "]"}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"legend", "=", 
   RowBox[{"ContourPlot", "[", 
    RowBox[{"y", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "min", ",", "max"}], "}"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"None", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"N", "[", 
               RowBox[{"2", "^", "i"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"RedBlueColourFunction", "[", "#", "]"}], "&"}], ")"}]}], ",", 
     RowBox[{"Contours", "\[Rule]", "200"}], ",", 
     RowBox[{"ContourStyle", "\[Rule]", "None"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "15"}], ",", 
     RowBox[{"Frame", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"True", ",", "True"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"True", ",", "True"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\< \>\"", ",", "30"}], "]"}], ",", "None"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"75", ",", "300"}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", "18"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"plot", ",", "legend"}], "}"}], "}"}], ",", 
   RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.612562402232574*^9, 3.612562404017359*^9}, {
   3.612562444478538*^9, 3.612562509022326*^9}, 3.612562796441002*^9, 
   3.612562859811529*^9, {3.612575309222662*^9, 3.612575356548065*^9}, {
   3.6125755028281937`*^9, 3.6125755070533953`*^9}, {3.612575550958946*^9, 
   3.612575579770131*^9}, {3.612575648049129*^9, 3.612575650328463*^9}, 
   3.612575814580227*^9, {3.6125759095450897`*^9, 3.61257591375079*^9}, {
   3.6125759577881002`*^9, 3.612576070117469*^9}, {3.6125761106254997`*^9, 
   3.612576128068851*^9}, {3.612576187803419*^9, 3.61257620606968*^9}, {
   3.612576272730712*^9, 3.61257627868919*^9}, {3.6125763836613483`*^9, 
   3.6125763873903713`*^9}, {3.670924017236309*^9, 3.6709240756213284`*^9}, 
   3.670924106163354*^9, {3.670924446792903*^9, 3.670924545418374*^9}, {
   3.670924586676825*^9, 3.670924625989826*^9}, {3.67092470274618*^9, 
   3.670924740679989*^9}, {3.670924778176785*^9, 3.670924851773326*^9}, {
   3.670924909678256*^9, 3.670924912516374*^9}, {3.670924984882382*^9, 
   3.670925001371386*^9}, 3.670926622717641*^9, {3.670926913899651*^9, 
   3.670926916539022*^9}, {3.673235478853794*^9, 3.673235491229218*^9}, {
   3.673235544436802*^9, 3.673235584172956*^9}, {3.674436437212995*^9, 
   3.674436455083445*^9}, {3.674436494852502*^9, 3.674436520894643*^9}, {
   3.674443012367552*^9, 3.674443023750718*^9}, {3.67623683573079*^9, 
   3.676236847809246*^9}, {3.6762370627543983`*^9, 3.676237131336328*^9}, {
   3.676237281584243*^9, 3.676237284678545*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Competition between two different subpopulations", "Section",
 CellChangeTimes->{{3.682428910474852*^9, 3.682428928815146*^9}}],

Cell[CellGroupData[{

Cell["Overdominance", "Subsection",
 CellChangeTimes->{{3.6824304467123404`*^9, 3.682430459242393*^9}}],

Cell["\<\
With central fusion, reduced numbers of COs are favoured:\
\>", "Text",
 CellChangeTimes->{{3.682481689336076*^9, 3.682481709785893*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p0", "=", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.5", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0", ",", "0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q0", "=", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.5", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0", ",", "0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", "1.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meann1", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meann2", "=", "0.02"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gens", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pq", "=", 
   RowBox[{"SimulateCompetition", "[", 
    RowBox[{
    "p0", ",", "q0", ",", "gens", ",", "meann1", ",", "meann1", ",", "meann2",
      ",", "meann2", ",", "\"\<CentralFusion\>\"", ",", 
     "\"\<CentralFusion\>\"", ",", "mu", ",", "mu", ",", "s", ",", "h", ",", 
     "s", ",", "h"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Total", "[", 
     RowBox[{"pq", ",", 
      RowBox[{"{", "3", "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Frequency of Type 1\>\"", ",", "None"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Time\>\"", ",", "None"}], "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.682428940389173*^9, 3.682429126377428*^9}, {
  3.682429176992038*^9, 3.682429179045741*^9}, {3.6824294257579536`*^9, 
  3.682429436909027*^9}, {3.682429554076646*^9, 3.6824296089499493`*^9}, {
  3.6824304665623083`*^9, 3.682430556097274*^9}, {3.6824308618791037`*^9, 
  3.682430895933003*^9}, {3.68247931411695*^9, 3.6824793142029657`*^9}, {
  3.682479459099024*^9, 3.682479461579863*^9}, {3.682479943316889*^9, 
  3.6824799439588547`*^9}, {3.682480312578998*^9, 3.68248032886769*^9}, {
  3.68248044491337*^9, 3.6824804498857527`*^9}, {3.6824804811554403`*^9, 
  3.682480481908496*^9}, {3.6824805596107492`*^9, 3.6824805706334467`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], LineBox[CompressedData["
1:eJw91Xk41HvYBnCVSjlKu6TSSruiqEPuihZtlOzLoBBh7DuzYBYzQ6WSytam
XYq0iNKCliNRUkpFicq0a5HX+76/Z/rH9bm+Hvfcc1/XORPcAzZs6a2kpPSu
j5LS//78/39y0///2cT8VEL3//17wVgFKSMebD3fi97VofpnSL9mZfJwDA07
/9ZlAFkDc/jJuX8GkbVgIa19mzGCrA1drlKA1ljyRNjXztHwnkKeDNav2kXe
s8lT4bs1cuRAI7IuphboupgsJU/HrMEN9V/WkGdis6Fw6AQ78mxYux3WvORB
1sNpK9u1hQHkubCThk0ZGEOeh7rrxSPOCsn6sNS47nVwF9kA00+P1n6aS56P
k3/nvNmQT14AnWX3OvpeJRvixCLnjo47ZCM0xh5RVmsgL4SWZ8oZ+1byIgwR
596o+U7+F63lQzxC+75kbAxV9Hq/eDjZBBGF73/NnERejJw+Sq4m88imOLJh
6Qj/JWRgXmH4shJLxhzglGuO/jQWvS/BkS/9LfMD6H0JvppeHW8VT+9LkWMm
XTYwhd6XYr+DcXBDJr0vQ7n29Oiy0/S+DLMtZy66fJXezRD+6lRW5X16N0P2
YOXjbc/p3Rwr9n/ZPLaD3s2xpJzVyuqm9+UwvDzZ9vzgV8z7crwIU34+Upux
0gp03LpRINCj9xVIibEb1m8Jva/EvR1TzLdb0ftK6JS5pOm60/sqDJoQsPFO
EL2vQvSn0IYIPr1b4KSwOkkvjd4tcK47/9KnQ/S+GjLNsmeXC+l9NYoMKm1l
t+h9DQ6ODMjwfkzva9B2sXWkRSu9r0XB2JtL5/2k97UI9yzcrT3wNfO+DloZ
TrLhYxhz1iHHaXKe2kx6X4+wSSO3qJrQ+3qs21y8Um0dvVtCa0NH/VBXxrDE
/VtNB8aw6fctMbLP0wk6XMZllrjx3eSTwQ66t8K3u54ZZgfp3gqhcQdObTpP
91YQ6yuXeN2keyuMNBM6RT2i+w2wPl47QfqW7jdg4jXzQ1mddL8Bt6Y/jzk7
oJm534Be14yXX9dkrLQRG4J27n8wgzE2QvAlc+wLY8acjVCak+XdtpbuN+KE
s+W4Ly50b43UC81NnQF0b43GE383/ubQvTW+bz+h9Ws73Vtjyy2Xl19z6X4T
Bul+WNV+ju43wbxd2P3sBt1vwoiLJScr6+h+EyKH+nXlv6F7G9R1VGXu+EH3
Nni4y8HUX6WFubfBtr3tsmWjGZfZ4KransVDpzNWskXIoytKDYsYwxZizV6i
jNV0bwvNh6skG53o3hZ3gq6UKfvRvR14uZcbT8XSvR2c1Vv2rZPRvR281g0u
fJNJ93bIurqiOfQM3dtDS1zd8ruU7u2RkjMuPKKa7u2hc/OxTXsT3dtjx45q
M+tPdO+A7D0De5/r9Ya5d8AU7wLL/kMZcxxgVjT2q+VExmUO+OpbmZ8yj7GS
I1Ru2q4pX0r3jrjpLZO2b6B7R4TxrI1VPOjeEfz6/Amjg+neCdNf3u4/jk/3
TqisfXJx5E66d8KQEij3OUj3Tmjl+J9/VUD3zjj9vi298DrdOyOtyIobXUP3
zvgYZ7nY4BXdO2Pt3UM5Lz7RvQvG9dGMi+31lrl3gYq94KjaEMYcF2SU3/uc
os24zKXnv5d185X1GCu5om+LdIWPKd27Ypvv2+5r6+jeFbM96gxVXejeFRNe
rKo096N7Fia266cExjDWZmGdY+wWWTL9PRaG7VGZtj+DMYsFVdbpCxnH6O+z
UJ/2r1xUzDibhQly/4KttymPhT3l358vfMS4iYWDZ/xtfzVTvhssbZ3/Hv9C
+W7oO2TehdW9W5l8N6ilLfV8ps6Y5YbBByvkTuMZc9xw5twL43uzGGe7IWkn
b+4sY8ZlbsgZKCqKsWDc5AZp9OHzl+0YK7nDhes+os2TsbY7cpK1y/uHUr47
9kQMOzacT/nuuDoL59S3U747Ps+Ouv87k/LdYWXg1lp3kvLd0b/UpSPzEuW7
Q/fUwRqbCsr3wOu7U3hddZTvgREBBz7ueE35Htj5kzdg1CfK94BO5D83RX8p
3wP79WcMb1d9x+R7oHGhqG3RaMZlHmD/SjKOnMq4yQPOtUbdh/UZK23G1eOb
da+BsfZmTIqMP121ljE2437rceF1B8aszVj0tuB0nhdjzmbkmqiOjg2h/M3Q
m36vzJRL+Zux59f5LLmU8jfDNW98fkoG5W+BRrjKB62jlL8F4Wn9NqSfo/wt
EF2yeNqrjPK3YHnt/kT7u5S/BRaH7Ndl1VP+Fpj4s/UfNlP+FhTlsvS/ySl/
C1qlhmv7dlG+J8YMkHH6DGhj8j0xY07SvY7hjOGJX8MqDaq0GbM8MSk+4cKO
mYw5nmg95m27yohxticilY6M/LiMcZknit60/eCsZ9zkiWCO299ejoyVvBAe
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
C3NW7J+C1QmnVVx7/D/f/7bl
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0.49999999999999994`},
  Frame->True,
  FrameLabel->{{
     FormBox["\"Frequency of Type 1\"", TraditionalForm], None}, {
     FormBox["\"Time\"", TraditionalForm], None}},
  Method->{},
  PlotRange->{{0, 1001.}, {0.49999999999999994`, 0.9999232453884671}},
  PlotRangeClipping->True,
  PlotRangePadding->{{20.02, 20.02}, {0.009998464907769343, 
   0.009998464907769343}}]], "Output",
 CellChangeTimes->{
  3.682429133457519*^9, 3.682429190839446*^9, 3.6824293237760267`*^9, {
   3.682429392377225*^9, 3.6824294374567833`*^9}, {3.6824295476007757`*^9, 
   3.682429610643045*^9}, {3.6824304799331417`*^9, 3.682430556992875*^9}, {
   3.682430883684927*^9, 3.68243089660667*^9}, 3.6824793158245163`*^9, 
   3.6824794628911457`*^9, 3.682479881646873*^9, 3.682479946796081*^9, 
   3.682480060226469*^9, 3.682480158995685*^9, {3.6824802877578506`*^9, 
   3.682480330355023*^9}, {3.682480438126573*^9, 3.682480451163794*^9}, 
   3.682480483401319*^9, {3.682480563850212*^9, 
   3.682480572325397*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
KrkMXX71dRQXkh4KhSmezKKw0LiUvR//H9W2y9Tgex9vntXzMdYaQeHNJhMR
6dn6Yly+ZlvEGteVV5Rpm61mdkN1F1zyF4ReRBZBnEpoUz6rjveJaEi5tW7o
REAjY/t7akOga1EyGBA+YpZSaXWGTJAQlYGeDd3XVBu2Pfp8k/CAnPTJQj68
KpkIO81NB05qXA8/LP2XhQuXeOLSW1SteoXKNRSzVSmdLnCYb5MMXcmLlHrq
bw92x7O3N452vUSpeEyYsChLX7XVccWhE4/vvvueJw7Ns2ZJKthACNVf6kyq
L4ICSCvPNK7Fi6U4zJ0z3xNXdxVD+kJUaHR6TnQW5cHTSqtHQ6ytniKyP+bo
HinYw3SZpiEalAjLeFhbRuCL+UNUVmF+OZfHeRydreqlVCM0oqCzcHsNMqwO
ZUN8lNcnvY5JdcDSR6EwlIcsE27aUX9Dte280xTdsecgqMU6TsYpGosJ1DHx
c5LPRMbNeUgURCe8UE9TJQOhblI2laNGuy1Qt8XPSeGYtqi3EL1Zq2FhuKGe
loYdCLW0Bn1WLRBXBcPdbWmvgj+8QLgtcNdnNZHe7bNRezjTp9dUqyFPt5m3
cHpxtjdVbSvaVh04R6fHmqy0fbY8oabz8cdfYe+nrrdZXejs5WMhx2q5ux7F
CokFwijaVUUOq9GgOTw99ZVkkPyxoo3cb6o2FCz0hc+7D0KuTIsJY6lc7nFV
qyHPsa2k2O+W3tNZEnn2nc/PWes7NJ2oLPjFzy6ht99eNiCdoKIjVI1gSSql
3mlKp+KC4hjwaTLdsn6GTBTgKMlxI3Pp0nc4wXPrLU97kqmtS6Oc7/Nt5i1o
Kel0zwrqaeVZlgfoe4qDtDwiX7P/ftd1JzhkuijNPYj/o3nllhXU9Mhycz5x
ac1if0u1Pffca7xSTMnOboNMqavfZCTPJWM4pvsIVuYzBerqoBZPe7rWsZL9
bdV28IHX0xm/v7vL0F0HIdvV/5Kz7Zho1OnWIk7MBCMUFwYlLtwRPzviZTdi
78hXabOfXERLlrztSewg3puk1J6UnFBkEkrz49L24Z0QmjWZKbmRyYmQX86k
zJVlTzKHdfz+V7X97aIHaKcdeuopdvFixTg1Slkq1uXdCVox14s5KvdmShzw
6bqL++970RNfnwcTHi5M/I5qO+nE2/pdtJ29x1fChkIoQYViQYyvUCiItlSM
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\
\>"]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Mutation-selection balance", "Subsection",
 CellChangeTimes->{{3.6824304467123404`*^9, 3.682430459242393*^9}, {
  3.682430589340241*^9, 3.682430596635934*^9}}],

Cell["\<\
With central fusion, increased numbers of COs are favoured (but only weakly \
so):\
\>", "Text",
 CellChangeTimes->{{3.682481689336076*^9, 3.682481737047914*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p0", "=", 
   RowBox[{"{", 
    RowBox[{
    "0.5", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0", ",", "0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q0", "=", 
   RowBox[{"{", 
    RowBox[{
    "0.5", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0", ",", "0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"-", "0.1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meannCA1", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meannCA2", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gens", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pq", "=", 
   RowBox[{"SimulateCompetition", "[", 
    RowBox[{
    "p0", ",", "q0", ",", "gens", ",", "meannCA1", ",", "0", ",", "meannCA2", 
     ",", "0", ",", "\"\<CentralFusion\>\"", ",", "\"\<CentralFusion\>\"", 
     ",", "mu", ",", "0", ",", "s", ",", "h", ",", "0", ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Total", "[", 
     RowBox[{"pq", ",", 
      RowBox[{"{", "3", "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Frequency of Type 1\>\"", ",", "None"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Time\>\"", ",", "None"}], "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.682428940389173*^9, 3.682429126377428*^9}, {
   3.682429176992038*^9, 3.682429179045741*^9}, {3.6824294257579536`*^9, 
   3.682429436909027*^9}, {3.682429554076646*^9, 3.6824296089499493`*^9}, {
   3.6824304665623083`*^9, 3.682430556097274*^9}, {3.6824306287125883`*^9, 
   3.682430685207795*^9}, {3.6824309084057217`*^9, 3.6824309319581614`*^9}, {
   3.682479539585091*^9, 3.682479539784338*^9}, 3.682479639483512*^9, {
   3.6824806312106533`*^9, 3.6824806812462273`*^9}, {3.6824808006346083`*^9, 
   3.682480821118685*^9}, {3.68248091882507*^9, 3.6824809403187*^9}, {
   3.682480975519238*^9, 3.6824810212089243`*^9}, 3.682481062197887*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], LineBox[CompressedData["
1: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
CbpC9++ApXyR+vWrdP8OZPiaSg+7TvfvwMrZDm9tbtD9O+DFrrt24CbdvwMm
yeL9bbfo/h2wEp8InldJ93vgekPnuvAqut8Dzp+3Ta+spvs9kNfS2qdQQ/d7
wHBn+CP7u3S/B1piFA8fqqX7PXD4rMD/yz263wMqbwYtN3hA93vAdLOVfHQd
3b8TvHseT2se0v07IbVsdY7SY7p/J3Lkm522PqH7d2LJB+0phU/p/p3wuz32
Xeczul/y+37k5xrV0/07ofbv2ub4F3T/Tkwv9lB68JLu98RkFXaNSgPd74nM
uLn7tr+m+z2hGbR8TlEj3e+JF8fKX/9sovs9YTg0M3nZG7rfE3Vll+Ylv6X7
PXH138IXj97R/Z5w3tgfrvqB7t+F8a6DJrq30P27sKhr5aVTrXT/Lgz7XWbb
00b378KbaJsO4090/y6sr1VOSPtM9+9C4uzfKs/a6f5dYE/6VjjpK92/C+3z
u/V3fqP7vSCtKn/tbAfd74Wb+Zqr/3XS/V7YUmR01+QH3e+FLj0Ly8wuut8L
/lZraup/0v1e8NZcbKLxm+73wuDOkZd3ddP9Xvg16M7c0h66fzdCKjcf6vtD
9+9G3NFbI03/0f278WR2Xzi7l+7fjdHfpT+87KP7d0ONf89MU+oNc/9u6N23
O7F7AMPXdmP95oNDzksz3LwbAcNyXKVkGJbyRm+52SWzQQyre0PJ/JAiR5Zh
eEPl9CHnBjmGnbwh3WpyauoQhqO88b0rrsd7KN3vjaMfN6N8GN3vDbnG27ED
htP93ij4cfmm+Qi6fw922CyT4irQ/XsgN89k4WtFun8Pqm7XeGuNovv3YID1
3dw9o+n+PXgx1vhBuRLdvwfvPWf8GaBM9+9BQ07kZIuxdP8eWMktMeGq0P0+
2Dpkq9vrcQwr+sBHrjFaawJ9Hh989yzP3qPKsK4Ppua3nSpXo8/ng0eTPK8P
mMSwtQ9UNxs+MFenz+sDswdrX3AmM+zjA87fwqYGDfr8Pvix3fjtVE2GWT74
mar8xnsq7fFBhtTkhvNaDJ+WfJ41Wx5LadM+H/jKVFWaTWe4TnLfefuyrBm0
1wdp/xTzX81kuMMHvV5tyZqzaL8vvh56tXv3bNrvi0nLWtaUzaH9vjjWOHBG
vy7t98UrTV1p03m03xc6Ze7PWPNpvy9GLzx05IUe7fdFz8Y3fhoLaL8vtM+r
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
rVdh2DAHfvIXa+6PY3hxDhpfXjxxazzDyEGCcV5wxQSGV+bgfoLn3NOqDJvm
oPKz8rMCNYYtczClrMBdPJFh6xz8HxrrPKym9m3jeMqQJMND5hBSqZAQkrNB
KpmSZCYzUUiSIkWhJIpo2PO8tySUyJQkSUJISJJUMpTMQ+/6He99/fk58uy9
9lr3ub6P7QjDN/EDmb1SoXN07fSoQcw+qRhudYq/azDz4lTUuKleBRgzL0+F
hUVypzVDmFelYv+AdUMWDWVelwrTtf8Nnz2M2S8VDZ4phlNNmANS4T6itWnC
cObAVKyeZJ9jZcocnIp/JfP9hpgxh6Yiwnp6p97mzOGp+JHZ64T+COZ9qfiP
l6vfxoL5AHf9jhP8v5JjU2H5MfZKvSVzfCquNWV9f2nFnJiK/mlZAx6OZD7J
Xb9DzMiCUcypqVg30sby0mhmAXfeLmUYplszS1LxaIxWo3AMsyIV4z8PPn3c
hlmTillOPRceHMuckYqivc+aQ8cxn+fOX5vNOwLGM19MxS/Dh+9W2jLnpmJ2
33bO8ycwX0+Fo2/7WPeJzPmpuOjy+NrkScyFqZgwaMurUXbMxan4OO1Zw5DJ
zKWpkPfqXG1oT/tPxYP6Trc6TqH9pyK8z+OEP+QXqVilvW7mJ9D+U/FUK7/l
tQPtPxUPt9RFlTnS/lNRn1nW9rYT7T8VS40PbM5xpv2noutA7Xz1VNp/KsJ0
HdvxXGj/3Pm1n2YdP432n4rTxt2mR7jS/tOQ0pM/K9CN9p+G4zs/T1njTvtP
g8PZtv19ptP+0/Bx4PM3bh60/zSEm21LmjSD9p+GaOvicZYzaf9psBK8vWE0
i/afBsfyq7ZdZ9P+0zDeYX5Kmzm0/zT0cUyvbyabpuGU480hNZ60/zR0UB93
ezyX9p+GxTVDFxV40f7TMNQnwCd7Hu0/DccCdjgovGn/adh1coLhqfm0/zTM
m5T15KAP7T8NY241RoQsoP2n4bboRd+NC2n/aVjvsJ+3aBHtPw16XWo7eyym
/afBKeTfOrsltH/u9zbfO2OxlPafhuraudX9l9H+03C08IhW5+W0f+7zdffq
/SWvS4Nh7+FaH1bQ/tPQuH7v6xe+tP80VAYcSS9eSfvnnodg9trcVbT/NPzz
y++kWU37T4PJ9IaUlDW0/zT4ZdzoFbOW9p+Giu7ue0LW0f7TYFQf8XD9etp/
GvaqNnZbsIH2n4bmEh071420///Z3XO8H+0/Deoh8DLZRPtPw1uXNw49N9P+
06Bzbky/tv60/zR0fDOqqpmsSEOCZ0X86wDafxrehI20LN1C+0/Dk9cjL1zd
SvtPQ+3vCtPT22j/aTB3H3UgJZD2n4Yl00c+Orid9p+G0t1POwYH0f7TELjK
1GLNDtp/Gl6GDp7oFUz7586HW94Yx520/zQ4T9frMyqE9p+GoHY/6wfsov2n
4dGvw7JOobT/NHxJL5z5k1zF3V+Zoro2jPbP7WW1pW/Zbtp/GlK3eN+7sYf2
n4aIOUOGngmn/afhYEzCmtS9tP80dJLLEg9G0P7T8GHE4vSgSNp/GnJF586t
3Ef75yE1USOZvZ/2z8PMGJe9k6No/zxYddvrZh5N++dh/NlFfw0P0P55aPP9
carOQdo/D1c2fxr+mdybBxupnPfiEO2fhyfD/2ndiaH98yDd1zzzQiztnwcH
930HhIdp/zy873Du9OE42j8P22fsvrrzCO2fhwXqt5dWx9P+eRBm1onmHKX9
8/CzJSpo8jHaPw/ittfHmiXQ/nnYF5hQ1SOR9s9Dj3KtHVrHaf88bLjZ4ed7
sgcP4+7K1zw9QfvnoWBf1bW8JNo/D//2n22bfpL2z8PS1X3HnjpF++dB51Lf
OfuSaf/c9fbL9PFPof3zcMi4avrCVNo/d3/WSsynptH+eQjZ969lJI/2z8PQ
/z6q+vJp/zwsSt/q0U5A++dhW1PMs0/kUB7mBU/wrBDS/rnvexWSlS+i/fMw
On9W+zNi2j8Pv29mO5yS0P55cArLXBcppf3z0BQ3ZdcmGe2fhwMnl+6cL6f9
82AysctKBwXtn7vfPebYjlDS/nn4WDjkZw8V7Z+H2T+jpP/ICh6Gu4ZMrlPT
/nmI9/l7/YGG9s8DSrqMunya9s/D7hlnD0nSaf88jNz1uvTwGdo/D/f+8LV3
ZND+edgS3Dhw+VnaPw95iQWmbpm0fx70floOsD5H++fBeIbx377naf/c900Q
F+pcoP3zYLE2Y08juZyHkj1uxo+zaP88iCw3Z1zJpv3zENrPyFx2kfbPw80W
nyNxObR/7nmvNqoKukT758Gu7+b+yy7T/nmYdH2a87Rc2j8Ptu3U80deof3z
cCopybvXVdo/t2+Tzg6tZC0+apd36vXuGu2fj6jvR8tLrtP++XiTLNifdYP2
z4fXn3FGvDzaPx+X73mJ9t+k/fOReONnt035tH8+vh4atsnrFu2fj5iXT89N
KqD98xG3qWut8W3aPx/PP5Xo6BXS/vl42ee/zk1kCz6OCl+0Kb9D++cjYfKI
6qtFtH8+Okv/nZbepf3zUXDEe3VsMe2fjy5Z1rrb7tH++agoPXZiQQntn48z
p4K64j7tn4+0opfbTUpp/3zMMyos0H9A++ej1+yxOl/IXnxc6zdsxLOHtH8+
zk9Osr/2iPbPx9+tMZOlZbR/PobvbGMa85j2z8dyg59/A57Q/vlY07TlmvdT
2j8f8a83+tmV0/75uMqrbWv8jPbPh3/96wMdKmj/fJyNWPKjkRzKh7nFgrkP
n9P++eiqKDuV/YL2z4dFzv27qS9p/3y8Mnav31tJ++djgNKpec0r2j93fV1z
a6dX0f65+zngXMGo17R/PgYnmR7rWU3752OPY3+3X2QBH7dqD7+vfEP752PR
9LCdN2to/3xMtG1olr+l/fPRuL1sfmwt7Z+7H/cmKQLe0f6586I7qMarjvbP
R/fm8E4T6mn/fOh6LTUa0ED758PsV3b/Nu9p/3wEZBxu/5ZcyMd6p1fPCxtp
/3yMD9ekaj7Q/vk4ZPPVNf4j7Z8PuVVO1bZPtH8+Vk7+sXL+Z9o/HyajMh9O
bKL98/HhSa2FUTPtn4/J2ie2tvlC++djXOQ1cQ25kY99I1Zev91C++eu7154
oeor7Z+PjEm9cw9/o/3zccPNLCXgO+2fu96751bP/UH7F+DI8ex+434yawtQ
G2pzpfcveh8IMHq+uftvcnsBlL9O5r38Te8HAbrYh5tc/8OsJ8CNH6+2i/7S
+0IAnvbFjH3/mA0EGGaj+3RNK70/BPBeU1rnqlX//+4uQPHWrrXmbZh7CJA+
prBEX5vZUICzkd9FH8m9BRhoz/Mt1WHuy/339rmdM9sy9xdgiO8cSUI7ZiMB
/tu/xGR7e+ZBApjsr0rw7sBsLIA/KhrH6zIPFeDocffRfToymwiQu3L0il9k
UwFyDsWFPtdjNhfgfsOKyNxOzBYCvFul3p6mz2wlwJqKDXN3d2YeJcBcS0H/
ZQbM1gKMxPQHU7ow2wjQ79vGLYO6Mo8T4JK19l+tbsy2ArhUdA58TZ4owJ4H
cU9udGe24673776hov+Y7QWodP68JKIHMwSYdbg0wrcns6MABleHJTgaMjsL
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
NB3ndX02s6sYK1YOi9o7h9ldjKzj38WOnsweYnRadvq0zlzmmWKkLpsmzifP
5u6/bcG+/V7MntzzPmju6TKP2UsMq6+BnTp4M3uL0W2ALOM22UeMBeKrDgfm
My8UI8382lVXH+bFYrycpxjecQHzUjF2FoaE3iEvF2OSyfgrBxcy+4ox47/K
erdFzKu4v9sEaOstZl4jxg/Lj+2LyOu4z5f6fD+4hHkD9/scMh65LWX2E8Nb
/jWl4zLmzWJEh5nNvkMO4H7/Ro/PB5YzbxVjcq9loa4rmAO582Dm29LBlzmI
Ow/u3j63ycFi/Btsp4haSf0Xw2BBj5qpq6j/YtScfNWp3WrqP3f/YngD88nh
Yhx8Nmdg5BrqvxhSq196jmup/2IMHXuyWmsd9V+MwSctZNfIB8Qw1Lk4b/d6
6r8YDYMnNdltoP6L8VSQFfybHCfGfosRjTkbqf/c/dxyanqwH/VfjJNG2knj
NlH/xRhStbqkhXxCjDurbjVlbqb+c7930eA2W/yp/9z7aUvIH6sA6j/3fT4P
3jSSeWIor5pkq7ZQ/8Xw8doVtG4r9V+MX3fuDzbZRv3n3k+lQ3PekGXcfnvv
shMGUv/FCPN6pF66nfovxumxVh36B1H/ub1tjp35jJwuRtHZj3tP7KD+i7Ex
c55wbjD1X4zXQ/I0XXdS/8VozrGR3CNniVFgmh59KIT6zz3foSPnT9tF/RfD
duXF7m1Dqf9i6J1yv3SdfJW737tqZ4SFUf+5febF3puwm/ovhmSw/YRv5Hwx
Iuf8js/cQ/0Xo1j3VtnmcOo/93n/UtqO2Ev9F+Pd+/BB78jFYtyLDjQVR1D/
xZges6P/skjqvxieZw796buP+i+G9en0wifkMjHE9jXhx/ZT/8U4P8Bi2Mwo
6r8Y99tGX+gYTf0XIzf96+hb5BdiKJ4EJ4cfoP5z70Pbbp8mHaT+i1EVd23k
d3I1t/+kfYszD1H/ufvfecX2TTHUf+79eGZeiGks9V8Ms4krN74hN4hxbcMh
V95h6r8YvNa73RbEUf+5f59tevu/I9R/MYbPFq4rITdz139w3LcD8dR/MVYO
qfd3Okr9F+P3i5zHf8k/uPMYpBx+8Rj1n9vn2YurtyZQ/7n39Yy6IxaJ1H+u
V/oTZLVkLQlEZ9QKwXHqvwSnfyJp4QnqvwQpmp9beiRR/yUYFPPEtoSsK8EM
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
/+XodiPuWga5vxzbJrv+8eBT/+XYyT9jUk8eJEfvXgX2+wXUfzkiymKdBwup
/3J01W1ne4VsIsfc6pF9Foio/3IYJBrUtZDN5Zg0UySJF1P/5fjt0DjTQkL9
l+OM4EPtbfIoOd6kyP1WSqn/cniu7lf1j2wjR7OVu0OyjPovx1vzsfFj5dR/
OUJjXhaXkifK4Rjp/H2jgvovx2fnjV06KKn/cvjrzO0pIkOOiqY/upNV1H85
djttaHhKdpbjxYjUnK1q6r8cwsqEoM4a6r8cp494DlaQ3eXoue1ZjuNp6r8c
RlfM8JI8U46xIufzO9Kp/9x5mD/CsPsZ6r8cy7q+Wq0he8nhrrNC7JJB/Zfj
36rMkiqyD3f/NpS9CzlL/efOg3vhxx6Z1H85bk848iadvJR7vpvNC1zPUf/l
+GSUcqKa7Mt9/95qr9Dz1H85lha3aWN4gfovh2Dcr+Qz5HXc8/9ebOyWRf3n
zrPzrpPVZD85fni3/7Mrm/ovx8jV/jN6XqT+c+dbnh2bTt4qx2KvqpxpOdR/
OSylDWVV5CA55A+evtx5ifovh013ZVn3y9R/OZbzl+WoyaFyNJ79E+OcS/2X
oyBir8dLcrgcutM//dp+hfovh7bztCSDq9R/OUzlhwbLyVFyDE+/dGrKNeq/
HKXHylufkg/JMerI27kB16n/cgS8rD6ue4P6L8e37Ae3BOR4OWYvOPfGNo/6
L8f4Pwc+lZIT5Uh+Prd+3U3qP/d8rXs+0Mqn/ssx365EdpKcLMdGm/ANo25R
/+VY423Rv5DMk6NX5aPLywqo/3Ls6hDs9p0skuOiQd9bcbep/3IYj7psZVJI
/ZfDVrE46gpZIUf6uda7Xneo/9zzOyJtfU/WyDE9eNbgyCLqP7d/9b9Rfe9S
/+WoW3Pe6iw5U46od1v6uhZT/+WYstG2pZKcxZ3/kR1zt9+j/stxf9vbLfol
1H/ufRFY0lNMzpXj8ZZb8gn3qf9y6CnvDi8lX+fepwuqj68ppf7Lwbuh1/yH
nC9H+8EudgkPqP9yFGcdDzR7SP2XY2Xer+Rr5CI5fCODzsx7RP2XI2mCXuZ7
cokcH4Zmi/aWUf+5Pe7fvbfXY+o/9/0pK2aeJpfJkS1f0dHpCfVfjrUNezLL
yeVyBEuuuG1+Sv3n3leG/e/rlFP/5ciISHU8Ra7kemUGidUz6r8c36frttwk
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
9yj2/P3JG1fDrmy/L9xbUQKPVdEXqzderr253dj+eb7qqcATWP3IN3+a9+F2
V9EjzT5pG+yhIotL7jO/wpNVVG/In7/efbmnqOiUEBdzHfZW0Yj15s172nH7
sHox2R8eD89QUbeyhpV1+nHPUlGazwIXf3iOij5UXol5CM9TUUH95rcd+nP7
qmivoXfNCXiBigaHJrRqNgD5r6Lnt553D4IXqWjrhFa9XsFLVDR0u4eV60Dk
v4oM38YayPAKFX1/cKeijT3yX0XvMvS1YfBqFb0xnRj4EQ5i6xt7qNPkQch/
dj/zKm9kwiEq8moy0rvLYOS/isTl50pi4U0qOriszdRqOJSd1+r912Y5IP9V
FFnVySIH3qqi3p6Xl/R2RP6rSKu3SHMAjlJRSWj30rpOyH8VBdj80/GHY1TU
anWF+QN4p4oS8yqsBg1B/qvo7PG6HZPhOLYeX7tmeoT8V5FRWOin5fB+dl/8
P15+Ch9UUWDk6i1DhyL/2X65tbc/AyeqKKHbuxLDYch/FXWJeBwcBCerqPHT
Nzol8HEV3YhqEz7SGfnP9rtJ0A81fJrtd+4fL1MX5L+KcvqdS1kPp7DzTwur
KoPVKnLLjbIZOxz5r6JN9zK9ZFhS0QqHjqtaj0D+q2hDyPmwzfB5Vg+1IVsr
4IvsPvVeEzx+JPJfRb+2nJx1Hk5XkflcfXvzUch/1v8cz9YPg6+w/d+8+cp7
OEtFkxL2LJ04GvmvoqLaV4YX4ZsqGmey5Hg7V+S/im6NsbcOh3NV5G48PPkD
fEdF1YW79d3HIP/ZfdOzXHgRvqeiONNfF9qNRf6rKMTftCYMfqSi2SuDbT7A
BSqySu7iPnEc8l9F0uz2/hfgIhW9tJi70twN+a+iteO+L9sCv1TRZM9HM9/B
JSqyO9lg6PjxyH8VFaq2mmjhMhX993RaUesJyH8VOe8P370JrlDR/MkNHcvh
9ywvQp8/HTMR+c/uW4T+QhH+pKJmhfvem7oj/1WU/CJkRgj8TUVfda5cfwV/
Z+d/dbb5yEnIfxVlBc9dkAJXq6hr0s0TzT2Q/ypqeyT68Wr4D+uXb87/fAbX
qsi2eIT+UE/kv5p+/XI0PgnXU9PZEwn6TSYj/9W0daxf9VJYR023fA4XPIIb
qynZ2emUvRfyX03OS9z8E2F9NeWPzmtffwryX02+zpdv+cGGamqZ3XHOHdhI
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
bsvPH76vdjqcu++PdQ9mw+14PIujU+bDuTt0Lw9cBF/E+1PfLfaOcG4Flfox
q+GLpVTRwVbZHc69kJIqNsPtpRT3+kWGL5z7VY8fu4PgDlKyUP6zZBecu+PH
Wv0I+BIpjXh7528MnPupzu78ePhSPv8UjDueBOd+pvVg3Vn4Mn7/+uaTLsG5
DSZcVsqCO0rp/LK2eRI49/FC07jb8OVSei+6OubCuT2stw0uhK+QkuJV30/F
cG4/9ZWXKuBOfJ6LneBZDec29micWAdfyc9/N6HpG5w7+/747F/wVfzvJ13z
UXze6ty7A3QndWxtBWc+v+3c3qgK53754fYlDfhqXs+f/HTThnNvWddzyCC4
C7+fikEVw+DcyUv6HhoNXyOliSptrSbBuR21ituYwNfy81w+cn0mnLvXP3P3
OXBXKXnqV/ezgXPXrdn0eDF8HY+Hko9By+HcO9NtRrvA3aQ0suvZcnc4t6b+
571b4O5S8tIfONkPzu03ddbbIPh6Kc3dvWj/Lji3qqH9xAi4h5Te+FmUx8C5
i3xGhMXDN0jpz7Lfw5Pg3I62koJU+EYptezx2HIRzv14iLrmNfgmKeXZJWXd
hHNXzxy8+BZ8M//9Pkd+PoBz17f/G/sYvoXPN6MXjnsB5y66FV9QBvfk9fTT
s3VVcG7Nwn9tP8G38vqYpJ3QAOeW7RoxsQnuJSW98yPz/sK5g6borGr3otW9
pbRxWfsmldYO4o6eVrG3G9xHSqEq5/ppwbmffHK91B/uy+NbRdt0CJw7OVr2
eCTcj88TlxyWj4Nzd95bU2sI9+fzgtVaX4Jznxlc1tYMvo3Pp1P+i7SEcyde
S+61EB4gJec73xMd4Ny3DhgPdYJvl1KbGT7pa+Dcru3PjvOAB/J60a4gyxPO
vdf14xR/eND/73stN4Ph3BkqSia74cFSenD8ryQCzt3epME4Fh7C66vmy5x4
ODdZZ09Kgu/g83SvyKupcO7LsUsMLsJDeTx+65eaCec2W1KicxMexveln+GH
5XDuHQ3j1B7Ad/L42vIstADOHXjGvbkIvktKSlm/3V/BuRtyQyvewHdLqat6
O+sPcO5BFwJkX+B7pFT+6PPoH3DuH4cXn/gND+f7mtGNzm2KW527+pWmr3Jr
K+zl95XqVqUG51a9m22lCd/H57UVite14dxdT07XGQTfz+fJywG7hsG5TXKu
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
2x3Ofe7uwF694FV8f/I2naEN5377N2O9DvydjK54BxzShXPP/XNUOhRezfMl
rcuHkXDuuvgi9THwGhk5ffo6aQKce2/GakdD+HsZRXQzCJ0K507QmXvWFP6B
zxvNYt4sOPe67D0Ns+Ef+Xv5ne1hBed+s6j/JBv4J/7+7p8W28G5M5518XOA
1/L9NW3nUUc4t3VHu5yV8DrenzptK3GBc7972PRzHfyzjGatfqSxAc5t0/hj
7Bb4F75PR/vM84ZzGy21dvOH1/P7Whe8MxDO/buk48kd8AYZzbldk7MLzp0x
s9+zvfCvMurqdb42Es49YUtU2xj4Nxl9sXvc5zCcW83YZewxeCOv51MXmifC
uY9uPbrsFPw7ny/+Td6cCud+9X3UzvPwH3w/3xJ45BKcOzFK73wG/CevLx5D
hetw7nUDQgpuwpv4Pn53/GspnNvHm+pvw5v5/jAv5d99OPcT11WqefBffJ95
7af9BM49Mu/TsCJ4i4yS5lybWALnbuP1cnoZ/LeMHrsstqqEc++fPNr+HfwP
n/farVz1Ac6d/b7OvQ7+V0Y9fz/d2gDnnurQY/t3+D8ZRfW9GNYM5w5bcWrf
H7iCnDZPbYxSrGl17pv5CYfbtbaCopxyDE4dV4Zz3/Num9QFriSnibfFlK5w
7gUGz1M14G3ktO6x2TktOPet2z0u9IW3ldOxwVPTB8C5J3WRpQ+Gt5PTg9jE
9GFw7oMlpRf04e3ldO3r5vNj4NxrW1anTYB3kFNRl8wzhnBunZkrTk2Fd5ST
6/U1iaZw7rzQ3PhZcGU5udzaGzcbzj03IvWAJbyTnHb/GxBuDeceOaYpxBau
IqfpU0f428O5c6fe2LwM3llO9+emujrBuSeGfl2+Gt5FTip/j9i6wrmNnyVY
rIer8vfSUZy2Cc695Y907Fa4mpwsQssH+8K59QrsewXA1eVU/XNsp2A4t3Ov
dS2h8K5y8rH492k3nPv7ma+l++Dd5JRuMTP3AJx73dzG7Bh4dzk13FVKPQzn
7vRsQ+wxeA85ue03CkmEc7/s7OJxCq4hp/buX+xT4dypt1/MPA/X5L8/uv+o
S3Dupvt3emXAe8rp15lcxetw7m41oz/egPeSU9mJ709EOHfTJ63sW3AtObVU
HT9xD8699VRwWC68t5waZ9xZVwDn7li2dt5TeB85TdjjPu4FnLvJ6bFmKVxb
Ti+CYprL4dxz/l0vfQPvK6e7P6ZKquHcsqBBCR/h/eSUdM11+2c496vL6o5f
4f3l9GRvr6k/4NzvlgX3+QXXkZOn6ZzmP3DuknlezxXft/oA/p5JSlfbtXYQ
d5BNfYQyfKCcVvhOW9cFzr10dP3MrvBBcrpyQKm/Bpw7/apXUy+4rpzCrsx9
og3n3nY69KwOfLCcxNR+wbpw7j2FvRcPhQ+Rk9JUX4ORcO5lilPajobr8fow
eVnJODj3+N9vLkyCD5XTb+fcYCM494B9mrbT4MPklB1+W28GnLvCt6j5P/hw
OR3ZPDvXAs79c7/OMSv4CDkpvnNwt4FzXzvQZGQHHyknzbTmTg5w7v4WjiXL
4PpyurNnyBknOLdCiI3nargBP9+cN+QK5371r6jzevgoOS3K0i/eCOdW3vsh
yRM+Wk4F0crrfeDc4R/3T9wGH8PzJdXrXyCce8K7W/d2wMfy+MzZGrkLzh1r
us9uL3ycnFZFdegbCeduulPzJgo+Xk49v49MjYNz+0x+4X4UPoHnR2r16AQ4
91vHJY0n4RPlZL1lQlYKnPvJX0/fs/BJcmrXu7fRBTh3TJnu70vwyXIauDL2
Zgace47Ubdt1uKGczqmnGt2Ec+e7WfwS4VPkZPPR5votOLdwSrb1HtyI97er
cWNz4dxbRhV+zocb8/sb7ZlWCOdWe7xt9XP4VDk9Hlzb/yWc289CXlIGN5FT
oN2/qEo498KVyXPewafxfNyZ3uYDnLttqc6NWjjJ6bzPr031cO5r3kZDG+Gm
cgqof1v2E869sOVbVAt8upwOXXIz+wfnjho6p0XpQ6vP4P3aPyq9fWsHcZfK
TJ06wWfy+aK7fXdVOPfqPcW3u8Jn8fcxkm7VgHOPMFUfogX/j5//6v0ibTh3
edqHUB24mZxqTbaM04Vzt929ulIPbs77c4I0YgScu/BIqNEo+Gz+3lGXa8bC
uRecNIueCLfg71n2n8kUOPes5RffT4XP4floEhxlCueeHHPTaBZ8Lu9f3k5V
5nBuT4WN++bCLeVkZ/Z+3Hw4t4rzw5cL4FZy2uehGbwIzv1o+6MhS+Dz+Hxw
vjbXEc5tqe69cSV8Pp9vZG49XODcn148zHKFW8tJ6hbjsB7OLYu5/3sj3IbP
M+vWJHjCuS+22zTNB75ATmYB7yr84dzLP9wODIQv5PXdSa3/Djj3uL+3JTvh
trwfPH+3JBzOvUhpc/N+uB3vB0dc4w7CuW9ffTQ2Fr5ITpK18fmH4dx6j4tc
j8EXy+mC4ra2iXDu5h4RCclwezldGtB58hk4t/+0H4/T4A5y+hw21zUdzn2m
s5riFfgSOZl+mno4E849x7DEIBu+lL+vauXtm3Du2mBbByl8Ga+n5yZ+uQXn
Lk4K3XEP7iinsYHTeubCuQctXpOWD1/O+9ms38aFcO6kZX/zi+Ar5NQne/2K
Ejj3Tw+LhldwJzklxsUEv4Zzbzeb27UKvlJOXw9vSqyBczsmtR31Cb5KTtr+
7SSf4dwhUzwtvsKd5VTzc/6L73Du+Ifxq5rhq9kfLPzyG87du8s2P4WPre7C
57FzXdu1be0gbqObGpEd4GvklGa3u5cKnPvvQdeTqvC1cnIPyx7WDc491Nzn
sgbclX9PQ8pkLTj31MPTRW34OjnVLbCapQPnjjN68HAQ3E1OVi5X5+nBuad+
6vxsONydn7+yaJEBnLv7CtXSMfD1vP5tv7ZsApw70ya/YjLcQ07PGm2djOHc
4f6Wb6bBN7D/yVg5A86dE7XvzX/wjXzfsH7mZAHnNpq/77UlfBOfP05nOFrD
uWVulq8WwjfzeeWanf1iOPfdY4+LlsC3yOnUxBvWy+Hc0Uc181bCPeXkW/HG
zAXObaCtI3eFb+X1bU2+0Xo499riuoyNcC85RYZt1/eEcz8NC0rxhnvzeP7y
Tdsfzp37sjh6O9yHz+vLRnUKgXN77v8ZGAb35ftuyJjvu+Hc2QvKXPfB/fh+
oNlSFgnnnvk23Doa7s/3tYJ9t+Pg3JENCpOOwrfxeXJFTepxOPfTcdT7JDyA
z2vBKntPwbl7Lp/dcga+nc+fVc3rzsG5Bw3t+zIdHsjPQ1fNr8C5d864eS0T
HsTnLfPJutlw7qOr9Q7ehAfz+7i8548I594+fbnrLXgI72ejUp/dhXNrRzhP
ewjfweetrTFn8+DcGr8ndX8CD+Xz5eR5257BuT9Me1n1Ah7G98XhJXNL4dz5
nedmlMN3yinh79g+b+DceRoRwe/gu+R0ee2ymvdw7tNdTs6the+W04/e9pe/
wLkbT4dpfIPv4e9zb4jvDzh3pxjjV83wcD5/DLhn8gfO3WnX3USFT62+V05O
L6cotW3tIO6qMbqrOsD38f0/OeRWJzi36X92g1Th+/n7jDoR0hXOHb91WWUP
eAS/D4OD03rBucdvmnK8DzyS9xMb+1/94NzdPtbZDYQf4P19btOVwXDu9gd9
VIfBD8rpzyMP15Fw7nOapbdGwaPk1C9U0nccnHvpCE3vifBoPt8MfFdgCOc2
Dxw+dCo8Rk71i6oDCc7tIO/1YgY8lu+bz2T6ZnDu+acqd1jA4/h8Y+ZTYgnn
Pv8szMAafojnt1OnHQvh3FlK7V8sgh/m8VngM3wJnDukbGWAI/wIn/em3y5w
gnO/7358wGr4UT6vr63bvBbOHbcw85YbPF5O/31p7L4Bzl1neX7VZvgxOc3b
WXplK5x7eHqIoi/8OJ9PS0/O2wbnthxkeDwQnsD332PmH0Pg3FpLHk/cCT8h
JxOvxyF74Ny6bWbn74Mn8v2+5xStA3Du2/eTV0XDT/L6N3LnhTg4t7Z95Y8j
8CQ5LVmVOe04nFvbSWl3IjxZTt/W3C9IhnN77e/Q8wz8lJzG1IjL0uDc58Ib
ki/AU+S0ef+xD5fg3O3byQwy4Kf5fNB++ZYsOHdsqldWDvyMnHb969AigXOP
H9DdRAZPlVPXQYeDbsO5w3sfkt+Dn5VTl77qbXPh3B2ozax8eJqcig5vDHsC
5y43XnznGfycnIJNc9oWw7l73YybUQo/z/uHrC64HM4dtFYUK+EX+L58W+VP
FZw7rbbQ8D08nc/rjT28PsG5f319cvkz/KKc+v5WrmuAcx8dLNH7Dr8kp5Oh
n5ya4Nx+BrHxLfDLPN8m5zz7C+demuXQRam21a/weiv1mtWutYO4c11VAzrC
r8ppx70BGSpwbq0vlz6qwjP4vvD9hk43OPeq+ul2GvBMnn+Ns/b2gnMf0rwj
9oFf4/HtLv3WD869otNkvYHwLN4/2490GAznJs9j+4bCr/P3X7dHGAHnDv79
9YsBPFtOe6lEZyyce8wcY+sJ8Bxe38ZoB0+Gc4/t6HvJCH6D1+8qmwoTOLdB
6dku0+E3+fkVtxvNgnPHuRWsNYdLeLyMSoidA+dOXfFRZgUXeD5rZNRZw7k3
O7X0soWLPD8dpDMWw7nlPdp4LIFL+c+n3DrkCOc2GaAkc4LL5PTlmPDBGc69
QL+561q4XE6Day4busG5R1e8X+EBvyWnUcMTdm2Cc5e9enLBE36b1weV0Kfe
cO6hjzKa/OB3uMc6990O506xiTINht+V09zp01aHwrlFDbfdu+D3+H1VapwL
h3OfypmWtx9+X062me8/H4BzW1Wrq8fAH/DvWXl99CE49+6pFfOPwh/yer4v
bONxOHe187nIRHgu3zdK5qcnw7llCl6PTsMf8fiv6/3xLJzbInNahwvwPDmp
ulcNugTn9h2iTFfh+Tzfmy4suQbnVmsq9MqGF/D5fLLPwZtw7vi84+dE+GO+
vz6acUcO5w6wWFd+B/6E78cOXX/eh3OXdjVUewQvlJNraOWQAjh32t1OJoXw
p7y+1WYsLIJzp6m8XlcMfyanzpP2BZXCud12ZMeWw4t4frZbm1YJ5575+JBQ
BX/O+2uzeWENnNshxv/dR/gLOQmZo5rq4NxnN63u1AAv5v33lbZ2I5y7StlO
/ye8RE7HVbua/IJzp/y1tPoDf8nv93NnR4W6Vuc2bLBc36a1FUrlpKnddVt7
OPfjELtwZfgr3p8M+x3uDOe2X7g2RQ1eJie7mvFXusG5D7UPFf5Xg53H1ZT/
cRxHtpKJVioRKSlb9ix9RdJemqK0TIWyRBMJTSTKkjSDO5VCTIwYlOxF3O+E
+jWym8lIikZFUrYkM+/f4+H95+vx7HHuPfec8z2fbzr0SqUwveZV2oeO1rI+
et+A/kQpFq7aUGVER1umPKo3plcphX/a+bcmdHTnw32+mNGf4n1e1tbVgo5O
NwrWGE6vVoroPCe9UXR0Ttp5ozH0GqUweHFk8Hg6+nK+oaU1/RnedxraVlPo
aFuNlPGC/hzz1rXkydPpaG/HXtNm0mtxfsd17Rzo6HcqB2Y50/9Rij+DTjq5
0dG1FdNcZ9Nf4PmNn+vuRUcXhLd4zKXX4fuf1PScR0ff9T3rGUCvx/O7qdIz
iI4OFUme8+kNON6BwtmhdPSSwkiPxfSXmPeyj7uF09Enl4a7RNBfYb9ifspx
BR1d3Bhjv4reqBRny0unr6GjDav22fxAf60Uv4z+aL2ejq59/GBsPL0J++tm
65EJdPTQBJOhW+hv8Dzl7BqUREefidxiuIPejPf92046P9HRQ6ar9NxNb1GK
wO+3dk6lo9/uVLSl098qxfICs+ZMOtrzi82L/fR3SjFgeeXjg3T0t8Yqdw/R
32NeGHLi+hE6uiz1ScEx+gel+ByfevIEHb2g/f7BPPpH3L/6GYrTdHT6q9rN
5+itSjF624U1F+no4ypaSy7RP2F/F94y7wodfarC11nS27A+BzhMvkZH7+hZ
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
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  Frame->True,
  FrameLabel->{{
     FormBox["\"Frequency of Type 1\"", TraditionalForm], None}, {
     FormBox["\"Time\"", TraditionalForm], None}},
  Method->{},
  PlotRange->{{0, 10001.}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{200.02, 200.02}, {0., 0.}}]], "Output",
 CellChangeTimes->{
  3.682429133457519*^9, 3.682429190839446*^9, 3.6824293237760267`*^9, {
   3.682429392377225*^9, 3.6824294374567833`*^9}, {3.6824295476007757`*^9, 
   3.682429610643045*^9}, {3.6824304799331417`*^9, 3.682430556992875*^9}, 
   3.6824307197107973`*^9, {3.6824309096772413`*^9, 3.682430932833241*^9}, 
   3.6824795407262697`*^9, 3.68247964254965*^9, {3.6824806374541407`*^9, 
   3.682480645986969*^9}, 3.682480682604599*^9, {3.682480802208724*^9, 
   3.6824808225869293`*^9}, {3.682480924199544*^9, 3.6824809457539663`*^9}, {
   3.682480983245343*^9, 3.6824810268635883`*^9}, 
   3.682481067043709*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"]]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]]
},
WindowSize->{947, 647},
WindowMargins->{{-3, Automatic}, {Automatic, 1}},
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 1.25, 1.25 Inherited],
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 20, \
2012)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 559, 11, 156, "Text"],
Cell[CellGroupData[{
Cell[1141, 35, 170, 2, 114, "Title"],
Cell[1314, 39, 180, 4, 37, "Text"],
Cell[CellGroupData[{
Cell[1519, 47, 141, 2, 100, "Section"],
Cell[CellGroupData[{
Cell[1685, 53, 107, 1, 83, "Subsection"],
Cell[1795, 56, 828, 15, 56, "Input"],
Cell[2626, 73, 677, 13, 88, "Input"],
Cell[3306, 88, 289, 8, 56, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3632, 101, 94, 1, 83, "Subsection"],
Cell[3729, 104, 732, 22, 56, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[4498, 131, 308, 5, 66, "Subsection"],
Cell[4809, 138, 840, 20, 127, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[5698, 164, 131, 2, 62, "Section"],
Cell[CellGroupData[{
Cell[5854, 170, 225, 3, 67, "Subsection"],
Cell[6082, 175, 7926, 225, 977, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[14045, 405, 403, 5, 53, "Subsection"],
Cell[14451, 412, 100, 1, 647, "Text"],
Cell[14554, 415, 1032, 22, 1043, "Input"],
Cell[15589, 439, 833, 23, 1085, "Text"],
Cell[16425, 464, 18153, 487, 5815, "Input"],
Cell[34581, 953, 350, 9, 637, "Input"],
Cell[34934, 964, 419, 7, 1085, "Text"],
Cell[35356, 973, 5124, 156, 3212, "Input"],
Cell[40483, 1131, 155, 3, 647, "Text"],
Cell[40641, 1136, 3240, 76, 5596, "Input"],
Cell[43884, 1214, 756, 14, 1165, "Text"],
Cell[44643, 1230, 9976, 213, 9800, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[54656, 1448, 177, 2, 53, "Subsection"],
Cell[54836, 1452, 724, 12, 118, "Text"],
Cell[55563, 1466, 21672, 450, 1937, "Input"],
Cell[77238, 1918, 623, 10, 118, "Text"],
Cell[77864, 1930, 8711, 196, 1025, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[86612, 2131, 185, 2, 53, "Subsection"],
Cell[86800, 2135, 2173, 60, 187, "Input"],
Cell[88976, 2197, 4094, 116, 220, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[93107, 2318, 557, 7, 53, "Subsection"],
Cell[93667, 2327, 1956, 38, 202, "Input"],
Cell[95626, 2367, 1351, 31, 176, "Input"],
Cell[96980, 2400, 2276, 45, 228, "Input"],
Cell[99259, 2447, 1518, 36, 202, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[100826, 2489, 197, 2, 62, "Section"],
Cell[CellGroupData[{
Cell[101048, 2495, 107, 1, 83, "Subsection"],
Cell[101158, 2498, 3835, 82, 613, "Input"],
Cell[104996, 2582, 3271, 76, 613, "Input"],
Cell[108270, 2660, 229, 4, 57, "Text"],
Cell[108502, 2666, 6564, 146, 1040, "Input"],
Cell[115069, 2814, 161, 2, 71, "Text"],
Cell[115233, 2818, 647, 16, 233, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[115917, 2839, 120, 1, 66, "Subsection"],
Cell[116040, 2842, 5670, 155, 220, "Input"],
Cell[121713, 2999, 1522, 47, 88, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[123272, 3051, 178, 2, 66, "Subsection"],
Cell[123453, 3055, 15619, 352, 23931, "Input"],
Cell[139075, 3409, 5030, 113, 5222, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[144142, 3527, 134, 1, 66, "Subsection"],
Cell[144279, 3530, 5083, 143, 3868, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[149399, 3678, 107, 1, 66, "Subsection"],
Cell[149509, 3681, 4093, 101, 2525, "Input"]
}, Closed]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[153663, 3789, 94, 1, 114, "Title"],
Cell[CellGroupData[{
Cell[153782, 3794, 190, 2, 100, "Section"],
Cell[CellGroupData[{
Cell[153997, 3800, 212, 4, 54, "Subsection"],
Cell[154212, 3806, 108, 1, 37, "Text"],
Cell[154323, 3809, 352, 8, 78, "Input"],
Cell[154678, 3819, 112, 1, 37, "Text"],
Cell[154793, 3822, 1594, 47, 348, "Input"],
Cell[156390, 3871, 121, 1, 37, "Text"],
Cell[CellGroupData[{
Cell[156536, 3876, 247, 5, 36, "Input"],
Cell[156786, 3883, 94, 1, 35, "Output"]
}, Open  ]],
Cell[156895, 3887, 123, 1, 37, "Text"],
Cell[CellGroupData[{
Cell[157043, 3892, 803, 23, 78, "Input"],
Cell[157849, 3917, 1412, 41, 238, "Output"],
Cell[159264, 3960, 1612, 49, 238, "Output"],
Cell[160879, 4011, 2228, 73, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163144, 4089, 328, 8, 57, "Input"],
Cell[163475, 4099, 5874, 193, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169386, 4297, 4192, 116, 286, "Input"],
Cell[173581, 4415, 952, 13, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174570, 4433, 547, 12, 57, "Input"],
Cell[175120, 4447, 7584, 254, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182741, 4706, 3279, 90, 306, "Input"],
Cell[186023, 4798, 298, 4, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186358, 4807, 578, 14, 57, "Input"],
Cell[186939, 4823, 30357, 982, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[217333, 5810, 5918, 171, 294, "Input"],
Cell[223254, 5983, 30794, 999, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[254085, 6987, 17787, 526, 293, "Input"],
Cell[271875, 7515, 272, 4, 35, "Output"]
}, Open  ]],
Cell[272162, 7522, 95, 1, 37, "Text"],
Cell[272260, 7525, 15768, 450, 244, "Input"],
Cell[288031, 7977, 282, 8, 36, "Input"],
Cell[CellGroupData[{
Cell[288338, 7989, 296, 7, 35, "Input"],
Cell[288637, 7998, 240, 6, 35, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[288926, 8010, 138, 1, 43, "Subsection"],
Cell[CellGroupData[{
Cell[289089, 8015, 835, 25, 69, "Input"],
Cell[289927, 8042, 35027, 1068, 2265, "Output"]
}, Open  ]],
Cell[324969, 9113, 168, 2, 37, "Text"],
Cell[325140, 9117, 1606, 55, 203, "Input"],
Cell[326749, 9174, 137, 1, 37, "Text"],
Cell[326889, 9177, 5243, 158, 370, "Input"],
Cell[332135, 9337, 118, 1, 37, "Text"],
Cell[332256, 9340, 1606, 55, 203, "Input"],
Cell[CellGroupData[{
Cell[333887, 9399, 6420, 196, 466, "Input"],
Cell[340310, 9597, 73, 1, 35, "Output"]
}, Open  ]],
Cell[340398, 9601, 411, 10, 57, "Input"],
Cell[340812, 9613, 240, 5, 37, "Text"],
Cell[341055, 9620, 791, 21, 78, "Input"],
Cell[CellGroupData[{
Cell[341871, 9645, 256, 5, 36, "Input"],
Cell[342130, 9652, 197, 6, 57, "Output"]
}, Open  ]],
Cell[342342, 9661, 277, 5, 61, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[342656, 9671, 125, 1, 43, "Subsection"],
Cell[342784, 9674, 990, 22, 78, "Input"],
Cell[343777, 9698, 1059, 22, 78, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[344873, 9725, 263, 5, 43, "Subsection"],
Cell[345139, 9732, 1386, 36, 120, "Input"],
Cell[346528, 9770, 184, 4, 37, "Text"],
Cell[CellGroupData[{
Cell[346737, 9778, 557, 14, 57, "Input"],
Cell[347297, 9794, 274, 9, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[347608, 9808, 508, 13, 57, "Input"],
Cell[348119, 9823, 276, 9, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[348432, 9837, 562, 14, 57, "Input"],
Cell[348997, 9853, 96, 1, 35, "Output"]
}, Open  ]],
Cell[349108, 9857, 123, 1, 37, "Text"],
Cell[CellGroupData[{
Cell[349256, 9862, 841, 22, 78, "Input"],
Cell[350100, 9886, 523, 18, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[350660, 9909, 841, 24, 116, "Input"],
Cell[351504, 9935, 99, 1, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[351640, 9941, 742, 20, 78, "Input"],
Cell[352385, 9963, 454, 16, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[352876, 9984, 869, 25, 116, "Input"],
Cell[353748, 10011, 97, 1, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[353882, 10017, 745, 20, 78, "Input"],
Cell[354630, 10039, 70, 1, 35, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[354749, 10046, 262, 5, 43, "Subsection"],
Cell[355014, 10053, 177, 4, 37, "Text"],
Cell[CellGroupData[{
Cell[355216, 10061, 872, 22, 78, "Input"],
Cell[356091, 10085, 254, 6, 35, "Output"],
Cell[356348, 10093, 256, 6, 35, "Output"],
Cell[356607, 10101, 254, 6, 35, "Output"]
}, Open  ]],
Cell[356876, 10110, 984, 24, 99, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[357897, 10139, 161, 2, 43, "Subsection"],
Cell[358061, 10143, 322, 6, 61, "Text"],
Cell[CellGroupData[{
Cell[358408, 10153, 3405, 82, 435, "Input"],
Cell[361816, 10237, 179, 2, 26, "Print"],
Cell[361998, 10241, 345, 10, 57, "Output"],
Cell[362346, 10253, 177, 2, 26, "Print"],
Cell[362526, 10257, 400, 12, 57, "Output"],
Cell[362929, 10271, 181, 2, 26, "Print"],
Cell[363113, 10275, 713, 22, 57, "Output"],
Cell[363829, 10299, 178, 2, 26, "Print"],
Cell[364010, 10303, 705, 22, 57, "Output"],
Cell[364718, 10327, 180, 2, 26, "Print"],
Cell[364901, 10331, 697, 22, 57, "Output"],
Cell[365601, 10355, 179, 2, 26, "Print"],
Cell[365783, 10359, 677, 21, 57, "Output"]
}, Open  ]],
Cell[366475, 10383, 1127, 31, 107, "Input"],
Cell[CellGroupData[{
Cell[367627, 10418, 1320, 41, 107, "Input"],
Cell[368950, 10461, 268, 4, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[369255, 10470, 1295, 41, 107, "Input"],
Cell[370553, 10513, 343, 5, 35, "Output"]
}, Open  ]],
Cell[370911, 10521, 332, 6, 61, "Text"],
Cell[371246, 10529, 9792, 266, 719, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[381075, 10800, 208, 2, 43, "Subsection"],
Cell[381286, 10804, 322, 6, 61, "Text"],
Cell[CellGroupData[{
Cell[381633, 10814, 3462, 83, 435, "Input"],
Cell[385098, 10899, 201, 2, 26, "Print"],
Cell[385302, 10903, 367, 10, 57, "Output"],
Cell[385672, 10915, 197, 2, 26, "Print"],
Cell[385872, 10919, 422, 12, 57, "Output"],
Cell[386297, 10933, 205, 2, 26, "Print"],
Cell[386505, 10937, 729, 22, 57, "Output"],
Cell[387237, 10961, 202, 2, 26, "Print"],
Cell[387442, 10965, 719, 22, 57, "Output"],
Cell[388164, 10989, 202, 2, 26, "Print"],
Cell[388369, 10993, 699, 21, 57, "Output"],
Cell[389071, 11016, 203, 2, 26, "Print"],
Cell[389277, 11020, 679, 20, 57, "Output"]
}, Open  ]],
Cell[389971, 11043, 1312, 34, 107, "Input"],
Cell[CellGroupData[{
Cell[391308, 11081, 1443, 43, 107, "Input"],
Cell[392754, 11126, 458, 6, 35, "Output"]
}, Open  ]],
Cell[393227, 11135, 332, 6, 61, "Text"],
Cell[393562, 11143, 10288, 275, 719, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[403899, 11424, 108, 1, 62, "Section"],
Cell[404010, 11427, 348, 12, 227, "Text"],
Cell[CellGroupData[{
Cell[404383, 11443, 144, 1, 54, "Subsection"],
Cell[404530, 11446, 10089, 299, 1048, "Input"],
Cell[CellGroupData[{
Cell[414644, 11749, 134, 2, 35, "Input"],
Cell[414781, 11753, 21837, 681, 296, "Output"]
}, Open  ]],
Cell[436633, 12437, 303, 7, 36, "Input"],
Cell[CellGroupData[{
Cell[436961, 12448, 74, 1, 35, "Input"],
Cell[437038, 12451, 12426, 397, 268, "Output"]
}, Open  ]],
Cell[449479, 12851, 12990, 389, 270, "Input"],
Cell[CellGroupData[{
Cell[462494, 13244, 11634, 340, 270, "Input"],
Cell[474131, 13586, 142, 2, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[474310, 13593, 11222, 320, 272, "Input"],
Cell[485535, 13915, 519, 8, 35, "Output"]
}, Open  ]],
Cell[486069, 13926, 11529, 326, 272, "Input"],
Cell[497601, 14254, 11878, 333, 270, "Input"],
Cell[CellGroupData[{
Cell[509504, 14591, 10333, 284, 353, "Input"],
Cell[519840, 14877, 1103, 16, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[520980, 14898, 1197, 31, 68, "Input"],
Cell[522180, 14931, 247, 3, 35, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[522476, 14940, 130, 1, 43, "Subsection"],
Cell[CellGroupData[{
Cell[522631, 14945, 101, 1, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[522757, 14950, 370, 9, 57, "Input"],
Cell[523130, 14961, 1330, 37, 176, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[524497, 15003, 455, 9, 36, "Input"],
Cell[524955, 15014, 99, 1, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[525091, 15020, 673, 17, 57, "Input"],
Cell[525767, 15039, 964, 25, 168, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[526768, 15069, 394, 9, 36, "Input"],
Cell[527165, 15080, 1037, 29, 194, "Output"]
}, Open  ]],
Cell[528217, 15112, 335, 6, 61, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[528589, 15123, 146, 2, 34, "Subsubsection"],
Cell[CellGroupData[{
Cell[528760, 15129, 415, 10, 57, "Input"],
Cell[529178, 15141, 1341, 40, 212, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[530556, 15186, 500, 10, 36, "Input"],
Cell[531059, 15198, 125, 2, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[531221, 15205, 657, 16, 57, "Input"],
Cell[531881, 15223, 986, 25, 168, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[532904, 15253, 394, 9, 36, "Input"],
Cell[533301, 15264, 1009, 27, 186, "Output"]
}, Open  ]],
Cell[534325, 15294, 414, 7, 85, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[534776, 15306, 200, 3, 34, "Subsubsection"],
Cell[CellGroupData[{
Cell[535001, 15313, 467, 11, 57, "Input"],
Cell[535471, 15326, 1685, 51, 186, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[537193, 15382, 552, 11, 36, "Input"],
Cell[537748, 15395, 149, 2, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[537934, 15402, 765, 18, 57, "Input"],
Cell[538702, 15422, 1038, 26, 168, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[539777, 15453, 394, 9, 36, "Input"],
Cell[540174, 15464, 934, 24, 168, "Output"]
}, Open  ]],
Cell[541123, 15491, 449, 8, 61, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[541621, 15505, 208, 4, 43, "Subsection"],
Cell[541832, 15511, 169, 3, 35, "Input"],
Cell[CellGroupData[{
Cell[542026, 15518, 322, 7, 57, "Input"],
Cell[542351, 15527, 2092, 74, 106, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[544480, 15606, 479, 11, 36, "Input"],
Cell[544962, 15619, 123, 2, 35, "Output"]
}, Open  ]],
Cell[545100, 15624, 178, 4, 36, "Input"],
Cell[545281, 15630, 94, 1, 35, "Input"],
Cell[CellGroupData[{
Cell[545400, 15635, 352, 8, 36, "Input"],
Cell[545755, 15645, 585, 11, 71, "Message"],
Cell[546343, 15658, 585, 11, 71, "Message"],
Cell[546931, 15671, 54576, 1539, 1907, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[601544, 17215, 304, 7, 36, "Input"],
Cell[601851, 17224, 101, 1, 35, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[602001, 17231, 292, 6, 74, "Subsection"],
Cell[CellGroupData[{
Cell[602318, 17241, 377, 8, 57, "Input"],
Cell[602698, 17251, 2307, 80, 144, "Output"]
}, Open  ]],
Cell[605020, 17334, 452, 10, 36, "Input"],
Cell[605475, 17346, 739, 17, 78, "Input"],
Cell[CellGroupData[{
Cell[606239, 17367, 224, 5, 36, "Input"],
Cell[606466, 17374, 120, 2, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[606623, 17381, 288, 4, 99, "Input"],
Cell[606914, 17387, 39267, 1117, 344, "Output"],
Cell[646184, 18506, 3095, 96, 236, "Output"],
Cell[649282, 18604, 200257, 5540, 370, "Output"]
}, Open  ]],
Cell[849554, 24147, 790, 18, 78, "Input"],
Cell[CellGroupData[{
Cell[850369, 24169, 135, 2, 35, "Input"],
Cell[850507, 24173, 978, 24, 168, "Output"]
}, Open  ]],
Cell[851500, 24200, 274, 6, 36, "Input"],
Cell[CellGroupData[{
Cell[851799, 24210, 135, 2, 35, "Input"],
Cell[851937, 24214, 139992, 4034, 378, "Output"]
}, Open  ]],
Cell[991944, 28251, 216, 5, 35, "Input"],
Cell[992163, 28258, 128, 1, 37, "Text"],
Cell[CellGroupData[{
Cell[992316, 28263, 363, 9, 57, "Input"],
Cell[992682, 28274, 150, 3, 35, "Output"],
Cell[992835, 28279, 147, 3, 35, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[993031, 28288, 166, 3, 43, "Subsection"],
Cell[CellGroupData[{
Cell[993222, 28295, 133, 1, 43, "Subsubsection"],
Cell[993358, 28298, 20481, 591, 781, "Input"],
Cell[CellGroupData[{
Cell[1013864, 28893, 10543, 272, 509, "Input"],
Cell[1024410, 29167, 1347, 18, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1025794, 29190, 10680, 280, 430, "Input"],
Cell[1036477, 29472, 1759, 24, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1038273, 29501, 475, 13, 35, "Input"],
Cell[1038751, 29516, 503, 17, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1039291, 29538, 202, 5, 36, "Input"],
Cell[1039496, 29545, 73, 1, 35, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1039618, 29552, 123, 1, 34, "Subsubsection"],
Cell[CellGroupData[{
Cell[1039766, 29557, 214, 5, 36, "Input"],
Cell[1039983, 29564, 216, 5, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1040236, 29574, 219, 5, 36, "Input"],
Cell[1040458, 29581, 1509, 52, 110, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1042004, 29638, 192, 5, 36, "Input"],
Cell[1042199, 29645, 674, 22, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1042910, 29672, 230, 5, 36, "Input"],
Cell[1043143, 29679, 3236, 104, 179, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1046416, 29788, 284, 7, 36, "Input"],
Cell[1046703, 29797, 479, 10, 49, "Message"],
Cell[1047185, 29809, 509, 10, 29, "Message"],
Cell[1047697, 29821, 479, 10, 49, "Message"],
Cell[1048179, 29833, 547, 10, 29, "Message"],
Cell[1048729, 29845, 479, 10, 49, "Message"],
Cell[1049211, 29857, 562, 11, 29, "Message"],
Cell[1049776, 29870, 594, 11, 29, "Message"],
Cell[1050373, 29883, 566, 11, 29, "Message"],
Cell[1050942, 29896, 306, 7, 57, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1051309, 29910, 218, 4, 43, "Subsection"],
Cell[1051530, 29916, 269, 5, 35, "Input"],
Cell[CellGroupData[{
Cell[1051824, 29925, 242, 6, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[1052091, 29935, 402, 9, 36, "Input"],
Cell[1052496, 29946, 473, 10, 56, "Output"]
}, Open  ]],
Cell[1052984, 29959, 116, 1, 37, "Text"],
Cell[CellGroupData[{
Cell[1053125, 29964, 496, 12, 78, "Input"],
Cell[1053624, 29978, 142, 2, 35, "Output"],
Cell[1053769, 29982, 144, 2, 35, "Output"],
Cell[1053916, 29986, 142, 2, 35, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1054107, 29994, 369, 9, 36, "Subsubsection"],
Cell[CellGroupData[{
Cell[1054501, 30007, 430, 9, 36, "Input"],
Cell[1054934, 30018, 1537, 52, 62, "Output"]
}, Open  ]],
Cell[1056486, 30073, 158, 2, 37, "Text"],
Cell[CellGroupData[{
Cell[1056669, 30079, 1546, 44, 101, "Input"],
Cell[1058218, 30125, 142, 2, 35, "Output"]
}, Open  ]],
Cell[1058375, 30130, 236, 6, 36, "Text"],
Cell[1058614, 30138, 866, 27, 64, "Input"],
Cell[1059483, 30167, 116, 1, 37, "Text"],
Cell[CellGroupData[{
Cell[1059624, 30172, 1506, 37, 183, "Input"],
Cell[1061133, 30211, 612, 19, 59, "Output"],
Cell[1061748, 30232, 688, 22, 62, "Output"],
Cell[1062439, 30256, 238, 4, 35, "Output"],
Cell[1062680, 30262, 238, 4, 35, "Output"],
Cell[1062921, 30268, 382, 9, 59, "Output"],
Cell[1063306, 30279, 386, 9, 59, "Output"],
Cell[1063695, 30290, 238, 4, 35, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1063982, 30300, 467, 10, 64, "Subsubsection"],
Cell[CellGroupData[{
Cell[1064474, 30314, 475, 10, 36, "Input"],
Cell[1064952, 30326, 1142, 35, 59, "Output"]
}, Open  ]],
Cell[1066109, 30364, 158, 2, 37, "Text"],
Cell[CellGroupData[{
Cell[1066292, 30370, 1346, 35, 61, "Input"],
Cell[1067641, 30407, 340, 5, 35, "Output"]
}, Open  ]],
Cell[1067996, 30415, 319, 8, 36, "Text"],
Cell[1068318, 30425, 991, 27, 61, "Input"],
Cell[1069312, 30454, 116, 1, 37, "Text"],
Cell[CellGroupData[{
Cell[1069453, 30459, 1685, 42, 204, "Input"],
Cell[1071141, 30503, 521, 13, 59, "Output"],
Cell[1071665, 30518, 502, 11, 59, "Output"],
Cell[1072170, 30531, 336, 5, 35, "Output"],
Cell[1072509, 30538, 334, 5, 35, "Output"],
Cell[1072846, 30545, 478, 10, 59, "Output"],
Cell[1073327, 30557, 482, 10, 59, "Output"],
Cell[1073812, 30569, 336, 5, 35, "Output"],
Cell[1074151, 30576, 334, 5, 35, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1074534, 30587, 315, 8, 34, "Subsubsection"],
Cell[CellGroupData[{
Cell[1074874, 30599, 373, 8, 36, "Input"],
Cell[1075250, 30609, 1075, 34, 60, "Output"]
}, Open  ]],
Cell[1076340, 30646, 158, 2, 37, "Text"],
Cell[CellGroupData[{
Cell[1076523, 30652, 1033, 32, 61, "Input"],
Cell[1077559, 30686, 218, 3, 35, "Output"]
}, Open  ]],
Cell[1077792, 30692, 237, 3, 37, "Text"],
Cell[1078032, 30697, 743, 21, 63, "Input"],
Cell[1078778, 30720, 116, 1, 37, "Text"],
Cell[CellGroupData[{
Cell[1078919, 30725, 842, 21, 120, "Input"],
Cell[1079764, 30748, 455, 15, 59, "Output"],
Cell[1080222, 30765, 117, 2, 35, "Output"],
Cell[1080342, 30769, 683, 24, 59, "Output"],
Cell[1081028, 30795, 218, 6, 59, "Output"],
Cell[1081249, 30803, 260, 8, 59, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1081558, 30817, 349, 8, 34, "Subsubsection"],
Cell[CellGroupData[{
Cell[1081932, 30829, 303, 7, 36, "Input"],
Cell[1082238, 30838, 4223, 129, 170, "Output"]
}, Open  ]],
Cell[1086476, 30970, 158, 2, 37, "Text"],
Cell[CellGroupData[{
Cell[1086659, 30976, 3784, 107, 217, "Input"],
Cell[1090446, 31085, 189, 3, 35, "Output"]
}, Open  ]],
Cell[1090650, 31091, 336, 9, 40, "Text"],
Cell[1090989, 31102, 4232, 86, 133, "Input"],
Cell[1095224, 31190, 116, 1, 37, "Text"],
Cell[CellGroupData[{
Cell[1095365, 31195, 1363, 38, 157, "Input"],
Cell[1096731, 31235, 243, 3, 35, "Output"],
Cell[1096977, 31240, 240, 3, 35, "Output"],
Cell[1097220, 31245, 241, 3, 35, "Output"],
Cell[1097464, 31250, 243, 3, 35, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1097768, 31260, 248, 5, 74, "Subsection"],
Cell[CellGroupData[{
Cell[1098041, 31269, 102, 1, 43, "Subsubsection"],
Cell[1098146, 31272, 1408, 33, 183, "Input"],
Cell[1099557, 31307, 446, 11, 36, "Input"],
Cell[1100006, 31320, 527, 14, 35, "Input"],
Cell[1100536, 31336, 2074, 55, 288, "Input"],
Cell[1102613, 31393, 290, 7, 36, "Input"],
Cell[1102906, 31402, 1020, 28, 78, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1103963, 31435, 126, 1, 34, "Subsubsection"],
Cell[1104092, 31438, 2876, 77, 351, "Input"],
Cell[1106971, 31517, 5523, 146, 393, "Input"],
Cell[1112497, 31665, 2899, 77, 351, "Input"],
Cell[1115399, 31744, 5521, 146, 393, "Input"],
Cell[1120923, 31892, 2970, 79, 351, "Input"],
Cell[1123896, 31973, 5521, 146, 393, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1129454, 32124, 180, 3, 34, "Subsubsection"],
Cell[CellGroupData[{
Cell[1129659, 32131, 3802, 86, 351, "Input"],
Cell[1133464, 32219, 1025, 23, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1134526, 32247, 3986, 89, 351, "Input"],
Cell[1138515, 32338, 1036, 23, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1139588, 32366, 908, 25, 78, "Input"],
Cell[1140499, 32393, 164, 3, 35, "Output"],
Cell[1140666, 32398, 165, 3, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1140868, 32406, 4052, 89, 351, "Input"],
Cell[1144923, 32497, 1031, 23, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1145991, 32525, 4036, 90, 351, "Input"],
Cell[1150030, 32617, 1045, 23, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1151112, 32645, 3854, 87, 351, "Input"],
Cell[1154969, 32734, 1046, 23, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1156052, 32762, 3952, 88, 351, "Input"],
Cell[1160007, 32852, 1046, 23, 78, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1161102, 32881, 167, 3, 34, "Subsubsection"],
Cell[1161272, 32886, 2813, 67, 267, "Input"],
Cell[CellGroupData[{
Cell[1164110, 32957, 2850, 66, 288, "Input"],
Cell[1166963, 33025, 432, 9, 49, "Message"],
Cell[1167398, 33036, 464, 9, 29, "Message"],
Cell[1167865, 33047, 432, 9, 49, "Message"],
Cell[1168300, 33058, 462, 9, 29, "Message"],
Cell[1168765, 33069, 434, 9, 49, "Message"],
Cell[1169202, 33080, 517, 10, 29, "Message"],
Cell[1169722, 33092, 464, 9, 29, "Message"],
Cell[1170189, 33103, 519, 10, 29, "Message"]
}, Open  ]],
Cell[1170723, 33116, 621, 16, 99, "Input"],
Cell[1171347, 33134, 3571, 87, 204, "Input"],
Cell[CellGroupData[{
Cell[1174943, 33225, 131, 2, 35, "Input"],
Cell[1175077, 33229, 6158, 134, 708, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1181284, 33369, 180, 2, 34, "Subsubsection"],
Cell[1181467, 33373, 3152, 73, 288, "Input"],
Cell[1184622, 33448, 2844, 70, 414, "Input"],
Cell[1187469, 33520, 708, 17, 120, "Input"],
Cell[1188180, 33539, 3571, 87, 204, "Input"],
Cell[CellGroupData[{
Cell[1191776, 33630, 131, 2, 35, "Input"],
Cell[1191910, 33634, 6657, 141, 708, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1198640, 33783, 116, 1, 62, "Section"],
Cell[CellGroupData[{
Cell[1198781, 33788, 103, 1, 67, "Subsection"],
Cell[CellGroupData[{
Cell[1198909, 33793, 2463, 67, 172, "Input"],
Cell[1201375, 33862, 761, 22, 78, "Output"],
Cell[1202139, 33886, 1302, 41, 98, "Output"],
Cell[1203444, 33929, 1089, 33, 83, "Output"]
}, Open  ]],
Cell[1204548, 33965, 103, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[1204676, 33970, 2666, 82, 233, "Input"],
Cell[1207345, 34054, 244, 4, 43, "Output"],
Cell[1207592, 34060, 243, 4, 43, "Output"],
Cell[1207838, 34066, 244, 4, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1208119, 34075, 1127, 38, 100, "Input"],
Cell[1209249, 34115, 1052, 37, 98, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1210338, 34157, 2167, 72, 100, "Input"],
Cell[1212508, 34231, 123, 2, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1212668, 34238, 2123, 70, 107, "Input"],
Cell[1214794, 34310, 199, 3, 43, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1215042, 34319, 132, 1, 53, "Subsection"],
Cell[CellGroupData[{
Cell[1215199, 34324, 17434, 434, 1331, "Input"],
Cell[1232636, 34760, 347211, 6121, 750, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1579896, 40887, 134, 1, 53, "Subsection"],
Cell[1580033, 40890, 2337, 70, 218, "Input"],
Cell[1582373, 40962, 128, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[1582526, 40967, 995, 22, 97, "Input"],
Cell[1583524, 40991, 119, 2, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1583680, 40998, 1608, 42, 176, "Input"],
Cell[1585291, 41042, 173, 2, 43, "Output"]
}, Open  ]],
Cell[1585479, 41047, 182, 2, 46, "Text"],
Cell[CellGroupData[{
Cell[1585686, 41053, 1566, 47, 123, "Input"],
Cell[1587255, 41102, 3042, 97, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1590334, 41204, 234, 5, 45, "Input"],
Cell[1590571, 41211, 1769, 57, 80, "Output"]
}, Open  ]],
Cell[1592355, 41271, 1306, 35, 123, "Input"],
Cell[CellGroupData[{
Cell[1593686, 41310, 849, 22, 83, "Input"],
Cell[1594538, 41334, 268, 4, 43, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1594855, 41344, 114, 1, 53, "Subsection"],
Cell[1594972, 41347, 322, 6, 76, "Text"],
Cell[1595297, 41355, 10522, 274, 885, "Input"],
Cell[1605822, 41631, 113, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[1605960, 41636, 6110, 154, 517, "Input"],
Cell[1612073, 41792, 7069, 147, 885, "Output"]
}, Open  ]],
Cell[1619157, 41942, 6648, 166, 386, "Input"],
Cell[CellGroupData[{
Cell[1625830, 42112, 839, 21, 123, "Input"],
Cell[1626672, 42135, 186767, 3331, 716, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1813488, 45472, 145, 1, 53, "Subsection"],
Cell[CellGroupData[{
Cell[1813658, 45477, 224, 4, 45, "Input"],
Cell[1813885, 45483, 163, 2, 43, "Output"]
}, Open  ]],
Cell[1814063, 45488, 2348, 60, 262, "Input"],
Cell[CellGroupData[{
Cell[1816436, 45552, 8370, 220, 517, "Input"],
Cell[1824809, 45774, 68983, 1211, 715, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1893841, 46991, 126, 1, 53, "Subsection"],
Cell[CellGroupData[{
Cell[1893992, 46996, 6909, 184, 675, "Input"],
Cell[1900904, 47182, 73541, 1259, 423, "Output"],
Cell[1974448, 48443, 73444, 1258, 423, "Output"],
Cell[2047895, 49703, 80234, 1368, 413, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[2128190, 51078, 202, 3, 62, "Section"],
Cell[CellGroupData[{
Cell[2128417, 51085, 239, 3, 54, "Subsection"],
Cell[CellGroupData[{
Cell[2128681, 51092, 155, 2, 53, "Subsubsection"],
Cell[2128839, 51096, 3742, 115, 228, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[2132618, 51216, 130, 2, 42, "Subsubsection"],
Cell[CellGroupData[{
Cell[2132773, 51222, 339, 8, 45, "Input"],
Cell[2133115, 51232, 2830, 88, 181, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2135982, 51325, 3066, 90, 266, "Input"],
Cell[2139051, 51417, 173, 3, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2139261, 51425, 3028, 84, 152, "Input"],
Cell[2142292, 51511, 343, 5, 43, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2142684, 51522, 205, 2, 42, "Subsubsection"],
Cell[2142892, 51526, 1795, 48, 123, "Input"],
Cell[CellGroupData[{
Cell[2144712, 51578, 398, 9, 45, "Input"],
Cell[2145113, 51589, 1709, 53, 83, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[2146883, 51649, 179, 2, 43, "Subsection"],
Cell[CellGroupData[{
Cell[2147087, 51655, 4768, 119, 6347, "Input"],
Cell[2151858, 51776, 54320, 903, 6385, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2206227, 52685, 248, 3, 43, "Subsection"],
Cell[CellGroupData[{
Cell[2206500, 52692, 176, 2, 53, "Subsubsection"],
Cell[CellGroupData[{
Cell[2206701, 52698, 1189, 35, 76, "Input"],
Cell[2207893, 52735, 174, 3, 43, "Output"]
}, Open  ]],
Cell[2208082, 52741, 2291, 50, 136, "Input"],
Cell[CellGroupData[{
Cell[2210398, 52795, 1666, 52, 128, "Input"],
Cell[2212067, 52849, 169, 2, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2212273, 52856, 2029, 62, 195, "Input"],
Cell[2214305, 52920, 221, 3, 43, "Output"]
}, Open  ]],
Cell[2214541, 52926, 1897, 58, 182, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[2216475, 52989, 163, 2, 42, "Subsubsection"],
Cell[CellGroupData[{
Cell[2216663, 52995, 1773, 34, 71, "Input"],
Cell[2218439, 53031, 1999, 47, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2220475, 53083, 909, 28, 76, "Input"],
Cell[2221387, 53113, 247, 3, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2221671, 53121, 704, 19, 71, "Input"],
Cell[2222378, 53142, 597, 20, 78, "Output"]
}, Open  ]],
Cell[2222990, 53165, 102, 1, 46, "Text"],
Cell[2223095, 53168, 2147, 62, 275, "Input"],
Cell[CellGroupData[{
Cell[2225267, 53234, 2821, 63, 188, "Input"],
Cell[2228091, 53299, 7880, 147, 435, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2236020, 53452, 159, 2, 42, "Subsubsection"],
Cell[CellGroupData[{
Cell[2236204, 53458, 888, 24, 137, "Input"],
Cell[2237095, 53484, 3635, 108, 213, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2240767, 53597, 1801, 46, 243, "Input"],
Cell[CellGroupData[{
Cell[2242593, 53647, 1224, 34, 168, "Print"],
Cell[2243820, 53683, 591, 16, 116, "Print"],
Cell[2244414, 53701, 1394, 40, 181, "Print"],
Cell[2245811, 53743, 589, 16, 116, "Print"],
Cell[2246403, 53761, 4346, 129, 218, "Print"],
Cell[2250752, 53892, 594, 16, 121, "Print"]
}, Open  ]]
}, Open  ]],
Cell[2251373, 53912, 616, 11, 262, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[2252026, 53928, 155, 2, 42, "Subsubsection"],
Cell[2252184, 53932, 1490, 39, 110, "Input"],
Cell[CellGroupData[{
Cell[2253699, 53975, 658, 16, 90, "Input"],
Cell[2254360, 53993, 170, 4, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2254567, 54002, 243, 5, 66, "Input"],
Cell[2254813, 54009, 1895, 52, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2256745, 54066, 3347, 70, 276, "Input"],
Cell[2260095, 54138, 6551, 126, 678, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2266683, 54269, 241, 4, 66, "Input"],
Cell[2266927, 54275, 7505, 142, 678, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2274481, 54423, 127, 1, 42, "Subsubsection"],
Cell[2274611, 54426, 200, 4, 71, "Text"],
Cell[CellGroupData[{
Cell[2274836, 54434, 1767, 49, 228, "Input"],
Cell[2276606, 54485, 346, 8, 106, "Output"],
Cell[2276955, 54495, 640, 18, 120, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2277632, 54518, 670, 21, 121, "Input"],
Cell[2278305, 54541, 299, 8, 66, "Output"]
}, Open  ]],
Cell[2278619, 54552, 238, 5, 71, "Text"],
Cell[CellGroupData[{
Cell[2278882, 54561, 903, 21, 203, "Input"],
Cell[2279788, 54584, 197, 5, 106, "Output"],
Cell[2279988, 54591, 259, 7, 112, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[2280308, 54605, 113, 1, 43, "Subsection"],
Cell[CellGroupData[{
Cell[2280446, 54610, 250, 4, 53, "Subsubsection"],
Cell[2280699, 54616, 884, 22, 43, "Input"],
Cell[CellGroupData[{
Cell[2281608, 54642, 143, 2, 45, "Input"],
Cell[2281754, 54646, 77, 1, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2281868, 54652, 307, 8, 43, "Input"],
Cell[2282178, 54662, 1289, 31, 122, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2283516, 54699, 197, 4, 42, "Subsubsection"],
Cell[CellGroupData[{
Cell[2283738, 54707, 1235, 37, 97, "Input"],
Cell[2284976, 54746, 1924, 58, 136, "Output"]
}, Open  ]],
Cell[2286915, 54807, 3202, 73, 171, "Input"],
Cell[2290120, 54882, 185, 4, 46, "Text"],
Cell[CellGroupData[{
Cell[2290330, 54890, 1331, 29, 71, "Input"],
Cell[2291664, 54921, 898, 13, 43, "Output"]
}, Open  ]],
Cell[2292577, 54937, 114, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[2292716, 54942, 579, 15, 45, "Input"],
Cell[2293298, 54959, 2155, 65, 143, "Output"]
}, Open  ]],
Cell[2295468, 55027, 2447, 73, 182, "Input"],
Cell[CellGroupData[{
Cell[2297940, 55104, 774, 21, 71, "Input"],
Cell[2298717, 55127, 124, 2, 43, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2298890, 55135, 289, 3, 42, "Subsubsection"],
Cell[CellGroupData[{
Cell[2299204, 55142, 1158, 28, 210, "Input"],
Cell[2300365, 55172, 25888, 705, 2227, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2326290, 55882, 1173, 38, 883, "Input"],
Cell[2327466, 55922, 125, 2, 868, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2327628, 55929, 652, 20, 868, "Input"],
Cell[2328283, 55951, 622, 17, 1243, "Output"]
}, Open  ]],
Cell[2328920, 55971, 812, 22, 1760, "Input"],
Cell[CellGroupData[{
Cell[2329757, 55997, 1255, 36, 2020, "Input"],
Cell[2331015, 56035, 26015, 708, 14018, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2357067, 56748, 339, 8, 868, "Input"],
Cell[2357409, 56758, 623, 17, 883, "Output"]
}, Open  ]],
Cell[2358047, 56778, 24774, 697, 12035, "Input"],
Cell[CellGroupData[{
Cell[2382846, 57479, 1273, 34, 883, "Input"],
Cell[2384122, 57515, 11226, 327, 5132, "Output"]
}, Open  ]],
Cell[2395363, 57845, 12031, 334, 6231, "Input"],
Cell[CellGroupData[{
Cell[2407419, 58183, 1101, 32, 883, "Input"],
Cell[2408523, 58217, 11150, 325, 5132, "Output"]
}, Open  ]],
Cell[2419688, 58545, 12010, 334, 6231, "Input"],
Cell[CellGroupData[{
Cell[2431723, 58883, 1299, 35, 883, "Input"],
Cell[2433025, 58920, 11164, 326, 5252, "Output"]
}, Open  ]],
Cell[2444204, 59249, 12021, 335, 6385, "Input"],
Cell[CellGroupData[{
Cell[2456250, 59588, 1101, 32, 210, "Input"],
Cell[2457354, 59622, 11162, 326, 938, "Output"]
}, Open  ]],
Cell[2468531, 59951, 12025, 335, 1222, "Input"],
Cell[CellGroupData[{
Cell[2480581, 60290, 179, 4, 197, "Input"],
Cell[2480763, 60296, 415, 13, 340, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2481215, 60314, 801, 18, 332, "Input"],
Cell[2482019, 60334, 782, 23, 340, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2482838, 60362, 3508, 89, 457, "Input"],
Cell[2486349, 60453, 3192, 65, 2837, "Output"],
Cell[2489544, 60520, 520, 10, 168, "Message"],
Cell[2490067, 60532, 523, 10, 168, "Message"],
Cell[2490593, 60544, 523, 10, 168, "Message"],
Cell[2491119, 60556, 516, 10, 168, "Message"]
}, Open  ]],
Cell[2491650, 60569, 92, 1, 197, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[2491779, 60575, 140, 1, 42, "Subsubsection"],
Cell[2491922, 60578, 12357, 339, 466, "Input"],
Cell[2504282, 60919, 136, 1, 57, "Text"],
Cell[2504421, 60922, 7232, 228, 291, "Input"],
Cell[CellGroupData[{
Cell[2511678, 61154, 2873, 69, 218, "Input"],
Cell[2514554, 61225, 640, 9, 53, "Output"]
}, Open  ]],
Cell[2515209, 61237, 170, 4, 57, "Text"],
Cell[CellGroupData[{
Cell[2515404, 61245, 988, 27, 187, "Input"],
Cell[2516395, 61274, 2156, 59, 103, "Output"],
Cell[2518554, 61335, 1537, 47, 65, "Output"],
Cell[2520094, 61384, 1404, 46, 65, "Output"],
Cell[2521501, 61432, 1104, 36, 58, "Output"],
Cell[2522608, 61470, 3445, 109, 108, "Output"]
}, Open  ]],
Cell[2526068, 61582, 6135, 177, 282, "Input"],
Cell[2532206, 61761, 2186, 59, 165, "Input"],
Cell[CellGroupData[{
Cell[2534417, 61824, 231, 5, 56, "Input"],
Cell[2534651, 61831, 9196, 276, 383, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2543896, 62113, 153, 2, 42, "Subsubsection"],
Cell[CellGroupData[{
Cell[2544074, 62119, 770, 22, 22922, "Input"],
Cell[2544847, 62143, 6065, 185, 108563, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2550949, 62333, 280, 7, 13550, "Input"],
Cell[2551232, 62342, 577, 17, 14453, "Output"]
}, Open  ]],
Cell[2551824, 62362, 2985, 93, 70510, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[2554846, 62460, 140, 2, 42, "Subsubsection"],
Cell[2554989, 62464, 102, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[2555116, 62469, 629, 14, 45, "Input"],
Cell[2555748, 62485, 689, 22, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2556474, 62512, 1147, 36, 76, "Input"],
Cell[2557624, 62550, 170, 2, 43, "Output"]
}, Open  ]],
Cell[2557809, 62555, 103, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[2557937, 62560, 595, 14, 45, "Input"],
Cell[2558535, 62576, 6695, 205, 311, "Output"]
}, Open  ]],
Cell[2565245, 62784, 107, 1, 57, "Text"],
Cell[CellGroupData[{
Cell[2565377, 62789, 915, 20, 56, "Input"],
Cell[2566295, 62811, 8043, 239, 371, "Output"]
}, Open  ]],
Cell[2574353, 63053, 160, 2, 57, "Text"],
Cell[CellGroupData[{
Cell[2574538, 63059, 730, 16, 56, "Input"],
Cell[2575271, 63077, 5437, 153, 131, "Output"]
}, Open  ]],
Cell[2580723, 63233, 200, 3, 57, "Text"],
Cell[CellGroupData[{
Cell[2580948, 63240, 790, 25, 95, "Input"],
Cell[2581741, 63267, 172, 3, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2581950, 63275, 486, 16, 95, "Input"],
Cell[2582439, 63293, 98, 1, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2582574, 63299, 570, 18, 175, "Input"],
Cell[2583147, 63319, 73, 1, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2583257, 63325, 288, 8, 91, "Input"],
Cell[2583548, 63335, 73, 1, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2583658, 63341, 1350, 46, 175, "Input"],
Cell[2585011, 63389, 430, 15, 91, "Output"],
Cell[2585444, 63406, 430, 15, 91, "Output"]
}, Open  ]],
Cell[2585889, 63424, 251, 4, 57, "Text"],
Cell[CellGroupData[{
Cell[2586165, 63432, 1269, 42, 100, "Input"],
Cell[2587437, 63476, 723, 25, 91, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2588197, 63506, 1113, 37, 95, "Input"],
Cell[2589313, 63545, 122, 2, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2589472, 63552, 1192, 40, 100, "Input"],
Cell[2590667, 63594, 97, 1, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2590801, 63600, 762, 25, 100, "Input"],
Cell[2591566, 63627, 94, 1, 53, "Output"]
}, Open  ]],
Cell[2591675, 63631, 101, 1, 57, "Text"],
Cell[CellGroupData[{
Cell[2591801, 63636, 637, 15, 56, "Input"],
Cell[2592441, 63653, 162, 4, 83, "Output"]
}, Open  ]],
Cell[2592618, 63660, 123, 1, 57, "Text"],
Cell[CellGroupData[{
Cell[2592766, 63665, 952, 24, 121, "Input"],
Cell[2593721, 63691, 332, 11, 97, "Output"],
Cell[2594056, 63704, 453, 9, 76, "Message"],
Cell[2594512, 63715, 453, 9, 76, "Message"],
Cell[2594968, 63726, 164, 3, 56, "Output"],
Cell[2595135, 63731, 1548, 53, 110, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2596720, 63789, 1703, 58, 113, "Input"],
Cell[2598426, 63849, 97, 1, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2598560, 63855, 840, 23, 56, "Input"],
Cell[2599403, 63880, 1032, 33, 97, "Output"]
}, Open  ]],
Cell[2600450, 63916, 213, 4, 57, "Text"],
Cell[CellGroupData[{
Cell[2600688, 63924, 341, 8, 56, "Input"],
Cell[2601032, 63934, 1149, 37, 93, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2602218, 63976, 2534, 73, 168, "Input"],
Cell[2604755, 64051, 2210, 70, 96, "Output"]
}, Open  ]],
Cell[2606980, 64124, 545, 16, 56, "Input"],
Cell[CellGroupData[{
Cell[2607550, 64144, 732, 19, 121, "Input"],
Cell[2608285, 64165, 586, 21, 88, "Output"],
Cell[2608874, 64188, 674, 24, 91, "Output"],
Cell[2609551, 64214, 614, 22, 88, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2610214, 64242, 211, 3, 42, "Subsubsection"],
Cell[2610428, 64247, 412, 11, 637, "Input"],
Cell[2610843, 64260, 1157, 30, 1628, "Input"],
Cell[2612003, 64292, 576, 13, 637, "Input"],
Cell[2612582, 64307, 297, 7, 1391, "Input"],
Cell[CellGroupData[{
Cell[2612904, 64318, 14267, 375, 12571, "Input"],
Cell[2627174, 64695, 36749, 674, 12571, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2663960, 65374, 306, 6, 1010, "Input"],
Cell[2664269, 65382, 359, 12, 1072, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2664677, 65400, 219, 3, 42, "Subsubsection"],
Cell[2664899, 65405, 450, 12, 637, "Input"],
Cell[CellGroupData[{
Cell[2665374, 65421, 682, 17, 1391, "Input"],
Cell[2666059, 65440, 506, 16, 1010, "Output"],
Cell[2666568, 65458, 584, 20, 1010, "Output"]
}, Open  ]],
Cell[2667167, 65481, 297, 7, 1391, "Input"],
Cell[CellGroupData[{
Cell[2667489, 65492, 363, 9, 1010, "Input"],
Cell[2667855, 65503, 145, 2, 597, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2668037, 65510, 8477, 231, 8276, "Input"],
Cell[2676517, 65743, 18296, 361, 12571, "Output"]
}, Open  ]],
Cell[2694828, 66107, 103, 1, 647, "Text"],
Cell[CellGroupData[{
Cell[2694956, 66112, 4690, 125, 3308, "Input"],
Cell[2699649, 66239, 645, 15, 597, "Output"],
Cell[2700297, 66256, 13981, 252, 5603, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[2714339, 66515, 155, 2, 43, "Subsection"],
Cell[CellGroupData[{
Cell[2714519, 66521, 126, 1, 53, "Subsubsection"],
Cell[CellGroupData[{
Cell[2714670, 66526, 1135, 34, 76, "Input"],
Cell[2715808, 66562, 97, 1, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2715942, 66568, 1559, 45, 128, "Input"],
Cell[2717504, 66615, 176, 3, 43, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2717729, 66624, 135, 1, 42, "Subsubsection"],
Cell[2717867, 66627, 130, 1, 46, "Text"],
Cell[2718000, 66630, 803, 25, 45, "Input"],
Cell[CellGroupData[{
Cell[2718828, 66659, 1168, 36, 101, "Input"],
Cell[2719999, 66697, 122, 2, 43, "Output"]
}, Open  ]],
Cell[2720136, 66702, 383, 12, 50, "Text"],
Cell[CellGroupData[{
Cell[2720544, 66718, 1483, 37, 123, "Input"],
Cell[2722030, 66757, 443, 6, 43, "Output"]
}, Open  ]],
Cell[2722488, 66766, 164, 3, 46, "Text"],
Cell[CellGroupData[{
Cell[2722677, 66773, 3215, 95, 281, "Input"],
Cell[2725895, 66870, 425, 6, 82, "Output"],
Cell[2726323, 66878, 422, 6, 82, "Output"]
}, Open  ]],
Cell[2726760, 66887, 137, 1, 88, "Text"],
Cell[CellGroupData[{
Cell[2726922, 66892, 1305, 39, 82, "Input"],
Cell[2728230, 66933, 1748, 56, 158, "Output"]
}, Open  ]],
Cell[2729993, 66992, 122, 1, 88, "Text"],
Cell[CellGroupData[{
Cell[2730140, 66997, 748, 20, 137, "Input"],
Cell[2730891, 67019, 99, 1, 82, "Output"]
}, Open  ]],
Cell[2731005, 67023, 153, 2, 88, "Text"],
Cell[CellGroupData[{
Cell[2731183, 67029, 806, 22, 137, "Input"],
Cell[2731992, 67053, 2286, 45, 1308, "Output"],
Cell[2734281, 67100, 1026, 16, 262, "Message"],
Cell[2735310, 67118, 1048, 17, 262, "Message"],
Cell[2736361, 67137, 1048, 17, 262, "Message"],
Cell[2737412, 67156, 521, 10, 87, "Message"],
Cell[2737936, 67168, 854, 14, 243, "Message"],
Cell[2738793, 67184, 854, 14, 171, "Message"],
Cell[2739650, 67200, 853, 14, 171, "Message"],
Cell[2740506, 67216, 519, 10, 71, "Message"],
Cell[2741028, 67228, 946, 17, 218, "Message"],
Cell[2741977, 67247, 864, 16, 200, "Message"],
Cell[2742844, 67265, 864, 16, 145, "Message"],
Cell[2743711, 67283, 534, 11, 71, "Message"],
Cell[2744248, 67296, 868, 16, 200, "Message"],
Cell[2745119, 67314, 871, 16, 197, "Message"],
Cell[2745993, 67332, 1541, 25, 293, "Message"],
Cell[2747537, 67359, 1522, 25, 293, "Message"]
}, Open  ]],
Cell[2749074, 67387, 274, 6, 110, "Text"],
Cell[CellGroupData[{
Cell[2749373, 67397, 1893, 57, 266, "Input"],
Cell[2751269, 67456, 75, 1, 102, "Output"],
Cell[2751347, 67459, 73, 1, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2751457, 67465, 1209, 38, 187, "Input"],
Cell[2752669, 67505, 352, 10, 126, "Output"],
Cell[2753024, 67517, 352, 10, 126, "Output"]
}, Open  ]],
Cell[2753391, 67530, 1183, 35, 187, "Input"],
Cell[CellGroupData[{
Cell[2754599, 67569, 1357, 34, 176, "Input"],
Cell[2755959, 67605, 2562, 52, 608, "Output"]
}, Open  ]],
Cell[2758536, 67660, 144, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[2758705, 67665, 1499, 39, 176, "Input"],
Cell[2760207, 67706, 795, 22, 73, "Output"],
Cell[2761005, 67730, 1755, 52, 101, "Output"],
Cell[2762763, 67784, 1856, 55, 102, "Output"]
}, Open  ]],
Cell[2764634, 67842, 207, 4, 46, "Text"],
Cell[CellGroupData[{
Cell[2764866, 67850, 1889, 54, 150, "Input"],
Cell[2766758, 67906, 2623, 51, 603, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[2769454, 67965, 229, 3, 62, "Section"],
Cell[CellGroupData[{
Cell[2769708, 67972, 179, 2, 54, "Subsection"],
Cell[2769890, 67976, 3174, 56, 746, "Input"],
Cell[CellGroupData[{
Cell[2773089, 68036, 466, 10, 171, "Input"],
Cell[2773558, 68048, 111729, 1863, 1575, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2885324, 69916, 564, 11, 171, "Input"],
Cell[2885891, 69929, 230488, 3807, 1575, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3116416, 73741, 463, 12, 171, "Input"],
Cell[3116882, 73755, 149, 2, 102, "Output"],
Cell[3117034, 73759, 163, 2, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3117234, 73766, 441, 12, 171, "Input"],
Cell[3117678, 73780, 151, 2, 102, "Output"],
Cell[3117832, 73784, 161, 2, 102, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3118042, 73792, 184, 4, 74, "Subsection"],
Cell[CellGroupData[{
Cell[3118251, 73800, 127, 1, 746, "Subsubsection"],
Cell[3118381, 73803, 1587, 46, 1437728, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[3120005, 73854, 121, 1, 596, "Subsubsection"],
Cell[CellGroupData[{
Cell[3120151, 73859, 964, 23, 258166, "Input"],
Cell[3121118, 73884, 763, 23, 226791, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3121918, 73912, 848, 25, 229472, "Input"],
Cell[3122769, 73939, 95, 1, 126176, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3122913, 73946, 123, 1, 596, "Subsubsection"],
Cell[CellGroupData[{
Cell[3123061, 73951, 1464, 34, 490112, "Input"],
Cell[3124528, 73987, 1271, 38, 226791, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3125836, 74030, 1352, 39, 229472, "Input"],
Cell[3127191, 74071, 75, 1, 126176, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3127315, 74078, 177, 2, 596, "Subsubsection"],
Cell[CellGroupData[{
Cell[3127517, 74084, 1591, 39, 569325, "Input"],
Cell[3129111, 74125, 2077, 67, 403827, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3131225, 74197, 175, 4, 126176, "Input"],
Cell[3131403, 74203, 282, 6, 226791, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3131734, 74215, 228, 3, 596, "Subsubsection"],
Cell[CellGroupData[{
Cell[3131987, 74222, 1411, 37, 569325, "Input"],
Cell[3133401, 74261, 1844, 62, 226791, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3135282, 74328, 175, 4, 126176, "Input"],
Cell[3135460, 74334, 286, 8, 226791, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3135795, 74348, 153, 2, 596, "Subsubsection"],
Cell[CellGroupData[{
Cell[3135973, 74354, 357, 9, 126176, "Input"],
Cell[3136333, 74365, 323, 10, 226791, "Output"]
}, Open  ]],
Cell[3136671, 74378, 172, 4, 136620, "Text"],
Cell[CellGroupData[{
Cell[3136868, 74386, 2328, 68, 459671, "Input"],
Cell[3139199, 74456, 125, 2, 126176, "Output"],
Cell[3139327, 74460, 125, 2, 126176, "Output"],
Cell[3139455, 74464, 125, 2, 126176, "Output"],
Cell[3139583, 74468, 125, 2, 126176, "Output"],
Cell[3139711, 74472, 125, 2, 126176, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3139885, 74480, 220, 4, 596, "Subsubsection"],
Cell[CellGroupData[{
Cell[3140130, 74488, 1384, 39, 742515, "Input"],
Cell[3141517, 74529, 5068, 161, 711245, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3146622, 74695, 1336, 38, 807053, "Input"],
Cell[3147961, 74735, 2269, 70, 490112, "Output"]
}, Open  ]],
Cell[3150245, 74808, 463, 7, 286840, "Text"],
Cell[CellGroupData[{
Cell[3150733, 74819, 696, 15, 157720, "Input"],
Cell[3151432, 74836, 1055, 23, 273588, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[3152548, 74866, 137, 1, 43, "Subsection"],
Cell[3152688, 74869, 4386, 95, 5222, "Input"],
Cell[3157077, 74966, 2212, 57, 4063, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[3159326, 75028, 218, 4, 43, "Subsection"],
Cell[CellGroupData[{
Cell[3159569, 75036, 114, 1, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[3159708, 75041, 5021, 86, 288, "Input"],
Cell[3164732, 75129, 104915, 1748, 420, 69777, 1174, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[3269662, 76880, 101, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[3269788, 76885, 4113, 102, 376, "Input"],
Cell[3273904, 76989, 62565, 1041, 513, 28874, 493, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[3336484, 78033, 119, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[3336628, 78038, 1376, 42, 90, "Input"],
Cell[3338007, 78082, 169, 2, 43, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3338225, 78090, 118, 1, 53, "Subsubsection"],
Cell[3338346, 78093, 1570, 41, 255, "Input"],
Cell[3339919, 78136, 4043, 82, 333, "Input"],
Cell[3343965, 78220, 2414, 60, 333, "Input"],
Cell[3346382, 78282, 2429, 60, 333, "Input"],
Cell[3348814, 78344, 9646, 251, 625, "Input"],
Cell[3358463, 78597, 8781, 239, 625, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3367293, 78842, 176, 2, 67, "Subsection"],
Cell[3367472, 78846, 2743, 62, 386, "Input"],
Cell[3370218, 78910, 10244, 225, 1200, "Input"],
Cell[3380465, 79137, 433, 11, 71, "Input"],
Cell[3380901, 79150, 234, 4, 43, "Input"],
Cell[3381138, 79156, 6738, 161, 412, "Input"],
Cell[3387879, 79319, 171, 3, 43, "Input"],
Cell[3388053, 79324, 4212, 107, 307, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[3392302, 79436, 281, 3, 53, "Subsection"],
Cell[3392586, 79441, 3843, 76, 307, "Input"],
Cell[3396432, 79519, 8521, 173, 911, "Input"],
Cell[3404956, 79694, 6848, 167, 465, "Input"],
Cell[3411807, 79863, 6276, 158, 420, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[3418120, 80026, 308, 4, 53, "Subsection"],
Cell[3418431, 80032, 3888, 76, 307, "Input"],
Cell[3422322, 80110, 8521, 173, 911, "Input"],
Cell[3430846, 80285, 330, 5, 43, "Input"],
Cell[3431179, 80292, 6848, 167, 465, "Input"],
Cell[CellGroupData[{
Cell[3438052, 80463, 604, 11, 71, "Input"],
Cell[3438659, 80476, 277, 5, 43, "Output"],
Cell[3438939, 80483, 276, 5, 43, "Output"]
}, Open  ]],
Cell[3439230, 80491, 6425, 163, 420, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[3445692, 80659, 355, 4, 53, "Subsection"],
Cell[3446050, 80665, 3940, 77, 307, "Input"],
Cell[3449993, 80744, 8521, 173, 911, "Input"],
Cell[3458517, 80919, 6848, 167, 465, "Input"],
Cell[CellGroupData[{
Cell[3465390, 81090, 604, 11, 71, "Input"],
Cell[3465997, 81103, 277, 5, 43, "Output"],
Cell[3466277, 81110, 276, 5, 43, "Output"]
}, Open  ]],
Cell[3466568, 81118, 6477, 164, 420, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[3473094, 81288, 228, 3, 62, "Section"],
Cell[CellGroupData[{
Cell[3473347, 81295, 179, 2, 67, "Subsection"],
Cell[CellGroupData[{
Cell[3473551, 81301, 6528, 150, 622, "Input"],
Cell[3480082, 81453, 76121, 1271, 436, "Output"],
Cell[3556206, 82726, 120863, 2007, 436, "Output"],
Cell[3677072, 84735, 39463, 671, 436, "Output"],
Cell[3716538, 85408, 46896, 792, 436, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3763483, 86206, 176, 2, 53, "Subsection"],
Cell[3763662, 86210, 3160, 72, 412, "Input"],
Cell[3766825, 86284, 10742, 232, 1226, "Input"],
Cell[3777570, 86518, 570, 13, 71, "Input"],
Cell[3778143, 86533, 1612, 41, 97, "Input"],
Cell[3779758, 86576, 3214, 82, 176, "Input"],
Cell[3782975, 86660, 3512, 78, 202, "Input"],
Cell[3786490, 86740, 4212, 107, 307, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[3790739, 86852, 312, 5, 53, "Subsection"],
Cell[3791054, 86859, 3667, 78, 386, "Input"],
Cell[3794724, 86939, 9250, 189, 1068, "Input"],
Cell[3803977, 87130, 659, 12, 45, "Input"],
Cell[3804639, 87144, 430, 8, 43, "Input"],
Cell[3805072, 87154, 403, 7, 43, "Input"],
Cell[3805478, 87163, 4857, 117, 333, "Input"],
Cell[3810338, 87282, 6403, 160, 420, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[3816778, 87447, 341, 6, 53, "Subsection"],
Cell[3817122, 87455, 3762, 79, 386, "Input"],
Cell[3820887, 87536, 9270, 189, 1068, "Input"],
Cell[3830160, 87727, 9324, 190, 1068, "Input"],
Cell[3839487, 87919, 659, 12, 45, "Input"],
Cell[3840149, 87933, 1088, 22, 97, "Input"],
Cell[3841240, 87957, 4687, 115, 333, "Input"],
Cell[3845930, 88074, 6396, 160, 420, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[3852363, 88239, 418, 7, 53, "Subsection"],
Cell[3852784, 88248, 4046, 87, 386, "Input"],
Cell[3856833, 88337, 9295, 190, 1068, "Input"],
Cell[3866131, 88529, 9324, 190, 1068, "Input"],
Cell[3875458, 88721, 659, 12, 45, "Input"],
Cell[3876120, 88735, 1137, 23, 97, "Input"],
Cell[3877260, 88760, 5155, 125, 360, "Input"],
Cell[CellGroupData[{
Cell[3882440, 88889, 249, 3, 97, "Input"],
Cell[3882692, 88894, 4893, 143, 228, "Output"],
Cell[3887588, 89039, 4919, 144, 228, "Output"],
Cell[3892510, 89185, 5070, 154, 228, "Output"]
}, Open  ]],
Cell[3897595, 89342, 7014, 177, 446, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[3904658, 89525, 133, 1, 62, "Section"],
Cell[CellGroupData[{
Cell[3904816, 89530, 103, 1, 54, "Subsection"],
Cell[3904922, 89533, 147, 3, 46, "Text"],
Cell[CellGroupData[{
Cell[3905094, 89540, 2402, 57, 307, "Input"],
Cell[3907499, 89599, 25634, 426, 385, 12898, 217, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3933182, 90031, 165, 2, 43, "Subsection"],
Cell[3933350, 90035, 172, 4, 46, "Text"],
Cell[CellGroupData[{
Cell[3933547, 90043, 2523, 61, 333, "Input"],
Cell[3936073, 90106, 130862, 2151, 387, 119393, 1963, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
